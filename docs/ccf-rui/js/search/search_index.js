var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AnatomicalStructureTagState.html",[0,1.358,1,2.625]],["body/injectables/AnatomicalStructureTagState.html",[0,1.604,1,3.099,2,2.132,3,0.073,4,0.09,5,0.065,6,0.136,7,6.816,8,4.115,9,5.599,10,2.866,11,0.882,12,2.24,13,4.57,14,2.845,15,2.542,16,2.041,17,5.384,18,0.348,19,0.556,20,2.29,21,5.384,22,2.719,23,2.844,24,5.062,25,1.348,26,5.911,27,5.184,28,5.911,29,2.977,30,4.57,31,5.184,32,2.736,33,5.879,34,5.384,35,1.128,36,3.144,37,3.93,38,2.033,39,5.184,40,1.006,41,1.031,42,1.796,43,0.01,44,1.066,45,0.786,46,1.273,47,1.301,48,1.563,49,3.651,50,3.352,51,4.57,52,2.074,53,4.047,54,3.566,55,1.682,56,1.258,57,4.57,58,3.566,59,3.622,60,3.622,61,3.622,62,4.57,63,3.566,64,3.566,65,2.302,66,4.166,67,3.566,68,4.57,69,0.907,70,4.977,71,1.588,72,5.724,73,3.566,74,4.166,75,0.007,76,3.074,77,4.008,78,4.57,79,4.57,80,0.007,81,4.57,82,4.268,83,3.863,84,3.622,85,0.709,86,0.692,87,3.566,88,2.405,89,3.566,90,2.183,91,2.211,92,3.494,93,3.566,94,3.566,95,3.566,96,2.887,97,3.566,98,3.566,99,0.328,100,4.57,101,3.144,102,2.211,103,3.144,104,0.176,105,2.736,106,2.302,107,1.583,108,1.583,109,1.489,110,2.866,111,1.957,112,1.049,113,1.535,114,1.291,115,2.354,116,2.235,117,2.866,118,2.04,119,2.235,120,2.866,121,1.445,122,1.445,123,1.404,124,1.327,125,1.404,126,2.658,127,1.69,128,0.353,129,0.13,130,2.658,131,1.535,132,0.132,133,1.367,134,3.144,135,3.144,136,3.144,137,3.622,138,1.314,139,4.008,140,0.957,141,0.981,142,4.425,143,3.144,144,2.866,145,3.144,146,3.144,147,3.144,148,3.651,149,3.144,150,3.144,151,3.144,152,3.144,153,3.144,154,2.886,155,2.041,156,3.144,157,2.354,158,4.57,159,1.12,160,0.566,161,1.583,162,1.69,163,2.492,164,2.132,165,2.492,166,2.492,167,2.354,168,2.492,169,2.492,170,3.144,171,3.144,172,2.354,173,2.354,174,3.144,175,3.144,176,2.492,177,4.57,178,4.57,179,4.57,180,3.863,181,1.827,182,4.57,183,2.492,184,2.658,185,3.144,186,3.144,187,1.224,188,2.492,189,3.144,190,3.144,191,3.144,192,3.144,193,3.144]],["title/interfaces/AnatomicalStructureTagStateModel.html",[128,0.299,130,3.272]],["body/interfaces/AnatomicalStructureTagStateModel.html",[0,1.875,1,2.662,3,0.092,4,0.112,5,0.081,6,0.072,7,3.578,8,3.16,9,2.939,10,3.578,11,0.586,12,2.224,13,3.925,14,2.444,15,2.531,16,1.753,17,5.343,20,2.127,21,3.925,22,2.73,23,2.637,24,4.548,26,3.925,28,3.925,29,1.977,33,5.809,34,3.925,35,1.119,37,3.796,40,0.864,41,0.886,43,0.01,44,0.619,45,0.73,47,1.176,48,1.343,49,3.623,50,3.327,51,3.925,53,3.904,55,0.953,56,1.196,57,3.925,59,3.111,60,3.111,61,3.111,62,3.925,65,1.977,66,3.578,68,3.925,69,0.82,70,4.815,71,1.157,72,5.944,74,3.578,75,0.007,76,2.779,77,3.623,78,3.925,79,3.925,80,0.008,81,3.925,82,4.235,83,3.319,84,3.111,88,2.386,90,1.973,91,2.194,92,3.467,96,2.793,99,0.342,100,5.343,101,3.925,102,2.495,103,3.925,104,0.22,105,3.199,106,2.691,107,1.977,108,1.977,109,1.859,110,3.578,111,2.444,112,1.31,113,1.916,114,1.612,115,2.939,116,2.791,117,3.578,118,2.547,119,2.791,120,3.578,121,1.805,122,1.805,123,1.753,124,1.657,125,1.753,126,3.319,127,2.111,128,0.413,129,0.152,130,4.517,131,1.916,132,0.165,133,1.508,134,3.925,135,3.925,136,3.925,137,4.235,138,1.399,139,4.422,140,1.119,141,1.147,142,4.882,143,3.925,144,3.578,145,3.925,146,3.925,147,3.925,148,4.12,149,3.925,150,3.925,151,3.925,152,3.925,153,3.925,154,3.184,155,2.386,156,3.925,157,2.939,158,5.343,159,1.235,160,0.706,161,1.977,162,2.111,163,3.111,164,2.662,165,3.111,166,3.111,167,2.939,168,3.111,169,3.111,170,3.925,171,3.925,172,2.939,173,2.939,174,3.925,175,3.925,176,3.111,177,5.343,178,5.343,179,5.343,180,4.517,181,2.136,182,5.343,183,3.111,184,3.319,185,3.925,186,3.925,187,1.528,188,3.111,189,3.925,190,3.925,191,3.925,192,3.925,193,3.925,194,1.157]],["title/components/AppComponent.html",[195,0.443,196,1.199]],["body/components/AppComponent.html",[3,0.053,4,0.065,5,0.074,6,0.137,11,0.813,12,1.004,16,1.016,18,0.555,19,0.435,20,1.514,22,1.356,23,1.918,25,1.054,32,2.141,35,0.749,37,3.487,38,2.044,42,1.493,43,0.01,44,0.988,45,0.627,46,1.058,52,1.255,55,1.322,56,1.157,69,1.077,75,0.004,80,0.004,85,1.488,86,1.419,88,2.237,91,2.057,99,0.288,104,0.127,111,1.416,112,0.759,128,0.276,129,0.102,132,0.095,133,0.827,138,0.859,140,1.05,141,0.768,159,0.677,160,1.354,181,1.429,187,1.392,195,0.623,196,1.552,197,1.029,198,0.74,199,0.818,200,0.818,201,0.798,202,1.922,203,2.425,204,1.693,205,2.549,206,3.309,207,0.722,208,1.081,209,1.081,210,2.249,211,1.168,212,1.241,213,1.107,214,4.028,215,1.107,216,3.259,217,3.736,218,3.141,219,4.302,220,4.302,221,3.766,222,3.503,223,3.397,224,4.302,225,4.188,226,4.028,227,3.576,228,4.056,229,2.889,230,3.751,231,4.567,232,3.576,233,3.576,234,4.056,235,4.028,236,1.922,237,5.514,238,4.567,239,4.567,240,3.503,241,3.397,242,4.028,243,3.397,244,2.177,245,2.303,246,2.751,247,3.119,248,4.056,249,3.023,250,3.503,251,2.274,252,3.751,253,4.056,254,4.965,255,1.767,256,2.484,257,2.299,258,1.671,259,1.803,260,4.889,261,3.6,262,2.739,263,2.579,264,4.567,265,4.056,266,4.028,267,4.028,268,3.309,269,4.028,270,3.503,271,3.023,272,3.023,273,3.259,274,3.259,275,2.579,276,2.543,277,1.552,278,2.579,279,2.579,280,2.32,281,3.259,282,2.543,283,4.235,284,4.028,285,3.751,286,2.355,287,2.579,288,3.259,289,2.579,290,2.579,291,3.259,292,2.579,293,2.579,294,3.259,295,2.579,296,1.687,297,2.579,298,2.237,299,1.855,300,2.694,301,2.579,302,2.226,303,2.062,304,2.579,305,2.834,306,1.99,307,1.199,308,1.241,309,3.119,310,3.142,311,2.543,312,2.226,313,2.579,314,3.259,315,2.579,316,3.259,317,2.579,318,2.579,319,2.579,320,0.687,321,1.802,322,1.922,323,1.702,324,2.073,325,0.722,326,1.922,327,2.073,328,1.802,329,1.922,330,1.475,331,1.416,332,0.885,333,1.361,334,1.361,335,1.802,336,0.847,337,2.073,338,2.073,339,3.259,340,2.073,341,2.073,342,2.073,343,2.073,344,3.259,345,2.073,346,1.922,347,2.073,348,2.073,349,1.617,350,2.073,351,2.073,352,1.416,353,1.922,354,1.922,355,1.223,356,2.073,357,2.073,358,2.073,359,1.542,360,2.073,361,0.74,362,2.073,363,2.073,364,2.834,365,2.073,366,2.073,367,2.073,368,2.073,369,2.073,370,2.073,371,5.712,372,2.073,373,4.028,374,2.073,375,5.514,376,2.073,377,1.922,378,2.073,379,5.115,380,1.311,381,2.073,382,3.335,383,2.073,384,2.237,385,3.259,386,3.926,387,1.802,388,2.073,389,1.597,390,3.259,391,1.475,392,1.746,393,3.259,394,2.073,395,1.922,396,2.073,397,1.617,398,4.056,399,5.683,400,5.01,401,0.885,402,1.729,403,2.823,404,2.32,405,2.32,406,2.92,407,1.815,408,1.475,409,2.32,410,1.11,411,1.054,412,1.923,413,2.645,414,2.579,415,2.062,416,1.223,417,2.579,418,2.744,419,2.543,420,2.929,421,3.023,422,2.579,423,2.865,424,5.013,425,2.834,426,1.029,427,2.32,428,2.274,429,2.093,430,2.226,431,1.029,432,2.834,433,1.86,434,1.702,435,2.425,436,2.157,437,1.265,438,1.746,439,1.801,440,3.023,441,2.073,442,2.073,443,1.11,444,2.751,445,2.579,446,1.145,447,1.016,448,2.543,449,1.802,450,2.376,451,2.889,452,0.868,453,2.299,454,4.056,455,0.868,456,1.802,457,2.579,458,2.579,459,1.514,460,2.677,461,3.309,462,4.056,463,2.459,464,2.579,465,2.579,466,1.361,467,2.073,468,1.016,469,1.802,470,1.223,471,1.223,472,1.475,473,2.579,474,1.617,475,1.802,476,0.399,477,1.029,478,0.818,479,1.803,480,0.818,481,0.818,482,0.74,483,0.818,484,0.722,485,1.591,486,0.74,487,0.818,488,1.107,489,1.591,490,0.74,491,0.778,492,0.818,493,0.74,494,0.818,495,0.74,496,0.704,497,0.818,498,0.74,499,0.818,500,0.74,501,0.74,502,0.818,503,0.74,504,0.798,505,0.74,506,0.818,507,0.74,508,1.287,509,0.722,510,0.74,511,0.74,512,0.818,513,0.74,514,1.591,515,0.74,516,1.193,517,1.287,518,0.722,519,0.74,520,0.722,521,0.623,522,0.818,523,0.722,524,0.704,525,0.74,526,0.818,527,0.74,528,0.818,529,0.759,530,0.818,531,0.74,532,1.054,533,0.74,534,1.164,535,0.74,536,0.818,537,0.74,538,1.081,539,0.818,540,0.74,541,0.818,542,0.818]],["title/modules/AppModule.html",[543,0.627,544,3.272]],["body/modules/AppModule.html",[3,0.108,4,0.132,5,0.096,6,0.109,25,1.363,37,3.871,38,1.267,43,0.01,55,1.122,56,1.044,75,0.007,80,0.007,99,0.358,104,0.259,129,0.132,132,0.194,138,0.898,160,0.832,196,2.283,203,3.134,204,2.189,211,0.69,225,2.877,283,3.907,296,1.844,322,3.907,323,3.46,325,1.467,329,3.907,426,1.33,476,0.81,482,2.398,543,0.749,544,6.821,545,1.467,546,1.504,547,2.311,548,1.581,549,1.937,550,1.622,551,4.622,552,4.622,553,4.622,554,5.842,555,5.842,556,5.842,557,5.842,558,5.842,559,5.842,560,5.842,561,2.089,562,1.467,563,5.243,564,2.143,565,7.472,566,5.243,567,6.754,568,2.037,569,5.243,570,4.622,571,6.754,572,3.663,573,2.572,574,2.82,575,2.064,576,6.754,577,5.954,578,4.458,579,3.286,580,5.427,581,4.213,582,6.754,583,6.754,584,3.46,585,5.243,586,5.243,587,5.243,588,5.034,589,5.243,590,5.243,591,5.243,592,3.907,593,6.754,594,5.243,595,4.458,596,4.622,597,5.243,598,3.907,599,5.243,600,5.034,601,5.427,602,3.663,603,5.243,604,5.243,605,2.125,606,6.754,607,5.243,608,4.622,609,5.243,610,3.663]],["title/interfaces/AppOptions.html",[128,0.299,335,3.068]],["body/interfaces/AppOptions.html",[3,0.085,4,0.104,5,0.076,6,0.066,16,2.266,18,0.403,19,0.618,20,1.533,22,1.38,23,1.58,35,0.763,37,3.514,43,0.01,45,0.655,46,1.399,56,1.164,69,1.192,75,0.006,80,0.006,85,0.821,88,2.266,91,2.083,99,0.327,104,0.204,111,2.266,112,1.214,128,0.392,129,0.145,132,0.153,133,1.173,138,1.135,140,1.063,141,0.782,159,0.961,160,1.358,181,1.455,194,1.073,195,0.668,196,1.127,202,3.077,203,2.469,204,1.724,205,2.926,206,3.798,208,1.1,209,1.1,210,1.68,211,0.871,212,1.022,213,1.127,214,3.318,215,1.127,216,3.318,217,3.077,218,3.83,219,4.89,220,4.89,221,3.158,222,2.885,223,3.44,224,4.152,225,4.609,226,3.318,229,2.099,230,2.725,231,3.318,235,3.318,237,5.322,238,4.624,239,4.624,240,2.885,241,3.44,242,3.318,243,3.44,244,2.524,245,2.332,246,2.266,247,3.158,250,2.885,252,2.725,254,4.624,255,1.6,256,2.157,257,1.893,258,1.692,259,1.46,260,4.289,261,3.158,262,2.402,264,3.318,266,3.318,267,3.318,268,2.725,269,3.318,270,2.885,271,3.077,272,3.077,273,3.318,274,3.318,276,2.588,277,1.58,280,2.362,281,3.318,282,2.588,283,4.936,284,4.624,285,4.371,286,2.458,288,3.318,291,3.318,294,3.318,296,1.808,298,2.083,299,1.048,300,3.139,302,2.266,303,2.099,305,2.885,306,2.026,307,0.801,308,1.022,309,2.266,310,3.607,311,2.588,312,1.834,314,3.318,316,3.318,320,1.1,321,2.885,322,3.077,323,2.725,324,3.318,325,1.156,326,3.077,327,3.318,328,2.885,329,3.077,330,2.362,331,2.266,332,1.417,333,2.179,334,2.179,335,4.021,336,1.496,337,3.318,338,3.318,339,4.624,340,3.318,341,3.318,342,3.318,343,3.318,344,4.624,345,3.318,346,3.077,347,3.318,348,3.318,349,2.588,350,3.318,351,3.318,352,2.266,353,3.077,354,3.077,355,1.957,356,3.318,357,3.318,358,3.318,359,2.469,360,3.318,361,1.185,362,3.318,363,3.318,364,2.885,365,3.318,366,3.318,367,3.318,368,3.318,369,3.318,370,3.318,371,6.56,372,3.318,373,5.322,374,3.318,375,6.432,376,3.318,377,3.077,378,3.318,379,5.966,380,2.099,381,3.318,382,3.966,383,3.318,384,2.083,385,4.624,386,4.579,387,2.885,388,3.318,389,2.266,390,4.624,391,2.362,392,2.477,393,4.624,394,3.318,395,3.077,396,3.318,397,2.588]],["title/components/AppWebComponent.html",[195,0.443,482,1.259]],["body/components/AppWebComponent.html",[3,0.08,4,0.098,5,0.101,6,0.141,12,1.371,16,2.18,18,0.382,19,0.594,35,1.023,38,2.105,42,0.945,43,0.01,44,0.972,45,0.812,46,0.67,56,0.856,69,1.229,75,0.006,80,0.006,82,3.87,86,0.759,99,0.31,104,0.193,112,1.15,129,0.193,132,0.144,133,1.129,138,0.67,141,0.74,195,0.648,196,1.068,197,1.631,198,1.589,200,1.241,201,1.209,207,1.094,208,1.475,209,1.475,210,2.304,211,1.2,212,1.592,218,3.556,219,4.031,220,4.031,225,3.529,244,1.378,245,2.835,246,3.839,247,3.839,255,0.945,258,2.548,259,1.405,298,2.965,299,1.631,307,1.248,308,0.968,320,1.042,325,1.094,328,2.732,332,2.704,336,1.682,361,1.122,411,1.016,452,0.837,455,0.837,459,1.042,468,1.539,476,0.604,477,1.405,478,1.241,479,2.219,480,1.241,481,1.241,482,2.006,483,1.241,484,1.094,485,2.04,486,1.122,487,1.241,488,1.512,489,2.04,490,1.122,491,1.179,492,1.241,493,1.122,494,1.241,495,1.122,496,1.068,497,1.241,498,1.122,499,1.241,500,1.122,501,1.122,502,1.241,503,1.122,504,1.209,505,1.122,506,1.241,507,1.122,508,1.757,509,1.094,510,1.122,511,1.122,512,1.241,513,1.122,514,2.04,515,1.122,516,1.629,517,1.757,518,1.094,519,1.122,520,1.094,521,0.945,522,1.241,523,1.094,524,1.068,525,1.122,526,1.241,527,1.122,528,1.241,529,1.15,530,1.241,531,1.122,532,1.44,533,1.122,534,1.589,535,1.122,536,1.241,537,1.122,538,1.475,539,1.241,540,1.122,541,1.241,542,1.241,584,5.778,611,6.524,612,2.914,613,6.43,614,5.538,615,3.844,616,2.245,617,3.844,618,4.384,619,5.62,620,5.62,621,4.384,622,3.106,623,5.62,624,5.213,625,3.91,626,5.538,627,5.538,628,3.91,629,4.493,630,3.91,631,4.493,632,3.91,633,5.669,634,3.91,635,3.91,636,3.91,637,3.91,638,3.91,639,3.91,640,5.167,641,3.91,642,3.91,643,3.91,644,3.91,645,3.91,646,1.988,647,2.063,648,5.538,649,3.91,650,1.988,651,1.988,652,4.882,653,2.384,654,3.447,655,2.914,656,3.91,657,3.142,658,3.91,659,3.91,660,3.91,661,3.91,662,3.91,663,3.91,664,3.91,665,6.43,666,5.538,667,3.142,668,6.43,669,3.91]],["title/interfaces/BlockSize.html",[128,0.299,670,2.41]],["body/interfaces/BlockSize.html",[3,0.109,4,0.133,5,0.097,6,0.085,11,0.697,18,0.517,19,0.73,40,1.028,41,1.053,43,0.01,44,0.945,45,0.686,47,1.028,56,1.051,69,0.716,71,2.267,75,0.007,80,0.007,86,1.028,99,0.268,104,0.262,128,0.511,129,0.171,131,2.279,132,0.251,138,1.164,140,1.255,159,1.254,160,1.191,181,1.866,194,1.377,195,0.799,208,1.411,209,1.411,210,1.344,211,0.894,213,1.446,215,1.446,255,2.191,258,2.539,259,1.344,320,1.411,384,2.966,389,3.225,392,3.526,406,2.601,411,2.244,416,2.05,477,1.344,484,1.482,605,2.146,670,4.347,671,3.701,672,3.495,673,3.166,674,5.462,675,3.456,676,4.706,677,4.735,678,5.993,679,2.926,680,1.558,681,2.926,682,2.755,683,2.085,684,2.027,685,2.601,686,3.947,687,5.595,688,4.735,689,3.947,690,3.495,691,3.495,692,1.558,693,1.724,694,3.409,695,3.947,696,3.495,697,4.669,698,2.755,699,2.211,700,4.261,701,3.166,702,3.886,703,3.495,704,3.495,705,4.669,706,3.701,707,3.495,708,3.32,709,6.618,710,3.947,711,4.669,712,5.993,713,4.669,714,5.993,715,3.947,716,4.669,717,4.669]],["title/components/BlockSizeInputComponent.html",[195,0.443,484,1.229]],["body/components/BlockSizeInputComponent.html",[3,0.073,4,0.089,5,0.095,6,0.126,11,0.803,12,1.282,18,0.348,19,0.556,25,1.346,35,0.657,38,1.852,40,1.004,41,1.029,42,1.251,43,0.01,44,1.13,45,0.679,46,0.887,47,1.004,52,1.101,55,1.108,56,1.035,69,0.906,71,1.586,75,0.005,76,2.373,80,0.005,85,1.213,86,1.381,99,0.204,104,0.176,128,0.352,129,0.13,131,1.532,132,0.274,138,0.887,140,1.127,141,0.674,159,1.019,160,1.129,181,1.824,187,1.776,195,0.773,196,0.972,197,1.313,198,1.021,199,1.129,200,1.129,201,1.101,207,0.996,208,1.379,209,1.379,210,2.288,211,1.193,212,0.881,213,1.413,215,1.413,218,1.809,255,2.16,258,2.542,259,1.699,299,1.548,307,1.184,308,0.881,320,0.948,384,2.425,389,2.637,392,2.883,401,1.221,402,1.707,403,2.626,406,2.723,410,1.532,411,2.348,412,1.687,415,1.809,416,2.02,423,1.486,429,2.797,431,1.548,436,2.228,438,1.532,439,1.58,443,1.532,446,2.298,447,1.401,450,1.687,451,1.809,452,0.762,453,1.632,455,1.108,456,2.487,459,0.948,463,1.746,470,1.687,471,1.687,472,3.49,476,0.55,477,1.805,478,1.129,479,2.126,480,1.129,481,1.129,482,1.021,483,1.129,484,1.874,485,1.936,486,1.021,487,1.129,488,1.413,489,1.936,490,1.021,491,1.073,492,1.129,493,1.021,494,1.129,495,1.021,496,0.972,497,1.129,498,1.021,499,1.129,500,1.021,501,1.021,502,1.129,503,1.021,504,1.101,505,1.021,506,1.129,507,1.021,508,1.643,509,0.996,510,1.021,511,1.021,512,1.129,513,1.021,514,1.936,515,1.021,516,1.522,517,1.643,518,0.996,519,1.021,520,0.996,521,0.86,522,1.129,523,0.996,524,0.972,525,1.021,526,1.129,527,1.021,528,1.129,529,1.047,530,1.129,531,1.021,532,1.346,533,1.021,534,1.485,535,1.021,536,1.129,537,1.021,538,1.379,539,1.129,540,1.021,541,1.129,542,1.129,573,3.286,605,1.442,616,2.473,670,4.076,671,5.487,672,5.183,673,2.128,674,2.86,675,1.809,676,4.461,677,4.582,678,5.378,679,2.626,680,1.047,681,2.228,682,2.715,683,1.401,684,1.362,685,2.334,686,2.652,687,4.992,688,4.255,689,3.858,690,3.416,691,4.026,692,1.522,693,1.986,694,3.38,695,3.858,696,3.416,697,5.378,698,2.473,699,2.161,700,4.461,701,3.094,702,3.643,703,3.416,704,3.416,705,4.563,706,2.487,707,2.349,708,2.231,709,5.378,710,2.652,711,3.137,712,4.563,713,3.137,714,4.563,715,3.858,716,5.905,717,3.137,718,5.176,719,2.632,720,1.776,721,1.878,722,4.563,723,3.137,724,5.176,725,3.559,726,3.559,727,4.563,728,4.026,729,3.137,730,2.487,731,3.137,732,3.137,733,2.036,734,1.809,735,2.487,736,2.231,737,2.487,738,1.953,739,2.349,740,3.137,741,2.86,742,2.652,743,2.487,744,4.563,745,2.298,746,3.617,747,2.86,748,2.231,749,2.652,750,3.137,751,3.137,752,2.349,753,2.349]],["title/modules/BlockSizeInputModule.html",[543,0.627,754,3.068]],["body/modules/BlockSizeInputModule.html",[3,0.13,4,0.159,5,0.116,6,0.101,43,0.01,75,0.008,80,0.008,99,0.352,104,0.312,129,0.159,132,0.233,255,1.525,411,2.112,426,1.601,476,0.976,484,2.548,543,0.901,545,1.766,546,1.811,547,2.513,548,1.904,549,1.811,550,2.513,561,2.345,562,1.766,564,2.003,568,2.286,572,4.411,573,3.097,574,3.165,575,2.485,671,4.411,672,4.166,754,6.186,755,5.565,756,5.565,757,5.565,758,5.072,759,2.671,760,2.109,761,5.297,762,4.411,763,5.297,764,4.411,765,4.001,766,3.331,767,5.65,768,5.072]],["title/modules/ConfigModule.html",[543,0.627,769,3.068]],["body/modules/ConfigModule.html",[3,0.141,4,0.172,5,0.125,6,0.11,43,0.01,75,0.008,80,0.008,99,0.331,104,0.339,129,0.172,132,0.253,211,0.901,325,1.917,545,1.917,549,1.965,568,2.399,600,5.105,769,5.559,770,6.85,771,4.987,772,5.559,773,6.393,774,3.918,775,6.85,776,6.85]],["title/components/ContainerComponent.html",[195,0.443,486,1.259]],["body/components/ContainerComponent.html",[3,0.068,4,0.083,5,0.09,6,0.136,11,0.769,12,1.213,18,0.479,19,0.526,20,2.337,25,1.274,32,2.586,35,0.61,38,2.022,40,0.951,41,0.974,42,1.184,43,0.01,44,0.959,45,0.731,46,0.839,47,0.951,48,1.478,52,1.999,55,1.602,56,0.999,61,2.308,69,0.447,71,1.274,75,0.005,80,0.005,85,1.162,86,1.134,90,1.595,99,0.285,104,0.163,112,0.971,114,1.196,129,0.083,132,0.267,133,1.317,138,1.107,140,1.079,141,0.625,159,1.079,160,0.927,187,2.004,195,0.818,196,0.902,197,1.834,198,0.947,199,1.048,200,1.048,201,1.022,204,2.046,205,2.97,207,0.924,208,1.305,209,1.305,210,2.274,211,1.187,212,0.818,213,1.338,215,1.338,224,4.692,229,3.286,246,3.547,247,3.547,255,1.184,256,2.248,257,2.963,259,1.243,262,3.019,276,3.071,277,2.473,296,2.044,299,2.155,307,1.134,308,0.818,310,3.662,311,3.071,312,3.746,320,0.88,336,1.35,359,1.974,384,1.196,397,2.07,401,1.133,402,0.924,408,2.803,409,1.889,411,0.859,418,3.746,419,2.07,431,0.838,452,0.707,455,0.707,459,0.88,468,1.929,476,0.511,477,1.751,478,1.048,479,2.051,480,1.048,481,1.048,482,0.947,483,1.048,484,0.924,485,1.854,486,1.854,487,1.048,488,1.885,489,1.854,490,0.947,491,0.996,492,1.048,493,1.854,494,1.048,495,0.947,496,0.902,497,1.048,498,0.947,499,1.048,500,0.947,501,0.947,502,1.048,503,0.947,504,1.022,505,0.947,506,1.048,507,0.947,508,1.555,509,0.924,510,0.947,511,0.947,512,1.048,513,0.947,514,1.854,515,0.947,516,1.441,517,1.555,518,0.924,519,0.947,520,0.924,521,0.798,522,1.048,523,0.924,524,0.902,525,0.947,526,1.048,527,0.947,528,1.048,529,0.971,530,1.048,531,0.947,532,1.274,533,0.947,534,1.406,535,0.947,536,1.048,537,0.947,538,1.305,539,1.048,540,0.947,541,1.048,542,1.048,549,1.406,675,1.679,680,0.971,692,1.441,720,1.681,777,2.654,778,2.689,779,4.694,780,4.319,781,4.9,782,3.414,783,5.841,784,4.9,785,3.165,786,4.354,787,5.841,788,5.841,789,4.778,790,3.937,791,5.193,792,6.462,793,5.841,794,3.937,795,4.9,796,2.586,797,3.386,798,3.424,799,4.9,800,4.9,801,3.324,802,3.303,803,4.319,804,4.9,805,3.234,806,3.652,807,3.652,808,3.303,809,2.247,810,4.9,811,4.9,812,3.303,813,3.303,814,4.9,815,4.9,816,2.866,817,3.303,818,3.234,819,7.486,820,4.9,821,6.462,822,3.303,823,4.516,824,4.319,825,6.462,826,4.9,827,3.303,828,3.937,829,4.319,830,4.9,831,3.303,832,3.303,833,3.303,834,4.319,835,3.303,836,3.303,837,1.305,838,3.303,839,3.303,840,2.911,841,2.654,842,2.461,843,2.18,844,2.461,845,2.911,846,3.937,847,3.303,848,2.911,849,3.303,850,2.911,851,3.856,852,3.856,853,2.911,854,2.911,855,3.303,856,3.303,857,3.303,858,3.303,859,2.18,860,2.654,861,2.911,862,2.461,863,3.303,864,3.303,865,4.319,866,2.07,867,2.689,868,4.319,869,3.303,870,3.303,871,3.303,872,1.875,873,3.303,874,3.303,875,4.9,876,4.9,877,3.303,878,3.303,879,3.303,880,3.303,881,3.303,882,3.303,883,3.303,884,2.461,885,3.303,886,3.303]],["title/components/ContentComponent.html",[195,0.443,488,1.199]],["body/components/ContentComponent.html",[3,0.058,4,0.071,5,0.079,6,0.134,11,0.696,12,1.073,15,2.294,18,0.517,19,0.465,20,1.713,22,2.149,23,2.6,24,3.927,25,1.126,35,0.8,38,1.996,40,0.841,41,0.862,42,1.279,43,0.01,44,1.043,45,0.733,46,0.906,52,0.869,55,1.376,56,1.05,69,0.38,71,1.126,75,0.004,77,1.679,80,0.004,85,1.493,86,1.456,88,2.342,91,2.154,92,3.403,99,0.296,104,0.139,113,1.208,114,1.017,129,0.071,132,0.251,138,0.906,140,0.519,141,1.002,159,1.074,160,1.33,187,0.963,195,0.787,196,0.767,197,1.099,198,0.805,199,0.891,200,0.891,201,0.869,204,1.809,205,2.69,206,3.493,207,0.786,208,1.154,209,1.154,210,2.241,211,1.178,212,1.31,213,1.183,215,1.183,217,3.944,229,2.69,230,3.927,236,2.093,243,3.557,246,3.265,247,3.265,255,1.279,256,2.667,257,1.987,258,1.275,259,1.631,262,1.172,270,1.962,277,1.658,282,1.76,286,2.331,296,0.767,299,1.342,306,1.377,307,1.514,308,0.695,320,0.748,323,1.853,330,1.606,331,1.541,336,1.105,379,4.792,380,1.428,382,3.025,384,2.867,386,3.403,389,3.018,392,3.299,395,2.093,401,0.963,402,1.901,403,2.767,406,2.277,407,1.569,408,1.606,409,2.479,411,0.73,412,1.331,413,2.287,416,2.049,418,3.721,419,1.76,420,2.508,423,1.809,429,1.809,430,1.541,431,1.099,435,3.164,436,2.278,437,1.377,438,1.208,439,1.247,440,2.093,446,1.247,447,1.105,448,1.76,449,1.962,451,1.428,452,1.273,455,1.132,459,0.748,461,1.853,463,3.588,466,1.482,470,1.331,471,2.054,476,0.434,477,1.631,478,0.891,479,1.888,480,0.891,481,0.891,482,0.805,483,0.891,484,0.786,485,1.679,486,0.805,487,0.891,488,1.755,489,1.679,490,0.805,491,0.847,492,0.891,493,0.805,494,0.891,495,0.805,496,0.767,497,0.891,498,0.805,499,0.891,500,0.805,501,0.805,502,0.891,503,0.805,504,0.869,505,0.805,506,0.891,507,0.805,508,1.375,509,0.786,510,0.805,511,0.805,512,0.891,513,0.805,514,1.679,515,0.805,516,1.275,517,1.375,518,0.786,519,0.805,520,0.786,521,0.678,522,0.891,523,0.786,524,0.767,525,0.805,526,0.891,527,0.805,528,0.891,529,0.826,530,0.891,531,0.805,532,1.126,533,0.805,534,1.243,535,0.805,536,0.891,537,0.805,538,1.154,539,0.891,540,0.805,541,0.891,542,0.891,562,1.213,616,1.756,622,2.35,646,2.69,647,3.14,650,1.428,651,1.428,680,0.826,688,1.679,692,1.275,693,1.723,720,1.487,728,2.86,736,1.76,737,1.962,778,2.904,798,3.028,805,2.86,809,2.426,823,1.962,837,1.585,887,2.475,888,4.252,889,3.82,890,5.292,891,5.292,892,5.95,893,5.95,894,6.794,895,5.292,896,4.333,897,5.292,898,4.333,899,3.265,900,5.95,901,4.333,902,4.333,903,2.808,904,4.333,905,2.808,906,5.292,907,2.808,908,2.808,909,2.808,910,6.429,911,2.808,912,2.808,913,1.679,914,2.808,915,2.808,916,2.126,917,2.093,918,2.808,919,2.808,920,3.73,921,3.269,922,1.76,923,4.333,924,4.333,925,4.333,926,4.333,927,6.794,928,4.674,929,4.333,930,4.333,931,4.333,932,4.333,933,4.333,934,4.333,935,2.808,936,2.808,937,3.482,938,4.333,939,6.429,940,3.82,941,3.82,942,4.333,943,4.333,944,2.808,945,2.808,946,5.292,947,3.82,948,4.333,949,4.333,950,4.333,951,4.333,952,4.333,953,4.333,954,2.808,955,5.292,956,2.716,957,2.808,958,2.86,959,4.333,960,2.475,961,2.256,962,2.808,963,2.093,964,2.808,965,2.808,966,2.808,967,3.482,968,3.028,969,1.853,970,2.093,971,1.853,972,1.853,973,1.853,974,2.256,975,1.853,976,4.333,977,5.95,978,5.95,979,3.23,980,1.679,981,3.23,982,4.333,983,4.333,984,4.333,985,4.333,986,3.025,987,2.86,988,3.028,989,1.76,990,2.256,991,2.808,992,2.528,993,2.808,994,2.808,995,2.808,996,2.093,997,2.808,998,2.475,999,2.256,1000,1.853,1001,1.865,1002,2.808,1003,3.23,1004,2.808,1005,2.808,1006,2.808,1007,1.679,1008,2.808,1009,2.475,1010,1.962,1011,2.808]],["title/components/ContentComponent-1.html",[187,1.256,195,0.369,488,1]],["body/components/ContentComponent-1.html",[3,0.063,4,0.077,5,0.085,6,0.137,11,0.819,12,1.146,15,1.642,18,0.452,19,0.497,20,2.217,25,1.203,35,0.565,38,2.041,40,0.898,41,0.921,42,1.349,43,0.01,44,0.977,45,0.738,46,0.956,47,0.898,48,1.396,52,2.067,55,1.43,56,1.087,69,0.414,71,2.039,75,0.005,80,0.005,85,1.625,86,1.567,90,1.507,99,0.263,104,0.151,112,0.9,129,0.077,132,0.26,133,1.268,138,1.25,140,0.855,141,0.579,159,1.219,160,0.886,164,2.767,187,1.588,195,0.776,196,0.836,197,1.174,198,1.328,199,0.971,200,0.971,201,0.947,204,1.933,205,2.838,207,0.857,208,1.233,209,1.233,210,2.259,211,1.18,212,0.758,213,1.264,224,4.575,229,3.163,246,3.415,247,3.415,255,0.74,256,2.026,257,2.853,259,1.174,262,2.935,276,2.902,277,1.771,286,2.504,296,1.993,299,2.206,307,1.083,308,0.758,310,3.499,311,2.902,320,0.815,336,1.524,359,1.83,364,2.139,380,1.556,382,2.838,384,1.108,397,1.919,401,1.05,402,0.857,403,1.992,404,1.751,405,1.751,406,1.171,407,1.108,408,1.751,411,2,416,2.32,418,3.773,423,1.933,425,2.139,426,0.777,431,1.852,436,1.992,437,1.502,452,1.562,455,1.562,459,0.815,467,2.46,468,1.205,469,2.139,476,0.473,477,1.695,478,0.971,479,1.974,480,0.971,481,0.971,482,0.878,483,0.971,484,0.857,485,1.771,486,0.878,487,0.971,488,1.824,489,1.771,490,0.878,491,0.923,492,0.971,493,1.917,494,0.971,495,0.878,496,0.836,497,0.971,498,0.878,499,0.971,500,0.878,501,0.878,502,0.971,503,0.878,504,0.947,505,0.878,506,0.971,507,0.878,508,1.469,509,0.857,510,0.878,511,0.878,512,0.971,513,0.878,514,1.771,515,0.878,516,1.361,517,1.469,518,0.857,519,0.878,520,0.857,521,0.74,522,0.971,523,0.857,524,0.836,525,0.878,526,0.971,527,0.878,528,0.971,529,0.9,530,0.971,531,0.878,532,1.203,533,0.878,534,1.328,535,0.878,536,0.971,537,0.878,538,1.233,539,0.971,540,0.878,541,0.971,542,0.971,615,1.83,680,0.9,692,1.361,699,2.598,720,1.588,782,3.121,786,4.16,789,3.995,790,3.719,794,3.719,796,2.443,797,3.052,798,3.234,801,3.121,805,3.055,806,3.45,807,3.45,829,4.081,837,2.002,842,2.281,851,4.818,852,4.639,862,2.281,866,1.919,867,1.68,888,4.485,992,3.223,1000,2.02,1001,1.992,1012,2.698,1013,4.629,1014,7.024,1015,5.582,1016,6.682,1017,5.582,1018,5.582,1019,6.222,1020,4.629,1021,4.629,1022,4.629,1023,6.222,1024,6.222,1025,6.222,1026,4.629,1027,3.055,1028,4.629,1029,5.582,1030,4.629,1031,4.629,1032,5.582,1033,4.629,1034,4.629,1035,3.719,1036,3.061,1037,3.719,1038,3.719,1039,3.061,1040,3.061,1041,3.719,1042,3.719,1043,4.629,1044,4.994,1045,3.061,1046,4.629,1047,3.061,1048,3.234,1049,1.933,1050,4.629,1051,6.222,1052,2.281,1053,4.16,1054,2.46,1055,2.46,1056,3.061,1057,3.061,1058,3.061,1059,3.061,1060,3.061,1061,3.061,1062,3.061,1063,2.46,1064,4.629,1065,3.061,1066,4.629,1067,3.061,1068,1.68,1069,2.02,1070,3.061,1071,3.061,1072,3.061,1073,5.582,1074,3.061,1075,3.061,1076,4.629,1077,3.061,1078,3.061,1079,4.629,1080,3.061,1081,3.061,1082,3.061,1083,3.061,1084,2.698]],["title/interfaces/ContentContainerChanged.html",[128,0.299,1085,2.752]],["body/interfaces/ContentContainerChanged.html",[3,0.11,4,0.134,5,0.098,6,0.086,11,0.701,15,1.567,18,0.52,19,0.732,43,0.01,45,0.838,47,1.324,48,1.607,71,1.774,75,0.007,80,0.007,90,2.451,99,0.21,121,2.16,122,2.16,123,2.098,124,1.983,125,2.098,128,0.541,129,0.223,132,0.197,138,0.913,140,1.26,181,2.798,194,1.385,195,0.828,197,1.731,221,2.924,299,2.271,312,3.03,336,1.425,416,2.058,418,3.877,427,3.904,433,2.443,532,1.385,615,3.185,653,3.24,694,2.293,782,3.343,785,2.443,789,4.08,796,2.812,797,3.348,801,3.975,816,3.348,837,1.818,866,3.34,867,3.745,872,2.039,992,2.54,1044,4.278,1048,3.723,1068,2.924,1085,4.72,1086,3.34,1087,4.803,1088,4.769,1089,4.769,1090,4.969,1091,3.723,1092,4.278,1093,3.723,1094,4.541,1095,4.278,1096,4.769,1097,3.971,1098,3.971,1099,4.278,1100,4.278,1101,3.971,1102,3.723,1103,4.769,1104,3.723,1105,3.723,1106,4.132,1107,3.723,1108,3.723]],["title/modules/ContentModule.html",[543,0.627,554,3.068]],["body/modules/ContentModule.html",[3,0.126,4,0.154,5,0.112,6,0.098,43,0.01,75,0.008,80,0.008,99,0.352,104,0.302,129,0.154,132,0.226,211,0.979,308,1.842,325,2.082,426,1.553,459,1.63,476,0.946,488,2.477,534,1.756,543,0.874,545,1.713,546,1.756,547,2.48,548,1.846,549,1.756,550,2.48,554,6.314,561,2.302,562,1.713,564,2.361,568,2.244,574,3.107,575,2.41,759,2.622,760,2.045,763,5.199,764,4.277,841,4.918,1109,5.395,1110,5.395,1111,5.395,1112,5.395,1113,6.073,1114,6.073,1115,6.12,1116,7.441,1117,7.441,1118,4.277,1119,6.12,1120,4.039,1121,4.561,1122,6.12,1123,7.441]],["title/modules/CoreModule.html",[543,0.627,555,3.068]],["body/modules/CoreModule.html",[3,0.126,4,0.154,5,0.112,6,0.099,43,0.01,46,1.052,75,0.008,80,0.008,99,0.35,104,0.304,129,0.154,132,0.227,140,1.134,211,0.981,212,1.521,325,1.719,326,4.577,426,1.558,476,0.949,543,1.147,545,1.719,546,1.762,547,1.9,548,1.852,549,1.762,550,2.307,555,6.317,561,2.307,562,1.719,564,2.366,568,2.249,610,4.292,650,3.123,651,3.123,769,6.078,854,5.414,1124,5.414,1125,5.414,1126,6.078,1127,6.078,1128,6.142,1129,7.457,1130,6.142,1131,5.211,1132,7.457,1133,6.142,1134,6.142,1135,6.142,1136,6.142,1137,6.142,1138,6.142,1139,6.142,1140,6.142,1141,4.577,1142,8.03,1143,6.142,1144,4.935,1145,6.142]],["title/interfaces/DefaultIconDefinition.html",[128,0.299,1146,3.272]],["body/interfaces/DefaultIconDefinition.html",[3,0.078,4,0.096,5,0.07,6,0.061,11,0.502,18,0.372,19,0.584,43,0.01,44,1.282,45,0.632,46,1.37,69,1.142,75,0.006,80,0.006,90,1.242,128,0.26,129,0.137,138,0.653,141,1.439,194,0.991,203,5.495,302,5.033,307,0.74,349,5.785,443,3.715,452,1.565,455,1.565,477,1.985,622,3.071,675,2.766,778,2.093,1001,1.641,1146,4.727,1147,2.664,1148,3.064,1149,3.064,1150,2.024,1151,3.064,1152,3.362,1153,4.054,1154,3.813,1155,3.813,1156,3.064,1157,3.813,1158,3.813,1159,2.664,1160,3.362,1161,6.875,1162,4.054,1163,5.557,1164,3.801,1165,2.517,1166,3.064,1167,2.664,1168,3.362,1169,8.079,1170,3.362,1171,3.362,1172,3.362,1173,4.796,1174,3.362,1175,3.362,1176,3.362,1177,3.362,1178,3.362,1179,3.362,1180,6.096,1181,6.096,1182,6.446,1183,6.446,1184,2.842,1185,3.362,1186,4.371,1187,3.362,1188,3.362,1189,3.362,1190,4.054,1191,4.054,1192,4.796,1193,3.362,1194,3.362,1195,3.362,1196,3.362,1197,6.446,1198,3.362,1199,4.796,1200,2.842,1201,3.362,1202,3.362,1203,3.362,1204,3.362,1205,3.362,1206,3.362,1207,3.362,1208,3.362,1209,3.362,1210,3.362,1211,3.362,1212,6.096,1213,4.796,1214,3.362,1215,3.362,1216,3.362,1217,3.362,1218,4.796,1219,3.362,1220,3.362,1221,3.064,1222,3.362,1223,3.362,1224,3.362,1225,3.362,1226,3.362,1227,4.796,1228,4.371,1229,3.064,1230,3.362,1231,2.842,1232,3.362,1233,3.362,1234,3.362,1235,3.362,1236,3.362,1237,3.362,1238,3.362,1239,6.096,1240,3.362,1241,3.362,1242,6.096,1243,3.362,1244,3.362,1245,2.664,1246,3.362,1247,3.362,1248,5.591,1249,3.362,1250,4.796,1251,3.362,1252,3.362,1253,3.362,1254,3.362]],["title/components/DetailsLabelComponent.html",[195,0.443,490,1.259]],["body/components/DetailsLabelComponent.html",[3,0.093,4,0.113,5,0.112,6,0.125,11,0.804,12,1.513,18,0.44,19,0.656,25,1.588,38,1.796,42,1.089,43,0.01,44,1.139,45,0.68,46,0.772,52,1.394,55,1.308,69,1.189,75,0.006,80,0.006,85,1.379,86,1.345,99,0.178,104,0.223,129,0.113,132,0.296,133,0.918,141,0.853,155,3.155,159,0.753,160,1.1,195,0.784,196,1.23,197,1.55,198,1.293,199,1.43,200,1.43,201,1.394,207,1.261,208,1.628,209,1.628,210,2.327,211,1.211,212,1.116,213,1.668,215,1.668,255,1.477,258,1.797,259,1.55,299,1.759,303,3.107,307,1.345,308,1.116,320,1.2,401,1.546,402,1.94,406,1.724,411,1.171,413,3.225,443,2.63,447,2.406,452,0.964,455,0.964,459,1.2,468,2.406,476,0.697,477,1.971,478,1.43,479,2.359,480,1.43,481,1.43,482,1.293,483,1.43,484,1.261,485,2.2,486,1.293,487,1.43,488,1.668,489,2.2,490,2.133,491,2.687,492,1.43,493,1.293,494,1.43,495,1.293,496,1.23,497,1.43,498,1.293,499,1.43,500,1.293,501,1.293,502,1.43,503,1.293,504,1.394,505,1.293,506,1.43,507,1.293,508,1.939,509,1.261,510,1.293,511,1.293,512,1.43,513,1.293,514,2.2,515,1.293,516,1.797,517,1.939,518,1.261,519,1.293,520,1.261,521,1.089,522,1.43,523,1.261,524,1.23,525,1.293,526,1.43,527,1.293,528,1.43,529,1.325,530,1.43,531,1.293,532,1.588,533,1.293,534,1.753,535,1.293,536,1.43,537,1.293,538,1.628,539,1.43,540,1.293,541,1.43,542,1.43,616,2.477,680,1.325,692,1.797,693,2.258,720,2.097,1255,6.244,1256,5.791,1257,3.973,1258,5.387,1259,4.91,1260,4.888,1261,7.434,1262,6.111,1263,7.434,1264,6.111,1265,6.933,1266,6.111,1267,6.111,1268,4.506,1269,6.111,1270,6.111,1271,4.506,1272,3.354,1273,6.111,1274,4.91,1275,7.434,1276,6.111,1277,6.111,1278,6.111,1279,4.506,1280,4.506,1281,6.111,1282,2.825]],["title/modules/DetailsLabelModule.html",[543,0.627,1283,3.068]],["body/modules/DetailsLabelModule.html",[3,0.136,4,0.166,5,0.121,6,0.106,43,0.01,75,0.008,80,0.008,99,0.326,104,0.326,129,0.166,132,0.244,426,1.674,476,1.02,490,2.626,491,1.99,543,0.942,545,1.847,546,1.893,547,2.561,548,1.99,549,1.893,550,2.561,561,2.408,562,1.847,564,2.094,568,2.348,759,2.743,760,2.205,1255,5.303,1256,4.918,1283,6.24,1284,5.817,1285,5.817,1286,5.817,1287,6.599,1288,6.599]],["title/interfaces/DocumentationContent.html",[128,0.299,1289,3.528]],["body/interfaces/DocumentationContent.html",[3,0.162,4,0.169,5,0.123,6,0.108,8,3.08,11,0.884,18,0.656,19,0.844,43,0.009,45,0.719,69,1.201,75,0.008,80,0.008,128,0.457,129,0.169,194,1.746,418,3.942,733,5.079,1289,6.321,1290,5.922,1291,6.718,1292,4.211,1293,4.694,1294,6.125,1295,5.398,1296,3.843,1297,5.863]],["title/interfaces/DrawerContainersChanged.html",[128,0.299,1092,2.752]],["body/interfaces/DrawerContainersChanged.html",[3,0.109,4,0.133,5,0.097,6,0.085,11,0.695,15,1.554,18,0.516,19,0.729,43,0.01,45,0.839,47,1.317,48,1.594,71,1.765,75,0.007,80,0.007,90,2.21,99,0.208,121,2.142,122,2.142,123,2.081,124,1.967,125,2.081,128,0.539,129,0.222,132,0.195,138,0.905,140,0.976,181,2.789,194,1.374,195,0.798,197,1.903,221,2.901,299,2.286,312,3.015,336,1.418,416,2.047,418,3.515,427,3.884,433,2.423,532,1.374,615,3.16,653,3.228,694,2.922,782,3.33,785,2.423,789,4.894,796,2.789,797,3.33,801,3.97,816,3.33,837,1.809,866,3.313,867,3.726,872,2.598,992,2.526,1044,4.256,1048,4.744,1068,2.901,1085,4.256,1086,3.313,1087,4.793,1088,4.744,1089,4.744,1090,4.95,1091,3.693,1092,4.702,1093,4.744,1094,4.528,1095,4.256,1096,4.744,1097,3.939,1098,3.939,1099,4.256,1100,4.256,1101,3.939,1102,3.693,1103,4.744,1104,3.693,1105,3.693,1106,4.116,1107,3.693,1108,3.693]],["title/interfaces/DrawerInitialized.html",[128,0.299,1099,2.752]],["body/interfaces/DrawerInitialized.html",[3,0.11,4,0.135,5,0.098,6,0.086,11,0.706,15,1.578,18,0.524,19,0.736,43,0.01,45,0.838,47,1.33,48,1.619,71,1.782,75,0.007,80,0.007,90,2.232,99,0.211,121,2.175,122,2.175,123,2.113,124,1.997,125,2.113,128,0.542,129,0.223,132,0.198,138,0.919,140,0.991,181,2.662,194,1.395,195,0.762,197,1.739,221,2.945,299,2.282,312,3.044,336,1.432,416,2.068,418,3.535,427,3.922,433,2.461,532,1.395,615,3.208,653,3.251,694,2.31,782,3.354,785,2.461,789,4.099,796,2.832,797,3.363,801,3.978,816,3.363,837,1.826,866,3.364,867,3.763,872,2.054,992,2.551,1044,4.297,1048,3.75,1068,2.945,1085,4.297,1086,3.364,1087,4.812,1088,4.79,1089,4.79,1090,4.986,1091,3.75,1092,4.297,1093,3.75,1094,4.553,1095,4.297,1096,4.79,1097,5.109,1098,5.109,1099,4.735,1100,4.297,1101,4,1102,3.75,1103,4.79,1104,3.75,1105,3.75,1106,4.146,1107,3.75,1108,3.75]],["title/modules/DrawerModule.html",[543,0.627,556,3.068]],["body/modules/DrawerModule.html",[3,0.123,4,0.15,5,0.109,6,0.096,43,0.01,75,0.008,80,0.008,99,0.351,104,0.296,129,0.15,132,0.221,426,1.517,476,0.924,486,2.595,488,2.39,493,2.595,531,2.595,532,1.555,543,0.854,545,1.674,546,1.716,547,2.455,548,1.804,549,2.105,550,2.455,556,6.381,561,2.269,562,1.674,564,1.898,568,2.213,574,3.063,575,2.354,577,6.468,578,4.842,579,3.749,580,5.895,581,4.805,600,4.457,601,4.805,841,4.805,842,4.457,1091,4.179,1298,5.272,1299,5.272,1300,5.272,1301,5.98,1302,4.599,1303,4.599,1304,5.98,1305,4.805,1306,5.272]],["title/interfaces/DrawerToggled.html",[128,0.299,1100,2.752]],["body/interfaces/DrawerToggled.html",[3,0.106,4,0.129,5,0.094,6,0.083,11,0.676,15,1.96,18,0.501,19,0.715,43,0.01,45,0.84,47,1.293,48,2.01,71,2.161,75,0.007,80,0.007,90,2.17,99,0.202,121,2.081,122,2.081,123,2.022,124,1.911,125,2.022,128,0.533,129,0.221,132,0.19,138,0.88,140,0.948,181,2.759,194,1.335,195,0.746,197,1.69,221,3.657,299,2.299,312,2.959,336,1.736,416,2.507,418,3.476,427,4.756,433,3.055,532,1.732,615,3.07,653,3.184,694,2.21,782,3.285,785,2.354,789,3.984,796,3.517,797,3.269,801,3.955,816,3.269,837,2.086,866,3.219,867,3.657,872,1.965,992,3.094,1044,5.211,1048,3.588,1068,2.818,1085,4.177,1086,3.219,1087,4.641,1088,4.656,1089,4.656,1090,4.883,1091,3.588,1092,4.177,1093,3.588,1094,4.478,1095,4.177,1096,4.656,1097,3.827,1098,3.827,1099,4.177,1100,4.637,1101,4.966,1102,4.656,1103,4.656,1104,3.588,1105,3.588,1106,4.06,1107,3.588,1108,3.588]],["title/interfaces/ExtractionSet.html",[128,0.299,1307,2.41]],["body/interfaces/ExtractionSet.html",[3,0.132,4,0.161,5,0.117,6,0.103,11,0.844,18,0.626,19,0.821,43,0.01,44,1.221,45,0.748,46,1.311,69,1.188,75,0.008,80,0.008,99,0.253,128,0.437,129,0.161,141,1.663,194,1.667,298,3.241,496,2.444,538,1.708,701,4.575,916,3.754,1307,4.2,1308,5.653,1309,5.653,1310,6.255,1311,7.653,1312,4.471,1313,7.653,1314,3.52]],["title/components/ExtractionSetDropdownComponent.html",[195,0.443,495,1.259]],["body/components/ExtractionSetDropdownComponent.html",[3,0.078,4,0.095,5,0.099,6,0.131,11,0.833,12,1.343,18,0.371,19,0.582,25,1.411,35,0.702,38,1.931,40,1.053,41,1.079,42,1.311,43,0.01,44,1.111,45,0.715,46,0.929,47,1.053,52,1.175,55,1.355,56,0.839,69,0.514,75,0.006,76,1.742,80,0.006,85,1.079,86,1.417,99,0.249,104,0.188,129,0.095,132,0.281,133,0.774,140,0.702,141,1.747,159,0.906,160,1.158,187,1.304,195,0.736,196,1.037,197,1.376,198,1.09,199,1.206,200,1.206,201,1.175,207,1.063,208,1.445,209,1.445,210,2.3,211,1.199,212,0.941,213,1.481,215,1.481,255,0.918,256,1.237,258,1.596,259,1.376,296,1.481,299,1.606,303,2.759,307,1.228,308,0.941,320,1.012,336,1.133,355,3,401,1.304,406,2.076,411,0.988,416,1.636,420,1.801,421,4.717,429,1.586,431,0.964,434,2.508,452,0.813,455,0.813,459,1.012,460,4.177,466,2.005,470,3,471,3,472,3.104,474,2.382,475,2.655,476,0.587,477,1.852,478,1.206,479,2.191,480,1.206,481,1.206,482,1.09,483,1.206,484,1.063,485,2.008,486,1.09,487,1.206,488,1.481,489,2.008,490,1.09,491,1.146,492,1.206,493,1.09,494,1.206,495,1.981,496,2.481,497,1.206,498,1.09,499,1.206,500,1.09,501,1.09,502,1.206,503,1.09,504,1.175,505,1.09,506,1.206,507,1.09,508,1.722,509,1.063,510,1.09,511,1.09,512,1.206,513,1.09,514,2.008,515,1.09,516,1.596,517,1.722,518,1.063,519,1.09,520,1.063,521,0.918,522,1.206,523,1.063,524,1.037,525,1.09,526,1.206,527,1.09,528,1.206,529,1.117,530,1.206,531,1.09,532,1.411,533,1.09,534,1.557,535,1.09,536,1.206,537,1.09,538,1.445,539,1.206,540,1.09,541,1.206,542,1.206,573,2.662,605,1.54,616,2.199,679,2.724,680,1.117,681,2.335,682,2.798,683,1.496,684,1.454,685,2.422,692,1.596,693,2.061,698,2.565,719,2.759,720,1.862,721,2.005,745,2.409,746,2.655,748,3.401,749,2.832,809,3.584,837,1.445,1294,2.655,1307,4.387,1315,6.537,1316,6.063,1317,3.349,1318,7.275,1319,4.36,1320,6.329,1321,5.426,1322,4.993,1323,5.426,1324,6.904,1325,6.329,1326,5.426,1327,3.799,1328,3.799,1329,3.51,1330,2.759,1331,5.426,1332,5.426,1333,3.799,1334,3.799,1335,4.783,1336,4.824,1337,4.557,1338,3.401,1339,3.799,1340,3.799,1341,3.799,1342,3.799,1343,3.799,1344,3.799,1345,3.799,1346,5.426,1347,5.426,1348,5.426,1349,3.349,1350,3.799,1351,3.799,1352,3.349,1353,2.832,1354,3.799,1355,3.799,1356,3.349,1357,3.349]],["title/modules/ExtractionSetDropdownModule.html",[543,0.627,1358,3.068]],["body/modules/ExtractionSetDropdownModule.html",[3,0.134,4,0.164,5,0.119,6,0.105,43,0.01,75,0.008,80,0.008,99,0.336,104,0.322,129,0.164,132,0.241,141,1.56,426,1.655,476,1.009,495,2.623,496,1.781,543,0.932,545,1.826,546,1.872,547,2.549,548,1.968,549,1.872,550,2.549,561,2.392,562,1.826,564,2.07,568,2.332,759,2.725,760,2.181,1315,5.243,1316,4.863,1358,6.226,1359,5.752,1360,5.752,1361,5.752,1362,6.525,1363,6.213,1364,5.243,1365,6.525]],["title/interfaces/GlobalConfig.html",[128,0.299,244,1.547]],["body/interfaces/GlobalConfig.html",[3,0.108,4,0.132,5,0.096,6,0.084,14,3.709,18,0.513,19,0.725,43,0.01,44,0.729,45,0.828,46,1.583,56,1.045,69,1.238,75,0.007,80,0.007,82,4.722,99,0.294,104,0.259,112,1.544,128,0.46,129,0.198,133,1.07,138,0.899,140,0.969,194,1.364,211,0.69,218,4.013,219,4.948,220,4.948,223,4.719,225,4.332,244,2.782,298,2.858,325,1.469,332,2.803,333,3.567,334,3.567,336,1.857,361,1.505,452,1.123,455,1.123,468,3.349,617,4.719,618,4.948,619,6.343,620,6.343,621,4.948,622,3.505,623,6.343,624,5.883,771,4.236,772,3.667,1049,2.191,1150,1.953,1184,3.911,1186,3.137,1190,3.911,1191,3.911,1231,3.911,1366,3.667,1367,4.934,1368,4.948,1369,5.431,1370,4.04,1371,3.667,1372,2.668,1373,2.77,1374,2.77,1375,4.627,1376,3.911,1377,2.406,1378,4.217,1379,4.627]],["title/components/HeaderComponent.html",[195,0.443,498,1.259]],["body/components/HeaderComponent.html",[3,0.089,4,0.109,5,0.109,6,0.127,11,0.785,12,1.478,18,0.425,19,0.64,23,3.107,35,0.804,38,1.855,40,1.158,41,1.187,42,1.052,43,0.01,44,1.129,45,0.702,46,0.746,52,1.346,69,1.038,75,0.006,76,2.736,80,0.006,85,1.187,86,1.158,91,2.653,99,0.235,104,0.215,129,0.109,132,0.293,141,0.824,159,0.727,160,1.08,187,1.493,195,0.774,196,1.188,197,1.514,198,1.249,199,1.381,200,1.381,201,1.346,207,1.218,208,1.59,209,1.59,210,2.322,211,1.209,212,1.078,213,1.629,215,1.629,218,4.315,219,4.269,220,4.269,255,1.052,258,2.003,259,1.514,277,1.666,299,1.728,307,1.321,308,1.078,320,1.16,331,2.389,361,1.712,401,1.493,402,2.05,403,3.304,406,2.938,407,2.161,410,2.931,411,1.996,413,2.297,415,2.213,416,2.21,423,1.817,429,2.843,431,1.859,436,3.154,438,1.873,439,1.933,443,1.873,446,3.254,447,2.885,448,3.741,450,2.829,451,3.034,452,0.931,455,0.931,459,1.16,463,2.928,476,0.673,477,1.948,478,1.381,479,2.325,480,1.381,481,1.381,482,1.249,483,1.381,484,1.218,485,2.161,486,1.249,487,1.381,488,1.629,489,2.161,490,1.249,491,1.313,492,1.381,493,1.249,494,1.381,495,1.249,496,1.188,497,1.381,498,2.102,499,1.381,500,1.249,501,1.249,502,1.381,503,1.249,504,1.346,505,1.249,506,1.381,507,1.249,508,1.894,509,1.218,510,1.249,511,1.249,512,1.381,513,1.249,514,2.161,515,1.249,516,1.755,517,1.894,518,1.218,519,1.249,520,1.218,521,1.052,522,1.381,523,1.218,524,1.188,525,1.249,526,1.381,527,1.249,528,1.381,529,1.28,530,1.381,531,1.249,532,1.551,533,1.249,534,1.712,535,1.249,536,1.381,537,1.249,538,1.59,539,1.381,540,1.249,541,1.381,542,1.381,616,2.419,680,1.28,692,1.755,693,2.217,720,2.048,734,2.213,738,2.389,748,2.728,751,3.837,752,2.873,753,2.873,848,3.837,989,2.728,992,1.62,1053,3.244,1093,3.041,1165,2.873,1274,3.498,1282,4.269,1295,3.498,1380,3.837,1381,6.81,1382,5.968,1383,3.498,1384,5.968,1385,4.353,1386,5.968,1387,4.353,1388,5.968,1389,4.448,1390,3.244,1391,3.498,1392,3.244,1393,3.568,1394,2.873,1395,4.353,1396,3.837,1397,4.353,1398,4.353,1399,4.353,1400,3.041,1401,4.353,1402,4.353,1403,3.837,1404,3.498,1405,4.353,1406,3.041,1407,5.968]],["title/modules/HeaderModule.html",[543,0.627,557,3.068]],["body/modules/HeaderModule.html",[3,0.134,4,0.164,5,0.119,6,0.105,43,0.01,75,0.008,80,0.008,99,0.343,104,0.322,129,0.164,132,0.241,426,1.655,476,1.009,498,2.623,543,0.932,545,1.826,546,1.872,547,2.549,548,1.968,549,1.872,550,2.549,557,6.226,561,2.392,562,1.826,564,2.07,568,2.332,574,3.228,575,2.569,759,2.725,760,2.181,765,4.081,766,3.443,1408,5.752,1409,5.752,1410,5.752,1411,6.525,1412,6.525]],["title/interfaces/IconDefinition.html",[128,0.299,1413,3.272]],["body/interfaces/IconDefinition.html",[0,1.806,3,0.087,4,0.106,5,0.077,6,0.068,11,0.555,15,2.126,16,1.66,18,0.412,19,0.627,20,2.092,29,1.872,40,0.818,41,0.838,43,0.01,44,1.203,45,0.661,46,1.427,47,0.818,48,2.02,53,3.081,55,1.547,56,0.902,60,2.946,69,1.089,75,0.006,80,0.006,85,1.161,86,0.818,99,0.328,102,2.114,104,0.208,106,2.592,107,1.872,108,1.872,109,1.76,128,0.287,129,0.147,132,0.156,133,1.719,138,1.406,140,1.078,141,1.486,159,1.311,160,0.926,161,1.872,194,1.096,211,0.555,244,2.057,245,2.366,249,3.142,286,2.694,296,1.828,307,1.403,325,1.18,336,1.219,349,5.341,443,3.889,477,2.161,575,1.66,578,2.783,579,2.643,617,3.49,622,3.644,653,2.882,655,3.142,657,3.388,675,2.968,745,2.592,872,2.234,913,4.538,922,3.659,986,3.405,1141,3.142,1144,3.388,1147,2.946,1150,2.172,1151,6.594,1161,6.404,1162,5.657,1163,5.808,1164,4.079,1165,5.182,1167,4.079,1260,2.412,1400,2.946,1413,5.852,1414,3.142,1415,3.388,1416,4.691,1417,6.372,1418,6.372,1419,5.904,1420,5.146,1421,5.146,1422,2.143,1423,3.716,1424,3.716,1425,2.783,1426,6.922,1427,5.146,1428,3.716,1429,3.716,1430,3.659,1431,3.716,1432,3.716,1433,3.716,1434,3.716,1435,3.716,1436,5.146,1437,3.716,1438,3.716,1439,3.716,1440,3.716,1441,3.716,1442,3.716,1443,3.716,1444,3.716,1445,3.716,1446,3.716,1447,3.716,1448,3.716,1449,3.388,1450,5.146,1451,3.716,1452,3.716,1453,3.716,1454,3.716,1455,3.716,1456,5.146,1457,3.716,1458,3.716,1459,3.388,1460,3.716,1461,3.716,1462,3.716,1463,5.904,1464,3.716,1465,3.716,1466,3.716,1467,4.691,1468,3.716,1469,3.716,1470,3.716,1471,3.716,1472,3.716,1473,3.716,1474,3.716,1475,3.716,1476,3.142,1477,3.716,1478,3.716]],["title/injectables/IconRegistryState.html",[0,1.358,1425,2.898]],["body/injectables/IconRegistryState.html",[0,1.688,2,2.29,3,0.079,4,0.096,5,0.07,6,0.126,11,0.912,15,2.239,16,2.149,18,0.374,20,2.251,25,1.419,29,3.077,35,0.707,38,1.84,40,1.059,41,1.085,42,1.77,43,0.01,44,1.201,45,0.67,46,1.304,47,1.059,48,2.296,52,1.185,53,3.355,55,1.744,56,0.983,60,3.813,69,0.937,75,0.006,80,0.006,85,1.264,86,0.743,99,0.321,102,1.976,104,0.189,106,2.423,107,1.701,108,1.701,109,1.599,128,0.261,129,0.137,132,0.142,133,1.685,138,1.372,140,0.707,141,1.204,159,1.272,160,0.866,161,1.701,211,0.504,244,2.442,245,2.808,249,4.067,286,2.748,296,2,307,1.554,325,1.072,336,1.447,349,4.911,443,3.864,477,2.032,575,1.508,578,2.528,579,2.401,617,3.262,622,3.619,653,2.736,655,2.854,657,3.078,675,1.947,745,3.077,872,2.088,913,4.788,922,4.343,986,3.724,1141,2.854,1144,4.385,1147,5.475,1150,1.425,1151,6.549,1161,5.969,1162,5.164,1163,4.385,1164,2.676,1165,5.025,1167,3.813,1260,3.122,1400,3.813,1413,6.35,1414,5.839,1415,3.078,1416,3.078,1417,4.811,1418,4.811,1419,6.712,1420,6.108,1421,5.605,1422,1.947,1423,4.811,1424,3.376,1425,3.602,1426,7.288,1427,6.108,1428,4.811,1429,4.811,1430,4.343,1431,3.376,1432,3.376,1433,3.376,1434,3.376,1435,3.376,1436,4.811,1437,3.376,1438,3.376,1439,3.376,1440,3.376,1441,3.376,1442,3.376,1443,3.376,1444,3.376,1445,3.376,1446,3.376,1447,3.376,1448,3.376,1449,4.385,1450,6.108,1451,4.811,1452,3.376,1453,4.811,1454,6.108,1455,4.811,1456,4.811,1457,3.376,1458,3.376,1459,3.078,1460,3.376,1461,3.376,1462,3.376,1463,5.605,1464,3.376,1465,3.376,1466,3.376,1467,5.568,1468,5.605,1469,3.376,1470,3.376,1471,3.376,1472,3.376,1473,3.376,1474,3.376,1475,4.811,1476,4.067,1477,5.605,1478,3.376,1479,5.457,1480,3.83,1481,3.83,1482,3.83,1483,3.83,1484,3.83,1485,3.83,1486,3.83,1487,3.83,1488,3.83]],["title/classes/InitializationState.html",[132,0.162,1489,3.528]],["body/classes/InitializationState.html",[3,0.054,4,0.066,5,0.048,6,0.111,11,0.346,15,2.468,18,0.257,19,0.442,20,2.297,25,1.07,38,1.598,40,0.51,41,0.523,42,0.994,43,0.01,45,0.604,47,0.51,48,1.241,55,1.415,56,1.236,65,1.167,71,1.07,75,0.004,80,0.004,85,1.142,86,1.21,90,1.34,99,0.246,104,0.13,112,0.773,121,2.327,122,2.327,123,1.997,124,2.136,125,1.997,129,0.066,132,0.187,133,1.689,138,1.289,140,1.276,141,1.452,159,1.154,160,0.911,181,0.926,195,0.667,197,0.667,199,0.834,204,1.097,205,2.092,208,0.7,209,0.7,210,0.667,211,0.541,213,0.717,215,0.717,221,4.389,224,3.18,229,1.336,243,2.46,246,2.259,247,2.259,256,1.869,257,1.887,258,1.688,259,1.753,262,2.397,276,1.647,277,1.005,280,2.354,282,2.58,286,2.454,296,2.094,299,2.231,305,1.836,309,4.036,310,2.58,311,1.647,320,0.7,321,1.836,336,1.628,359,1.571,380,1.336,382,1.336,397,1.647,415,1.336,416,2.437,419,2.58,423,1.718,425,2.876,426,1.044,427,4.52,431,2.004,432,2.876,437,1.289,441,2.111,442,2.111,452,0.881,455,0.881,461,2.716,468,1.997,469,4.011,477,1.044,493,1.455,532,0.683,615,3.726,653,1.131,679,1.131,680,0.773,681,2.974,692,0.773,701,1.571,736,1.647,779,3.307,780,2.316,782,2.252,785,2.326,786,1.958,791,2.111,794,2.111,797,2.019,798,1.836,801,2.252,803,2.316,805,1.734,807,1.958,809,1.887,816,2.019,818,1.734,834,3.628,837,1.841,851,4.721,852,4.721,859,1.734,860,2.111,861,2.316,862,1.958,865,3.628,992,3.007,1014,2.316,1035,2.111,1038,2.111,1044,4.807,1049,1.097,1052,1.958,1053,5.15,1054,2.111,1055,2.111,1063,2.111,1068,2.259,1069,1.734,1095,1.647,1107,3.545,1108,3.545,1150,1.531,1159,1.836,1330,2.579,1489,4.076,1490,2.111,1491,1.958,1492,4.115,1493,5.073,1494,6.911,1495,5.741,1496,5.061,1497,5.741,1498,4.115,1499,5.073,1500,2.627,1501,6.76,1502,5.073,1503,2.627,1504,2.627,1505,2.627,1506,2.627,1507,4.144,1508,3.307,1509,2.627,1510,5.073,1511,2.627,1512,2.627,1513,2.316,1514,4.472,1515,6.092,1516,4.472,1517,4.472,1518,5.828,1519,4.472,1520,5.495,1521,3.628,1522,4.472,1523,4.076,1524,5.495,1525,4.613,1526,3.628,1527,5.061,1528,4.115,1529,2.627,1530,2.627,1531,2.627,1532,2.627,1533,2.627,1534,2.627,1535,2.627,1536,2.627,1537,2.627,1538,4.115,1539,2.627,1540,4.115,1541,2.627,1542,2.627,1543,2.627,1544,2.316,1545,6.233,1546,2.627,1547,2.627,1548,2.627,1549,4.472,1550,2.316,1551,3.628,1552,4.115,1553,2.627,1554,5.741,1555,2.111,1556,4.115,1557,2.627,1558,2.627,1559,2.627,1560,5.073,1561,2.627,1562,2.627,1563,2.627,1564,3.18,1565,2.627,1566,5.073,1567,2.627,1568,1.734,1569,2.627,1570,3.628,1571,2.627,1572,2.627,1573,2.627,1574,6.611,1575,4.115,1576,5.741,1577,4.115,1578,4.115,1579,2.627,1580,5.073,1581,4.115,1582,2.111,1583,2.627,1584,2.627,1585,2.627,1586,4.115,1587,4.115,1588,2.627,1589,2.627,1590,5.073,1591,2.627,1592,2.627,1593,2.627,1594,2.627,1595,4.115,1596,2.627,1597,2.627,1598,1.958,1599,2.111,1600,2.627,1601,1.734,1602,2.627,1603,2.627,1604,5.061,1605,5.073,1606,5.741,1607,4.115,1608,4.115,1609,2.627,1610,2.627,1611,2.627,1612,2.627,1613,2.627,1614,2.627,1615,2.627,1616,6.611,1617,2.876,1618,4.115,1619,2.627,1620,2.627,1621,2.627,1622,2.627,1623,2.627,1624,2.627,1625,2.627,1626,1.836,1627,2.627,1628,2.627,1629,1.836,1630,2.627,1631,2.627,1632,4.115,1633,2.627,1634,2.627,1635,2.627,1636,2.627,1637,2.627,1638,2.627,1639,4.115,1640,5.073,1641,2.627,1642,2.627,1643,4.115,1644,2.627,1645,2.627,1646,2.627,1647,2.627,1648,2.627,1649,2.316,1650,3.18,1651,2.627,1652,2.627,1653,2.627]],["title/components/JsonFileReaderComponent.html",[195,0.443,500,1.259]],["body/components/JsonFileReaderComponent.html",[3,0.079,4,0.097,5,0.168,6,0.131,11,0.72,12,1.355,18,0.375,19,0.587,25,1.422,35,0.71,38,1.937,40,1.062,41,1.088,42,1.322,43,0.01,44,1.114,45,0.717,46,0.937,47,1.062,48,2.299,52,1.692,55,1.171,56,1.073,69,0.862,75,0.006,80,0.006,85,1.267,86,1.236,99,0.216,104,0.19,129,0.097,132,0.282,133,0.783,138,1.256,140,1.01,141,0.728,155,3.088,159,0.914,160,1.164,195,0.74,196,1.049,197,1.388,198,1.103,199,1.22,200,1.22,201,1.189,207,1.076,208,1.458,209,1.458,210,2.302,211,1.199,212,0.952,213,1.494,215,1.494,243,3.808,250,2.686,252,2.537,255,0.929,258,2.358,259,1.761,262,3.183,299,1.616,307,1.236,308,0.952,320,1.024,401,1.319,406,1.471,407,1.392,410,1.654,411,0.999,416,1.159,423,1.605,433,3.363,438,1.654,439,1.707,452,0.823,455,0.823,459,1.024,476,0.594,477,1.861,478,1.22,479,2.202,480,1.22,481,1.22,482,1.103,483,1.22,484,1.076,485,2.021,486,1.103,487,1.22,488,1.494,489,2.021,490,1.103,491,1.159,492,1.22,493,1.103,494,1.22,495,1.103,496,1.049,497,1.22,498,1.103,499,1.22,500,1.991,501,2.544,502,1.22,503,1.103,504,1.189,505,1.103,506,1.22,507,1.103,508,1.736,509,1.076,510,1.103,511,1.103,512,1.22,513,1.103,514,2.021,515,1.103,516,1.609,517,1.736,518,1.076,519,1.103,520,1.076,521,0.929,522,1.22,523,1.076,524,1.049,525,1.103,526,1.22,527,1.103,528,1.22,529,1.131,530,1.22,531,1.103,532,1.422,533,1.103,534,1.57,535,1.103,536,1.22,537,1.103,538,1.458,539,1.22,540,1.103,541,1.22,542,1.22,605,1.558,616,2.218,653,1.654,679,2.742,680,1.131,681,2.355,682,2.813,683,1.513,684,1.471,685,2.438,692,1.609,693,2.074,698,2.582,700,3.993,706,2.686,708,2.41,719,2.782,720,1.877,721,2.029,734,1.954,738,2.11,913,3.271,941,4.823,1054,5.577,1150,2.583,1259,4.397,1282,2.41,1329,3.529,1654,6.555,1655,6.08,1656,3.389,1657,7.068,1658,6.37,1659,5.471,1660,6.37,1661,5.471,1662,6.941,1663,6.37,1664,5.471,1665,5.894,1666,3.844,1667,3.611,1668,5.471,1669,4.823,1670,4.397,1671,5.471,1672,5.471,1673,3.844,1674,5.471,1675,3.844,1676,5.471,1677,4.85,1678,4.823,1679,4.078,1680,4.823,1681,5.471,1682,3.844,1683,5.471,1684,3.389,1685,3.844,1686,3.844,1687,3.844,1688,3.844,1689,3.844,1690,5.471,1691,3.844,1692,3.844,1693,3.844,1694,5.471,1695,3.844,1696,3.844,1697,3.844,1698,3.089]],["title/modules/JsonFileReaderModule.html",[543,0.627,1699,3.068]],["body/modules/JsonFileReaderModule.html",[3,0.134,4,0.163,5,0.156,6,0.105,43,0.01,75,0.008,80,0.008,99,0.335,104,0.322,129,0.163,132,0.241,426,1.651,476,1.006,500,2.622,501,1.867,543,0.929,545,1.821,546,1.867,547,2.546,548,1.963,549,1.867,550,2.546,561,2.388,562,1.821,564,2.065,568,2.329,759,2.721,760,2.175,1654,5.23,1655,4.851,1699,6.223,1700,5.738,1701,5.738,1702,5.738,1703,6.509,1704,6.509,1705,5.395,1706,4.548]],["title/components/LabeledSlideToggleComponent.html",[195,0.443,503,1.259]],["body/components/LabeledSlideToggleComponent.html",[3,0.079,4,0.096,5,0.1,6,0.133,11,0.837,12,1.352,15,1.606,18,0.374,19,0.586,25,1.419,32,2.881,35,0.708,38,1.97,40,1.059,41,1.086,42,1.319,43,0.01,44,1.113,45,0.732,46,0.935,47,1.059,52,1.186,55,1.168,56,0.844,69,1.03,75,0.006,80,0.006,85,1.457,86,1.64,99,0.215,104,0.189,129,0.096,132,0.281,133,0.781,138,0.657,140,0.708,141,0.726,155,1.509,159,0.912,160,1.162,195,0.79,196,1.046,197,1.385,198,1.099,199,1.216,200,1.216,201,1.186,207,1.073,208,1.455,209,1.455,210,2.301,211,1.199,212,0.949,213,1.491,215,1.491,255,0.926,258,2.24,259,1.385,286,1.873,299,1.613,307,1.234,308,0.949,320,1.021,336,1.591,355,2.588,401,1.315,411,0.996,412,1.817,413,2.023,423,1.6,431,0.972,438,2.35,439,1.702,452,1.769,455,1.361,459,1.021,476,0.592,477,1.859,478,1.216,479,2.199,480,1.216,481,1.216,482,1.099,483,1.216,484,1.073,485,2.018,486,1.099,487,1.216,488,1.491,489,2.018,490,1.099,491,1.156,492,1.216,493,1.099,494,1.216,495,1.099,496,1.046,497,1.216,498,1.099,499,1.216,500,1.099,501,1.099,502,1.216,503,1.988,504,2.655,505,2.612,506,1.216,507,1.099,508,1.733,509,1.073,510,1.099,511,1.099,512,1.216,513,1.099,514,2.018,515,1.099,516,1.606,517,1.733,518,1.073,519,1.099,520,1.073,521,0.926,522,1.216,523,1.073,524,1.046,525,1.099,526,1.216,527,1.099,528,1.216,529,1.127,530,1.216,531,1.099,532,2.28,533,1.099,534,1.566,535,1.099,536,1.216,537,1.099,538,1.455,539,1.216,540,1.099,541,1.216,542,1.216,605,1.553,616,2.213,679,2.737,680,1.127,681,2.35,682,2.809,683,1.509,684,1.467,685,2.434,692,1.606,693,2.071,698,2.578,699,2.28,719,2.776,720,1.873,721,2.023,738,2.103,837,1.455,992,1.426,1001,1.65,1068,2.997,1322,4.553,1329,3.524,1330,2.776,1335,4.813,1338,4.345,1707,6.644,1708,5.778,1709,3.08,1710,5.46,1711,4.18,1712,5.607,1713,4.813,1714,5.46,1715,5.321,1716,6.931,1717,6.36,1718,5.46,1719,3.379,1720,3.833,1721,4.813,1722,5.887,1723,3.379,1724,5.46,1725,6.714,1726,5.46,1727,5.46,1728,3.833,1729,5.46,1730,5.46,1731,3.833,1732,3.833,1733,5.46,1734,5.46,1735,3.833,1736,3.833,1737,3.833,1738,3.833,1739,3.833,1740,3.833,1741,3.08,1742,3.08,1743,3.833]],["title/modules/LabeledSlideToggleModule.html",[543,0.627,1744,2.898]],["body/modules/LabeledSlideToggleModule.html",[3,0.134,4,0.164,5,0.119,6,0.105,43,0.01,75,0.008,80,0.008,99,0.336,104,0.322,129,0.164,132,0.241,426,1.653,476,1.007,503,2.622,504,2.016,505,2.363,532,1.694,543,0.931,545,1.824,546,1.869,547,2.548,548,1.965,549,1.869,550,2.548,561,2.39,562,1.824,564,2.068,568,2.33,759,2.723,760,2.178,1707,5.237,1708,4.554,1744,5.88,1745,5.745,1746,5.745,1747,5.745,1748,5.745,1749,7.727,1750,6.517,1751,5.745]],["title/components/LeftSidebarComponent.html",[195,0.443,507,1.259]],["body/components/LeftSidebarComponent.html",[3,0.052,4,0.063,5,0.073,6,0.133,11,0.893,12,0.983,15,1.907,18,0.388,19,0.426,22,1.645,23,1.519,25,1.032,35,0.733,38,1.986,42,1.641,43,0.01,44,1.086,45,0.715,46,1.163,52,0.776,55,1.453,56,1.148,69,1.119,75,0.004,76,1.15,80,0.004,85,1.506,86,1.47,88,2.203,91,2.026,96,1.995,99,0.286,104,0.124,111,2.702,112,0.738,113,1.08,114,0.908,127,1.881,129,0.063,132,0.24,133,0.809,140,0.733,141,1.154,155,2.4,159,1.083,160,1.304,184,3.669,187,0.861,195,0.496,196,0.685,197,1.007,198,0.72,199,0.796,200,0.796,201,0.776,207,0.702,208,1.057,209,1.057,210,2.22,211,1.163,212,0.621,213,1.083,215,1.083,218,2.018,222,3.44,255,0.959,256,0.817,258,1.793,259,1.007,262,2.337,286,2.224,296,1.083,298,2.026,299,1.249,306,1.947,307,1.536,308,1.219,309,2.178,312,1.114,320,0.668,330,2.27,331,1.377,332,1.362,336,1.273,352,3.978,384,0.908,389,0.988,401,0.861,402,1.814,403,2.624,404,1.435,405,1.435,406,2.598,407,1.782,408,1.435,410,2.79,411,1.28,412,1.881,415,2.503,416,1.955,418,1.762,420,2.89,429,2.055,430,1.377,431,1.42,434,1.656,435,1.5,436,2.409,437,1.231,444,3.071,446,2.186,447,2.203,450,2.334,451,2.018,452,1.771,453,1.15,455,1.198,459,1.311,461,1.656,463,2.745,466,1.324,469,2.773,470,1.881,471,1.881,474,1.573,475,1.753,476,0.388,477,1.547,478,0.796,479,1.776,480,0.796,481,0.796,482,0.72,483,0.796,484,0.702,485,1.562,486,0.72,487,0.796,488,1.083,489,1.562,490,0.72,491,0.757,492,0.796,493,0.72,494,0.796,495,0.72,496,1.854,497,0.796,498,0.72,499,0.796,500,0.72,501,1.749,502,0.796,503,0.72,504,0.776,505,0.72,506,0.796,507,1.605,508,1.259,509,0.702,510,0.72,511,0.72,512,0.796,513,0.72,514,1.562,515,0.72,516,1.167,517,1.259,518,0.702,519,0.72,520,0.702,521,0.606,522,0.796,523,0.702,524,0.685,525,0.72,526,0.796,527,0.72,528,0.796,529,0.738,530,0.796,531,0.72,532,1.685,533,0.72,534,1.138,535,0.72,536,0.796,537,0.72,538,1.727,539,0.796,540,0.72,541,0.796,542,0.796,592,6.169,616,1.608,631,3.91,646,2.018,647,1.324,680,0.738,692,1.167,693,1.603,699,2.337,720,1.362,730,1.753,733,1.435,734,2.845,735,2.773,743,2.773,745,2.707,748,1.573,752,1.656,753,1.656,809,2.973,837,1.057,867,2.178,872,2.841,884,2.958,899,3.071,913,2.372,958,2.619,963,1.87,989,1.573,990,5.657,992,2.62,1001,2.79,1049,3.099,1159,2.773,1245,1.753,1259,3.189,1272,2.178,1282,1.573,1294,3.44,1312,3.918,1314,2.702,1322,3.346,1330,2.018,1372,3.916,1373,3.421,1374,3.825,1383,2.016,1389,4.171,1390,1.87,1391,2.016,1392,1.87,1670,3.189,1678,3.498,1679,1.87,1711,3.346,1752,6.651,1753,2.016,1754,4.34,1755,3.498,1756,4.923,1757,6.096,1758,4.34,1759,4.923,1760,4.34,1761,4.923,1762,3.968,1763,3.189,1764,3.968,1765,3.968,1766,3.968,1767,3.968,1768,4.923,1769,4.34,1770,3.968,1771,2.509,1772,2.509,1773,3.968,1774,3.968,1775,2.509,1776,3.968,1777,3.421,1778,6.483,1779,5.596,1780,5.596,1781,3.968,1782,3.498,1783,3.968,1784,3.189,1785,2.509,1786,3.968,1787,6.483,1788,4.544,1789,2.509,1790,3.968,1791,2.509,1792,3.498,1793,3.346,1794,2.773,1795,4.497,1796,3.727,1797,4.26,1798,3.694,1799,3.968,1800,2.509,1801,6.096,1802,3.968,1803,3.968,1804,3.968,1805,2.509,1806,3.968,1807,3.968,1808,2.958,1809,3.968,1810,3.968,1811,3.968,1812,3.968,1813,3.968,1814,3.968,1815,3.968,1816,3.968,1817,2.509,1818,2.509,1819,3.498,1820,4.497,1821,4.497,1822,3.498,1823,2.943,1824,3.968,1825,3.968,1826,2.509,1827,2.509,1828,3.968,1829,3.498,1830,3.498,1831,2.509,1832,3.968,1833,3.968,1834,2.509,1835,2.212,1836,2.509,1837,2.509,1838,2.509,1839,3.968,1840,2.509,1841,2.509,1842,2.509,1843,3.968,1844,2.509,1845,2.509,1846,3.189,1847,2.943,1848,2.773,1849,3.498,1850,3.498,1851,3.189,1852,2.016,1853,2.212,1854,1.87,1855,6.206,1856,2.773,1857,2.619,1858,2.016,1859,2.509,1860,3.968,1861,2.212,1862,2.016,1863,2.509,1864,2.509]],["title/modules/LeftSidebarModule.html",[543,0.627,558,3.068]],["body/modules/LeftSidebarModule.html",[3,0.116,4,0.142,5,0.103,6,0.091,43,0.01,75,0.007,80,0.007,99,0.356,104,0.279,129,0.142,132,0.208,141,1.339,211,0.742,325,1.578,426,1.43,452,1.207,476,0.872,505,2.029,507,2.575,543,0.805,545,1.578,546,1.617,547,2.391,548,1.701,549,1.617,550,2.391,558,6.421,561,2.188,562,1.578,564,2.245,568,2.133,574,2.953,575,2.22,592,4.202,759,2.493,760,1.884,765,3.733,766,2.976,1256,4.202,1283,5.953,1316,4.202,1358,5.953,1708,3.94,1744,5.623,1752,4.531,1865,4.971,1866,4.971,1867,4.971,1868,4.971,1869,5.623,1870,5.953,1871,6.163,1872,4.971,1873,5.684,1874,4.531,1875,6.236,1876,4.971,1877,6.236,1878,5.639,1879,5.639,1880,5.639,1881,5.639,1882,4.971,1883,6.236,1884,5.639,1885,3.722,1886,4.531,1887,7.074,1888,4.202,1889,5.639,1890,4.202,1891,4.971]],["title/interfaces/Message.html",[128,0.299,801,1.95]],["body/interfaces/Message.html",[0,1.835,3,0.089,4,0.222,5,0.079,6,0.069,11,0.568,18,0.422,19,0.637,20,2.107,35,0.797,40,1.316,41,0.859,43,0.01,45,0.7,46,1.016,47,1.601,48,1.302,55,1.638,56,0.917,71,1.99,75,0.006,80,0.006,85,0.859,96,3.521,99,0.267,104,0.213,112,1.27,114,1.563,128,0.404,129,0.199,132,0.219,133,1.56,138,1.016,140,1.414,154,3.404,159,1.398,160,1.076,194,1.122,198,1.945,204,1.802,205,3.017,212,1.469,229,2.195,277,1.652,296,1.179,336,0.902,355,2.046,361,1.702,431,1.095,653,3.294,774,3.394,782,2.635,785,3.885,796,2.278,797,4.198,801,4.061,816,2.911,818,2.849,837,1.15,843,2.849,859,3.917,1027,2.849,1069,3.917,1087,4.524,1094,4.895,1106,2.369,1131,4.146,1292,2.706,1302,2.706,1303,3.72,1370,3.547,1377,3.51,1430,2.706,1507,4.25,1564,4.25,1617,3.016,1626,3.016,1629,3.016,1650,2.706,1892,2.849,1893,4.577,1894,3.582,1895,4.447,1896,3.917,1897,4.422,1898,2.581,1899,5.102,1900,2.118,1901,3.217,1902,3.217,1903,4.25,1904,3.217,1905,5.349,1906,4.146,1907,2.849,1908,2.849,1909,4.146,1910,3.016,1911,3.217,1912,4.422,1913,3.217,1914,2.706,1915,3.217,1916,3.217,1917,3.217,1918,4.422,1919,3.016,1920,3.217,1921,3.217,1922,3.217,1923,4.422,1924,3.217,1925,4.422,1926,3.016,1927,4.738,1928,3.217,1929,3.217,1930,3.217,1931,3.217,1932,2.706,1933,3.217,1934,3.217,1935,5.053,1936,3.217,1937,3.217,1938,3.217,1939,3.217,1940,3.016,1941,3.217,1942,3.217,1943,3.217,1944,3.217]],["title/classes/MessageChannel.html",[132,0.162,816,2.154]],["body/classes/MessageChannel.html",[0,1.692,3,0.079,4,0.221,5,0.07,6,0.129,11,0.965,18,0.375,19,0.587,20,2.204,25,1.422,35,1.01,38,1.895,40,1.423,41,0.764,42,1.677,43,0.01,44,0.965,45,0.717,46,1.306,47,1.556,48,1.65,55,1.771,56,0.985,71,1.982,75,0.006,80,0.006,85,1.088,86,0.746,96,3.632,99,0.251,104,0.19,112,1.131,114,1.392,128,0.373,129,0.191,132,0.202,133,1.495,138,0.937,140,1.408,154,2.987,159,1.362,160,1.011,198,1.827,204,1.605,205,2.782,212,1.355,229,1.954,277,1.471,296,1.049,336,0.803,355,1.822,361,1.103,431,1.388,653,3.157,774,3.13,782,2.429,785,3.909,796,2.887,797,4.321,801,4.052,816,3.125,818,2.537,837,1.024,843,2.537,859,3.611,1027,3.611,1069,3.611,1087,4.586,1094,4.789,1106,3.003,1131,3.823,1292,3.43,1302,2.41,1303,3.43,1370,3.271,1377,3.363,1430,2.41,1490,3.089,1507,4.778,1564,4.778,1617,2.686,1626,3.823,1629,3.823,1650,3.993,1892,2.537,1893,4.598,1894,3.598,1895,4.305,1896,2.537,1897,2.865,1898,2.298,1899,5.481,1900,1.886,1901,2.865,1902,2.865,1903,3.993,1904,2.865,1905,5.125,1906,3.823,1907,2.537,1908,2.537,1909,3.823,1910,2.686,1911,4.078,1912,5.466,1913,4.078,1914,3.43,1915,4.078,1916,2.865,1917,2.865,1918,4.078,1919,3.823,1920,4.078,1921,5.173,1922,2.865,1923,5.173,1924,4.078,1925,4.078,1926,3.823,1927,5.327,1928,4.078,1929,2.865,1930,5.173,1931,2.865,1932,2.41,1933,2.865,1934,2.865,1935,4.748,1936,2.865,1937,2.865,1938,2.865,1939,2.865,1940,2.686,1941,2.865,1942,2.865,1943,2.865,1944,2.865,1945,5.471,1946,5.471,1947,5.471,1948,3.844,1949,5.471,1950,3.844,1951,3.844,1952,3.844,1953,3.844,1954,3.844]],["title/injectables/MessageService.html",[0,1.358,782,1.95]],["body/injectables/MessageService.html",[0,1.764,2,2.438,3,0.084,4,0.219,5,0.075,6,0.125,11,0.866,18,0.398,19,0.612,20,2.232,25,1.483,35,1.053,38,1.812,40,1.383,41,1.134,42,1.378,43,0.01,44,0.793,45,0.686,46,1.221,47,1.658,48,1.23,55,1.707,56,1.017,71,1.71,75,0.006,80,0.006,85,1.134,86,0.791,96,3.513,99,0.259,104,0.202,112,1.199,114,1.476,128,0.388,129,0.195,132,0.211,133,1.528,138,0.977,140,1.473,154,2.831,159,1.381,160,1.044,198,1.887,204,1.702,205,2.9,212,1.412,229,3.622,277,2.183,296,1.113,336,0.852,355,1.933,361,1.17,431,1.034,653,3.227,774,3.763,782,3.33,785,3.974,796,2.152,797,4.252,801,4.055,816,3.227,818,3.765,837,1.086,843,3.765,859,3.765,1027,2.691,1069,3.765,1087,4.445,1094,4.656,1106,2.238,1131,3.986,1292,2.556,1302,2.556,1303,3.576,1370,3.41,1377,3.563,1430,4.124,1507,4.124,1564,4.124,1617,3.986,1626,2.849,1629,2.849,1650,2.556,1892,2.691,1893,4.124,1894,3.227,1895,4.115,1896,2.691,1897,3.039,1898,2.438,1899,5.24,1900,2,1901,3.039,1902,3.039,1903,4.7,1904,3.039,1905,5.687,1906,3.986,1907,2.691,1908,2.691,1909,3.986,1910,2.849,1911,3.039,1912,4.251,1913,3.039,1914,2.556,1915,3.039,1916,3.039,1917,3.039,1918,4.251,1919,2.849,1920,3.039,1921,3.039,1922,3.039,1923,4.251,1924,3.039,1925,4.251,1926,2.849,1927,4.597,1928,3.039,1929,3.039,1930,3.039,1931,3.039,1932,3.576,1933,3.039,1934,3.039,1935,4.903,1936,3.039,1937,3.039,1938,3.039,1939,3.039,1940,3.986,1941,3.039,1942,4.251,1943,4.251,1944,3.039,1955,5.029,1956,4.078,1957,5.704,1958,4.078,1959,4.078,1960,4.078]],["title/interfaces/MessageServiceConfig.html",[128,0.299,1903,2.752]],["body/interfaces/MessageServiceConfig.html",[0,1.849,3,0.09,4,0.219,5,0.08,6,0.07,11,0.574,18,0.426,19,0.642,20,2.114,35,0.806,40,1.323,41,0.868,43,0.01,45,0.671,46,1.024,47,1.629,48,1.316,55,1.644,56,0.924,71,1.773,75,0.006,80,0.006,85,0.868,96,3.527,99,0.269,104,0.216,112,1.283,114,1.58,128,0.407,129,0.199,132,0.221,133,1.566,138,1.024,140,1.419,154,2.935,159,1.402,160,1.082,194,1.134,198,1.956,204,1.822,205,3.039,212,1.48,229,2.218,277,1.67,296,1.191,336,1.424,355,2.834,361,1.252,431,1.107,653,3.307,774,3.42,782,2.654,785,3.849,796,2.303,797,4.24,801,4.044,816,2.933,818,2.88,837,1.593,843,2.88,859,3.946,1027,2.88,1069,3.946,1087,4.395,1094,4.733,1106,2.395,1131,4.177,1292,2.735,1302,2.735,1303,3.747,1370,3.574,1377,3.639,1430,2.735,1507,4.274,1564,4.274,1617,3.049,1626,3.049,1629,3.049,1650,2.735,1892,2.88,1893,4.274,1894,3.345,1895,4.217,1896,2.88,1897,3.252,1898,2.609,1899,5.125,1900,2.141,1901,3.252,1902,3.252,1903,4.598,1904,4.455,1905,5.545,1906,5.369,1907,2.88,1908,2.88,1909,4.177,1910,3.049,1911,3.252,1912,4.455,1913,3.252,1914,2.735,1915,3.252,1916,3.252,1917,3.252,1918,4.455,1919,3.049,1920,3.252,1921,3.252,1922,3.252,1923,4.455,1924,3.252,1925,4.455,1926,3.049,1927,4.765,1928,3.252,1929,3.252,1930,3.252,1931,3.252,1932,2.735,1933,3.252,1934,3.252,1935,5.082,1936,3.252,1937,3.252,1938,3.252,1939,3.252,1940,3.049,1941,3.252,1942,3.252,1943,3.252,1944,3.252]],["title/interfaces/MetaDataField.html",[128,0.299,1961,3.272]],["body/interfaces/MetaDataField.html",[3,0.141,4,0.173,5,0.126,6,0.11,18,0.671,19,0.855,43,0.009,45,0.77,69,1.207,75,0.008,80,0.008,86,1.681,128,0.468,129,0.2,155,3.41,194,1.785,207,1.922,1961,6.274,1962,5.518,1963,5.518]],["title/interfaces/ModelStateModel.html",[128,0.299,1964,2.898]],["body/interfaces/ModelStateModel.html",[0,1.11,3,0.045,4,0.056,5,0.04,6,0.036,8,1.014,11,0.291,15,2.044,16,0.871,18,0.216,19,0.385,20,1.791,22,2.531,23,0.846,29,0.982,35,0.408,37,2.807,40,0.429,41,0.44,43,0.01,44,1.035,45,0.773,46,1.05,47,0.696,48,0.667,49,1.322,50,1.214,53,4.055,56,1.229,65,0.982,69,1.064,71,1.176,75,0.004,80,0.004,88,0.871,90,2.189,91,1.299,96,3.278,99,0.307,102,1.299,104,0.109,105,2.388,106,1.593,107,0.982,108,0.982,109,0.923,112,0.651,113,1.544,114,0.801,119,1.386,121,1.454,122,1.454,123,0.871,124,0.823,125,1.412,127,1.7,128,0.308,129,0.162,131,0.952,132,0.082,133,1.37,138,1.385,140,1.319,141,0.679,148,3.421,154,3.259,155,2.541,159,1.314,160,1.283,161,0.982,162,1.048,172,1.46,173,1.46,176,1.545,181,0.779,183,1.545,194,0.575,211,0.472,244,1.264,245,1.454,255,1.56,256,2.502,268,2.368,280,1.265,286,1.786,296,1.762,298,3.036,300,3.73,302,1.214,303,1.124,307,0.878,325,0.619,336,1.195,352,1.969,361,1.642,384,2.516,389,2.736,392,2.991,402,0.619,407,1.638,411,1.488,431,1.763,437,2.22,447,1.412,452,1.311,455,1.311,459,0.956,496,1.897,521,1.83,524,0.979,538,0.589,622,1.593,670,3.69,677,2.145,682,1.454,683,0.871,684,0.846,685,0.846,688,2.705,694,1.948,698,0.896,699,3.161,702,1.085,778,1.214,785,2.075,809,2.96,837,1.206,872,2.345,920,4.578,921,1.824,958,2.987,968,5.369,969,4.438,971,1.46,972,1.46,973,1.46,975,2.368,980,1.322,1001,2.638,1049,3.425,1150,0.823,1260,2.589,1272,1.214,1307,3.363,1310,3.999,1312,3.855,1314,1.214,1368,2.249,1371,3.162,1372,3.956,1373,3.548,1374,3.406,1377,2.81,1422,1.124,1793,3.112,1794,3.162,1796,3.814,1797,4.51,1798,2.987,1808,1.648,1823,1.322,1847,3.859,1848,1.545,1894,2.22,1895,2.484,1900,1.085,1932,1.386,1964,2.368,1965,1.46,1966,2.883,1967,4.154,1968,4.586,1969,4.855,1970,4.855,1971,4.855,1972,4.332,1973,5.071,1974,4.589,1975,2.368,1976,4.184,1977,4.282,1978,1.824,1979,2.249,1980,2.674,1981,1.386,1982,1.386,1983,1.777,1984,1.648,1985,1.777,1986,1.46,1987,1.777,1988,1.386,1989,2.145,1990,1.777,1991,1.777,1992,1.545,1993,1.7,1994,1.085,1995,1.322,1996,1.265,1997,1.265,1998,1.648,1999,2.837,2000,1.777,2001,2.249,2002,1.648,2003,1.777,2004,1.777,2005,1.777,2006,2.837,2007,2.249,2008,4.933,2009,1.777,2010,1.777,2011,1.777,2012,1.777,2013,1.777,2014,1.777,2015,1.777,2016,1.777,2017,1.777,2018,1.777,2019,1.777,2020,1.777,2021,1.777,2022,1.777,2023,1.777,2024,1.777,2025,1.777,2026,1.777,2027,1.777,2028,1.777,2029,1.777,2030,1.777,2031,1.777,2032,1.777,2033,1.777,2034,1.777,2035,1.648,2036,1.777,2037,1.777,2038,1.46,2039,1.545,2040,1.46,2041,1.777,2042,1.777,2043,1.777,2044,5.187,2045,2.883,2046,1.777,2047,4.184,2048,1.777,2049,2.883,2050,3.636,2051,1.777,2052,5.174,2053,1.777,2054,1.777,2055,1.777,2056,1.777,2057,1.777,2058,1.777,2059,1.777,2060,1.777,2061,1.777,2062,1.777,2063,1.777,2064,1.777,2065,1.777,2066,1.777,2067,1.777,2068,1.777,2069,1.777,2070,1.648,2071,3.636,2072,4.184,2073,1.777,2074,1.777,2075,1.777,2076,1.777,2077,1.777,2078,1.777,2079,1.777,2080,1.777,2081,1.777,2082,2.883,2083,1.777,2084,1.777,2085,1.777,2086,1.777,2087,1.777,2088,1.777,2089,1.777,2090,1.777,2091,1.777,2092,1.777,2093,1.777,2094,1.777,2095,1.777,2096,1.777,2097,1.777,2098,2.883,2099,1.322,2100,1.545,2101,1.777,2102,1.46,2103,1.545,2104,2.883,2105,3.162,2106,2.883,2107,2.145,2108,2.883,2109,1.777,2110,1.777,2111,1.777,2112,1.777,2113,1.777,2114,1.777,2115,1.777,2116,1.265,2117,1.545,2118,1.777,2119,1.777,2120,1.777,2121,1.777,2122,1.777,2123,1.777,2124,1.777,2125,1.777,2126,1.777,2127,1.777,2128,2.145,2129,1.777,2130,1.777,2131,1.777,2132,1.322,2133,1.777,2134,4.184,2135,1.777,2136,1.322,2137,1.777,2138,1.777,2139,1.777,2140,1.777,2141,1.777,2142,1.777,2143,2.883,2144,2.674,2145,1.777,2146,1.777,2147,1.777,2148,1.777]],["title/components/NameInputComponent.html",[195,0.443,509,1.229]],["body/components/NameInputComponent.html",[3,0.072,4,0.088,5,0.093,6,0.135,11,0.794,12,1.264,18,0.341,19,0.548,20,1.608,25,1.327,32,2.694,35,0.645,38,2.006,40,0.991,41,1.015,42,1.458,43,0.01,44,1.273,45,0.714,46,1.034,47,0.991,48,2.225,52,1.08,55,1.291,56,0.933,69,1.031,75,0.005,76,2.341,80,0.005,85,1.467,86,1.571,99,0.238,104,0.173,128,0.238,129,0.128,132,0.273,133,0.712,138,0.598,140,1.516,141,0.967,159,1.008,160,1.121,195,0.768,196,0.953,197,1.295,198,1.002,199,1.108,200,1.108,201,1.08,207,0.977,208,1.36,209,1.36,210,2.285,211,1.192,212,0.865,213,1.394,215,1.394,255,0.844,258,2.58,259,1.684,299,1.531,307,1.171,308,0.865,320,0.93,332,2.278,333,3.727,334,3.727,361,1.002,401,1.198,402,0.977,403,1.503,407,1.264,410,1.503,411,1.327,412,1.655,416,1.053,429,2.132,431,0.886,446,1.551,452,1.093,455,1.093,459,0.93,470,1.655,471,1.655,472,1.998,476,0.54,477,1.792,478,1.108,479,2.107,480,1.108,481,1.108,482,1.002,483,1.108,484,0.977,485,1.915,486,1.002,487,1.108,488,1.394,489,1.915,490,1.002,491,1.053,492,1.108,493,1.002,494,1.108,495,1.002,496,0.953,497,1.108,498,1.002,499,1.108,500,1.002,501,1.002,502,1.108,503,1.002,504,1.08,505,1.002,506,1.108,507,1.002,508,1.62,509,1.858,510,1.002,511,1.002,512,1.108,513,1.002,514,1.915,515,1.002,516,1.502,517,1.62,518,0.977,519,1.002,520,0.977,521,0.844,522,1.108,523,0.977,524,0.953,525,1.002,526,1.108,527,1.002,528,1.108,529,1.027,530,1.108,531,1.002,532,1.327,533,1.002,534,1.465,535,1.002,536,1.108,537,1.002,538,1.36,539,1.108,540,1.002,541,1.108,542,1.108,573,3.832,605,1.415,616,2.069,673,2.088,679,2.597,680,1.027,681,2.197,682,2.691,683,1.375,684,1.336,685,2.309,690,3.37,691,3.983,692,1.502,693,1.965,698,2.446,699,2.132,700,4.427,701,3.052,702,3.619,706,2.44,707,2.305,708,2.189,710,2.603,719,2.596,720,1.752,721,1.843,722,3.079,723,4.501,741,2.806,742,2.603,743,2.44,1150,2.47,1329,3.375,1330,3.068,1777,3.727,1885,5.532,2149,6.247,2150,4.501,2151,4.501,2152,5.32,2153,5.32,2154,5.32,2155,5.32,2156,5.106,2157,5.32,2158,5.106,2159,6.345,2160,5.106,2161,4.501,2162,3.492,2163,3.805,2164,3.983,2165,3.079,2166,6.717,2167,6.504,2168,6.504,2169,3.492,2170,3.876,2171,3.492,2172,6.227,2173,3.492,2174,3.492,2175,3.492,2176,3.079,2177,2.305,2178,4.849,2179,4.501,2180,3.079,2181,3.079,2182,3.079,2183,3.079,2184,4.501,2185,3.079,2186,3.079,2187,3.079]],["title/modules/NameInputModule.html",[543,0.627,1869,2.898]],["body/modules/NameInputModule.html",[3,0.132,4,0.161,5,0.117,6,0.103,43,0.01,44,0.892,75,0.008,80,0.008,99,0.346,104,0.317,129,0.161,132,0.237,426,1.629,476,0.993,509,2.554,543,0.917,545,1.797,546,1.842,547,2.532,548,1.936,549,1.842,550,2.532,561,2.369,562,1.797,564,2.037,568,2.31,758,5.159,759,2.699,760,2.146,761,5.352,762,4.487,765,4.042,766,3.388,768,5.159,1869,5.863,1885,4.238,2149,4.785,2177,4.238,2188,5.66,2189,5.66,2190,5.66,2191,6.154,2192,6.154]],["title/interfaces/OrganConfig.html",[128,0.299,1368,2.752]],["body/interfaces/OrganConfig.html",[3,0.118,4,0.144,5,0.105,6,0.092,14,3.925,18,0.56,19,0.767,43,0.01,44,1.134,45,0.746,46,1.466,56,1.105,69,1.217,75,0.007,80,0.007,82,4.997,99,0.307,104,0.284,112,1.687,128,0.487,129,0.205,133,1.169,138,0.983,140,1.06,194,1.491,211,0.755,218,2.917,219,3.597,220,3.597,223,3.43,225,3.149,244,2.745,298,2.077,325,1.606,332,2.454,333,3.774,334,3.774,336,1.703,361,1.646,452,1.667,455,1.667,468,2.259,617,3.43,618,3.597,619,4.61,620,4.61,621,3.597,622,2.548,623,4.61,624,4.276,771,4.483,772,4.009,1049,3.405,1150,2.135,1184,5.806,1186,4.658,1190,5.806,1191,5.806,1231,5.806,1366,4.009,1367,3.787,1368,4.884,1370,4.275,1371,5.699,1372,4.146,1373,4.111,1374,4.111,1375,5.058,1376,4.276,1377,2.631,1378,4.61,1379,5.058]],["title/interfaces/OrganData.html",[128,0.299,2136,2.625]],["body/interfaces/OrganData.html",[0,1.683,3,0.078,4,0.096,5,0.07,6,0.061,15,2.151,16,1.501,18,0.372,19,0.584,20,1.842,22,1.274,29,1.693,35,0.704,43,0.01,44,0.756,45,0.58,46,1.185,47,0.74,55,1.164,56,0.589,65,1.693,69,1.167,71,1.798,75,0.006,80,0.006,85,0.758,90,2.065,96,2.205,99,0.338,102,2.296,104,0.188,106,2.416,107,1.693,108,1.693,109,1.592,112,1.121,113,1.641,114,1.381,118,2.181,121,2.205,122,2.205,123,1.501,124,1.419,125,2.142,127,2.579,128,0.37,129,0.174,131,1.641,132,0.141,133,1.683,138,1.507,148,5.047,159,1.155,160,0.605,161,1.693,162,1.807,187,2.176,194,0.991,211,0.834,244,1.917,245,2.205,256,1.242,261,2.093,277,2.082,298,3.159,300,3.604,325,1.067,361,1.561,380,1.939,382,3.224,384,2.296,386,3.628,389,2.497,391,2.181,392,2.73,402,1.067,407,1.381,452,1.627,455,1.627,468,1.501,617,2.28,646,1.939,647,2.012,650,1.939,651,1.939,702,1.871,771,3.41,778,2.093,872,3.116,916,1.871,921,1.939,922,3.41,928,2.517,956,2.39,979,2.842,981,2.842,1049,3.448,1186,2.28,1307,2.986,1372,4.199,1373,4.012,1374,4.012,1422,1.939,1788,2.842,1895,2.986,1967,3.252,1968,3.591,1974,3.112,1978,2.766,1979,2.39,1988,2.39,1993,1.807,1994,1.871,1996,2.181,1997,2.181,2099,4.134,2102,3.591,2107,2.28,2116,3.628,2136,3.791,2193,2.664,2194,2.664,2195,3.801,2196,2.842,2197,4.186,2198,2.664,2199,2.517,2200,5.557,2201,4.186,2202,2.517,2203,4.371,2204,2.842,2205,3.252,2206,2.517,2207,5.876,2208,3.064,2209,3.064,2210,2.842,2211,3.064,2212,3.064,2213,2.664,2214,3.064,2215,3.064,2216,2.664,2217,2.664,2218,3.064,2219,3.064,2220,3.064,2221,3.064,2222,2.664,2223,4.371,2224,4.371,2225,4.371,2226,4.371,2227,4.371,2228,4.371,2229,2.842,2230,3.064,2231,3.064,2232,3.064,2233,3.064,2234,3.064,2235,3.064,2236,3.064,2237,3.064,2238,3.064,2239,3.064,2240,3.064,2241,4.054,2242,3.064,2243,3.064,2244,3.064,2245,3.064,2246,5.096,2247,5.096,2248,3.064,2249,3.064,2250,3.064,2251,2.664,2252,2.842,2253,2.842,2254,2.842,2255,3.064,2256,2.664,2257,4.371,2258,4.054,2259,3.064,2260,3.064,2261,3.064,2262,3.064,2263,4.371,2264,3.064,2265,3.064,2266,3.064,2267,3.064,2268,3.064,2269,2.842,2270,3.064,2271,3.064,2272,3.064,2273,3.064,2274,3.064,2275,3.064,2276,3.064,2277,3.064,2278,2.181,2279,3.064,2280,3.064,2281,3.064,2282,3.064,2283,3.064,2284,3.064,2285,3.064,2286,3.064,2287,3.064,2288,3.064,2289,3.064,2290,3.064,2291,4.371,2292,3.064,2293,3.064]],["title/injectables/PageState.html",[0,1.358,91,1.59]],["body/injectables/PageState.html",[0,1.582,2,2.092,3,0.072,4,0.088,5,0.064,6,0.14,11,0.795,14,3.647,15,2.242,16,2.013,18,0.342,19,0.549,20,1.77,22,1.169,23,2.825,25,1.329,29,2.951,32,2.698,35,0.944,38,2.094,40,0.992,41,1.017,42,1.606,43,0.01,44,1.141,45,0.608,46,1.138,47,0.992,52,2.284,53,4.425,55,1.706,56,1.339,65,2.27,69,1.031,75,0.005,80,0.005,85,1.406,86,1.433,91,1.851,96,3.168,99,0.323,102,1.851,104,0.173,105,3.507,106,2.27,107,1.554,108,1.554,109,1.461,112,1.029,113,1.506,114,1.267,121,2.072,122,2.072,123,1.378,124,1.302,125,1.378,128,0.348,129,0.152,131,1.506,132,0.129,133,1.354,138,1.138,159,0.854,160,1.36,161,1.554,162,1.659,181,1.233,211,0.673,223,5.092,244,2.491,245,2.693,262,1.461,286,2.425,296,2.016,300,2.424,306,2.964,307,1.172,308,1.496,309,3.316,325,0.979,332,2.877,333,3.188,334,3.188,336,1.665,391,2.002,618,4.431,621,4.431,629,3.573,650,1.779,651,1.779,809,3.047,837,0.932,872,2.312,916,1.717,986,2.599,1367,2.31,1377,2.344,1422,1.779,1777,2.698,1900,1.717,1914,2.194,1978,3.072,1981,2.194,1982,2.194,1986,3.988,1989,2.092,1996,2.002,1997,2.002,2008,4.9,2052,3.787,2128,2.092,2164,3.375,2170,2.806,2294,2.608,2295,4.109,2296,4.873,2297,6.406,2298,5.34,2299,5.34,2300,5.34,2301,5.113,2302,5.113,2303,5.113,2304,6.673,2305,4.855,2306,6.51,2307,3.499,2308,3.499,2309,3.499,2310,3.499,2311,3.499,2312,3.499,2313,3.499,2314,3.499,2315,4.109,2316,3.499,2317,5.68,2318,4.109,2319,3.499,2320,4.109,2321,3.988,2322,3.499,2323,5.268,2324,4.109,2325,3.499,2326,4.109,2327,3.499,2328,4.109,2329,3.499,2330,4.109,2331,4.109,2332,3.499,2333,4.109,2334,3.499,2335,3.499,2336,3.499,2337,3.499,2338,3.499,2339,3.499,2340,3.499,2341,2.812,2342,4.503,2343,2.608,2344,2.812,2345,2.445,2346,2.812,2347,3.612,2348,2.31,2349,2.812,2350,2.812,2351,2.812,2352,2.812,2353,2.812,2354,2.608,2355,2.608,2356,2.812,2357,2.812,2358,2.812,2359,2.812,2360,2.812,2361,4.109,2362,2.812,2363,4.503,2364,2.812,2365,2.812,2366,3.811,2367,4.109,2368,4.503,2369,2.812,2370,2.812,2371,4.109,2372,2.812,2373,2.812,2374,2.812,2375,2.812,2376,4.109,2377,2.812,2378,2.812,2379,2.812,2380,4.855,2381,2.812,2382,2.445,2383,4.109,2384,2.812,2385,2.812,2386,2.812]],["title/interfaces/PageStateModel.html",[128,0.299,2348,2.898]],["body/interfaces/PageStateModel.html",[0,1.75,3,0.083,4,0.101,5,0.074,6,0.065,11,0.53,14,3.105,15,2.277,16,1.587,18,0.394,19,0.607,20,1.507,22,1.891,23,2.857,29,1.79,35,0.744,40,0.782,41,0.802,43,0.01,44,0.985,45,0.727,46,0.969,47,0.782,53,4.196,56,1.275,65,1.79,69,1.01,75,0.006,80,0.006,86,0.782,91,1.459,96,3.138,99,0.333,102,2.048,104,0.199,105,3.741,106,2.512,107,1.79,108,1.79,109,1.683,112,1.185,113,1.735,114,1.459,121,2.293,122,2.293,123,1.587,124,1.5,125,1.587,128,0.385,129,0.164,131,1.735,132,0.149,133,1.445,138,1.214,159,0.945,160,1.228,161,1.79,162,1.91,181,1.42,194,1.048,211,0.744,223,5.097,244,2.498,245,2.293,262,1.683,286,2.562,296,2.038,300,3.36,306,3.207,307,1.269,308,1.619,309,3.588,325,1.128,332,2.948,333,3.45,334,3.45,336,1.836,391,2.306,618,3.547,621,4.853,629,3.953,650,2.049,651,2.049,809,2.594,837,1.507,872,2.502,916,1.977,986,2.049,1367,2.66,1377,1.848,1422,2.049,1777,2.127,1900,1.977,1914,2.527,1978,2.876,1981,2.527,1982,2.527,1986,4.315,1989,2.41,1996,2.306,1997,2.306,2008,4.444,2052,4.098,2128,2.41,2164,3.734,2170,2.212,2294,3.004,2295,3.239,2296,5.248,2297,6.715,2298,3.239,2299,3.239,2300,3.239,2304,6.905,2305,3.239,2306,6.789,2315,3.239,2317,5.696,2318,3.239,2320,3.239,2321,2.66,2323,5.283,2324,3.239,2326,3.239,2328,3.239,2330,3.239,2331,3.239,2333,3.239,2341,3.239,2342,4.872,2343,3.004,2344,3.239,2345,2.816,2346,3.239,2347,4.464,2348,3.734,2349,3.239,2350,3.239,2351,3.239,2352,3.239,2353,3.239,2354,3.004,2355,3.004,2356,3.239,2357,3.239,2358,3.239,2359,3.239,2360,3.239,2361,4.546,2362,3.239,2363,4.872,2364,3.239,2365,3.239,2366,4.217,2367,4.546,2368,4.872,2369,3.239,2370,3.239,2371,4.546,2372,3.239,2373,3.239,2374,3.239,2375,3.239,2376,4.546,2377,3.239,2378,3.239,2379,3.239,2380,5.253,2381,3.239,2382,2.816,2383,4.546,2384,3.239,2385,3.239,2386,3.239]],["title/interfaces/Person.html",[128,0.299,2347,2.625]],["body/interfaces/Person.html",[0,1.774,3,0.084,4,0.103,5,0.075,6,0.066,11,0.541,14,3.148,15,2.212,16,1.618,18,0.401,19,0.616,20,1.528,22,1.373,23,2.736,29,1.825,35,0.759,40,0.797,41,0.817,43,0.01,44,0.994,45,0.654,46,1.225,47,0.797,53,4.219,56,1.281,65,1.825,69,1.166,75,0.006,80,0.006,86,0.797,91,1.488,96,3.157,99,0.334,102,2.076,104,0.203,105,3.773,106,2.547,107,1.825,108,1.825,109,1.716,112,1.209,113,1.769,114,1.488,121,2.325,122,2.325,123,1.618,124,1.529,125,1.618,128,0.39,129,0.166,131,1.769,132,0.152,133,1.457,138,1.225,159,0.958,160,1.236,161,1.825,162,1.948,181,1.448,194,1.068,211,0.755,223,4.952,244,2.519,245,2.325,262,1.716,286,2.58,296,2.053,300,2.719,306,2.814,307,1.113,308,1.42,309,3.148,325,1.15,332,2.842,333,4.111,334,4.111,336,1.67,391,2.351,618,3.595,621,4.141,629,4.008,650,2.089,651,2.089,809,2.63,837,1.095,872,2.528,916,2.814,986,2.089,1367,3.786,1377,1.884,1422,2.089,1777,2.169,1900,2.016,1914,3.595,1978,2.916,1981,2.576,1982,2.576,1986,4.36,1989,2.457,1996,2.351,1997,2.351,2008,4.482,2052,4.141,2128,2.457,2164,4.963,2170,2.256,2294,3.063,2295,3.302,2296,4.719,2297,6.424,2298,3.302,2299,3.302,2300,3.302,2304,6.742,2305,3.302,2306,6.553,2315,3.302,2317,6.424,2318,3.302,2320,3.302,2321,2.713,2323,4.924,2324,3.302,2326,3.302,2328,3.302,2330,3.302,2331,3.302,2333,3.302,2341,3.302,2342,4.924,2343,3.063,2344,3.302,2345,2.872,2346,3.302,2347,4.496,2348,2.713,2349,3.302,2350,3.302,2351,3.302,2352,3.302,2353,3.302,2354,3.063,2355,3.063,2356,3.302,2357,3.302,2358,3.302,2359,3.302,2360,3.302,2361,4.609,2362,3.302,2363,4.924,2364,3.302,2365,3.302,2366,4.274,2367,4.609,2368,4.924,2369,3.302,2370,3.302,2371,4.609,2372,3.302,2373,3.302,2374,3.302,2375,3.302,2376,4.609,2377,3.302,2378,3.302,2379,3.302,2380,5.309,2381,3.302,2382,2.872,2383,4.609,2384,3.302,2385,3.302,2386,3.302]],["title/injectables/ReferenceDataState.html",[0,1.358,1993,2.081]],["body/injectables/ReferenceDataState.html",[0,1.545,2,2.027,3,0.07,4,0.085,5,0.062,6,0.124,11,0.78,15,2.22,16,1.967,18,0.331,20,2.064,22,1.67,25,1.299,29,2.906,35,0.923,38,1.824,42,1.686,43,0.01,44,1.049,45,0.638,46,1.195,47,0.969,55,1.658,56,0.772,65,2.218,69,1.203,71,1.701,75,0.005,80,0.005,85,0.674,90,2.272,96,2.404,99,0.331,102,2.148,104,0.168,106,2.218,107,1.505,108,1.505,109,1.416,112,0.997,113,1.459,114,1.227,118,1.939,121,2.025,122,2.025,123,1.335,124,1.262,125,1.967,127,2.368,128,0.34,129,0.164,131,1.459,132,0.125,133,1.639,138,1.485,148,5.157,159,1.093,160,0.538,161,1.505,162,1.607,187,2.035,211,0.78,244,2.306,245,2.653,256,1.104,261,1.861,277,2.505,298,3.164,300,3.672,325,0.949,361,1.878,380,1.724,382,3.016,384,2.148,386,3.393,389,2.335,391,1.939,392,2.553,402,1.398,407,1.227,452,1.616,455,1.616,468,1.335,617,2.027,646,1.724,647,1.789,650,1.724,651,1.724,702,1.663,771,4.103,778,2.742,872,3.242,916,2.451,921,2.54,922,4.103,928,2.238,956,2.125,979,2.527,981,2.527,1049,3.358,1186,2.027,1307,2.742,1372,4.089,1373,3.984,1374,3.984,1422,1.724,1788,2.527,1895,2.742,1967,2.987,1968,3.297,1974,2.858,1978,3.016,1979,2.125,1988,2.125,1993,2.368,1994,3.8,1996,1.939,1997,1.939,2099,3.913,2102,3.297,2107,2.027,2116,3.393,2136,3.546,2193,5.413,2194,2.369,2195,3.491,2196,2.527,2197,3.915,2198,2.369,2199,2.238,2200,6.066,2201,3.915,2202,2.238,2203,4.014,2204,2.527,2205,2.987,2206,2.238,2207,5.607,2208,2.724,2209,2.724,2210,2.527,2211,2.724,2212,2.724,2213,2.369,2214,2.724,2215,2.724,2216,2.369,2217,2.369,2218,2.724,2219,2.724,2220,2.724,2221,2.724,2222,2.369,2223,4.014,2224,4.014,2225,4.014,2226,4.014,2227,4.014,2228,4.014,2229,3.723,2230,2.724,2231,2.724,2232,2.724,2233,2.724,2234,2.724,2235,2.724,2236,2.724,2237,5.26,2238,2.724,2239,2.724,2240,2.724,2241,3.723,2242,2.724,2243,2.724,2244,2.724,2245,4.014,2246,4.767,2247,4.767,2248,2.724,2249,2.724,2250,2.724,2251,2.369,2252,2.527,2253,2.527,2254,2.527,2255,2.724,2256,2.369,2257,4.014,2258,4.421,2259,2.724,2260,2.724,2261,2.724,2262,2.724,2263,5.26,2264,4.014,2265,4.014,2266,2.724,2267,2.724,2268,2.724,2269,2.527,2270,2.724,2271,2.724,2272,2.724,2273,2.724,2274,2.724,2275,2.724,2276,2.724,2277,4.014,2278,2.858,2279,4.014,2280,2.724,2281,2.724,2282,2.724,2283,2.724,2284,2.724,2285,2.724,2286,2.724,2287,2.724,2288,2.724,2289,2.724,2290,4.014,2291,4.014,2292,2.724,2293,2.724,2387,4.996,2388,4.996,2389,4.996,2390,4.996,2391,3.39,2392,3.39,2393,3.39,2394,5.26,2395,3.39,2396,3.39,2397,3.39,2398,3.39,2399,3.39]],["title/interfaces/ReferenceDataStateModel.html",[128,0.299,2222,3.068]],["body/interfaces/ReferenceDataStateModel.html",[0,1.657,3,0.077,4,0.094,5,0.068,6,0.06,15,2.133,16,1.469,18,0.364,19,0.575,20,1.824,22,1.247,29,1.657,35,0.689,43,0.01,44,0.744,45,0.808,47,0.724,55,1.146,56,0.577,65,1.657,69,1.164,71,1.78,75,0.006,80,0.006,85,0.742,90,2.04,96,2.171,99,0.337,102,2.269,104,0.184,106,2.378,107,1.657,108,1.657,109,1.558,112,1.097,113,1.606,114,1.351,118,2.135,121,2.171,122,2.171,123,1.469,124,1.389,125,2.109,127,2.539,128,0.365,129,0.172,131,1.606,132,0.138,133,1.675,138,1.503,148,5.026,159,1.144,160,0.592,161,1.657,162,1.769,187,2.15,194,0.97,211,0.824,244,1.888,245,2.171,256,1.215,261,2.048,277,2.05,298,3.094,300,3.246,325,1.044,361,1.537,380,1.897,382,3.186,384,2.269,386,3.584,389,2.467,391,2.135,392,2.697,402,1.044,407,1.351,452,1.465,455,1.465,468,1.469,617,2.231,646,1.897,647,1.969,650,1.897,651,1.897,702,1.831,771,3.358,778,2.048,872,3.1,916,1.831,921,1.897,922,3.358,928,2.463,956,2.339,979,2.781,981,2.781,1049,3.246,1186,2.231,1307,2.94,1369,6.868,1372,3.953,1373,3.614,1374,3.614,1422,1.897,1788,2.781,1895,2.94,1967,4.335,1968,4.786,1974,3.064,1978,2.723,1979,2.339,1988,2.339,1993,1.769,1994,1.831,1996,2.135,1997,2.135,2099,4.094,2102,3.535,2107,2.231,2116,3.584,2136,3.202,2193,2.607,2194,2.607,2195,3.743,2196,2.781,2197,4.136,2198,2.607,2199,2.463,2200,5.502,2201,4.136,2202,2.463,2203,4.304,2204,2.781,2205,3.202,2206,2.463,2207,5.827,2208,2.998,2209,2.998,2210,2.781,2211,2.998,2212,2.998,2213,2.607,2214,2.998,2215,2.998,2216,2.607,2217,2.607,2218,2.998,2219,2.998,2220,2.998,2221,2.998,2222,3.743,2223,5.827,2224,4.304,2225,5.827,2226,5.827,2227,5.827,2228,5.827,2229,2.781,2230,2.998,2231,2.998,2232,2.998,2233,2.998,2234,2.998,2235,2.998,2236,2.998,2237,2.998,2238,2.998,2239,2.998,2240,2.998,2241,3.992,2242,2.998,2243,2.998,2244,2.998,2245,2.998,2246,5.035,2247,5.035,2248,2.998,2249,2.998,2250,2.998,2251,2.607,2252,2.781,2253,2.781,2254,2.781,2255,2.998,2256,2.607,2257,4.304,2258,3.992,2259,2.998,2260,2.998,2261,2.998,2262,2.998,2263,4.304,2264,2.998,2265,2.998,2266,2.998,2267,2.998,2268,2.998,2269,2.781,2270,2.998,2271,2.998,2272,2.998,2273,2.998,2274,2.998,2275,2.998,2276,2.998,2277,2.998,2278,2.135,2279,2.998,2280,2.998,2281,2.998,2282,2.998,2283,2.998,2284,2.998,2285,2.998,2286,2.998,2287,2.998,2288,2.998,2289,2.998,2290,2.998,2291,4.304,2292,2.998,2293,2.998]],["title/components/RegistrationContentComponent.html",[195,0.443,510,1.259]],["body/components/RegistrationContentComponent.html",[3,0.061,4,0.074,5,0.083,6,0.135,11,0.913,12,1.117,15,2.325,18,0.289,19,0.484,22,2.598,23,2.761,25,1.173,35,0.833,38,2.015,40,0.876,41,0.898,42,1.591,43,0.01,44,1.182,45,0.742,46,1.128,52,0.916,55,1.592,56,1.202,69,0.74,75,0.005,80,0.005,85,1.216,86,1.187,88,2.408,91,2.214,99,0.273,104,0.146,113,1.274,114,1.072,124,1.102,129,0.074,132,0.287,133,0.603,141,0.56,155,2.592,159,1.242,160,1.18,195,0.664,196,0.808,197,1.145,198,0.849,199,0.939,200,0.939,201,0.916,207,0.828,208,1.202,209,1.202,210,2.261,211,1.178,212,0.733,213,1.232,215,1.232,222,3.821,246,3.001,247,3.357,255,0.715,258,1.327,259,1.145,262,3.182,296,1.493,298,3.019,299,1.387,300,3.42,306,2.214,307,1.707,308,1.514,312,1.315,320,0.789,325,0.828,330,1.694,331,1.625,336,1.449,353,2.206,354,2.206,355,1.403,359,3.657,402,1.53,403,2.633,404,1.694,405,1.694,406,2.341,410,2.633,411,1.173,412,1.403,415,1.505,416,1.361,418,3.384,423,1.236,429,1.884,430,1.625,431,1.67,433,2.508,435,1.77,436,2.354,438,1.274,439,2.004,440,2.206,444,3.001,446,2.004,447,1.777,450,2.139,452,0.634,453,2.069,455,0.634,459,0.789,474,1.856,475,2.069,476,0.458,477,1.933,478,0.939,479,1.941,480,0.939,481,0.939,482,0.849,483,0.939,484,0.828,485,1.735,486,0.849,487,0.939,488,1.232,489,1.735,490,0.849,491,0.893,492,0.939,493,0.849,494,0.939,495,0.849,496,0.808,497,0.939,498,0.849,499,0.939,500,0.849,501,0.849,502,0.939,503,0.849,504,0.916,505,0.849,506,0.939,507,0.849,508,1.432,509,0.828,510,1.755,511,0.849,512,0.939,513,0.849,514,1.735,515,0.849,516,1.327,517,1.432,518,0.828,519,0.849,520,0.828,521,0.715,522,0.939,523,0.828,524,0.808,525,0.849,526,0.939,527,0.849,528,0.939,529,0.871,530,0.939,531,0.849,532,1.173,533,0.849,534,1.295,535,0.849,536,0.939,537,0.849,538,1.202,539,0.939,540,0.849,541,0.939,542,0.939,595,5.544,675,2.294,680,0.871,692,1.327,693,1.781,699,2.897,720,1.548,733,1.694,734,2.78,735,3.821,739,1.954,750,3.978,809,2.069,837,1.202,851,2.979,888,4.395,889,3.978,992,1.102,1000,1.954,1010,2.069,1041,3.626,1272,2.477,1296,4.128,1322,4.985,1330,3.953,1372,4.075,1373,3.662,1374,4.022,1383,2.379,1393,1.77,1394,3.61,1403,3.978,1601,2.979,1677,4.274,1711,1.625,1715,2.069,1758,4.821,1760,4.821,1763,3.626,1777,2.382,1784,3.626,1823,3.269,1829,3.978,1830,3.978,1854,2.206,2132,2.698,2170,2.477,2321,3.61,2347,1.77,2382,2.069,2394,2.379,2400,5.869,2401,5.869,2402,2.61,2403,5.469,2404,5.469,2405,3.61,2406,4.848,2407,4.821,2408,5.469,2409,3.978,2410,6.117,2411,4.513,2412,3.978,2413,4.907,2414,4.513,2415,4.513,2416,3.978,2417,2.96,2418,3.363,2419,3.363,2420,2.96,2421,4.513,2422,4.513,2423,2.96,2424,3.978,2425,4.821,2426,2.96,2427,4.513,2428,2.96,2429,2.96,2430,2.96,2431,2.96,2432,2.96,2433,2.96,2434,2.96,2435,2.96,2436,1.625,2437,2.61,2438,2.61,2439,2.96,2440,5.469,2441,2.379,2442,2.96,2443,2.96,2444,2.96,2445,2.96,2446,2.96,2447,3.978,2448,2.61,2449,2.61,2450,2.96,2451,2.96,2452,2.96,2453,2.96,2454,2.96,2455,2.61,2456,4.513,2457,2.96,2458,2.61,2459,2.379,2460,2.61,2461,2.61,2462,2.96,2463,2.96,2464,2.96,2465,2.61]],["title/modules/RegistrationContentModule.html",[543,0.627,2466,3.068]],["body/modules/RegistrationContentModule.html",[3,0.132,4,0.161,5,0.117,6,0.103,43,0.01,75,0.008,80,0.008,99,0.341,104,0.317,129,0.161,132,0.237,307,1.243,426,1.625,476,0.99,510,2.617,543,0.915,545,1.792,546,1.837,547,2.529,548,1.932,549,1.837,550,2.529,561,2.366,562,1.792,564,2.427,568,2.306,595,4.227,759,2.695,760,2.14,765,4.036,766,3.38,2400,4.476,2401,4.476,2466,6.294,2467,5.646,2468,5.646,2469,5.646,2470,5.646,2471,5.798,2472,6.405,2473,5.646,2474,4.476,2475,5.646,2476,5.646]],["title/components/RegistrationMetadataComponent.html",[195,0.443,511,1.259]],["body/components/RegistrationMetadataComponent.html",[3,0.073,4,0.09,5,0.13,6,0.119,11,0.882,12,1.283,15,2.186,18,0.348,19,0.556,22,2.38,23,2.844,25,1.348,35,0.957,38,1.721,40,1.006,41,1.031,42,1.476,43,0.01,44,1.158,45,0.651,46,1.314,55,1.109,56,1.036,69,0.701,75,0.005,76,2.801,80,0.005,86,0.692,88,2.64,91,2.427,99,0.264,104,0.176,124,2.495,129,0.09,132,0.132,141,0.675,155,2.64,159,1.19,160,0.969,195,0.773,196,0.974,197,1.315,198,1.023,199,1.132,200,1.132,201,1.103,207,2.146,208,1.381,209,1.381,210,2.292,211,1.189,212,0.883,213,1.415,215,1.415,236,2.658,255,0.862,258,1.796,259,1.315,262,2.799,298,2.211,299,1.549,302,2.845,307,1.735,308,0.883,320,0.95,330,2.04,331,1.957,332,1.779,336,1.083,361,2.132,401,1.224,402,2.08,403,3.502,404,3.835,405,3.835,406,2.566,407,1.291,410,3.066,411,1.743,412,3.523,416,1.842,429,3.281,431,1.807,433,1.635,436,1.535,444,2.845,446,1.583,447,1.404,450,2.457,451,3.778,452,0.763,453,1.635,455,1.435,459,0.95,460,4.031,463,3.494,470,3.376,471,3.376,472,4.074,476,0.551,477,1.315,478,1.132,479,2.128,480,1.132,481,1.132,482,1.023,483,1.132,484,0.998,485,1.938,486,1.023,487,1.132,488,1.415,489,1.938,490,1.023,491,1.076,492,1.132,493,1.023,494,1.132,495,1.023,496,0.974,497,1.132,498,1.023,499,1.132,500,1.023,501,1.487,502,1.132,503,1.023,504,1.103,505,1.023,506,1.132,507,1.023,508,1.645,509,0.998,510,1.023,511,1.923,512,1.132,513,1.023,514,1.938,515,1.023,516,1.525,517,1.645,518,0.998,519,1.023,520,0.998,521,0.862,522,1.132,523,0.998,524,0.974,525,1.023,526,1.132,527,1.023,528,1.132,529,1.049,530,1.132,531,1.023,532,1.588,533,1.023,534,1.487,535,1.023,536,1.132,537,1.023,538,1.381,539,1.132,540,1.023,541,1.132,542,1.132,573,2.543,699,2.164,733,2.04,734,2.636,745,2.712,746,2.492,747,2.866,748,2.235,749,2.658,899,3.68,963,2.658,992,1.327,1041,4.166,1049,2.164,1322,4.008,1330,2.636,1372,3.899,1373,3.922,1374,3.922,1393,2.132,1394,3.422,1657,3.144,1665,4.908,1670,5.388,1763,4.166,1777,2.736,1784,4.166,1793,3.099,1846,5.724,1856,3.622,1857,4.031,1862,2.866,1894,2.543,2070,3.863,2170,2.845,2278,2.965,2321,4.031,2347,2.132,2407,5.384,2409,4.57,2416,4.57,2418,3.863,2419,3.863,2437,3.144,2438,3.144,2447,3.144,2448,3.144,2449,3.144,2458,5.384,2460,3.144,2461,4.57,2474,5.193,2477,5.972,2478,3.144,2479,6.108,2480,5.184,2481,7.123,2482,5.184,2483,3.566,2484,3.566,2485,3.566,2486,5.184,2487,3.566,2488,3.566,2489,3.566,2490,5.184,2491,3.566,2492,6.108,2493,6.108,2494,5.384,2495,3.566,2496,3.566,2497,3.144,2498,3.566,2499,3.566]],["title/modules/RegistrationMetadataModule.html",[543,0.627,2471,2.898]],["body/modules/RegistrationMetadataModule.html",[3,0.123,4,0.15,5,0.145,6,0.096,43,0.01,44,0.831,75,0.008,80,0.008,99,0.356,104,0.296,129,0.15,132,0.221,307,1.16,426,1.517,476,0.924,501,1.716,511,2.595,543,0.854,545,1.674,546,1.716,547,2.455,548,1.804,549,1.716,550,2.455,561,2.269,562,1.674,564,2.328,568,2.213,572,4.179,573,2.934,759,2.585,760,1.999,761,5.126,762,4.179,765,4.188,766,3.156,767,5.468,1363,5.895,1364,4.805,1655,4.457,1699,6.04,1705,5.126,1706,4.179,1869,5.705,1885,3.947,1886,4.805,2177,3.947,2191,5.895,2192,5.895,2471,5.946,2474,4.179,2477,4.805,2500,5.272,2501,5.272,2502,5.272,2503,5.98,2504,5.98,2505,5.98,2506,6.468,2507,5.272,2508,5.98]],["title/components/RegistrationModalComponent.html",[195,0.443,513,1.259]],["body/components/RegistrationModalComponent.html",[3,0.083,4,0.101,5,0.104,6,0.13,11,0.746,12,1.403,14,2.217,18,0.395,19,0.608,20,1.89,22,2.371,23,2.505,25,1.473,35,1.047,38,1.922,40,1.1,41,1.127,42,0.976,43,0.01,44,1.106,45,0.649,46,0.692,52,1.25,55,1.213,56,1.097,69,0.546,75,0.006,80,0.006,85,1.302,86,1.27,88,2.794,91,2.569,99,0.329,102,1.463,104,0.2,111,2.217,112,1.188,114,1.463,121,1.637,122,1.637,123,1.591,124,1.503,129,0.101,132,0.286,133,1.446,141,1.239,159,0.675,160,1.262,195,0.781,196,1.103,197,1.438,198,1.159,200,1.282,201,1.25,204,2.366,206,4.32,207,1.131,210,2.31,211,1.205,212,1,215,1.547,230,4.684,244,2.501,245,2.876,255,0.976,257,1.852,259,1.438,286,2.246,296,1.103,299,1.661,307,1.713,308,2.143,325,1.131,328,2.823,330,2.311,331,2.217,361,1.159,411,1.05,431,1.025,452,0.865,455,0.865,459,1.076,476,0.624,477,1.896,478,1.282,479,2.252,480,1.282,481,1.282,482,1.159,483,1.282,484,1.131,485,2.077,486,1.159,487,1.282,488,1.547,489,2.077,490,1.159,491,1.218,492,1.282,493,1.159,494,1.282,495,1.159,496,1.103,497,1.282,498,1.159,499,1.282,500,1.159,501,1.159,502,1.282,503,1.159,504,1.25,505,1.159,506,1.282,507,1.159,508,1.798,509,1.131,510,1.626,511,1.159,512,1.282,513,2.036,514,2.077,515,1.159,516,1.667,517,1.798,518,1.131,519,1.159,520,1.131,521,0.976,522,1.282,523,1.131,524,1.103,525,1.159,526,1.282,527,1.159,528,1.282,529,1.188,530,1.282,531,1.159,532,1.473,533,1.159,534,1.626,535,1.159,536,1.282,537,1.159,538,1.51,539,1.282,540,1.159,541,1.282,542,1.282,595,5.776,680,1.188,692,1.667,693,2.131,720,1.944,805,2.666,987,3.74,1153,5.289,1296,4.879,1599,5.702,1989,2.415,1993,3.363,1994,1.982,1995,2.415,2038,4.32,2128,2.415,2269,3.011,2400,5.674,2401,2.823,2405,4.32,2436,2.217,2476,3.561,2509,2.823,2510,5.667,2511,4.224,2512,6.546,2513,7.096,2514,3.246,2515,6.005,2516,5.667,2517,4.996,2518,3.561,2519,4.224,2520,4.04,2521,4.04,2522,4.04,2523,4.04,2524,3.561,2525,3.561,2526,4.04,2527,4.04,2528,4.04,2529,5.667,2530,4.04,2531,4.04,2532,3.561,2533,3.561,2534,3.561,2535,4.04,2536,4.04,2537,4.04]],["title/modules/RegistrationModalModule.html",[543,0.627,559,3.068]],["body/modules/RegistrationModalModule.html",[3,0.131,4,0.16,5,0.116,6,0.102,43,0.01,75,0.008,80,0.008,99,0.345,104,0.314,129,0.16,132,0.235,307,1.478,426,1.613,476,0.983,513,2.615,543,0.908,545,1.779,546,1.824,547,2.521,548,1.918,549,1.824,550,2.521,559,6.286,561,2.355,562,1.779,564,2.416,568,2.296,574,3.179,575,2.503,595,5.026,759,2.683,760,2.125,2400,4.443,2401,4.443,2436,3.49,2466,6.127,2538,5.605,2539,6.358,2540,5.605,2541,5.605,2542,5.109,2543,4.443,2544,6.118,2545,6.358]],["title/interfaces/RegistrationStateModel.html",[128,0.299,2546,3.528]],["body/interfaces/RegistrationStateModel.html",[0,1.304,1,2.52,3,0.087,4,0.068,5,0.077,6,0.044,8,2.676,9,1.788,11,0.356,12,1.566,14,1.487,15,2.433,16,1.067,18,0.265,19,0.452,20,2.092,22,2.802,23,2.958,29,1.203,33,5.05,35,0.778,37,3.102,40,0.526,41,0.539,43,0.01,44,0.811,45,0.661,46,0.722,47,0.818,48,1.271,49,2.52,50,2.313,53,3.337,55,1.249,56,1.035,59,1.893,65,1.203,69,1.026,75,0.004,80,0.004,83,3.141,86,1.524,88,1.659,90,2.276,91,1.526,96,2.929,99,0.332,102,1.873,104,0.134,105,3.814,106,1.871,107,1.203,108,1.203,109,1.131,111,1.487,112,0.797,113,1.814,114,0.981,117,2.177,118,1.55,119,1.698,128,0.184,129,0.106,131,1.166,132,0.1,133,1.672,138,1.345,139,1.619,140,1.078,141,0.513,154,2.512,155,3.091,159,1.329,160,0.821,161,1.203,162,1.284,163,1.893,164,1.619,165,1.893,166,1.893,167,1.788,168,1.893,169,1.893,172,1.788,173,1.788,180,2.019,184,2.019,187,1.775,194,0.704,207,1.956,211,0.681,244,2.228,245,1.708,255,1.25,256,0.882,261,1.487,286,2.003,296,0.74,298,2.531,300,1.998,306,1.329,307,1.627,325,0.758,332,2.003,333,1.43,334,1.43,336,1.614,355,1.284,361,2.373,384,1.873,389,2.037,392,2.226,402,1.448,431,0.687,437,1.329,468,2.037,501,1.209,521,0.655,610,1.893,621,3.659,622,2.297,624,3.141,631,4.884,640,2.177,646,1.377,647,1.43,674,3.387,676,3.243,677,1.619,694,1.166,727,3.716,809,2.372,823,2.945,837,1.784,840,3.716,844,3.855,872,2.42,899,1.487,970,2.019,986,3.404,987,3.852,988,2.945,998,3.716,1150,1.008,1164,1.893,1260,3.339,1274,2.177,1319,2.177,1330,3.215,1367,4.174,1377,1.242,1389,2.019,1416,2.177,1422,1.377,1449,2.177,1496,2.388,1501,2.388,1777,1.43,1793,3.489,1823,2.52,1847,2.52,1894,1.329,1926,1.893,1964,1.788,1974,2.959,1978,2.143,1980,3.141,1981,1.698,1982,1.698,1988,1.698,1989,2.52,1993,1.998,1994,1.329,1995,1.619,1999,1.698,2001,1.698,2007,2.642,2008,1.698,2040,1.788,2052,3.659,2116,1.55,2128,2.52,2163,3.141,2164,1.788,2170,2.313,2178,2.177,2195,5.05,2196,2.019,2205,1.619,2210,3.141,2241,2.019,2252,2.019,2253,2.019,2254,2.019,2258,2.019,2278,1.55,2342,2.019,2343,2.019,2345,1.893,2348,1.788,2354,2.019,2355,2.019,2363,3.141,2368,2.019,2455,2.388,2524,4.56,2525,3.716,2532,5.145,2533,5.145,2534,2.388,2546,3.387,2547,2.388,2548,6.372,2549,6.324,2550,6.814,2551,6.99,2552,2.709,2553,2.709,2554,2.388,2555,2.709,2556,4.215,2557,3.716,2558,2.709,2559,2.177,2560,2.709,2561,4.215,2562,4.215,2563,2.709,2564,5.145,2565,3.855,2566,2.709,2567,2.709,2568,4.215,2569,2.177,2570,2.709,2571,2.709,2572,2.709,2573,2.709,2574,2.709,2575,2.709,2576,2.709,2577,2.709,2578,2.709,2579,2.709,2580,2.709,2581,3.716,2582,2.709,2583,2.709,2584,2.709,2585,2.709,2586,2.388,2587,2.709,2588,2.709,2589,2.709,2590,2.709,2591,2.709,2592,2.709,2593,2.709,2594,2.709,2595,2.709,2596,2.709,2597,2.709,2598,2.709,2599,2.709,2600,2.709,2601,2.709,2602,2.709,2603,2.709,2604,2.709,2605,2.709,2606,2.709,2607,2.709,2608,2.709,2609,2.709,2610,2.709,2611,2.709,2612,2.709,2613,2.709,2614,2.709,2615,2.709,2616,2.709,2617,2.709,2618,2.709,2619,2.709,2620,2.709,2621,2.709,2622,2.709,2623,2.709,2624,2.709,2625,2.177,2626,2.709,2627,2.177,2628,2.019,2629,2.388,2630,2.709,2631,2.709,2632,2.709,2633,2.709,2634,2.709,2635,5.837,2636,3.855,2637,2.709,2638,2.709,2639,2.709,2640,2.709,2641,2.709,2642,4.215,2643,2.709,2644,2.709,2645,2.709,2646,2.709,2647,2.709,2648,5.173,2649,2.709,2650,2.709,2651,2.709,2652,2.177,2653,2.709,2654,2.709,2655,2.709,2656,2.709,2657,2.709,2658,2.709,2659,2.709,2660,2.709,2661,2.709,2662,2.709,2663,2.709,2664,2.388,2665,2.709,2666,2.709,2667,2.709,2668,2.709,2669,2.709,2670,2.709,2671,2.388,2672,2.709,2673,2.709,2674,4.215,2675,2.709,2676,2.709,2677,2.709,2678,2.709,2679,2.709,2680,2.709,2681,5.173,2682,2.709,2683,2.709,2684,2.709,2685,2.709,2686,4.215,2687,3.141,2688,4.215,2689,4.215,2690,2.709,2691,2.709,2692,2.709,2693,5.173,2694,2.709,2695,2.709,2696,2.709,2697,2.709,2698,2.709,2699,2.709,2700,2.709,2701,2.709,2702,2.709,2703,2.709,2704,2.709,2705,2.709,2706,2.709,2707,2.709,2708,2.709,2709,2.709,2710,2.709,2711,2.709,2712,2.709,2713,2.709,2714,2.709,2715,2.709,2716,2.709,2717,2.709,2718,2.709,2719,2.709,2720,2.709,2721,2.709,2722,2.709,2723,2.709,2724,2.709,2725,2.709,2726,2.709,2727,2.709,2728,2.709,2729,2.709,2730,2.709,2731,2.709,2732,2.709,2733,2.709,2734,2.709,2735,2.709,2736,2.709,2737,2.709,2738,2.709,2739,2.709,2740,2.709,2741,2.709,2742,2.709,2743,2.709,2744,2.709,2745,2.709,2746,2.709,2747,2.709,2748,2.709,2749,2.709]],["title/components/ReviewButtonComponent.html",[195,0.443,515,1.259]],["body/components/ReviewButtonComponent.html",[3,0.12,4,0.083,5,0.09,6,0.135,11,0.645,12,1.214,18,0.323,19,0.526,20,0.881,25,1.275,32,2.588,35,0.611,38,2.005,40,0.952,41,0.975,42,1.185,43,0.01,44,1.069,45,0.731,46,0.84,47,1.255,48,1.479,52,1.023,55,1.251,56,1,69,0.447,75,0.005,80,0.005,85,1.439,86,1.492,90,1.597,99,0.272,104,0.163,129,0.083,132,0.267,133,1,138,0.566,140,0.906,141,1.107,159,0.819,160,1.188,195,0.818,196,0.903,197,1.244,198,0.949,199,1.049,200,1.049,201,1.023,203,2.932,204,2.048,207,2.152,208,1.307,209,1.307,210,2.274,211,1.187,212,0.819,213,1.339,215,1.339,221,2.692,255,0.799,258,2.311,259,1.244,260,3.655,262,2.048,285,4.268,286,2.482,296,1.975,299,1.483,307,1.34,308,1.791,320,0.881,332,2.482,336,1.442,361,2.206,402,1.372,406,1.265,407,1.197,410,1.423,411,0.86,416,1.479,423,1.381,433,3.92,438,1.423,452,0.708,455,0.708,459,0.881,476,0.511,477,1.752,478,1.049,479,2.052,480,1.049,481,1.049,482,0.949,483,1.049,484,0.925,485,1.855,486,0.949,487,1.049,488,1.339,489,1.855,490,0.949,491,1.763,492,1.049,493,0.949,494,1.049,495,0.949,496,0.903,497,1.049,498,0.949,499,1.049,500,0.949,501,0.949,502,1.049,503,0.949,504,1.023,505,0.949,506,1.049,507,0.949,508,1.556,509,0.925,510,0.949,511,0.949,512,1.049,513,0.949,514,1.855,515,1.855,516,2.563,517,1.556,518,1.372,519,0.949,520,0.925,521,0.799,522,1.049,523,0.925,524,0.903,525,0.949,526,1.049,527,0.949,528,1.049,529,0.973,530,1.049,531,0.949,532,1.275,533,0.949,534,1.407,535,0.949,536,1.049,537,0.949,538,1.307,539,1.049,540,0.949,541,1.049,542,1.049,605,1.34,616,1.988,622,3.645,679,2.972,680,0.973,681,2.972,682,2.621,683,1.302,684,1.265,685,2.237,692,1.442,693,1.903,698,2.621,699,2.048,719,2.493,720,1.683,734,1.681,738,1.815,837,2.13,844,3.655,846,3.941,916,2.406,988,5.586,1007,2.932,1042,3.941,1150,1.825,1156,3.941,1272,2.692,1282,2.073,1296,3.951,1329,2.493,1338,3.074,1599,3.941,1677,3.427,1698,2.657,1715,5.055,1742,2.657,2296,4.775,2382,2.311,2394,2.657,2406,2.311,2412,4.324,2424,4.324,2425,5.153,2436,1.815,2514,2.657,2515,5.196,2543,2.311,2548,5.153,2652,3.941,2750,5.525,2751,6.239,2752,2.657,2753,4.904,2754,4.904,2755,5.846,2756,5.153,2757,4.324,2758,6.466,2759,6.466,2760,6.906,2761,5.846,2762,5.846,2763,4.904,2764,4.904,2765,3.307,2766,7.235,2767,4.904,2768,3.307,2769,3.307,2770,3.307,2771,4.324,2772,4.904,2773,4.904,2774,4.324,2775,4.904,2776,4.324,2777,3.307,2778,3.941,2779,4.904,2780,3.307,2781,4.904,2782,4.324,2783,3.307,2784,4.904,2785,3.307,2786,3.307,2787,3.307,2788,2.657,2789,2.183,2790,5.846,2791,3.307,2792,2.464,2793,3.307,2794,3.307,2795,3.307,2796,3.307,2797,3.307,2798,4.904,2799,3.307,2800,3.307,2801,3.307,2802,3.307,2803,3.307,2804,2.657,2805,2.657,2806,3.307,2807,3.307,2808,3.307]],["title/modules/ReviewButtonModule.html",[543,0.627,2809,3.068]],["body/modules/ReviewButtonModule.html",[3,0.131,4,0.16,5,0.116,6,0.102,43,0.01,75,0.008,80,0.008,99,0.345,104,0.314,129,0.16,132,0.235,426,1.611,476,0.982,515,2.614,516,2.238,543,0.907,545,1.777,546,1.822,547,2.52,548,1.915,549,1.822,550,2.52,561,2.354,562,1.777,564,2.414,568,2.295,596,5.598,759,2.681,760,2.122,765,4.015,766,3.351,1306,5.598,1705,5.317,1706,4.438,2750,4.192,2751,4.733,2789,4.192,2809,6.285,2810,5.598,2811,5.598,2812,5.598,2813,5.598,2814,6.126,2815,6.351]],["title/components/ReviewModalComponent.html",[195,0.443,518,1.229]],["body/components/ReviewModalComponent.html",[3,0.127,4,0.091,5,0.096,6,0.129,11,0.69,12,1.298,18,0.354,19,0.562,25,1.863,35,0.968,38,1.907,40,1.39,41,1.042,42,0.875,43,0.01,44,1.071,45,0.704,46,0.62,48,1.858,52,1.621,55,0.775,56,0.81,69,0.49,75,0.005,76,2.825,80,0.005,85,1.042,86,1.017,90,2.006,99,0.243,104,0.179,128,0.246,129,0.091,132,0.276,141,1.278,155,1.425,159,0.875,160,0.977,195,0.823,196,0.988,197,1.33,198,1.039,199,1.149,200,1.149,201,1.12,207,2.25,208,1.396,209,1.396,210,2.291,211,1.196,212,0.896,213,1.431,215,1.431,255,0.875,258,1.065,259,1.33,299,1.563,307,1.622,308,2.105,312,1.608,320,0.964,336,1.287,361,2.44,401,1.242,402,1.89,403,2.651,407,1.311,410,2.906,411,1.601,412,3.541,413,1.911,416,1.858,418,2.735,420,2.92,423,1.512,426,0.918,429,2.992,431,1.33,432,5.22,433,1.66,435,3.133,436,1.558,438,1.558,439,1.608,440,2.698,443,1.558,446,2.735,448,2.269,449,2.53,451,2.665,452,1.318,455,1.533,459,0.964,463,2.571,476,0.56,477,1.818,478,1.149,479,2.143,480,1.149,481,1.149,482,1.039,483,1.149,484,1.013,485,1.955,486,1.039,487,1.149,488,1.431,489,1.955,490,1.039,491,1.092,492,1.149,493,1.039,494,1.149,495,1.039,496,0.988,497,1.149,498,1.039,499,1.149,500,1.039,501,1.039,502,1.149,503,1.039,504,1.12,505,1.039,506,1.149,507,1.039,508,1.663,509,1.013,510,1.039,511,1.039,512,1.149,513,1.039,514,1.955,515,1.039,516,2.591,517,1.663,518,1.89,519,1.039,520,1.013,521,0.875,522,1.149,523,1.013,524,0.988,525,1.039,526,1.149,527,1.039,528,1.149,529,1.065,530,1.149,531,1.039,532,1.362,533,1.039,534,1.503,535,1.039,536,1.149,537,1.039,538,1.396,539,1.149,540,1.039,541,1.149,542,1.149,573,1.776,622,2.327,675,3.132,680,1.065,692,1.541,693,2.006,720,1.798,733,2.071,734,2.665,745,1.608,837,1.641,916,3.022,987,4.066,988,4.305,989,3.285,992,2.667,1007,3.683,1052,2.698,1150,2.292,1296,4.513,1297,4.591,1394,4.066,1406,3.662,1476,4.591,1598,2.698,1601,3.459,1698,4.211,1898,2.164,2296,4.931,2405,4.931,2406,5.007,2413,5.34,2436,1.987,2509,2.53,2511,3.906,2518,3.192,2519,4.591,2565,2.698,2750,5.307,2778,2.909,2788,2.909,2789,5.307,2804,2.909,2805,2.909,2816,4.62,2817,4.95,2818,3.62,2819,5.34,2820,5.241,2821,5.431,2822,4.591,2823,5.431,2824,5.241,2825,3.62,2826,4.211,2827,3.62,2828,3.192,2829,2.909,2830,3.192,2831,3.192,2832,3.192,2833,3.192,2834,3.192,2835,3.192,2836,2.909,2837,3.192,2838,4.62,2839,5.241,2840,5.241,2841,3.62,2842,3.62,2843,3.62,2844,5.241,2845,3.62,2846,3.62]],["title/interfaces/ReviewModalData.html",[128,0.299,2819,3.272]],["body/interfaces/ReviewModalData.html",[3,0.144,4,0.139,5,0.101,6,0.089,11,0.729,18,0.541,19,0.751,25,1.441,35,1.024,40,1.358,41,1.102,43,0.01,44,0.77,45,0.64,48,1.672,56,0.857,75,0.007,80,0.007,90,1.805,99,0.302,104,0.274,128,0.377,129,0.139,132,0.259,141,1.452,159,1.169,160,0.879,194,1.441,195,0.838,207,2.479,208,1.477,209,1.477,210,1.406,211,0.921,213,1.513,215,1.513,258,2.058,307,1.563,308,2.132,320,1.477,336,1.682,361,2.433,426,1.406,432,3.873,477,1.406,516,2.605,518,1.551,675,3.899,680,1.63,692,1.63,693,1.805,837,2.043,916,3.762,987,5.062,1007,4.585,1052,4.131,1150,2.854,1296,4.387,1297,5.716,1476,4.131,1598,4.131,1601,3.658,1898,3.314,2296,5.482,2405,4.619,2406,4.89,2413,5.215,2436,3.042,2509,3.873,2511,4.131,2519,5.716,2565,5.215,2750,3.658,2778,5.623,2788,4.454,2789,3.658,2804,4.454,2805,4.454,2816,4.886,2817,4.454,2819,5.716,2821,4.886,2822,4.131,2823,4.886,2826,4.454,2829,4.454,2830,6.169,2831,4.886,2832,4.886,2833,4.886,2834,4.886,2835,4.886,2836,4.454,2837,4.886]],["title/modules/ReviewModalModule.html",[543,0.627,2814,3.068]],["body/modules/ReviewModalModule.html",[3,0.133,4,0.162,5,0.118,6,0.104,43,0.01,75,0.008,80,0.008,99,0.347,104,0.319,129,0.162,132,0.238,426,1.637,476,0.997,516,1.898,518,2.555,543,0.921,545,1.806,546,1.851,547,2.537,548,1.946,549,1.851,550,2.537,561,2.376,562,1.806,564,2.047,568,2.317,574,3.207,575,2.54,759,2.707,760,2.156,1705,5.367,1706,4.509,2436,3.541,2542,5.185,2543,4.509,2544,6.172,2750,4.259,2789,4.259,2814,6.213,2847,5.688,2848,5.688,2849,5.688]],["title/components/RightSidebarComponent.html",[195,0.443,519,1.259]],["body/components/RightSidebarComponent.html",[1,4.004,3,0.106,4,0.089,5,0.095,6,0.114,8,3.405,9,2.349,11,0.681,12,1.762,15,2.31,18,0.506,19,0.556,22,2.378,23,2.842,33,4.973,35,0.956,38,1.619,40,1.004,41,1.029,42,0.86,43,0.01,44,1.065,45,0.612,46,0.61,47,1.3,52,1.101,69,0.481,75,0.005,76,1.632,77,3.094,80,0.006,85,1.213,86,1.184,88,2.637,91,2.425,99,0.28,104,0.176,129,0.089,132,0.274,139,3.647,141,0.674,157,4.026,159,1.119,160,1.216,187,1.221,195,0.718,196,0.972,197,1.313,198,1.021,199,1.129,200,1.129,201,1.101,207,1.874,208,1.379,209,1.379,210,2.288,211,1.193,212,0.881,213,1.413,215,1.413,218,2.632,236,2.652,255,1.474,256,1.685,258,1.522,259,1.313,286,1.776,299,1.548,306,2.539,307,1.645,308,1.51,309,2.841,312,2.709,320,0.948,330,2.036,331,1.953,332,1.776,336,0.743,384,1.288,389,1.401,401,1.221,402,2.078,403,3.299,404,2.036,405,2.036,406,3.112,407,1.874,408,3.49,410,3.063,411,1.741,412,3.52,415,3.101,416,2.311,418,2.298,420,3.373,429,2.971,430,3.348,431,1.944,433,2.373,434,2.349,435,3.094,436,2.626,444,3.348,446,2.298,447,2.038,450,2.454,451,2.632,452,1.681,453,1.632,455,1.881,459,0.948,461,3.416,463,3.286,466,1.878,470,2.454,471,2.454,474,2.231,475,2.487,476,0.8,477,1.805,478,1.129,479,2.126,480,1.129,481,1.129,482,1.021,483,1.129,484,0.996,485,1.936,486,1.021,487,1.129,488,1.413,489,1.936,490,1.021,491,1.073,492,1.129,493,1.021,494,1.129,495,1.021,496,0.972,497,1.129,498,1.021,499,1.129,500,1.021,501,1.021,502,1.129,503,1.021,504,1.101,505,1.021,506,1.129,507,1.021,508,1.643,509,0.996,510,1.021,511,1.021,512,1.129,513,1.021,514,1.936,515,1.021,516,1.794,517,1.643,518,0.996,519,1.922,520,0.996,521,0.86,522,1.129,523,0.996,524,0.972,525,1.021,526,1.129,527,1.021,528,1.129,529,1.047,530,1.129,531,1.021,532,1.346,533,1.021,534,1.485,535,1.021,536,1.129,537,1.021,538,1.379,539,1.129,540,1.021,541,1.129,542,1.129,598,5.304,616,2.098,646,2.632,680,1.047,686,2.652,692,1.522,693,1.986,720,1.776,730,2.487,734,2.632,743,2.487,745,3.16,748,2.231,752,2.349,753,2.349,837,1.379,852,2.349,884,3.858,899,3.676,963,2.652,990,6.536,992,3.027,1007,2.128,1010,2.487,1245,2.487,1294,4.973,1390,3.858,1406,2.487,1679,2.652,1753,2.86,1754,5.378,1755,4.563,1769,5.378,1796,1.953,1847,4.004,1849,4.563,1850,3.137,1851,4.159,1852,2.86,1853,3.137,1855,5.905,1857,3.416,1858,2.86,1861,3.137,1862,2.86,2559,2.86,2636,3.858,2850,5.719,2851,6.698,2852,5.176,2853,5.176,2854,3.559,2855,3.137,2856,3.559,2857,3.559,2858,3.559,2859,3.559,2860,3.559,2861,3.559,2862,3.559,2863,3.559,2864,3.559,2865,3.559,2866,6.1,2867,3.559,2868,3.559,2869,3.559,2870,3.559,2871,3.559]],["title/modules/RightSidebarModule.html",[543,0.627,560,3.068]],["body/modules/RightSidebarModule.html",[3,0.114,4,0.14,5,0.102,6,0.089,43,0.01,75,0.007,80,0.007,99,0.358,104,0.275,129,0.14,132,0.205,211,0.731,325,1.554,411,1.822,426,1.409,455,1.189,476,0.859,519,2.57,543,0.793,545,1.554,546,1.593,547,2.374,548,1.675,549,1.593,550,2.374,560,6.414,561,2.167,562,1.554,564,2.224,568,2.113,574,2.926,575,2.187,578,3.666,580,5.631,581,4.463,598,4.14,672,3.666,754,5.93,759,2.469,760,1.856,765,3.698,766,2.931,1872,4.897,1873,5.631,1874,4.463,1875,6.177,1876,4.897,1886,5.631,1891,4.897,2471,5.602,2473,4.897,2474,3.881,2475,4.897,2751,4.14,2809,5.93,2850,4.463,2872,4.897,2873,4.897,2874,4.897,2875,4.897,2876,5.93,2877,5.93,2878,5.93,2879,5.93,2880,7.007,2881,5.555,2882,5.555,2883,3.666,2884,5.555,2885,5.555,2886,3.666,2887,7.007,2888,4.14,2889,5.555,2890,4.14,2891,5.555,2892,5.555,2893,5.555]],["title/interfaces/Rotation.html",[128,0.299,521,1.061]],["body/interfaces/Rotation.html",[3,0.107,4,0.13,5,0.095,6,0.083,11,0.683,18,0.507,19,0.72,40,1.007,41,1.032,43,0.01,44,0.721,45,0.744,47,1.007,56,1.037,69,0.908,71,2.278,75,0.007,80,0.007,85,1.032,86,1.669,99,0.264,104,0.257,128,0.353,129,0.169,132,0.248,138,0.889,140,1.452,141,0.983,159,1.242,160,1.18,194,1.349,195,0.841,208,1.383,209,1.383,210,1.317,211,0.883,213,1.417,215,1.417,257,2.38,258,2.312,320,1.383,384,3.113,389,3.385,392,3.701,431,2.065,468,2.642,477,1.317,520,1.453,521,2.165,562,1.453,605,2.104,679,2.888,680,1.527,681,3.201,682,2.72,683,2.044,684,1.986,685,2.568,692,1.527,693,1.69,694,3.201,698,2.72,703,3.426,867,3.683,913,3.103,1150,1.932,1272,2.849,1329,2.639,1337,3.426,1564,3.254,1568,3.426,1667,3.426,1711,4.769,1854,5.542,2792,3.869,2883,3.426,2894,3.627,2895,3.869,2896,5.916,2897,5.001,2898,4.576,2899,4.171,2900,4.171,2901,4.576,2902,4.171,2903,4.576,2904,4.576,2905,3.869,2906,4.171,2907,4.576,2908,4.171,2909,6.556,2910,6.214,2911,4.171,2912,4.576,2913,6.93,2914,4.576,2915,5.916,2916,5.916,2917,4.171,2918,4.576,2919,4.576,2920,4.576,2921,4.576]],["title/components/RotationSliderComponent.html",[195,0.443,520,1.229]],["body/components/RotationSliderComponent.html",[3,0.068,4,0.083,5,0.09,6,0.124,11,0.768,12,1.212,18,0.322,19,0.525,25,1.273,35,0.609,38,1.808,40,0.95,41,0.974,42,1.41,43,0.01,44,1.091,45,0.703,46,1,47,0.95,52,1.02,55,1.048,56,0.998,69,1.012,71,1.879,75,0.005,76,2.245,80,0.005,85,1.284,86,1.573,99,0.193,104,0.163,128,0.225,129,0.123,132,0.267,138,0.565,140,1.382,141,1.105,155,1.927,159,0.975,160,1.095,187,1.68,195,0.817,196,0.901,197,1.242,198,0.946,199,1.047,200,1.047,201,1.02,207,0.923,208,1.304,209,1.304,210,2.274,211,1.187,212,0.817,213,1.336,215,1.336,218,1.677,255,1.41,257,2.245,258,2.126,259,1.242,282,3.069,299,1.481,307,1.133,308,0.817,312,2.592,320,0.879,384,2.783,389,3.026,392,3.308,401,1.132,402,1.633,403,2.969,406,2.863,407,1.772,410,2.107,411,1.273,412,3.061,415,1.677,416,2.081,418,2.592,420,2.767,423,1.377,429,2.88,430,1.81,431,1.834,433,1.512,434,2.177,435,3.49,436,2.512,438,1.42,439,1.465,446,2.592,447,1.927,450,1.563,451,1.677,452,1.249,453,1.512,455,1.249,456,2.305,459,0.879,460,2.177,463,1.618,468,2.543,470,2.32,471,2.32,474,2.068,476,0.51,477,1.75,478,1.047,479,2.049,480,1.047,481,1.047,482,0.946,483,1.047,484,0.923,485,1.852,486,0.946,487,1.047,488,1.336,489,1.852,490,0.946,491,0.995,492,1.047,493,0.946,494,1.047,495,0.946,496,0.901,497,1.047,498,0.946,499,1.047,500,0.946,501,0.946,502,1.047,503,0.946,504,1.02,505,0.946,506,1.047,507,0.946,508,1.553,509,0.923,510,0.946,511,0.946,512,1.047,513,0.946,514,1.852,515,0.946,516,1.44,517,1.553,518,0.923,519,0.946,520,1.807,521,2.162,522,1.047,523,0.923,524,0.901,525,0.946,526,1.047,527,0.946,528,1.047,529,0.97,530,1.047,531,0.946,532,1.273,533,0.946,534,1.404,535,0.946,536,1.047,537,0.946,538,1.304,539,1.047,540,0.946,541,1.047,542,1.047,562,1.633,605,1.337,616,1.984,676,3.069,679,2.512,680,0.97,681,2.78,682,2.618,683,1.299,684,1.262,685,2.234,692,1.44,693,1.901,694,2.107,698,2.366,703,3.231,719,2.489,720,1.68,721,1.741,728,4.939,733,1.887,734,1.677,735,2.305,736,3.069,737,2.305,738,1.81,739,2.177,745,3.209,752,2.177,753,2.177,852,2.177,867,3.545,913,2.926,989,3.069,992,1.822,1150,1.822,1272,2.687,1329,2.489,1337,3.231,1390,2.458,1393,2.926,1394,3.231,1564,3.069,1568,3.231,1667,3.231,1711,4.761,1854,4.35,2459,3.934,2792,3.648,2883,5.073,2894,5.37,2895,2.458,2896,2.908,2897,4.35,2898,4.315,2899,3.934,2900,3.934,2901,4.315,2902,3.934,2903,4.315,2904,5.146,2905,3.648,2906,3.934,2907,5.146,2908,3.934,2909,5.694,2910,5.954,2911,3.934,2912,4.315,2913,5.694,2914,2.908,2915,4.315,2916,4.315,2917,3.934,2918,4.315,2919,4.315,2920,4.315,2921,2.908,2922,4.895,2923,4.895,2924,4.895,2925,3.298,2926,4.895,2927,3.298,2928,3.298,2929,4.895,2930,3.934,2931,4.895,2932,3.298,2933,3.298,2934,2.908,2935,4.895,2936,3.298,2937,6.459,2938,3.298,2939,4.895]],["title/modules/RotationSliderModule.html",[543,0.627,2876,3.068]],["body/modules/RotationSliderModule.html",[3,0.131,4,0.16,5,0.117,6,0.102,43,0.01,75,0.008,80,0.008,99,0.349,104,0.315,129,0.16,132,0.236,426,1.617,476,0.985,520,2.551,521,1.54,543,0.91,545,1.784,546,1.828,547,2.524,548,1.922,549,1.828,550,2.524,561,2.359,562,1.784,564,2.023,568,2.3,574,3.184,575,2.509,759,2.687,760,2.13,763,5.328,764,4.454,765,4.024,766,3.364,1711,3.498,2876,6.198,2883,4.207,2894,4.454,2940,5.619,2941,5.619,2942,5.619,2943,6.374,2944,6.374,2945,6.374,2946,7.625,2947,6.374]],["title/injectables/SceneState.html",[0,1.358,92,2.511]],["body/injectables/SceneState.html",[0,1.349,2,1.693,3,0.058,4,0.071,5,0.052,6,0.136,11,0.574,15,2.363,16,1.717,18,0.277,19,0.468,20,2.204,22,2.514,23,2.036,24,4.5,25,1.134,29,3.027,32,2.302,35,0.983,36,2.497,37,3.691,38,2.028,40,0.847,41,0.868,42,1.286,43,0.01,44,0.831,45,0.715,46,0.911,47,1.16,48,1.316,49,3.181,50,2.92,55,1.279,56,0.674,65,1.937,69,1.018,71,1.772,75,0.005,80,0.005,85,0.868,86,0.55,88,2.095,90,2.102,92,2.495,96,3.325,99,0.328,102,1.579,104,0.14,105,4.126,106,1.937,107,1.258,108,1.258,109,1.182,111,2.394,112,0.833,113,1.219,114,1.025,118,1.62,121,1.148,122,1.148,123,1.115,124,1.054,125,1.115,126,2.111,127,1.342,128,0.297,129,0.11,131,1.219,132,0.105,133,1.761,137,3.048,138,1.377,140,1.39,154,2.572,159,0.473,160,0.948,161,1.258,162,1.342,163,1.979,164,1.693,165,1.979,166,1.979,167,1.869,168,1.979,169,1.979,187,2.437,204,1.182,211,0.786,256,2.102,261,1.554,286,1.497,296,1.453,298,1.025,307,1.032,325,0.793,336,0.592,352,3.28,380,1.44,382,2.705,386,3.419,387,1.979,407,2.655,413,3.87,431,1.73,437,3.345,447,2.353,452,0.606,453,1.299,455,0.606,468,1.115,521,1.857,631,3.048,646,1.44,647,1.495,650,1.44,651,1.44,653,1.219,670,2.394,745,1.258,872,1.084,899,2.92,921,3.282,928,4.5,956,1.775,967,5.708,969,2.879,970,2.111,971,2.879,972,2.879,973,2.879,974,3.505,980,1.693,996,3.251,1001,2.934,1003,4.811,1049,1.182,1150,1.623,1200,5.827,1312,3.406,1314,1.554,1555,2.276,1582,2.276,1900,1.389,1967,2.608,1969,3.048,1970,4.51,1971,3.048,1973,2.879,1978,2.705,1992,1.979,1993,2.522,1994,1.389,1995,1.693,2006,2.735,2038,3.512,2039,1.979,2040,1.869,2099,3.181,2100,3.048,2103,3.048,2105,1.979,2107,1.693,2116,3.419,2117,1.979,2197,1.869,2198,1.979,2199,1.869,2201,5.539,2202,2.879,2205,3.573,2206,1.869,2213,1.979,2216,1.979,2217,1.979,2251,3.048,2256,1.979,2441,2.276,2569,2.276,2625,3.505,2627,3.505,2628,3.251,2687,3.251,2910,3.251,2930,2.276,2948,2.111,2949,4.362,2950,4.362,2951,4.69,2952,4.69,2953,4.69,2954,4.69,2955,4.69,2956,4.69,2957,6.01,2958,4.362,2959,3.846,2960,2.832,2961,3.846,2962,2.832,2963,2.832,2964,3.846,2965,3.846,2966,3.846,2967,5.69,2968,3.846,2969,3.846,2970,5.269,2971,3.846,2972,3.846,2973,3.846,2974,7.671,2975,2.832,2976,2.832,2977,2.832,2978,2.832,2979,2.832,2980,2.832,2981,2.832,2982,2.832,2983,2.832,2984,2.832,2985,2.832,2986,2.832,2987,2.832,2988,2.832,2989,2.832,2990,2.832,2991,2.832,2992,4.362,2993,2.832,2994,2.832,2995,2.832,2996,2.832,2997,4.275,2998,2.497,2999,2.276,3000,2.276,3001,2.276,3002,2.497,3003,2.111,3004,3.846,3005,2.276,3006,2.497,3007,3.846,3008,2.497,3009,3.846,3010,2.497,3011,2.497,3012,2.497,3013,2.497,3014,2.497,3015,2.497,3016,2.497,3017,3.846,3018,2.497,3019,2.497,3020,2.497,3021,2.497,3022,2.497,3023,2.497,3024,3.846,3025,2.497,3026,2.497,3027,2.497,3028,2.497,3029,2.497,3030,2.497,3031,3.846,3032,2.497,3033,2.497,3034,3.846,3035,2.497,3036,2.497,3037,2.497,3038,3.505,3039,6.465,3040,4.69,3041,2.497,3042,3.846,3043,3.846,3044,2.497,3045,2.497,3046,3.846,3047,3.846,3048,2.497,3049,2.497,3050,2.497,3051,2.497,3052,2.497,3053,2.497,3054,2.497,3055,2.497,3056,2.497,3057,2.497,3058,2.497,3059,2.497,3060,2.497,3061,2.497,3062,2.497,3063,2.497,3064,2.497,3065,2.497,3066,2.497,3067,2.497,3068,3.846,3069,2.497,3070,2.497,3071,2.497,3072,2.497,3073,2.497,3074,2.497,3075,2.497,3076,3.846,3077,2.497,3078,2.497,3079,2.497,3080,3.846,3081,2.497,3082,2.497,3083,2.497,3084,2.497,3085,2.497,3086,2.497,3087,2.497,3088,2.497,3089,2.497,3090,2.497,3091,2.497,3092,2.497,3093,2.497,3094,2.497,3095,2.497,3096,2.497,3097,2.497,3098,2.497,3099,2.497,3100,2.497,3101,2.497,3102,2.497,3103,2.497,3104,2.497,3105,2.497,3106,2.497,3107,2.497,3108,2.497,3109,2.497]],["title/interfaces/SceneStateModel.html",[128,0.299,3003,3.272]],["body/interfaces/SceneStateModel.html",[0,1.488,3,0.066,4,0.081,5,0.059,6,0.052,11,0.424,15,2.295,16,1.269,18,0.315,19,0.516,20,1.909,22,2.395,23,1.841,24,4.51,29,2.557,35,0.889,37,3.352,40,0.625,41,0.641,43,0.01,44,0.448,45,0.584,47,0.934,48,0.972,49,2.877,50,2.641,56,0.498,65,1.431,69,0.924,71,1.863,75,0.005,80,0.005,85,0.641,88,1.894,90,1.875,92,1.844,96,3.31,99,0.335,102,1.742,104,0.159,105,4.256,106,2.137,107,1.431,108,1.431,109,1.346,111,2.641,112,0.948,113,1.387,114,1.167,118,1.844,121,1.306,122,1.306,123,1.269,124,1.199,125,1.269,126,2.402,127,1.528,128,0.328,129,0.121,131,1.387,132,0.119,133,1.789,137,3.362,138,1.414,140,1.41,154,2.478,159,0.538,160,0.763,161,1.431,162,1.528,163,2.252,164,1.927,165,2.252,166,2.252,167,2.127,168,2.252,169,2.252,187,2.459,194,0.838,204,1.346,211,0.84,256,2.225,261,1.769,286,1.106,296,1.314,298,1.167,307,0.625,325,0.902,336,1.203,352,3.16,380,1.639,382,2.927,386,3.653,387,2.252,407,2.764,413,3.919,431,1.818,437,3.352,447,1.894,452,0.69,453,1.478,455,0.69,468,1.269,521,1.845,631,3.362,646,1.639,647,1.701,650,1.639,651,1.639,653,1.387,670,2.641,745,1.431,872,1.233,899,2.641,921,2.927,928,4.73,956,2.02,967,5.968,969,3.176,970,2.402,971,3.176,972,3.176,973,3.176,974,3.867,980,1.927,996,2.402,1001,2.941,1003,3.586,1049,1.346,1150,1.199,1200,5.689,1312,3.039,1314,1.769,1555,2.59,1582,2.59,1900,1.581,1967,2.877,1969,3.362,1970,4.023,1971,3.362,1973,3.176,1978,2.446,1992,2.252,1993,2.281,1994,1.581,1995,1.927,2006,3.016,2038,2.127,2039,2.252,2040,2.127,2099,3.442,2100,3.362,2103,3.362,2105,2.252,2107,1.927,2116,3.294,2117,2.252,2197,2.127,2198,2.252,2199,2.127,2201,5.584,2202,3.176,2205,3.817,2206,2.127,2213,2.252,2216,2.252,2217,2.252,2251,3.362,2256,2.252,2441,2.59,2569,2.59,2625,3.867,2627,3.867,2628,3.586,2687,2.402,2910,3.586,2930,2.59,2948,2.402,2951,2.841,2952,2.841,2953,2.841,2954,2.841,2955,2.841,2956,2.841,2957,4.242,2959,2.841,2961,2.841,2964,2.841,2965,2.841,2966,2.841,2967,5.629,2968,2.841,2969,2.841,2970,5.076,2971,2.841,2972,2.841,2973,2.841,2974,7.686,2997,4.627,2998,2.841,2999,2.59,3000,2.59,3001,2.59,3002,2.841,3003,3.586,3004,6.023,3005,2.59,3006,2.841,3007,4.242,3008,2.841,3009,4.242,3010,2.841,3011,2.841,3012,2.841,3013,2.841,3014,2.841,3015,2.841,3016,2.841,3017,4.242,3018,2.841,3019,2.841,3020,2.841,3021,2.841,3022,2.841,3023,2.841,3024,4.242,3025,2.841,3026,2.841,3027,2.841,3028,2.841,3029,2.841,3030,2.841,3031,4.242,3032,2.841,3033,2.841,3034,4.242,3035,2.841,3036,2.841,3037,2.841,3038,3.867,3039,6.73,3040,5.076,3041,2.841,3042,4.242,3043,4.242,3044,2.841,3045,2.841,3046,4.242,3047,4.242,3048,2.841,3049,2.841,3050,2.841,3051,2.841,3052,2.841,3053,2.841,3054,2.841,3055,2.841,3056,2.841,3057,2.841,3058,2.841,3059,2.841,3060,2.841,3061,2.841,3062,2.841,3063,2.841,3064,2.841,3065,2.841,3066,2.841,3067,2.841,3068,4.242,3069,2.841,3070,2.841,3071,2.841,3072,2.841,3073,2.841,3074,2.841,3075,2.841,3076,4.242,3077,2.841,3078,2.841,3079,2.841,3080,4.242,3081,2.841,3082,2.841,3083,2.841,3084,2.841,3085,2.841,3086,2.841,3087,2.841,3088,2.841,3089,2.841,3090,2.841,3091,2.841,3092,2.841,3093,2.841,3094,2.841,3095,2.841,3096,2.841,3097,2.841,3098,2.841,3099,2.841,3100,2.841,3101,2.841,3102,2.841,3103,2.841,3104,2.841,3105,2.841,3106,2.841,3107,2.841,3108,2.841,3109,2.841]],["title/interfaces/SlicesConfig.html",[128,0.299,1972,2.511]],["body/interfaces/SlicesConfig.html",[0,1.172,3,0.049,4,0.059,5,0.043,6,0.038,8,1.086,11,0.312,15,2.028,16,0.932,18,0.231,19,0.407,20,1.837,22,2.377,23,0.906,29,1.051,35,0.437,37,2.907,40,0.46,41,0.471,43,0.01,44,1.036,45,0.681,47,0.735,48,0.714,49,1.416,50,1.3,53,4.122,56,1.246,65,1.051,69,0.987,71,1.793,75,0.004,80,0.004,88,0.932,90,2.058,91,1.372,96,3.32,99,0.311,102,1.372,104,0.117,105,2.501,106,1.683,107,1.051,108,1.051,109,0.989,112,0.696,113,1.631,114,0.857,119,1.484,121,1.536,122,1.536,123,0.932,124,0.881,125,1.492,127,1.796,128,0.323,129,0.167,131,1.019,132,0.088,133,1.406,138,1.403,140,1.347,141,0.718,148,3.238,154,3.14,155,1.866,159,1.334,160,1.3,161,1.051,162,1.122,172,1.563,173,1.563,176,1.655,181,0.834,183,1.655,194,0.616,211,0.499,244,1.336,245,1.536,255,1.604,256,2.375,268,2.502,280,1.355,286,1.858,296,1.812,298,2.944,300,3.702,302,1.3,303,1.204,307,0.735,325,0.663,336,0.99,352,2.08,361,1.554,384,2.575,389,2.8,392,3.061,402,0.663,407,1.716,411,1.408,431,1.804,437,2.325,447,1.492,452,1.159,455,1.159,459,0.631,496,1.812,521,1.719,524,1.479,538,0.631,622,1.683,670,3.252,677,1.416,682,1.536,683,0.932,684,0.906,685,0.906,688,2.833,694,2.04,698,0.96,699,3.217,702,1.162,778,1.3,785,2.173,809,2.898,837,1.01,872,2.419,920,4.458,921,1.927,958,3.128,968,4.97,969,3.911,971,1.563,972,1.563,973,1.563,975,2.502,980,1.416,1001,2.72,1049,3.335,1150,0.881,1260,2.711,1272,1.3,1307,2.973,1310,3.785,1312,3.503,1314,1.3,1368,2.376,1371,3.311,1372,3.788,1373,3.336,1374,3.127,1377,2.898,1422,1.204,1793,2.833,1794,2.648,1796,3.785,1797,4.417,1798,3.128,1808,1.765,1823,1.416,1847,3.779,1848,1.655,1894,1.859,1895,2.601,1900,1.162,1932,1.484,1964,1.563,1965,1.563,1966,1.903,1967,3.779,1968,4.172,1969,4.417,1970,4.417,1971,4.417,1972,4.068,1973,4.694,1974,4.173,1975,1.563,1976,3.046,1977,4.417,1978,1.927,1979,2.376,1980,2.825,1981,1.484,1982,1.484,1983,1.903,1984,1.765,1985,1.903,1986,1.563,1987,1.903,1988,1.484,1989,2.266,1990,1.903,1991,1.903,1992,1.655,1993,1.796,1994,1.162,1995,1.416,1996,1.355,1997,1.355,1998,1.765,1999,4.161,2000,3.046,2001,3.714,2002,1.765,2003,1.903,2004,1.903,2005,1.903,2006,2.97,2007,2.376,2008,5.007,2009,1.903,2010,1.903,2011,1.903,2012,1.903,2013,1.903,2014,1.903,2015,1.903,2016,1.903,2017,1.903,2018,1.903,2019,1.903,2020,1.903,2021,1.903,2022,1.903,2023,1.903,2024,1.903,2025,1.903,2026,1.903,2027,1.903,2028,1.903,2029,1.903,2030,1.903,2031,1.903,2032,1.903,2033,1.903,2034,1.903,2035,1.765,2036,1.903,2037,1.903,2038,1.563,2039,1.655,2040,1.563,2041,1.903,2042,1.903,2043,1.903,2044,5.333,2045,3.046,2046,1.903,2047,4.353,2048,1.903,2049,3.046,2050,3.808,2051,1.903,2052,5.233,2053,1.903,2054,1.903,2055,1.903,2056,1.903,2057,1.903,2058,1.903,2059,1.903,2060,1.903,2061,1.903,2062,1.903,2063,1.903,2064,1.903,2065,1.903,2066,1.903,2067,1.903,2068,1.903,2069,1.903,2070,1.765,2071,3.808,2072,4.353,2073,1.903,2074,1.903,2075,1.903,2076,1.903,2077,1.903,2078,1.903,2079,1.903,2080,1.903,2081,1.903,2082,3.046,2083,1.903,2084,1.903,2085,1.903,2086,1.903,2087,1.903,2088,1.903,2089,1.903,2090,1.903,2091,1.903,2092,1.903,2093,1.903,2094,1.903,2095,1.903,2096,1.903,2097,1.903,2098,3.046,2099,1.416,2100,1.655,2101,1.903,2102,1.563,2103,1.655,2104,3.046,2105,3.311,2106,3.046,2107,2.266,2108,3.046,2109,1.903,2110,1.903,2111,1.903,2112,1.903,2113,1.903,2114,1.903,2115,1.903,2116,1.355,2117,1.655,2118,1.903,2119,1.903,2120,1.903,2121,1.903,2122,1.903,2123,1.903,2124,1.903,2125,1.903,2126,1.903,2127,1.903,2128,2.266,2129,1.903,2130,1.903,2131,1.903,2132,1.416,2133,1.903,2134,4.353,2135,1.903,2136,1.416,2137,1.903,2138,1.903,2139,1.903,2140,1.903,2141,1.903,2142,1.903,2143,3.046,2144,2.825,2145,1.903,2146,1.903,2147,1.903,2148,1.903]],["title/interfaces/SlicesConfig-1.html",[128,0.249,187,1.256,1972,2.094]],["body/interfaces/SlicesConfig-1.html",[3,0.107,4,0.131,5,0.096,6,0.084,11,0.687,18,0.51,19,0.723,40,1.013,41,1.039,43,0.01,44,0.936,45,0.616,47,1.013,55,1.118,56,1.041,69,0.706,71,2.238,75,0.007,80,0.007,85,1.039,86,1.447,99,0.265,104,0.258,127,2.475,128,0.508,129,0.169,132,0.249,133,1.064,138,1.154,140,1.244,159,1.245,160,1.183,181,1.84,194,1.357,195,0.795,208,1.391,209,1.391,210,1.325,211,0.886,213,1.426,215,1.426,255,2.018,258,2.558,259,1.325,320,1.391,336,1.091,361,2.34,477,1.325,523,1.461,524,2.411,605,2.116,673,3.122,675,3.425,676,4.939,677,3.122,679,2.899,680,1.536,681,2.899,682,2.73,683,2.056,684,1.998,685,2.578,689,3.892,690,3.447,691,3.447,692,1.536,693,1.7,694,3.594,695,3.892,696,3.447,698,2.73,699,2.18,700,4.223,701,3.122,702,3.865,703,3.447,704,3.447,707,3.447,708,3.273,715,3.892,774,2.987,837,1.391,1292,4.223,1972,4.507,1977,5.506,1999,5.397,2001,5.112,2007,4.675,2278,2.987,2419,3.892,2886,3.447,3110,3.649,3111,5.558,3112,4.603,3113,4.603,3114,4.603,3115,4.603,3116,4.603,3117,4.196,3118,4.603,3119,6.574,3120,6.574,3121,4.603,3122,5.939,3123,4.603,3124,5.939,3125,4.603,3126,4.603]],["title/components/SlicesInputComponent.html",[195,0.443,523,1.229]],["body/components/SlicesInputComponent.html",[3,0.072,4,0.088,5,0.094,6,0.128,11,0.795,12,1.267,18,0.342,19,0.549,25,1.33,32,2.7,35,0.647,38,1.889,40,0.993,41,1.017,42,1.236,43,0.01,44,1.126,45,0.675,46,0.876,47,0.993,52,1.083,55,1.513,56,1.028,69,0.899,71,1.571,75,0.005,76,2.346,80,0.005,85,1.322,86,1.517,99,0.202,104,0.173,127,2.425,128,0.348,129,0.128,132,0.273,133,0.714,138,0.876,140,1.116,141,0.663,159,1.009,160,1.122,181,1.803,187,1.755,195,0.769,196,0.956,197,1.298,198,1.004,199,1.111,200,1.111,201,1.083,207,0.98,208,1.363,209,1.363,210,2.285,211,1.192,212,0.867,213,1.397,215,1.397,218,1.78,255,1.843,258,2.56,259,1.686,299,1.533,306,1.718,307,1.173,308,0.867,320,0.933,336,1.068,361,2.188,401,1.201,402,1.86,403,2.601,406,1.958,410,1.507,411,0.91,415,1.78,416,1.056,423,1.462,429,2.775,431,1.794,436,2.202,438,1.507,439,1.555,443,1.507,446,2.271,447,1.379,450,1.66,451,1.78,452,0.749,453,1.606,455,1.095,456,2.447,459,0.933,463,2.509,470,1.66,471,1.66,472,3.457,476,0.541,477,1.794,478,1.111,479,2.109,480,1.111,481,1.111,482,1.004,483,1.111,484,0.98,485,1.918,486,1.004,487,1.111,488,1.397,489,1.918,490,1.004,491,1.056,492,1.111,493,1.004,494,1.111,495,1.004,496,0.956,497,1.111,498,1.004,499,1.111,500,1.004,501,1.004,502,1.111,503,1.004,504,1.083,505,1.004,506,1.111,507,1.004,508,1.623,509,0.98,510,1.004,511,1.004,512,1.111,513,1.004,514,1.918,515,1.004,516,1.505,517,1.623,518,0.98,519,1.004,520,0.98,521,0.846,522,1.111,523,1.86,524,2.387,525,1.004,526,1.111,527,1.004,528,1.111,529,1.03,530,1.111,531,1.004,532,1.33,533,1.004,534,1.467,535,1.004,536,1.111,537,1.004,538,1.363,539,1.111,540,1.004,541,1.111,542,1.111,573,3.261,605,1.419,616,2.45,673,2.093,675,1.78,676,4.167,677,3.058,679,2.601,680,1.03,681,2.202,682,2.694,683,1.379,684,1.34,685,2.313,689,3.812,690,3.376,691,3.989,692,1.505,693,1.968,694,3.534,695,3.812,696,3.376,698,2.45,699,2.136,700,4.432,701,3.058,702,3.623,703,3.376,704,3.376,707,2.311,708,2.195,715,3.812,719,2.601,720,1.755,721,1.848,728,3.989,729,3.087,730,2.447,731,3.087,732,3.087,733,2.003,734,1.78,735,2.447,736,2.195,737,2.447,738,1.922,739,2.311,740,3.087,741,2.814,742,2.61,743,2.447,744,5.328,745,2.684,746,3.574,747,2.814,748,2.195,749,2.61,752,2.311,753,2.311,774,2.003,837,1.363,1292,2.195,1972,4.224,1977,4.941,1999,4.78,2001,3.207,2007,3.789,2165,3.087,2278,2.926,2419,3.812,2886,5.263,2934,3.087,3110,5.572,3111,4.954,3112,5.328,3113,5.328,3114,3.087,3115,4.51,3116,4.51,3117,4.111,3118,4.51,3119,5.328,3120,5.328,3121,3.087,3122,4.51,3123,3.087,3124,4.51,3125,5.86,3126,3.087,3127,5.115,3128,3.502,3129,3.502,3130,3.502,3131,5.115,3132,3.502,3133,3.502,3134,3.502,3135,6.647,3136,5.115,3137,3.502]],["title/modules/SlicesInputModule.html",[543,0.627,2877,3.068]],["body/modules/SlicesInputModule.html",[3,0.129,4,0.158,5,0.115,6,0.101,43,0.01,75,0.008,80,0.008,99,0.354,104,0.31,129,0.158,132,0.232,211,0.827,325,1.758,426,1.594,476,0.971,523,2.547,524,1.715,543,0.897,545,1.758,546,1.802,547,2.508,548,1.895,549,1.802,550,2.508,561,2.338,562,1.758,564,1.993,568,2.28,572,4.39,573,3.082,574,3.156,575,2.473,758,5.048,759,2.664,760,2.099,761,5.282,762,4.39,763,5.282,764,4.39,765,3.989,766,3.315,767,5.634,768,5.048,2877,6.18,2886,4.146,3110,4.39,3138,5.538,3139,5.538,3140,5.538,3141,7.559]],["title/components/StageNavComponent.html",[195,0.443,525,1.259]],["body/components/StageNavComponent.html",[3,0.055,4,0.067,5,0.077,6,0.135,11,0.878,12,1.036,18,0.409,19,0.449,20,1.115,25,1.088,32,2.208,35,0.496,38,2.023,40,0.812,41,0.832,42,1.612,43,0.01,44,1.089,45,0.742,46,1.143,47,0.812,52,1.796,55,1.427,56,1.077,61,4.058,69,0.363,75,0.004,80,0.004,85,1.327,86,1.398,99,0.165,104,0.133,124,0.999,129,0.105,132,0.246,133,0.853,138,0.46,140,1.073,141,0.792,155,2.742,159,0.97,160,1.058,181,1.474,187,0.921,195,0.801,196,0.733,197,1.062,198,0.77,199,0.852,200,0.852,201,0.83,207,0.751,208,1.115,209,1.115,210,2.23,211,1.166,212,0.665,213,1.142,215,1.142,227,3.689,232,3.689,233,3.689,243,3.764,249,2,250,3.593,251,2.366,252,4.756,255,0.649,256,0.874,257,1.919,258,2.304,259,1.878,261,2.822,262,3.16,271,3.119,272,3.119,285,2.762,286,2.289,296,2.067,299,1.305,307,0.998,308,0.665,320,0.715,321,1.875,323,4.156,332,2.16,336,1.581,355,3.713,384,0.972,400,3.689,401,0.921,402,2.016,403,3.319,404,2.394,405,2.394,406,1.968,409,3.602,411,0.698,412,1.272,415,1.365,416,0.809,420,2.438,423,1.747,429,1.121,430,2.822,431,1.597,436,2.213,438,1.155,439,1.192,443,1.155,444,1.473,446,2.579,447,2.287,449,1.875,450,1.983,451,2.127,452,1.427,453,1.231,455,1.491,459,2.2,463,2.053,466,1.416,470,1.272,471,1.272,472,1.535,476,0.415,477,1.597,478,0.852,479,1.843,480,0.852,481,0.852,482,0.77,483,0.852,484,0.751,485,1.632,486,0.77,487,0.852,488,1.142,489,1.632,490,0.77,491,0.809,492,0.852,493,0.77,494,0.852,495,0.77,496,0.733,497,0.852,498,0.77,499,0.852,500,0.77,501,0.77,502,0.852,503,0.77,504,0.83,505,0.77,506,0.852,507,0.77,508,1.328,509,0.751,510,0.77,511,0.77,512,0.852,513,0.77,514,1.632,515,0.77,516,1.231,517,1.328,518,0.751,519,0.77,520,0.751,521,0.649,522,0.852,523,0.751,524,0.733,525,1.666,526,0.852,527,0.77,528,0.852,529,0.789,530,0.852,531,0.77,532,1.088,533,0.77,534,1.2,535,0.77,536,0.852,537,0.77,538,1.777,539,0.852,540,0.77,541,0.852,542,0.852,605,1.088,616,1.696,622,2.284,679,2.71,680,0.789,681,2.998,682,2.354,683,1.057,684,1.027,685,1.968,692,1.231,693,1.674,694,1.155,696,3.833,698,2.084,719,2.127,720,1.436,721,1.416,739,1.771,742,3.119,745,2.579,837,1.856,851,1.771,920,4.517,921,3.764,937,3.362,975,4.156,980,3.074,986,2.615,989,1.682,992,2.755,1001,2.213,1049,3.472,1068,2.296,1118,5.884,1272,3.187,1318,6.673,1322,2.501,1329,2.953,1330,3.391,1352,2.366,1353,2,1392,2,1393,1.605,1568,3.833,1601,3.394,1650,3.64,1667,4.402,1677,3.593,1684,2.366,1711,2.296,1722,6.38,1777,1.416,1792,3.689,1796,1.473,1820,3.362,1821,3.362,1852,3.362,1856,4.867,2170,1.473,2278,1.535,2497,3.689,2664,5.12,2905,5.191,2908,4.667,3142,6.276,3143,2.157,3144,3.689,3145,4.184,3146,4.184,3147,7.57,3148,5.143,3149,4.184,3150,5.143,3151,6.296,3152,5.143,3153,5.143,3154,4.184,3155,4.184,3156,5.808,3157,5.143,3158,5.143,3159,5.143,3160,5.808,3161,5.808,3162,2.684,3163,2.684,3164,4.184,3165,4.184,3166,5.143,3167,5.143,3168,4.534,3169,2.684,3170,2.684,3171,2.684,3172,4.184,3173,4.184,3174,5.143,3175,4.132,3176,5.88,3177,5.143,3178,5.143,3179,4.184,3180,2.684,3181,5.808,3182,4.184,3183,2.684,3184,2.684,3185,2.684,3186,4.184,3187,2.684,3188,4.184,3189,2.684,3190,2.684,3191,2.684,3192,2.684,3193,5.12,3194,5.808,3195,2.684,3196,2.684,3197,2.684,3198,2.684,3199,5.143,3200,2.684,3201,2.684,3202,2.684,3203,2.684,3204,2.684,3205,4.184,3206,2.684,3207,2.684,3208,2.684,3209,2.684,3210,2.684,3211,2.684,3212,2.684,3213,5.808,3214,2.366,3215,2.684,3216,2.684,3217,5.143,3218,2.684,3219,2.684]],["title/modules/StageNavModule.html",[543,0.627,1113,3.068]],["body/modules/StageNavModule.html",[3,0.127,4,0.156,5,0.113,6,0.1,43,0.01,75,0.008,80,0.008,99,0.353,104,0.306,129,0.156,132,0.229,426,1.573,459,1.652,476,0.958,505,2.151,525,2.607,543,0.885,545,1.735,546,1.779,547,2.494,548,1.87,549,1.779,550,2.494,561,2.32,562,1.735,564,2.38,568,2.262,574,3.131,575,2.441,759,2.643,760,2.072,765,3.958,766,3.272,1113,6.261,1118,4.332,1363,6.026,1364,4.982,1708,4.332,1744,5.754,1873,6.026,1874,4.982,1882,5.466,1883,5.466,2506,6.611,2507,5.466,3142,4.621,3220,5.466,3221,5.466,3222,5.466,3223,6.2,3224,6.2,3225,6.2]],["title/modules/StoreModule.html",[543,0.627,1126,3.068]],["body/modules/StoreModule.html",[1,4.355,3,0.122,4,0.149,5,0.108,6,0.095,8,3.341,9,3.902,43,0.01,75,0.008,80,0.008,88,2.868,90,1.925,91,2.638,92,4.168,99,0.358,102,2.141,104,0.292,109,2.469,118,3.382,119,3.706,120,4.751,129,0.183,132,0.218,138,1.013,164,3.535,203,3.535,211,0.778,245,2.953,325,2.039,361,2.09,443,2.545,543,0.844,545,1.655,564,1.876,568,2.197,650,3.006,651,3.006,702,2.901,899,3.998,956,4.567,1009,5.212,1126,5.091,1159,4.131,1414,4.407,1425,4.809,1715,4.131,1847,3.535,1919,4.131,1993,3.453,1994,2.901,1995,3.535,2170,3.245,2559,4.751,2822,4.407,2899,4.751,3001,4.751,3226,4.751,3227,5.913,3228,5.212,3229,5.913,3230,5.212,3231,7.462,3232,5.913,3233,5.212,3234,5.913,3235,5.913,3236,5.212,3237,4.751,3238,5.913,3239,5.913,3240,5.913,3241,5.913,3242,5.913,3243,5.913,3244,5.913,3245,5.913,3246,5.913,3247,5.913,3248,5.913,3249,5.212,3250,5.913,3251,5.212,3252,5.913,3253,5.913,3254,5.913,3255,5.913]],["title/interfaces/Tag.html",[12,1.087,128,0.299]],["body/interfaces/Tag.html",[3,0.129,4,0.157,5,0.115,6,0.101,8,2.87,11,0.824,12,2.188,18,0.611,19,0.81,43,0.01,45,0.815,69,1.137,70,4.374,71,2.105,75,0.008,77,3.742,80,0.009,84,4.374,115,5.547,116,3.924,128,0.514,129,0.203,139,5.142,142,5.344,154,3.617,155,3.44,157,5.344,188,4.374,194,1.627,277,2.395,402,2.111,1893,4.728,1894,3.7,1975,4.131,3256,4.665,3257,4.665,3258,5.518,3259,5.518]],["title/components/TagListComponent.html",[195,0.443,527,1.259]],["body/components/TagListComponent.html",[3,0.08,4,0.098,5,0.101,6,0.133,8,1.782,11,0.918,12,2.281,18,0.38,19,0.592,25,1.434,30,4.862,33,5.715,35,0.718,38,1.976,40,1.07,41,1.097,42,1.686,43,0.01,44,1.153,45,0.748,46,1.195,47,1.07,52,1.202,55,1.372,56,0.852,66,4.431,69,0.867,71,1.666,75,0.006,80,0.006,85,1.097,86,1.07,99,0.252,104,0.192,115,3.64,129,0.098,132,0.283,133,1.124,139,3.297,140,1.288,141,0.736,142,4.604,144,3.123,155,1.53,157,2.565,159,1.165,160,1.214,180,2.897,195,0.743,196,1.061,197,1.399,198,1.115,199,1.233,200,1.233,201,1.202,207,1.088,208,1.469,209,1.469,210,2.303,211,1.2,212,0.962,213,1.506,215,1.506,255,1.333,258,1.622,259,1.399,299,1.626,307,1.244,308,0.962,320,1.035,389,1.53,392,1.673,401,1.334,402,1.088,408,3.155,409,2.223,410,1.673,411,1.434,431,0.986,452,0.832,455,0.832,459,1.035,460,2.565,470,1.842,471,1.842,472,3.155,476,0.601,477,1.869,478,1.233,479,2.213,480,1.233,481,1.233,482,1.115,483,1.233,484,1.088,485,2.034,486,1.115,487,1.233,488,1.506,489,2.034,490,1.115,491,1.172,492,1.233,493,1.115,494,1.233,495,1.115,496,1.061,497,1.233,498,1.115,499,1.233,500,1.115,501,1.115,502,1.233,503,1.115,504,1.202,505,1.115,506,1.233,507,1.115,508,1.75,509,1.088,510,1.115,511,1.115,512,1.233,513,1.115,514,2.034,515,1.115,516,1.622,517,1.75,518,1.088,519,1.115,520,1.088,521,0.939,522,1.233,523,1.088,524,1.061,525,1.115,526,1.233,527,2.001,528,1.233,529,1.143,530,1.233,531,1.115,532,1.434,533,1.115,534,1.582,535,1.115,536,1.233,537,1.115,538,1.469,539,1.233,540,1.115,541,1.233,542,1.233,605,1.575,616,2.235,653,1.673,679,3.17,680,1.143,681,2.759,682,2.827,683,1.53,684,1.487,685,2.453,692,1.622,693,2.087,698,2.598,719,2.804,720,1.892,721,2.051,992,1.446,1000,2.565,1260,3.155,1329,3.546,1507,3.457,1893,3.457,1894,3.144,2519,4.11,2586,3.426,2636,6.313,2888,6.181,3260,5.795,3261,3.426,3262,5.515,3263,6.409,3264,5.515,3265,5.515,3266,6.409,3267,6.409,3268,5.515,3269,3.887,3270,3.887,3271,5.515,3272,3.887,3273,4.431,3274,4.862,3275,5.515,3276,3.887,3277,5.515,3278,3.887,3279,4.862,3280,5.515,3281,3.887,3282,3.887,3283,3.887,3284,3.887,3285,3.887,3286,6.409,3287,3.887,3288,3.887,3289,4.862,3290,3.426,3291,3.887,3292,3.426,3293,3.426]],["title/modules/TagListModule.html",[543,0.627,2878,3.068]],["body/modules/TagListModule.html",[3,0.133,4,0.163,5,0.119,6,0.104,12,1.605,43,0.01,75,0.008,80,0.008,99,0.342,104,0.32,129,0.163,132,0.24,426,1.645,476,1.002,527,2.621,543,0.926,545,1.815,546,1.86,547,2.542,548,1.956,549,1.86,550,2.542,561,2.383,562,1.815,564,2.058,568,2.323,574,3.217,575,2.553,759,2.715,760,2.167,2878,6.219,2888,4.833,3260,4.531,3294,5.716,3295,5.716,3296,5.716,3297,6.484,3298,6.792,3299,5.716,3300,6.484]],["title/modules/TagSearchModule.html",[543,0.627,2879,3.068]],["body/modules/TagSearchModule.html",[3,0.129,4,0.158,5,0.115,6,0.101,12,1.553,43,0.01,75,0.008,80,0.008,99,0.354,104,0.31,129,0.158,132,0.232,426,1.592,476,0.97,529,2.676,543,0.896,545,1.756,546,1.8,547,2.507,548,1.892,549,1.8,550,2.507,561,2.337,562,1.756,564,1.991,568,2.278,572,4.384,573,3.078,574,3.154,575,2.47,759,2.662,760,2.097,761,5.278,762,4.384,767,5.63,1705,5.278,1706,4.384,2177,4.141,2191,6.07,2192,6.07,2879,6.178,2890,4.676,3260,4.384,3301,5.531,3302,5.531,3303,5.531,3304,6.274,3305,7.554,3306,6.274,3307,6.274]],["title/interfaces/TagSearchResult.html",[116,2.752,128,0.299]],["body/interfaces/TagSearchResult.html",[3,0.131,4,0.16,5,0.116,6,0.102,8,2.912,11,0.836,12,2.17,18,0.62,19,0.817,43,0.01,45,0.772,69,1.029,70,5.317,71,2.279,75,0.008,77,4.549,80,0.009,84,5.317,115,5.022,116,4.77,128,0.518,129,0.205,139,4.549,142,4.192,154,2.733,155,2.996,157,4.192,188,5.901,194,1.651,277,2.912,402,1.777,1893,3.981,1894,3.115,1975,5.022,3256,4.733,3257,4.733,3258,6.708,3259,6.708]],["title/modules/ThemingModule.html",[543,0.627,1127,3.068]],["body/modules/ThemingModule.html",[3,0.137,4,0.168,5,0.122,6,0.107,43,0.01,75,0.008,80,0.008,99,0.309,104,0.33,129,0.168,132,0.247,241,5.302,296,1.825,426,1.695,476,1.033,543,0.954,545,1.87,546,1.917,547,2.067,548,2.016,549,2.388,550,2.067,561,2.426,562,1.87,568,2.365,600,4.981,601,5.37,1127,6.197,3308,5.892,3309,5.892,3310,6.683,3311,7.843,3312,6.683,3313,6.683,3314,6.683]],["title/injectables/ThemingService.html",[0,1.358,241,2.625]],["body/injectables/ThemingService.html",[0,1.796,2,2.5,3,0.086,4,0.105,5,0.077,6,0.138,11,0.948,18,0.408,19,0.623,20,2.331,25,1.509,35,0.772,37,4.331,38,2.056,40,1.127,42,1.829,43,0.01,44,1.052,45,0.76,46,1.403,47,1.52,55,1.676,56,1.302,59,4.057,69,1.183,75,0.006,80,0.006,85,1.629,86,0.812,99,0.229,104,0.207,129,0.146,132,0.319,133,1.468,138,1.403,140,1.231,141,1.099,159,1.264,195,0.79,197,1.473,212,1.035,225,5.003,240,5.613,241,3.471,243,4.682,252,2.76,259,2.038,277,2.222,346,5.369,420,1.982,548,1.751,588,3.117,608,3.687,615,2.5,809,2.662,824,3.687,837,1.547,845,3.687,846,3.361,913,4.524,917,4.327,1141,3.117,1338,5.134,1356,5.118,1370,2.5,1430,4.516,1459,3.361,1508,4.665,1650,4.18,1898,2.5,1907,2.76,1908,2.76,2323,6.104,2771,5.118,3273,4.665,3274,6.905,3315,3.361,3316,5.805,3317,8.033,3318,5.805,3319,7.204,3320,7.204,3321,7.204,3322,5.805,3323,4.182,3324,4.182,3325,5.805,3326,8.19,3327,4.182,3328,7.568,3329,4.182,3330,5.805,3331,7.204,3332,4.182,3333,5.805,3334,5.118,3335,5.805,3336,4.182,3337,5.805,3338,4.182,3339,5.805,3340,4.182,3341,4.182,3342,4.182,3343,4.182,3344,4.182,3345,4.182,3346,4.182,3347,3.687,3348,3.687,3349,3.687,3350,4.182,3351,4.182,3352,4.182,3353,4.182,3354,4.182,3355,4.182,3356,4.182,3357,3.687,3358,4.182,3359,4.182,3360,5.805,3361,4.182,3362,4.182,3363,4.182,3364,4.182,3365,4.182,3366,4.182,3367,4.182,3368,4.182]],["title/components/ToggleButtonComponent.html",[195,0.443,531,1.259]],["body/components/ToggleButtonComponent.html",[3,0.067,4,0.082,5,0.089,6,0.134,11,0.761,12,1.198,15,1.423,18,0.317,19,0.519,20,2.12,25,1.258,32,2.554,35,0.6,38,1.998,40,0.939,41,0.962,42,1.169,43,0.01,44,1.035,45,0.657,46,0.829,47,0.939,48,1.459,52,1.004,55,1.593,56,1.111,65,2.149,69,0.782,75,0.005,80,0.005,85,1.363,86,1.33,90,1.575,99,0.252,104,0.16,112,0.955,129,0.082,132,0.266,133,1.306,138,0.991,140,0.894,141,0.615,159,1.07,160,0.918,195,0.788,196,0.887,197,1.227,198,0.932,199,1.03,200,1.03,201,1.004,204,2.676,205,2.94,207,0.909,208,1.289,209,1.289,210,2.271,211,1.188,212,0.804,213,1.321,215,1.321,224,4.667,229,3.258,246,3.517,247,3.517,255,0.785,256,2.591,257,2.939,259,1.227,262,3,276,3.033,277,1.852,286,1.984,296,1.579,299,2.267,307,1.122,308,0.804,310,3.625,311,3.033,320,0.865,336,1.431,359,1.941,397,2.036,401,1.114,402,1.354,406,1.243,409,1.858,411,0.844,412,1.539,416,0.979,420,2.741,421,5.108,423,2.02,427,2.768,428,2.863,429,2.02,431,0.824,433,3.931,438,1.398,439,1.442,441,5.775,442,5.775,443,3.293,444,1.782,450,2.293,452,1.372,453,2.219,455,1.538,459,0.865,466,2.554,476,0.502,477,1.739,478,1.03,479,2.034,480,1.03,481,1.03,482,0.932,483,1.03,484,0.909,485,1.835,486,0.932,487,1.03,488,1.321,489,1.835,490,0.932,491,0.979,492,1.03,493,1.966,494,1.03,495,0.932,496,0.887,497,1.03,498,0.932,499,1.03,500,0.932,501,0.932,502,1.03,503,0.932,504,1.004,505,0.932,506,1.03,507,0.932,508,1.535,509,0.909,510,0.932,511,0.932,512,1.03,513,0.932,514,1.835,515,0.932,516,1.423,517,1.535,518,0.909,519,0.932,520,0.909,521,0.785,522,1.03,523,0.909,524,0.887,525,0.932,526,1.03,527,0.932,528,1.03,529,0.955,530,1.03,531,1.839,532,2.284,533,0.932,534,1.388,535,0.932,536,1.03,537,0.932,538,1.289,539,1.03,540,0.932,541,1.03,542,1.03,605,1.316,680,0.955,692,1.423,699,2.02,720,1.66,738,1.782,745,1.442,779,4.647,782,3.397,785,1.489,786,4.31,789,2.893,790,3.888,791,5.15,796,2.554,797,2.837,798,3.381,801,3.191,805,3.194,806,3.606,807,3.606,837,1.826,842,2.42,851,4.23,852,5.398,860,2.609,862,2.42,868,2.863,1001,1.398,1027,3.194,1035,3.888,1037,3.888,1038,3.888,1044,4.667,1049,3,1063,2.609,1068,1.782,1305,6.704,1349,2.863,1391,2.609,1393,4.097,1507,3.033,1544,2.863,1549,2.863,1550,5.098,1551,5.098,1570,4.266,1598,2.42,1604,4.266,2752,2.609,2756,5.098,2757,4.266,3369,7.355,3370,4.839,3371,3.247,3372,4.839,3373,7.187,3374,4.839,3375,4.839,3376,5.783,3377,3.247,3378,3.247,3379,3.247,3380,3.247,3381,3.247,3382,3.247,3383,3.247,3384,3.247,3385,3.247,3386,5.783,3387,5.783,3388,3.247,3389,3.247,3390,3.247,3391,3.247,3392,3.247,3393,3.247,3394,3.247,3395,3.247,3396,4.839,3397,3.247,3398,4.839,3399,3.247,3400,3.247,3401,3.247]],["title/interfaces/User.html",[128,0.299,332,1.506]],["body/interfaces/User.html",[3,0.086,4,0.106,5,0.077,6,0.068,16,1.657,18,0.411,19,0.626,20,1.553,22,1.407,23,1.611,35,0.777,37,3.544,43,0.01,45,0.533,56,1.173,69,1.184,75,0.006,80,0.006,85,0.837,88,2.296,91,2.111,99,0.328,104,0.208,111,2.31,112,1.238,128,0.397,129,0.146,132,0.156,133,1.188,138,1.146,140,1.077,141,0.797,159,0.974,160,1.363,181,1.483,194,1.094,195,0.675,196,1.149,202,3.137,203,2.516,204,1.757,205,2.965,206,3.849,208,1.121,209,1.121,210,1.697,211,0.88,212,1.042,213,1.149,214,3.382,215,1.149,216,3.382,217,3.137,218,2.965,219,4.194,220,4.194,221,3.2,222,2.941,223,3.486,224,4.194,225,4.416,226,3.382,229,2.14,230,2.778,231,3.382,235,3.382,237,5.377,238,4.686,239,4.686,240,2.941,241,3.486,242,3.382,243,3.486,244,2.358,245,2.363,246,2.31,247,3.2,250,2.941,252,2.778,254,4.686,255,1.617,256,2.179,257,1.93,258,1.715,259,1.479,260,4.346,261,3.2,262,2.435,264,3.382,266,3.382,267,3.382,268,2.778,269,3.382,270,2.941,271,3.137,272,3.137,273,3.382,274,3.382,276,2.638,277,1.611,280,2.408,281,3.382,282,2.638,283,4.987,284,4.686,285,4.416,286,2.478,288,3.382,291,3.382,294,3.382,296,1.827,298,2.111,299,1.068,300,3.171,302,2.31,303,2.14,305,2.941,306,2.065,307,0.817,308,1.042,309,2.31,310,3.655,311,2.638,312,1.869,314,3.382,316,3.382,320,1.121,321,2.941,322,3.137,323,2.778,324,3.382,325,1.178,326,3.137,327,3.382,328,2.941,329,3.137,330,2.408,331,2.31,332,2.001,333,3.812,334,3.812,335,2.941,336,1.218,337,3.382,338,3.382,339,4.686,340,3.382,341,3.382,342,3.382,343,3.382,344,4.686,345,3.382,346,3.137,347,3.382,348,3.382,349,2.638,350,3.382,351,3.382,352,2.31,353,3.137,354,3.137,355,1.995,356,3.382,357,3.382,358,3.382,359,2.516,360,3.382,361,1.207,362,3.382,363,3.382,364,2.941,365,3.382,366,3.382,367,3.382,368,3.382,369,3.382,370,3.382,371,6.591,372,3.382,373,5.377,374,3.382,375,6.466,376,3.382,377,3.137,378,3.382,379,5.997,380,2.14,381,3.382,382,3.99,383,3.382,384,2.111,385,4.686,386,4.603,387,2.941,388,3.382,389,2.296,390,4.686,391,2.408,392,2.51,393,4.686,394,3.382,395,3.137,396,3.382,397,2.638]],["title/interfaces/UserName.html",[128,0.299,2159,3.272]],["body/interfaces/UserName.html",[3,0.104,4,0.128,5,0.093,6,0.082,11,0.668,18,0.496,19,0.71,20,1.353,40,0.986,41,1.01,43,0.01,44,1.264,45,0.673,47,0.986,48,2.22,56,0.785,69,1.181,75,0.007,80,0.007,86,1.284,99,0.29,104,0.251,128,0.346,129,0.166,132,0.245,133,1.035,138,0.87,140,1.531,141,0.962,159,1.229,160,1.168,194,1.321,195,0.786,208,1.353,209,1.353,210,1.289,211,0.871,213,1.387,215,1.387,258,2.568,259,1.289,320,1.353,332,2.525,333,4.375,334,4.375,361,1.898,477,1.289,509,1.422,573,3.61,605,2.059,673,3.037,679,2.848,680,1.494,681,2.848,682,2.682,683,2,684,1.944,685,2.532,690,3.353,691,3.353,692,1.494,693,1.654,698,2.682,699,2.121,700,4.148,701,3.037,702,3.825,706,3.55,707,3.353,708,3.184,710,3.786,1150,2.462,1329,3.364,1330,2.583,1777,3.884,1885,3.353,2149,3.786,2150,4.478,2151,4.478,2152,4.478,2153,4.478,2154,4.478,2155,4.478,2157,4.478,2159,6.38,2161,4.478,2163,3.786,2164,5.336,2166,6.873,2167,6.488,2168,6.488,2170,4.039,2172,6.488,2176,4.478,2177,3.353,2178,6.661,2179,5.833,2180,4.478,2181,4.478,2182,4.478,2183,4.478,2184,5.833,2185,4.478,2186,4.478,2187,4.478]],["title/components/VideoModalComponent.html",[195,0.443,533,1.259]],["body/components/VideoModalComponent.html",[3,0.081,4,0.099,5,0.102,6,0.132,11,0.52,12,1.381,18,0.386,19,0.599,20,1.486,25,1.45,35,1.03,38,1.951,40,1.083,41,1.11,42,0.955,43,0.01,44,1.099,45,0.643,46,0.677,50,3.062,52,1.726,55,1.384,56,1.189,69,0.534,75,0.006,80,0.006,85,1.11,86,1.083,99,0.255,102,2.02,104,0.195,129,0.099,132,0.284,138,0.677,141,0.748,160,1.026,195,0.828,196,1.079,197,1.415,198,1.134,199,1.254,200,1.254,201,1.222,204,2.329,206,4.269,207,1.106,208,1.486,209,1.486,210,2.306,211,1.202,212,0.978,213,1.523,215,1.523,230,4.638,255,1.348,256,1.817,259,1.415,299,1.641,307,1.255,308,2.121,312,2.477,320,1.053,361,2.126,401,1.356,402,1.106,406,2.135,408,2.26,410,1.701,411,1.45,413,2.085,416,2.119,418,3.291,419,2.477,420,1.873,421,2.945,423,1.65,429,2.934,430,2.169,431,1.415,432,5.179,438,1.701,439,1.755,443,1.701,444,2.169,450,1.873,452,0.846,453,1.812,455,1.194,459,1.053,466,2.085,470,1.873,471,1.873,476,0.611,477,1.88,478,1.254,479,2.23,480,1.254,481,1.254,482,1.134,483,1.254,484,1.106,485,2.052,486,1.134,487,1.254,488,1.523,489,2.052,490,1.134,491,1.192,492,1.254,493,1.134,494,1.254,495,1.134,496,1.079,497,1.254,498,1.134,499,1.254,500,1.134,501,1.134,502,1.254,503,1.134,504,1.222,505,1.134,506,1.254,507,1.134,508,1.77,509,1.106,510,1.134,511,1.134,512,1.254,513,1.134,514,2.052,515,1.134,516,1.641,517,1.77,518,1.106,519,1.134,520,1.106,521,0.955,522,1.254,523,1.106,524,1.079,525,1.134,526,1.254,527,1.134,528,1.254,529,1.162,530,1.254,531,1.134,532,1.45,533,2.016,534,2.544,535,1.134,536,1.254,537,1.134,538,1.486,539,1.254,540,1.134,541,1.254,542,1.254,653,1.701,680,1.162,692,1.641,693,2.106,720,1.914,745,2.477,760,1.321,992,1.47,999,3.175,1000,3.683,1007,3.335,1010,2.761,1084,3.483,1120,5.81,1296,3.192,1297,4.158,1353,4.82,1400,3.899,1601,3.683,1898,2.362,2405,5.077,2406,5.179,2413,5.524,2436,2.169,2509,2.761,2511,4.158,2517,3.483,2817,5.197,2826,4.483,2828,3.483,2829,3.175,2836,3.175,2838,4.919,3175,6.353,3347,6.781,3402,5.737,3403,6.781,3404,7.027,3405,3.951,3406,6.468,3407,3.951,3408,3.951,3409,5.579,3410,5.579,3411,5.646,3412,5.646,3413,4.919,3414,5.579,3415,5.579,3416,3.951,3417,3.951,3418,3.951,3419,5.579,3420,3.951,3421,3.951,3422,3.951,3423,3.951,3424,3.951,3425,3.951,3426,5.702,3427,3.951]],["title/components/VideoModalLauncherComponent.html",[195,0.443,535,1.259]],["body/components/VideoModalLauncherComponent.html",[3,0.087,4,0.106,5,0.107,6,0.126,11,0.768,12,1.445,18,0.57,19,0.627,25,1.518,35,0.779,38,1.834,40,1.133,41,1.161,42,1.019,43,0.01,44,1.119,45,0.661,46,0.722,48,1.761,52,1.304,55,0.902,56,0.902,69,0.57,75,0.006,76,1.933,80,0.006,85,1.332,86,1.299,99,0.264,102,2.114,104,0.208,128,0.397,129,0.106,132,0.29,141,0.798,160,1.147,187,1.446,195,0.84,196,1.151,197,1.481,198,1.209,199,1.338,200,1.338,201,1.304,207,1.18,208,1.555,209,1.555,210,2.317,211,1.206,212,1.044,213,1.594,215,1.594,255,1.019,256,1.373,258,2.126,259,1.481,296,1.594,299,1.699,307,1.473,308,2.255,320,1.123,332,2.003,336,0.88,361,1.209,384,1.526,401,1.446,402,1.18,403,2.513,404,2.412,405,2.412,410,1.814,411,1.518,412,1.998,416,2.02,420,1.998,433,1.933,436,2.513,438,1.814,439,1.872,443,1.814,446,2.592,447,1.66,451,2.968,452,1.249,455,0.902,459,1.123,463,2.068,466,2.225,476,0.652,477,1.925,478,1.338,479,2.294,480,1.338,481,1.338,482,1.209,483,1.338,484,1.18,485,2.125,486,1.209,487,1.338,488,1.594,489,2.125,490,1.209,491,1.271,492,1.338,493,1.209,494,1.338,495,1.209,496,1.151,497,1.338,498,1.209,499,1.338,500,1.209,501,1.209,502,1.338,503,1.209,504,1.304,505,1.209,506,1.338,507,1.209,508,1.852,509,1.18,510,1.209,511,1.209,512,1.338,513,1.209,514,2.125,515,1.209,516,1.717,517,1.852,518,1.18,519,1.209,520,1.18,521,1.019,522,1.338,523,1.18,524,1.151,525,1.209,526,1.338,527,1.209,528,1.338,529,1.24,530,1.338,531,1.209,532,1.879,533,1.675,534,2.554,535,2.074,536,1.338,537,1.209,538,1.555,539,1.338,540,1.209,541,1.338,542,1.338,602,4.079,605,1.709,616,2.366,680,1.24,692,1.717,693,2.18,720,2.003,733,2.412,736,2.643,986,2.968,992,2.172,999,4.691,1120,5.313,1121,5.852,1296,3.339,1400,4.079,1406,5.051,1796,3.675,2436,2.314,2514,3.388,2515,5.808,2543,2.946,3402,5.487,3428,3.716,3429,5.838,3430,8.434,3431,6.697,3432,5.838,3433,7.228,3434,5.838,3435,5.838,3436,4.216,3437,5.838,3438,4.216,3439,4.216,3440,5.838,3441,5.838,3442,4.216,3443,4.216,3444,4.216]],["title/modules/VideoModalLauncherModule.html",[543,0.627,1114,3.068]],["body/modules/VideoModalLauncherModule.html",[3,0.133,4,0.162,5,0.118,6,0.104,43,0.01,75,0.008,80,0.008,99,0.335,104,0.32,129,0.162,132,0.239,308,2.033,426,1.641,476,1,534,1.856,535,2.62,543,0.924,545,1.81,546,1.856,547,2.54,548,1.951,549,1.856,550,2.54,561,2.38,562,1.81,564,2.053,568,2.32,574,3.212,575,2.547,759,2.711,760,2.162,1114,6.216,1120,4.269,1121,4.821,3402,4.52,3445,5.702,3446,5.702,3447,5.702,3448,6.468,3449,6.468]],["title/modules/VideoModalModule.html",[543,0.627,3450,3.272]],["body/modules/VideoModalModule.html",[3,0.131,4,0.16,5,0.117,6,0.103,43,0.01,75,0.008,80,0.008,99,0.346,104,0.316,129,0.16,132,0.236,426,1.621,476,0.988,533,2.616,534,1.833,543,0.912,545,1.788,546,1.833,547,2.527,548,1.927,549,1.833,550,2.527,561,2.362,562,1.788,564,2.027,568,2.303,574,3.188,575,2.516,759,2.691,760,2.135,1120,5.04,2436,3.507,2542,5.134,2543,4.465,2544,6.136,3402,4.465,3411,5.134,3450,6.613,3451,5.633,3452,5.633,3453,5.633,3454,7.637,3455,5.633]],["title/interfaces/VisibilityItem.html",[128,0.299,1312,2.317]],["body/interfaces/VisibilityItem.html",[3,0.128,4,0.156,5,0.114,6,0.1,11,0.818,18,0.607,19,0.806,43,0.01,44,1.212,45,0.785,46,1.436,69,1.212,71,2.268,75,0.008,76,3.444,80,0.008,86,1.457,128,0.511,129,0.156,154,3.754,194,1.616,303,3.818,336,1.686,352,4.787,361,1.783,459,2.001,538,1.656,837,2.001,1001,3.754,1312,3.964,1314,4.843,1338,4.708,1796,4.602,3456,5.479,3457,5.479,3458,6.621]],["title/components/VisibilityMenuComponent.html",[195,0.443,537,1.259]],["body/components/VisibilityMenuComponent.html",[3,0.057,4,0.07,5,0.079,6,0.131,11,0.93,12,1.069,18,0.58,19,0.463,25,1.122,35,0.516,38,1.958,40,0.838,41,0.859,42,1.639,43,0.01,44,1.114,45,0.723,46,1.162,47,0.838,52,0.864,55,1.638,56,1.223,69,0.714,71,2.056,75,0.004,76,1.281,80,0.004,85,0.859,86,1.588,99,0.208,104,0.138,129,0.07,132,0.251,133,0.88,138,0.74,140,1.096,141,0.529,154,3.143,159,1.219,160,1.076,181,1.521,187,2.036,195,0.647,196,0.763,197,1.095,198,0.802,199,0.887,200,0.887,201,0.864,207,0.782,208,1.15,209,1.15,210,2.239,211,1.171,212,0.692,213,1.179,215,1.179,255,0.675,256,1.718,257,1.98,258,1.552,259,1.095,280,2.47,296,1.179,299,1.338,303,2.195,307,1.024,308,0.692,320,0.744,332,0.959,355,2.046,364,3.686,384,1.012,389,1.1,401,0.959,402,1.208,403,2.554,404,1.598,405,1.598,406,1.652,408,3.018,409,3.018,411,0.726,415,1.421,416,1.591,419,1.752,420,1.325,423,3.253,425,3.686,426,1.627,429,1.167,430,1.534,431,1.627,436,1.203,438,1.858,439,1.917,443,1.858,444,1.534,446,1.241,447,3.154,449,1.953,450,2.501,452,1.27,453,2.419,455,0.924,456,4.483,459,0.744,461,2.85,466,2.278,467,4.239,468,2.077,469,3.686,476,0.432,477,1.627,478,0.887,479,1.883,480,0.887,481,0.887,482,0.802,483,0.887,484,0.782,485,1.674,486,0.802,487,0.887,488,1.179,489,1.674,490,0.802,491,0.843,492,0.887,493,0.802,494,0.887,495,0.802,496,0.763,497,0.887,498,0.802,499,0.887,500,0.802,501,0.802,502,0.887,503,0.802,504,0.864,505,0.802,506,0.887,507,0.802,508,1.37,509,0.782,510,0.802,511,0.802,512,0.887,513,0.802,514,1.674,515,0.802,516,1.27,517,1.37,518,0.782,519,0.802,520,0.782,521,0.675,522,0.887,523,0.782,524,0.763,525,0.802,526,0.887,527,0.802,528,0.887,529,0.822,530,0.887,531,0.802,532,1.122,533,0.802,534,1.238,535,0.802,536,0.887,537,1.702,538,2.289,539,0.887,540,0.802,541,0.887,542,0.887,562,0.782,605,1.133,616,1.75,679,2.761,680,0.822,681,2.271,682,2.405,683,1.1,684,1.069,685,2.019,692,1.27,693,1.718,698,2.138,699,1.803,704,3.917,719,2.195,720,1.481,721,1.475,728,2.85,736,1.752,737,1.953,738,2.369,739,2.85,809,1.98,872,2.929,917,3.218,989,1.752,992,1.963,1000,1.844,1001,3.713,1007,2.581,1010,3.017,1068,2.369,1245,1.953,1260,1.598,1282,1.752,1312,4.276,1314,4.939,1322,4.054,1329,3.892,1330,3.017,1336,3.017,1337,3.917,1338,4.251,1353,2.083,1389,3.218,1393,2.581,1394,2.85,1568,2.85,1711,1.534,1722,5.681,1793,2.581,1796,4.008,1798,3.482,1822,5.232,1835,2.463,1851,2.245,1856,5.811,1857,1.844,1888,6.098,1998,3.218,2163,2.083,2628,4.781,2629,3.806,3038,4.239,3214,2.463,3279,2.463,3459,5.717,3460,2.463,3461,5.276,3462,4.317,3463,4.317,3464,5.934,3465,4.317,3466,5.934,3467,4.317,3468,3.806,3469,4.317,3470,5.276,3471,4.317,3472,2.794,3473,2.794,3474,2.794,3475,4.317,3476,4.317,3477,2.794,3478,2.794,3479,4.317,3480,4.317,3481,4.317,3482,4.317,3483,2.794,3484,3.806,3485,2.794,3486,4.317,3487,2.794,3488,3.806,3489,4.317,3490,2.794,3491,4.317,3492,4.317,3493,2.794,3494,7.91,3495,4.317,3496,2.463,3497,5.934,3498,2.794,3499,2.794,3500,2.794,3501,6.781,3502,6.415,3503,4.317,3504,5.276,3505,4.317,3506,2.794,3507,2.794,3508,5.276,3509,2.794,3510,2.794,3511,2.794,3512,2.794,3513,2.794,3514,2.794,3515,2.794,3516,2.794,3517,2.794]],["title/modules/VisibilityMenuModule.html",[543,0.627,1870,3.068]],["body/modules/VisibilityMenuModule.html",[3,0.132,4,0.162,5,0.118,6,0.104,43,0.01,75,0.008,80,0.008,99,0.346,104,0.318,129,0.162,132,0.238,211,0.848,325,1.803,426,1.635,476,0.996,537,2.619,538,1.717,543,0.92,545,1.803,546,1.849,547,2.536,548,1.944,549,1.849,550,2.536,561,2.374,562,1.803,564,2.045,568,2.315,574,3.205,575,2.537,759,2.705,760,2.154,763,5.363,764,4.503,1870,6.211,1877,6.767,1888,4.803,3459,4.503,3518,5.681,3519,5.681,3520,5.681,3521,6.445,3522,6.445]],["title/components/VisibilityToggleComponent.html",[195,0.443,540,1.259]],["body/components/VisibilityToggleComponent.html",[3,0.075,4,0.092,5,0.097,6,0.13,11,0.694,12,1.306,15,1.994,18,0.357,19,0.566,25,1.371,35,0.675,38,1.911,40,1.024,41,1.049,42,0.883,43,0.01,44,1.074,45,0.706,46,0.626,47,1.024,52,1.13,55,0.782,56,0.815,69,0.713,75,0.005,80,0.005,85,1.43,86,1.499,99,0.208,104,0.181,129,0.092,132,0.277,140,1.328,141,1.361,155,2.95,159,0.61,160,1.141,181,1.859,195,0.813,196,0.997,197,1.338,198,1.048,199,1.159,200,1.159,201,1.13,207,1.022,208,1.405,209,1.405,210,2.293,211,1.195,212,0.905,213,1.44,215,1.44,255,1.275,256,1.19,258,2.204,259,1.338,277,2.019,280,3.018,286,2.327,299,1.571,307,1.202,308,0.905,320,0.973,332,1.81,336,1.102,401,1.253,402,1.898,403,2.918,406,2.369,407,1.323,409,2.09,410,2.271,411,1.371,413,1.928,415,3.148,416,2.045,418,2.342,420,1.732,423,2.203,425,2.553,426,0.927,429,3.002,430,2.005,431,1.571,434,2.411,435,3.154,436,3.095,438,2.665,439,2.749,443,2.271,444,2.005,446,2.749,447,2.438,448,3.307,450,3.214,452,1.325,453,2.419,455,1.129,459,0.973,460,3.482,463,3.038,466,1.928,470,1.732,471,1.732,472,3.542,476,0.565,477,1.824,478,1.159,479,2.152,480,1.159,481,1.159,482,1.048,483,1.159,484,1.022,485,1.965,486,1.048,487,1.159,488,1.44,489,1.965,490,1.048,491,1.102,492,1.159,493,1.048,494,1.159,495,1.048,496,0.997,497,1.159,498,1.048,499,1.159,500,1.048,501,1.048,502,1.159,503,1.048,504,1.13,505,1.048,506,1.159,507,1.048,508,1.674,509,1.022,510,1.048,511,1.048,512,1.159,513,1.048,514,1.965,515,1.048,516,1.552,517,1.674,518,1.022,519,1.048,520,1.022,521,0.883,522,1.159,523,1.022,524,0.997,525,1.048,526,1.159,527,1.048,528,1.159,529,1.074,530,1.159,531,1.048,532,2.255,533,1.048,534,1.513,535,1.048,536,1.159,537,1.048,538,2.364,539,1.159,540,1.945,541,1.159,542,1.159,605,1.481,616,2.138,679,2.665,680,1.074,681,2.271,682,2.748,683,1.438,684,1.398,685,2.369,692,1.552,693,2.016,696,3.482,698,2.51,719,3.447,720,1.81,721,1.928,730,2.553,734,1.857,738,2.005,745,1.622,837,1.405,884,2.723,992,1.359,1001,1.572,1053,2.723,1258,4.651,1282,2.29,1329,2.682,1330,2.682,1336,3.686,1392,2.723,1393,2.184,1568,3.482,1667,3.482,1709,2.936,1711,2.895,1712,5.459,1713,4.651,1715,5.236,1719,3.221,1723,3.221,1742,2.936,1795,4.239,1796,3.398,1820,4.239,1821,4.239,1857,3.482,1858,2.936,1890,6.006,2459,2.936,2465,3.221,2905,3.932,2917,4.239,3289,4.651,3290,3.221,3292,3.221,3293,3.221,3459,5.631,3468,6.606,3496,3.221,3523,5.275,3524,5.275,3525,5.275,3526,7.191,3527,6.192,3528,5.275,3529,3.653,3530,5.275,3531,3.653,3532,6.192,3533,3.653,3534,3.653,3535,4.651,3536,3.653,3537,3.653,3538,3.653,3539,3.653,3540,3.653,3541,5.275,3542,3.653]],["title/modules/VisibilityToggleModule.html",[543,0.627,1871,3.068]],["body/modules/VisibilityToggleModule.html",[3,0.133,4,0.162,5,0.118,6,0.104,43,0.01,75,0.008,80,0.008,99,0.342,104,0.32,129,0.162,132,0.239,426,1.641,476,1,538,1.723,540,2.62,543,0.924,545,1.81,546,1.856,547,2.54,548,1.951,549,1.856,550,2.54,561,2.38,562,1.81,564,2.053,568,2.32,574,3.212,575,2.547,759,2.711,760,2.162,1748,5.702,1751,5.702,1871,6.216,1890,4.821,3298,6.782,3299,5.702,3459,4.52,3543,5.702,3544,5.702,3545,5.702]],["title/interfaces/XYZTriplet.html",[128,0.299,1974,2.511]],["body/interfaces/XYZTriplet.html",[0,1.167,3,0.048,4,0.059,5,0.043,6,0.038,8,1.08,11,0.31,15,2.024,16,0.927,18,0.23,19,0.405,20,1.834,22,2.373,23,0.901,29,1.046,35,0.435,37,2.899,40,0.457,41,0.468,43,0.01,44,1.034,45,0.704,47,0.732,48,0.71,49,1.408,50,1.293,53,4.117,56,1.245,65,1.046,69,0.985,71,1.227,75,0.004,80,0.004,88,0.927,90,2.053,91,1.366,96,3.317,99,0.311,102,1.366,104,0.116,105,2.492,106,1.676,107,1.046,108,1.046,109,0.983,112,0.693,113,1.624,114,0.853,119,1.476,121,1.529,122,1.529,123,0.927,124,0.876,125,1.486,127,1.789,128,0.321,129,0.166,131,1.014,132,0.087,133,1.403,138,1.402,140,1.345,141,0.714,148,3.228,154,3.134,155,1.859,159,1.332,160,1.298,161,1.046,162,1.116,172,1.554,173,1.554,176,1.646,181,0.83,183,1.646,194,0.612,211,0.497,244,1.33,245,1.529,255,1.524,256,2.371,268,2.491,280,1.347,286,1.853,296,1.808,298,2.941,300,3.698,302,1.293,303,1.197,307,0.732,325,0.659,336,0.986,352,2.071,361,1.549,384,2.824,389,3.071,392,3.357,402,0.659,407,1.709,411,1.404,431,1.801,437,2.316,447,1.486,452,1.156,455,1.156,459,0.627,496,1.808,521,1.716,524,1.03,538,0.627,622,1.676,670,3.243,677,1.408,682,1.529,683,0.927,684,0.901,685,0.901,688,2.823,694,2.032,698,0.955,699,3.213,702,1.155,778,1.293,785,2.891,809,2.891,837,1.005,872,2.413,920,4.45,921,1.919,958,3.116,968,4.961,969,3.9,971,1.554,972,1.554,973,1.554,975,2.491,980,1.408,1001,2.714,1049,3.331,1150,1.404,1260,2.701,1272,1.293,1307,2.964,1310,3.773,1312,3.495,1314,1.293,1368,2.366,1371,3.299,1372,3.783,1373,3.328,1374,3.118,1377,2.71,1422,1.197,1793,2.823,1794,2.637,1796,3.777,1797,4.406,1798,3.116,1808,1.755,1823,1.408,1847,3.77,1848,1.646,1894,1.851,1895,3.896,1900,1.155,1932,2.366,1964,1.554,1965,1.554,1966,1.893,1967,3.77,1968,4.162,1969,4.406,1970,4.406,1971,4.406,1972,3.937,1973,4.686,1974,4.256,1975,1.554,1976,3.032,1977,4.129,1978,1.919,1979,2.366,1980,2.812,1981,1.476,1982,1.476,1983,1.893,1984,1.755,1985,1.893,1986,1.554,1987,1.893,1988,1.476,1989,2.256,1990,1.893,1991,1.893,1992,1.646,1993,1.789,1994,1.155,1995,1.408,1996,1.347,1997,1.347,1998,2.812,1999,2.96,2000,1.893,2001,2.366,2002,1.755,2003,1.893,2004,1.893,2005,1.893,2006,2.96,2007,2.366,2008,5.001,2009,1.893,2010,1.893,2011,1.893,2012,1.893,2013,1.893,2014,1.893,2015,1.893,2016,1.893,2017,1.893,2018,1.893,2019,1.893,2020,1.893,2021,1.893,2022,1.893,2023,1.893,2024,1.893,2025,1.893,2026,1.893,2027,1.893,2028,1.893,2029,1.893,2030,1.893,2031,1.893,2032,1.893,2033,1.893,2034,1.893,2035,1.755,2036,1.893,2037,1.893,2038,1.554,2039,1.646,2040,1.554,2041,1.893,2042,1.893,2043,1.893,2044,5.322,2045,3.032,2046,1.893,2047,4.339,2048,1.893,2049,3.032,2050,3.794,2051,1.893,2052,5.228,2053,1.893,2054,1.893,2055,1.893,2056,1.893,2057,1.893,2058,1.893,2059,1.893,2060,1.893,2061,1.893,2062,1.893,2063,1.893,2064,1.893,2065,1.893,2066,1.893,2067,1.893,2068,1.893,2069,1.893,2070,1.755,2071,3.794,2072,4.339,2073,1.893,2074,1.893,2075,1.893,2076,1.893,2077,1.893,2078,1.893,2079,1.893,2080,1.893,2081,1.893,2082,3.032,2083,1.893,2084,1.893,2085,1.893,2086,1.893,2087,1.893,2088,1.893,2089,1.893,2090,1.893,2091,1.893,2092,1.893,2093,1.893,2094,1.893,2095,1.893,2096,1.893,2097,1.893,2098,3.032,2099,1.408,2100,1.646,2101,1.893,2102,1.554,2103,1.646,2104,3.032,2105,3.299,2106,3.032,2107,2.256,2108,3.032,2109,1.893,2110,1.893,2111,1.893,2112,1.893,2113,1.893,2114,1.893,2115,1.893,2116,1.347,2117,1.646,2118,1.893,2119,1.893,2120,1.893,2121,1.893,2122,1.893,2123,1.893,2124,1.893,2125,1.893,2126,1.893,2127,1.893,2128,2.256,2129,1.893,2130,1.893,2131,1.893,2132,1.408,2133,1.893,2134,4.339,2135,1.893,2136,1.408,2137,1.893,2138,1.893,2139,1.893,2140,1.893,2141,1.893,2142,1.893,2143,3.032,2144,2.812,2145,1.893,2146,1.893,2147,1.893,2148,1.893]],["title/changelog.html",[2132,2.189,3546,2.942,3547,2.942]],["body/changelog.html",[3,0.13,5,0.039,8,1.589,19,0.228,24,4.518,38,0.512,43,0.007,45,0.194,46,0.363,48,1.045,50,2.787,59,2.422,60,1.482,71,0.551,74,1.704,75,0.004,77,4.66,80,0.007,83,2.583,85,0.422,90,2.565,102,2.027,123,2.496,125,1.365,128,0.45,137,1.482,139,5.455,140,1.332,141,0.961,142,2.288,154,0.913,167,1.399,181,1.789,187,1.189,194,0.551,195,0.512,197,0.879,199,0.673,201,0.656,207,1.421,210,0.879,211,1.136,212,0.525,225,1.902,240,1.482,244,0.747,255,1.062,256,0.69,257,0.972,259,0.538,270,1.482,277,2.299,282,1.329,285,2.288,298,3.03,302,4.228,303,1.762,305,2.422,306,2.948,307,0.853,308,0.525,312,0.941,325,0.593,332,2.349,355,1.643,361,2.378,377,4.93,380,1.078,401,0.727,402,1.567,409,1.213,413,2.68,416,0.639,427,2.515,433,1.589,437,2.491,443,0.913,448,1.329,452,0.454,455,0.742,459,1.353,474,2.173,491,0.639,496,0.946,501,0.608,532,0.901,534,0.608,546,1.457,549,0.608,573,1.04,579,2.173,584,3.966,602,4.92,610,6.112,618,1.329,646,3.48,647,3.805,655,2.583,676,4.765,684,0.811,685,0.811,688,3.791,699,2.509,704,5.441,728,3.351,746,1.482,774,1.213,806,2.583,823,1.482,828,1.704,866,1.329,867,2.413,916,1.7,917,1.58,920,3.766,921,3.963,937,2.785,940,4.935,947,1.869,958,2.288,961,1.704,986,2.235,987,1.399,988,2.422,996,3.784,1001,0.913,1003,1.58,1007,1.268,1037,1.704,1042,1.704,1049,1.447,1095,1.329,1102,1.482,1106,1.164,1152,1.869,1153,1.58,1156,1.704,1159,3.072,1160,1.869,1165,1.399,1166,1.704,1186,2.628,1221,1.704,1228,1.704,1229,1.704,1293,4.198,1294,1.482,1295,1.704,1296,2.515,1310,2.422,1314,1.164,1319,2.785,1322,2.072,1336,4.198,1337,1.399,1338,2.756,1357,1.869,1372,1.762,1377,2.567,1396,3.056,1404,4.498,1467,1.704,1508,2.785,1523,2.785,1649,1.869,1665,1.704,1667,1.399,1677,1.482,1679,1.58,1680,5.297,1721,1.869,1725,3.056,1741,2.785,1777,1.119,1782,1.869,1793,2.072,1794,3.548,1795,1.704,1797,3.548,1846,2.785,1847,2.628,1848,2.422,1856,1.482,1857,1.399,1896,1.399,1900,2.491,1905,1.482,1927,1.482,1940,1.482,1955,1.869,1975,1.399,2006,1.329,2132,2.628,2144,2.583,2202,3.695,2205,2.072,2206,1.399,2321,1.399,2345,1.482,2366,2.583,2405,1.399,2418,3.276,2494,3.056,2550,3.876,2565,1.58,2636,2.583,2671,1.869,2774,1.869,2776,3.056,2782,3.876,2792,2.583,2822,1.58,2855,1.869,2900,5.095,2902,1.704,2906,1.704,2911,3.533,3117,1.704,3144,1.869,3168,1.869,3176,1.869,3193,1.869,3249,1.869,3273,1.704,3334,3.056,3349,3.056,3357,3.056,3403,1.869,3412,6.108,3413,5.297,3426,3.876,3458,1.869,3484,1.869,3488,1.869,3535,1.869,3547,2.785,3548,3.876,3549,3.876,3550,4.476,3551,3.056,3552,3.466,3553,6.009,3554,5.832,3555,1.869,3556,1.869,3557,2.12,3558,7.487,3559,2.12,3560,3.466,3561,5.077,3562,3.466,3563,4.396,3564,2.12,3565,3.466,3566,2.12,3567,7.487,3568,2.12,3569,3.466,3570,1.869,3571,2.12,3572,3.056,3573,3.056,3574,3.466,3575,6.615,3576,2.12,3577,2.12,3578,2.12,3579,4.396,3580,3.466,3581,7.211,3582,2.12,3583,3.056,3584,2.12,3585,6.035,3586,3.466,3587,5.598,3588,4.396,3589,2.12,3590,3.466,3591,3.466,3592,2.12,3593,2.12,3594,4.396,3595,3.466,3596,4.396,3597,4.396,3598,3.466,3599,2.12,3600,3.466,3601,3.466,3602,6.341,3603,6.009,3604,6.341,3605,3.466,3606,2.12,3607,2.12,3608,2.12,3609,3.466,3610,4.396,3611,4.935,3612,2.12,3613,2.12,3614,2.12,3615,2.12,3616,4.396,3617,2.12,3618,2.12,3619,7.211,3620,3.466,3621,5.598,3622,2.12,3623,3.466,3624,6.009,3625,3.056,3626,2.12,3627,2.12,3628,2.12,3629,3.466,3630,2.12,3631,7.441,3632,2.12,3633,2.12,3634,3.466,3635,2.12,3636,5.077,3637,3.466,3638,4.396,3639,2.12,3640,2.12,3641,2.12,3642,2.12,3643,2.12,3644,7.602,3645,2.12,3646,1.869,3647,2.12,3648,3.466,3649,1.704,3650,2.12,3651,3.466,3652,5.077,3653,5.077,3654,4.396,3655,2.12,3656,2.12,3657,2.12,3658,2.12,3659,4.935,3660,3.876,3661,4.935,3662,2.12,3663,4.396,3664,5.832,3665,7.487,3666,2.12,3667,2.12,3668,3.466,3669,3.876,3670,2.12,3671,2.12,3672,5.598,3673,2.12,3674,2.12,3675,2.12,3676,2.12,3677,3.466,3678,3.056,3679,6.341,3680,5.316,3681,2.12,3682,2.12,3683,2.12,3684,2.12,3685,4.935,3686,2.12,3687,3.466,3688,3.466,3689,2.12,3690,3.466,3691,3.466,3692,3.466,3693,2.12,3694,2.12,3695,2.12,3696,2.12,3697,1.869,3698,3.466,3699,3.466,3700,3.466,3701,2.12,3702,2.12,3703,2.12,3704,2.12,3705,3.466,3706,2.12,3707,2.12,3708,3.466,3709,3.466,3710,5.077,3711,2.12,3712,4.396,3713,3.466,3714,6.009,3715,3.466,3716,5.077,3717,2.12,3718,2.12,3719,3.466,3720,2.12,3721,2.12,3722,3.466,3723,2.12,3724,2.12,3725,2.12,3726,3.466,3727,2.12,3728,2.12,3729,2.12,3730,2.12,3731,2.12,3732,2.12,3733,2.12,3734,2.12,3735,3.466,3736,2.12,3737,2.12,3738,2.12,3739,4.396,3740,4.396,3741,3.466,3742,1.869,3743,2.12,3744,2.12,3745,2.12,3746,2.12,3747,2.12,3748,3.466,3749,3.466,3750,3.466,3751,4.396,3752,2.12,3753,2.12,3754,2.12,3755,2.12,3756,3.466,3757,5.077,3758,2.12,3759,2.12,3760,4.396,3761,3.466,3762,2.12,3763,2.12,3764,3.466,3765,5.077,3766,2.12,3767,2.12,3768,2.12,3769,3.466,3770,2.12,3771,2.12,3772,2.12,3773,2.12,3774,2.12,3775,5.077,3776,4.396,3777,5.077,3778,2.12,3779,4.396,3780,5.598,3781,3.466,3782,3.466,3783,3.466,3784,4.396,3785,5.077,3786,5.598,3787,3.466,3788,4.396,3789,2.12,3790,2.12,3791,6.341,3792,5.077,3793,6.845,3794,2.12,3795,2.12,3796,2.12,3797,3.466,3798,2.12,3799,2.12,3800,2.12,3801,2.12,3802,3.466,3803,2.12,3804,2.12,3805,3.876,3806,3.466,3807,4.396,3808,2.12,3809,2.12,3810,2.12,3811,2.12,3812,2.12,3813,2.12,3814,2.12,3815,2.12,3816,2.12,3817,6.009,3818,4.396,3819,3.466,3820,2.12,3821,2.12,3822,2.12,3823,2.12,3824,4.396,3825,2.12,3826,2.12,3827,3.466,3828,3.466,3829,3.466,3830,4.396,3831,2.12,3832,2.12,3833,2.12,3834,2.12,3835,2.12,3836,2.12,3837,1.869,3838,2.12,3839,2.12,3840,2.12,3841,2.12,3842,2.12,3843,2.12,3844,2.12,3845,2.12,3846,2.12,3847,2.12,3848,2.12,3849,2.12,3850,2.12,3851,2.12,3852,6.615,3853,2.12,3854,4.396,3855,4.396,3856,5.077,3857,3.466,3858,4.396,3859,2.12,3860,2.12,3861,3.466,3862,3.466,3863,2.12,3864,2.12,3865,2.12,3866,3.466,3867,2.12,3868,3.876,3869,2.12,3870,2.12,3871,2.12,3872,2.12,3873,2.12,3874,2.12,3875,2.12,3876,2.12,3877,2.12,3878,2.12,3879,2.12,3880,2.12,3881,2.12,3882,2.12,3883,2.12,3884,2.12,3885,2.12,3886,2.12,3887,2.12,3888,2.12,3889,2.12,3890,3.466,3891,2.12,3892,3.466,3893,2.12,3894,3.466,3895,5.077,3896,5.077,3897,3.466,3898,3.466,3899,2.12,3900,2.12,3901,2.12,3902,4.396,3903,2.12,3904,1.869,3905,2.12,3906,2.12,3907,2.12,3908,2.12,3909,3.466,3910,7.042,3911,4.396,3912,2.12,3913,3.466,3914,2.12,3915,2.12,3916,2.12,3917,2.12,3918,2.12,3919,2.12,3920,3.466,3921,5.59,3922,3.466,3923,2.12,3924,2.12,3925,2.12,3926,2.12,3927,2.12,3928,4.08,3929,2.12,3930,3.466,3931,2.12,3932,2.12,3933,2.12,3934,3.466,3935,2.12,3936,2.12,3937,2.12,3938,3.466,3939,3.466,3940,3.056,3941,2.12,3942,2.12,3943,2.12,3944,2.12,3945,2.12,3946,2.12,3947,2.12,3948,2.12,3949,2.12,3950,1.869,3951,2.12,3952,2.12,3953,2.12,3954,2.12,3955,2.12,3956,2.12,3957,2.12,3958,1.869,3959,2.12,3960,3.466,3961,2.12,3962,2.12,3963,2.12,3964,2.12,3965,2.12,3966,2.12,3967,2.12,3968,2.12,3969,2.12,3970,2.12,3971,1.869,3972,3.466,3973,2.12,3974,2.12,3975,2.12,3976,2.12,3977,3.466,3978,1.869,3979,2.12,3980,2.12,3981,2.12,3982,2.12,3983,2.12,3984,2.12,3985,2.12]],["title/coverage.html",[3928,4.824]],["body/coverage.html",[0,2.456,1,2.06,5,0.11,6,0.15,7,4.063,8,3.367,9,3.337,10,4.063,12,0.853,43,0.01,45,0.315,75,0.005,80,0.005,88,1.357,91,1.248,92,1.971,116,2.16,128,0.613,130,2.568,132,0.187,140,0.636,141,0.957,195,0.904,196,0.941,202,4.463,241,2.06,244,1.214,308,1.252,332,1.182,335,2.408,407,3.336,411,1.909,431,2.139,468,2.766,482,0.989,484,0.964,486,0.989,488,1.38,490,0.989,493,0.989,495,0.989,498,0.989,500,0.989,503,0.989,505,1.45,507,0.989,509,0.964,510,0.989,511,0.989,513,0.989,515,0.989,518,0.964,519,0.989,520,0.964,521,0.833,523,0.964,525,0.989,527,0.989,529,1.014,531,0.989,533,0.989,535,0.989,537,0.989,540,0.989,584,3.337,588,2.568,592,2.568,595,3.953,598,2.568,611,3.768,612,3.768,667,2.769,670,1.891,671,4.185,672,3.953,673,4.653,687,2.568,772,2.408,773,2.769,777,4.063,782,2.245,801,1.53,816,1.691,887,3.038,899,1.891,1012,3.038,1085,2.16,1086,4.404,1092,2.16,1099,2.16,1100,2.16,1118,2.408,1120,3.953,1121,2.568,1146,2.568,1147,4.61,1148,4.063,1149,4.063,1167,2.408,1255,2.769,1256,2.568,1257,3.038,1289,2.769,1290,3.038,1293,2.408,1302,2.16,1303,2.16,1305,2.769,1307,1.891,1308,3.038,1309,3.038,1312,1.819,1315,2.769,1316,2.568,1317,3.038,1366,4.909,1368,2.16,1376,2.568,1380,3.038,1406,3.533,1413,2.568,1414,3.768,1415,4.063,1425,2.275,1489,2.769,1491,4.463,1525,2.769,1654,2.769,1655,2.568,1656,3.038,1707,2.769,1708,2.408,1709,4.063,1752,2.769,1753,4.063,1798,2.275,1819,7.539,1823,2.06,1885,3.337,1888,2.568,1890,2.568,1892,4.846,1894,1.691,1903,2.16,1961,2.568,1962,2.769,1963,2.769,1964,2.275,1965,4.637,1972,2.892,1974,1.971,1993,1.634,1994,3.236,2006,3.169,2136,2.06,2149,3.768,2159,2.568,2193,4.61,2194,4.61,2222,2.408,2294,4.463,2347,2.06,2348,2.275,2400,3.533,2401,2.408,2402,3.038,2474,2.408,2477,2.769,2478,3.038,2509,4.61,2546,2.769,2547,4.457,2750,3.953,2751,2.568,2752,4.063,2789,3.337,2819,2.568,2850,2.769,2883,3.953,2886,3.953,2888,2.568,2890,4.917,2894,4.185,2895,4.463,2897,2.568,2948,4.463,3003,2.568,3110,4.185,3111,2.568,3142,2.568,3143,2.769,3226,2.769,3237,2.769,3256,3.768,3257,3.768,3260,4.909,3261,3.038,3315,4.063,3369,3.038,3402,3.533,3428,3.038,3456,3.038,3457,3.038,3459,3.533,3460,3.038,3625,3.038,3928,2.769,3971,5.279,3986,3.446,3987,3.446,3988,7.343,3989,3.446,3990,3.446,3991,5.056,3992,5.056,3993,7.588,3994,7.588,3995,7.025,3996,3.446,3997,3.446,3998,3.446,3999,8.552,4000,3.446,4001,3.446,4002,7.025,4003,3.446,4004,3.446,4005,5.056,4006,3.446,4007,3.446,4008,3.446,4009,3.446,4010,3.446,4011,3.446,4012,3.446,4013,3.446,4014,3.038,4015,3.446,4016,3.446,4017,3.446,4018,3.446,4019,3.038,4020,3.446,4021,3.446,4022,3.446,4023,3.446,4024,3.446,4025,3.446,4026,3.446,4027,3.446,4028,3.446,4029,3.446,4030,3.446,4031,3.446,4032,3.446,4033,5.056,4034,6.597,4035,6.597,4036,3.038,4037,3.446,4038,3.446,4039,5.056,4040,3.446,4041,3.446,4042,3.446,4043,3.446,4044,3.446,4045,5.816,4046,3.446,4047,3.038,4048,3.038,4049,3.038,4050,3.446,4051,3.446,4052,3.446]],["title/dependencies.html",[546,1.516,3649,2.942]],["body/dependencies.html",[5,0.098,22,1.786,43,0.01,72,4.295,75,0.007,80,0.007,102,2.878,104,0.264,109,2.231,110,5.494,112,1.572,259,1.735,546,1.533,570,4.712,578,4.513,579,4.286,622,2.373,646,2.717,683,2.969,684,2.045,685,2.045,760,1.786,960,4.712,961,4.295,1055,4.295,1150,1.989,1164,3.735,1369,4.295,1711,3.753,1984,3.983,2035,3.983,2177,3.528,2199,3.528,2554,4.712,2557,4.712,2564,4.712,2999,4.295,3000,4.295,3175,4.295,3228,4.712,3230,4.712,3231,6.028,3233,4.712,3251,4.712,3411,4.295,3455,4.712,3556,4.712,3583,4.712,3661,6.028,3805,4.712,4053,5.345,4054,5.345,4055,5.345,4056,5.345,4057,5.345,4058,5.345,4059,5.345,4060,8.806,4061,5.345,4062,5.345,4063,6.838,4064,5.345,4065,5.345,4066,5.345,4067,5.345,4068,5.345,4069,5.345,4070,5.345,4071,7.948,4072,5.345,4073,6.838,4074,5.345,4075,5.345,4076,5.345,4077,7.54,4078,5.345,4079,5.345,4080,5.345,4081,5.345,4082,5.345,4083,5.345,4084,5.345,4085,5.345,4086,6.838,4087,7.54,4088,5.345,4089,5.345,4090,5.345,4091,5.345,4092,5.345,4093,6.838,4094,5.345,4095,6.838,4096,5.345,4097,5.345,4098,5.345,4099,5.345,4100,5.345,4101,5.345,4102,5.345,4103,5.345,4104,5.345,4105,5.345,4106,4.712,4107,5.345,4108,5.345,4109,5.345,4110,5.345,4111,5.345,4112,6.838,4113,5.345,4114,5.345,4115,5.345,4116,5.345,4117,5.345,4118,5.345,4119,5.345,4120,5.345,4121,5.345,4122,5.345,4123,5.345,4124,5.345,4125,5.345,4126,5.345,4127,5.345,4128,5.345,4129,5.345,4130,5.345,4131,5.345,4132,5.345,4133,5.345,4134,5.345,4135,5.345,4136,5.345,4137,5.345,4138,5.345,4139,5.345,4140,5.345,4141,5.345,4142,5.345,4143,6.838,4144,5.345,4145,5.345,4146,5.345,4147,5.345,4148,5.345,4149,5.345,4150,5.345,4151,5.345,4152,5.345,4153,5.345,4154,5.345,4155,5.345,4156,5.345]],["title/miscellaneous/functions.html",[4157,2.416,4158,4.658]],["body/miscellaneous/functions.html",[6,0.139,11,0.834,18,0.619,22,2.117,42,2.085,43,0.009,44,1.199,45,0.744,46,1.478,55,1.847,61,4.427,69,0.857,75,0.008,80,0.008,86,1.229,244,2.232,256,2.474,298,2.294,299,1.927,468,2.494,584,5.015,611,4.722,612,5.662,654,5.585,667,6.105,771,4.763,773,6.105,777,5.091,843,4.181,844,4.722,850,5.585,853,5.585,1366,4.427,1378,5.091,1994,3.108,2193,4.427,2194,5.309,2195,5.309,2197,5.371,2201,5.015,2204,4.722,2205,4.542,2229,4.722,2948,4.722,2997,5.091,3005,5.091,4014,6.698,4019,6.698,4036,6.698,4157,4.181,4158,5.585,4159,6.335,4160,6.335,4161,5.585,4162,5.585,4163,6.335,4164,6.335]],["title/index.html",[18,0.358,2132,2.189,3546,2.942]],["body/index.html",[3,0.172,43,0.007,75,0.007,80,0.007,90,2.327,102,2.075,125,2.256,128,0.487,194,1.49,195,0.578,211,1.193,257,2.628,298,2.819,307,1.112,332,2.672,382,3.633,436,2.467,448,3.593,602,5.697,610,4.993,647,3.025,675,2.914,916,3.506,986,3.633,1293,4.005,1336,4.993,1337,3.783,1404,4.605,2418,5.326,2687,5.803,3412,7.155,3547,4.605,3548,6.3,3549,6.3,3550,7.797,3554,5.052,3555,7.187,3570,6.3,3572,6.3,3573,7.187,3611,5.052,3631,6.865,3646,5.052,3659,7.395,3660,7.395,3664,6.3,3669,5.052,3678,6.3,3680,4.605,3697,5.052,3742,6.3,3940,5.052,3950,5.052,3978,5.052,4165,7.146,4166,5.731,4167,5.731,4168,5.731,4169,6.3,4170,5.731,4171,5.731,4172,5.731,4173,7.146,4174,7.146,4175,7.146,4176,7.787,4177,5.731,4178,5.731,4179,7.787,4180,5.731,4181,5.731,4182,7.146,4183,5.731,4184,5.731,4185,5.731,4186,7.146,4187,5.731,4188,5.731,4189,5.731,4190,5.731,4191,5.731,4192,7.146,4193,5.731,4194,5.731,4195,7.146,4196,5.731,4197,7.146,4198,7.146,4199,5.731,4200,5.731,4201,5.731,4202,5.731,4203,5.731,4204,5.731,4205,5.731,4206,5.731,4207,5.731,4208,5.731,4209,5.731,4210,5.731,4211,5.731,4212,5.731,4213,5.731,4214,5.731]],["title/license.html",[2132,2.189,3546,2.942,4215,3.227]],["body/license.html",[43,0.008,75,0.008,80,0.008,262,2.677,426,1.627,602,4.481,823,4.481,828,6.574,837,1.708,922,4.02,986,3.891,1293,4.481,1669,5.653,1896,4.233,1899,4.481,2347,3.834,2652,5.153,3685,6.747,3837,6.747,3904,5.653,3921,5.653,3958,5.653,4106,5.653,4169,7.942,4215,5.653,4216,6.413,4217,8.181,4218,6.413,4219,6.413,4220,7.653,4221,6.413,4222,6.413,4223,6.413,4224,6.413,4225,6.413,4226,7.653,4227,6.413,4228,6.413,4229,6.413,4230,6.413,4231,6.413,4232,6.413,4233,6.413,4234,6.413,4235,6.413,4236,6.413,4237,6.413,4238,7.653,4239,6.413,4240,6.413,4241,6.413,4242,6.413,4243,6.413,4244,7.653,4245,6.413,4246,6.413,4247,6.413,4248,6.413,4249,6.413,4250,6.413,4251,6.413,4252,6.413,4253,6.413,4254,6.413,4255,6.413,4256,6.413,4257,6.413,4258,6.413,4259,6.413,4260,6.413,4261,6.413,4262,6.413,4263,6.413,4264,6.413,4265,6.413,4266,6.413,4267,6.413]],["title/modules.html",[545,1.68]],["body/modules.html",[43,0.008,75,0.008,80,0.008,544,4.472,545,1.679,554,4.193,555,4.193,556,4.193,557,4.193,558,4.193,559,4.193,560,4.193,579,5.827,754,4.193,769,4.193,1113,4.193,1114,4.193,1126,4.193,1127,4.193,1162,6.928,1283,4.193,1358,4.193,1699,4.193,1744,3.961,1869,3.961,1870,4.193,1871,4.193,2466,4.193,2471,3.961,2809,4.193,2814,4.193,2876,4.193,2877,4.193,2878,4.193,2879,4.193,3450,4.472,3585,8.195,3868,6.481,4268,9.308,4269,7.352]],["title/overview.html",[4270,5.292]],["body/overview.html",[2,2.29,43,0.01,75,0.006,80,0.006,194,0.996,196,1.736,197,0.972,241,3.801,426,0.972,437,1.879,476,0.592,482,1.824,484,2.193,486,2.248,488,2.187,490,2.248,493,2.248,495,2.248,498,2.248,500,2.248,503,2.248,507,2.248,509,2.193,510,2.248,511,2.248,513,2.248,515,2.248,518,2.193,519,2.248,520,2.193,523,2.193,525,2.248,527,2.248,529,2.304,531,2.248,533,2.248,535,2.248,537,2.248,540,2.248,543,0.547,544,6.585,545,1.072,546,1.099,547,1.185,548,1.155,549,1.099,550,1.185,551,3.376,552,3.376,553,3.376,554,5.777,555,5.695,556,5.997,557,5.32,558,6.174,559,5.597,560,6.174,561,1.688,562,1.072,754,5.32,755,3.376,756,3.376,757,3.376,769,4.442,1109,3.376,1110,3.376,1111,3.376,1112,3.376,1113,5.597,1114,5.32,1124,3.376,1125,3.376,1126,4.442,1127,5.118,1283,5.32,1284,3.376,1285,3.376,1286,3.376,1298,3.376,1299,3.376,1300,3.376,1358,5.32,1359,3.376,1360,3.376,1361,3.376,1408,3.376,1409,3.376,1410,3.376,1490,3.078,1699,5.32,1700,3.376,1701,3.376,1702,3.376,1741,4.385,1744,5.171,1745,3.376,1746,3.376,1747,3.376,1865,3.376,1866,3.376,1867,3.376,1868,3.376,1869,5.171,1870,5.32,1871,5.475,2188,3.376,2189,3.376,2190,3.376,2466,5.597,2467,3.376,2468,3.376,2469,3.376,2470,3.376,2471,5.521,2500,3.376,2501,3.376,2502,3.376,2538,3.376,2540,3.376,2541,3.376,2809,5.597,2810,3.376,2811,3.376,2812,3.376,2813,3.376,2814,5.32,2847,3.376,2848,3.376,2849,3.376,2872,3.376,2873,3.376,2874,3.376,2875,3.376,2876,5.32,2877,5.32,2878,5.32,2879,5.32,2940,3.376,2941,3.376,2942,3.376,3138,3.376,3139,3.376,3140,3.376,3220,3.376,3221,3.376,3222,3.376,3294,3.376,3295,3.376,3296,3.376,3301,3.376,3302,3.376,3303,3.376,3308,3.376,3309,3.376,3445,3.376,3446,3.376,3447,3.376,3450,5.459,3451,3.376,3452,3.376,3453,3.376,3518,3.376,3519,3.376,3520,3.376,3543,3.376,3544,3.376,3545,3.376,4270,3.376,4271,3.83,4272,3.83]],["title/properties.html",[19,0.567,3649,2.942]],["body/properties.html",[19,0.773,43,0.009,75,0.008,80,0.008,3551,6.346,3680,5.784]],["title/miscellaneous/typealiases.html",[4157,2.416,4273,5.284]],["body/miscellaneous/typealiases.html",[6,0.139,8,3.25,12,1.401,15,2.277,18,0.552,22,2.369,43,0.01,45,0.791,47,1.098,69,0.765,71,1.471,75,0.007,80,0.007,115,4.678,197,1.435,207,1.983,221,4.453,298,2.566,299,1.964,309,3.89,312,2.512,332,2.432,419,3.546,427,3.236,452,1.517,455,1.517,468,3.048,584,5.627,611,4.216,612,6.354,622,2.512,629,4.953,633,6.249,640,5.696,652,6.249,694,2.435,782,3.147,785,2.594,789,3.382,797,3.477,801,3.437,816,3.477,920,3.546,921,3.604,968,4.953,975,4.678,980,4.237,1049,3.388,1085,3.546,1086,3.546,1087,4.055,1088,3.953,1089,3.953,1090,3.734,1092,3.546,1094,4.78,1095,4.443,1096,5.409,1099,3.546,1100,3.546,1103,5.409,1104,3.953,1105,3.953,1106,4.248,1118,3.953,1491,4.216,1513,4.987,1514,6.249,1515,6.249,1516,4.987,1517,6.249,1518,4.987,1519,6.249,1520,4.987,1521,4.987,1522,4.987,1523,4.546,1961,4.216,1962,4.546,1963,5.696,1965,3.734,1973,4.678,2002,4.216,2278,3.236,3142,4.216,3143,5.696,3256,4.216,3257,5.283,4157,3.734,4162,7.367,4274,5.657,4275,7.516,4276,6.824,4277,5.657,4278,5.657,4279,5.657,4280,6.249,4281,5.657]],["title/miscellaneous/variables.html",[4157,2.416,4282,4.658]],["body/miscellaneous/variables.html",[1,2.037,6,0.133,14,1.87,18,0.333,42,0.824,43,0.01,44,1.27,45,0.747,47,1.273,70,2.381,71,1.304,75,0.005,77,3.557,80,0.007,84,2.381,85,1.746,86,1.646,88,1.342,90,1.633,91,1.234,92,1.95,116,2.136,127,1.615,131,1.467,132,0.22,140,1.099,164,2.037,188,2.381,203,5.465,212,0.844,225,2.752,244,1.201,245,1.381,255,0.824,296,0.93,302,5.005,303,1.733,325,0.954,349,5.726,384,1.816,389,1.974,392,2.158,407,1.234,411,1.547,416,1.028,431,1.918,452,1.497,455,1.497,521,1.212,524,0.93,588,3.738,670,1.87,671,2.381,672,2.249,673,3.923,686,2.54,687,3.738,688,3.557,694,2.158,772,3.504,774,1.95,778,1.87,782,2.227,801,2.642,899,1.87,992,1.268,1001,1.467,1086,2.136,1090,2.249,1146,2.54,1147,2.381,1148,2.739,1149,4.03,1150,2.214,1153,2.54,1161,6.808,1165,2.249,1166,2.739,1167,3.504,1168,3.004,1169,8.024,1170,3.004,1171,3.004,1172,3.004,1173,4.421,1174,3.004,1175,3.004,1176,3.004,1177,3.004,1178,3.004,1179,3.004,1180,5.785,1181,5.785,1182,6.165,1183,6.165,1184,2.54,1185,3.004,1186,4.181,1187,3.004,1188,3.004,1189,3.004,1190,3.738,1191,3.738,1192,4.421,1193,3.004,1194,3.004,1195,3.004,1196,3.004,1197,6.165,1198,3.004,1199,4.421,1200,2.54,1201,3.004,1202,3.004,1203,3.004,1204,3.004,1205,3.004,1206,3.004,1207,3.004,1208,3.004,1209,3.004,1210,3.004,1211,3.004,1212,5.785,1213,4.421,1214,3.004,1215,3.004,1216,3.004,1217,3.004,1218,4.421,1219,3.004,1220,3.004,1221,2.739,1222,3.004,1223,3.004,1224,3.004,1225,3.004,1226,3.004,1227,4.421,1228,4.03,1229,2.739,1230,3.004,1231,2.54,1232,3.004,1233,3.004,1234,3.004,1235,3.004,1236,3.004,1237,3.004,1238,3.004,1239,5.785,1240,3.004,1241,3.004,1242,5.785,1243,3.004,1244,3.004,1245,2.381,1246,3.004,1247,3.004,1248,5.245,1249,3.004,1250,4.421,1251,3.004,1252,3.004,1253,3.004,1254,3.004,1302,3.144,1303,3.73,1366,2.381,1370,2.998,1376,3.738,1377,3.009,1425,2.249,1491,2.54,1524,3.004,1525,4.03,1526,3.004,1527,3.004,1823,2.998,1892,2.249,1903,2.136,1906,2.381,1907,3.31,1908,3.31,1909,2.381,1910,2.381,1965,2.249,1972,1.95,1979,2.136,1993,1.615,1999,2.136,2001,2.136,2007,3.144,2581,3.004,2883,2.249,2886,2.249,2890,2.54,2894,2.381,2895,3.738,2897,3.738,3110,2.381,3111,3.738,3226,2.739,3236,3.004,3237,4.03,3260,2.381,3315,2.739,3348,3.004,4045,5.785,4047,4.421,4048,4.421,4049,4.421,4157,2.249,4161,4.421,4275,3.004,4276,3.004,4280,3.004,4282,3.004,4283,3.408,4284,3.408,4285,3.408,4286,5.95,4287,3.408,4288,3.408,4289,5.015,4290,3.408,4291,3.408,4292,3.408,4293,3.408]]],"invertedIndex":[["",{"_index":43,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.075rem",{"_index":3539,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["0.1.0",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["0.125rem",{"_index":2461,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["0.13.1",{"_index":4156,"title":{},"body":{"dependencies.html":{}}}],["0.16",{"_index":2464,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["0.1rem",{"_index":1350,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["0.1s",{"_index":3517,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.2.0",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":4095,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1393,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.25s",{"_index":3217,"title":{},"body":{"components/StageNavComponent.html":{}}}],["0.2rem",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2s",{"_index":3540,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["0.375rem",{"_index":1850,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["0.3rem",{"_index":1349,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0.3s",{"_index":3516,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.4s",{"_index":3515,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["0.5",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["0.5.0",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["0.5s",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["0.6.0",{"_index":3940,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.625rem",{"_index":2937,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["0.6s",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{}}}],["0.75rem",{"_index":743,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{}}}],["0.7rem",{"_index":2857,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["0.875rem",{"_index":3219,"title":{},"body":{"components/StageNavComponent.html":{}}}],["0.9rem",{"_index":1861,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["0/1",{"_index":3988,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3996,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":3987,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3992,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4012,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3991,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4013,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["05rem",{"_index":3401,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["06",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":750,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["0rem",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{}}}],["1",{"_index":187,"title":{"components/ContentComponent-1.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["1.0",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["1.0.0",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":4092,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4099,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":4151,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":3396,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.1.0",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["1.125rem",{"_index":3542,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["1.14.10",{"_index":4103,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":4128,"title":{},"body":{"dependencies.html":{}}}],["1.1875rem",{"_index":2868,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1.2.0",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":4102,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":4094,"title":{},"body":{"dependencies.html":{}}}],["1.25rem",{"_index":2459,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["1.2rem",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["1.3.1",{"_index":4139,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":3805,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":4115,"title":{},"body":{"dependencies.html":{}}}],["1.4rem",{"_index":2856,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1.5.0",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["1.5rem",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["1.6.0",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["1.9375rem",{"_index":2867,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["1/1",{"_index":3999,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4018,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4010,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":688,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":4126,"title":{},"body":{"dependencies.html":{}}}],["10.5rem",{"_index":1354,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["10/11",{"_index":4043,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":3998,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":928,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["10rem",{"_index":2460,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["10x",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":4111,"title":{},"body":{"dependencies.html":{}}}],["118",{"_index":3074,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["11rem",{"_index":994,"title":{},"body":{"components/ContentComponent.html":{}}}],["12",{"_index":3554,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.75rem",{"_index":993,"title":{},"body":{"components/ContentComponent.html":{}}}],["12/12",{"_index":4040,"title":{},"body":{"coverage.html":{}}}],["12/19",{"_index":4028,"title":{},"body":{"coverage.html":{}}}],["12/22",{"_index":3990,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":2938,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["13",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["13/13",{"_index":4033,"title":{},"body":{"coverage.html":{}}}],["13/17",{"_index":4021,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":4129,"title":{},"body":{"dependencies.html":{}}}],["14.1.4",{"_index":4057,"title":{},"body":{"dependencies.html":{}}}],["14.10.1",{"_index":4054,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":3293,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["14rem",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["15",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["15.313.0",{"_index":4056,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":4050,"title":{},"body":{"coverage.html":{}}}],["15rem",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["16",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":4131,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":4132,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":4060,"title":{},"body":{"dependencies.html":{}}}],["16.1.6",{"_index":4063,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":4105,"title":{},"body":{"dependencies.html":{}}}],["16.5rem",{"_index":3216,"title":{},"body":{"components/StageNavComponent.html":{}}}],["16/17",{"_index":4030,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["17/17",{"_index":4022,"title":{},"body":{"coverage.html":{}}}],["17/20",{"_index":4015,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":4005,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":3105,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["18rem",{"_index":3512,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["1px",{"_index":1391,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["1s",{"_index":1002,"title":{},"body":{"components/ContentComponent.html":{}}}],["2",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":4089,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":4059,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":4108,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":3395,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.06rem",{"_index":3541,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["2.1.0",{"_index":3715,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["2.25rem",{"_index":1282,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["2.3.0",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["2.5rem",{"_index":1353,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["2.6.1",{"_index":4153,"title":{},"body":{"dependencies.html":{}}}],["2.688rem",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["2.75rem",{"_index":2932,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["2.8.0",{"_index":4091,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4069,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":4101,"title":{},"body":{"dependencies.html":{}}}],["2.9rem",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["2/2",{"_index":4039,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1798,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["200",{"_index":3076,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["2019",{"_index":3921,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["2023",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["210",{"_index":3075,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["21rem",{"_index":1864,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["22",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["232f3a",{"_index":995,"title":{},"body":{"components/ContentComponent.html":{}}}],["23rem",{"_index":2858,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["24",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1860,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["24px.svg",{"_index":1248,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":3073,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["25.5rem",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["250",{"_index":2837,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["255",{"_index":2974,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["25rem",{"_index":751,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{}}}],["25s",{"_index":3397,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["26",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["27rem",{"_index":1863,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["29/29",{"_index":4046,"title":{},"body":{"coverage.html":{}}}],["2]).rotatey(toradians(0",{"_index":2969,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["2px",{"_index":739,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["2rem",{"_index":1394,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["3",{"_index":2792,"title":{},"body":{"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["3).every(entry",{"_index":2794,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["3.0.0",{"_index":3661,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["3.2.10",{"_index":4077,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":4134,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["3.5.7",{"_index":4084,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":1352,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["3.6",{"_index":4192,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["3.6.3",{"_index":4082,"title":{},"body":{"dependencies.html":{}}}],["3.625rem",{"_index":2866,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["3.7.0",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["3.7.2",{"_index":3551,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3.75rem",{"_index":2860,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["3.8.1",{"_index":4087,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":3994,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":4009,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1741,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{},"overview.html":{}}}],["3000",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["30rem",{"_index":3443,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["31",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["32rem",{"_index":2869,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["33",{"_index":4272,"title":{},"body":{"overview.html":{}}}],["33.33",{"_index":740,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["34/40",{"_index":4004,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":4008,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":921,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["3px",{"_index":1853,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["3rem",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["4",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":4174,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":4124,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":4107,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":4097,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":4144,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3993,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":4026,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":4011,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":4017,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":927,"title":{},"body":{"components/ContentComponent.html":{}}}],["400",{"_index":1862,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{}}}],["42/44",{"_index":4037,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":4006,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":4016,"title":{},"body":{"coverage.html":{}}}],["46rem",{"_index":3439,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["47rem",{"_index":2457,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["4rem",{"_index":1390,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{}}}],["4th",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":4291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":4086,"title":{},"body":{"dependencies.html":{}}}],["5.5rem",{"_index":1005,"title":{},"body":{"components/ContentComponent.html":{}}}],["5.688rem",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["5/5",{"_index":4002,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1406,"title":{},"body":{"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalLauncherComponent.html":{},"coverage.html":{}}}],["500",{"_index":1698,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{}}}],["54",{"_index":3989,"title":{},"body":{"coverage.html":{}}}],["55rem",{"_index":1011,"title":{},"body":{"components/ContentComponent.html":{}}}],["58",{"_index":4000,"title":{},"body":{"coverage.html":{}}}],["5rem",{"_index":999,"title":{},"body":{"components/ContentComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["5s",{"_index":1084,"title":{},"body":{"components/ContentComponent-1.html":{},"components/VideoModalComponent.html":{}}}],["5th",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["6.11.2",{"_index":4137,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":4122,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":3995,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":4003,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":735,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["60rem",{"_index":2803,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["63",{"_index":4027,"title":{},"body":{"coverage.html":{}}}],["65vh",{"_index":3425,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["66",{"_index":4025,"title":{},"body":{"coverage.html":{}}}],["675rem",{"_index":3400,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["6px",{"_index":2462,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["6s",{"_index":738,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["7.0.0",{"_index":4117,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":4145,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":4001,"title":{},"body":{"coverage.html":{}}}],["7/16",{"_index":4007,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":4038,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":4032,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":4024,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":2495,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["76",{"_index":4020,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":4023,"title":{},"body":{"coverage.html":{}}}],["7rem",{"_index":1004,"title":{},"body":{"components/ContentComponent.html":{}}}],["8",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["8.0.6",{"_index":4148,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":4123,"title":{},"body":{"dependencies.html":{}}}],["8.5.16",{"_index":4081,"title":{},"body":{"dependencies.html":{}}}],["8.8.20",{"_index":4071,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":4035,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":4042,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":3997,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":3971,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["87",{"_index":4031,"title":{},"body":{"coverage.html":{}}}],["875rem",{"_index":3218,"title":{},"body":{"components/StageNavComponent.html":{}}}],["88",{"_index":4041,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":4271,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":4154,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":4044,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":4034,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2006,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{}}}],["94",{"_index":4029,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":3625,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["999",{"_index":2859,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["9e9e9e",{"_index":1351,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["9th",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["_blocksize",{"_index":3092,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_error",{"_index":1466,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":1563,"title":{},"body":{"classes/InitializationState.html":{}}}],["_index",{"_index":3279,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["_latesttags",{"_index":21,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["_lighting",{"_index":2971,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_measuredmargin",{"_index":1594,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":1588,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":804,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_name",{"_index":2152,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["_opened",{"_index":1559,"title":{},"body":{"classes/InitializationState.html":{}}}],["_position",{"_index":1555,"title":{},"body":{"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["_rotation",{"_index":3093,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["aabb",{"_index":2997,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["ability",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["about.wrapper",{"_index":2841,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["above",{"_index":3958,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["acc.concat(nodes",{"_index":3047,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["accepting",{"_index":1648,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessible",{"_index":2235,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["accessing",{"_index":3194,"title":{},"body":{"components/StageNavComponent.html":{}}}],["accessors",{"_index":32,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["accordingly",{"_index":2079,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["accurate",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":2652,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"license.html":{}}}],["actions",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":2323,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ThemingService.html":{}}}],["actual_component",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["add",{"_index":3326,"title":{},"body":{"injectables/ThemingService.html":{}}}],["addclass",{"_index":3365,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":139,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{}}}],["added.add(id",{"_index":146,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["added.add(iri",{"_index":152,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["added.has(iri",{"_index":151,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addeventlistener('beforeunload",{"_index":2386,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["adding",{"_index":3523,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["additional",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["addregistration(registration",{"_index":2633,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["addressed",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":59,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["addsvgicon",{"_index":1470,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["addtag",{"_index":26,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtag(tag",{"_index":51,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtagraw",{"_index":27,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["addtagraw(tag",{"_index":57,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtags",{"_index":28,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["addtags(tags",{"_index":62,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["adjusting",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":779,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["again",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1637,"title":{},"body":{"classes/InitializationState.html":{}}}],["age",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["ala",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["alert",{"_index":2364,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["aliases",{"_index":4274,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["alignment",{"_index":2682,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["all_organs",{"_index":1979,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["all_organs.find((o",{"_index":2045,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["all_organs.find(info",{"_index":2283,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["allow",{"_index":2861,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["allowed",{"_index":1742,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["allows",{"_index":1667,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["along",{"_index":1808,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["alpha",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":824,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["alt",{"_index":4178,"title":{},"body":{"index.html":{}}}],["always",{"_index":848,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["analytics",{"_index":685,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1133,"title":{},"body":{"modules/CoreModule.html":{}}}],["analyticsmodule.forroot",{"_index":1137,"title":{},"body":{"modules/CoreModule.html":{}}}],["anatomical",{"_index":1847,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["anatomicalstructures",{"_index":1967,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["anatomicalstructuretagstate",{"_index":1,"title":{"injectables/AnatomicalStructureTagState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["anatomicalstructuretagstatemodel",{"_index":130,"title":{"interfaces/AnatomicalStructureTagStateModel.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["and/or",{"_index":4236,"title":{},"body":{"license.html":{}}}],["angle",{"_index":3145,"title":{},"body":{"components/StageNavComponent.html":{}}}],["angular",{"_index":102,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1055,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":4061,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":1512,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":3346,"title":{},"body":{"injectables/ThemingService.html":{}}}],["angular/common",{"_index":760,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"components/VideoModalComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1130,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":4062,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":104,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2177,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/TagSearchModule.html":{},"interfaces/UserName.html":{},"dependencies.html":{}}}],["angular/material",{"_index":4064,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1706,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/checkbox",{"_index":3306,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["angular/material/chips",{"_index":3299,"title":{},"body":{"modules/TagListModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/material/core",{"_index":764,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["angular/material/dialog",{"_index":2436,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{}}}],["angular/material/divider",{"_index":1874,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/expansion",{"_index":1876,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["angular/material/form",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/icon",{"_index":575,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["angular/material/input",{"_index":762,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["angular/material/legacy",{"_index":2947,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["angular/material/radio",{"_index":2507,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/select",{"_index":1364,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["angular/material/slide",{"_index":1750,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{}}}],["angular/material/snack",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["angular/material/tooltip",{"_index":766,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{}}}],["angular/platform",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/RightSidebarModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":4066,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":3455,"title":{},"body":{"modules/VideoModalModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1052,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["animate('.5s",{"_index":1540,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":1060,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["animate(0",{"_index":1539,"title":{},"body":{"classes/InitializationState.html":{}}}],["animated",{"_index":2802,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":2834,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["animation",{"_index":1524,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":1014,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":1015,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["anterior",{"_index":975,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":3412,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{},"index.html":{}}}],["app",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/ReviewButtonComponent.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":586,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["app.component.scss",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["app_bootstrap_listener",{"_index":3311,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":196,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":731,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["appears",{"_index":2510,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["appelement",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["applicable",{"_index":1976,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["application",{"_index":2774,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["application/json",{"_index":2662,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["applied",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["applyspatialplacement",{"_index":4014,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["applyspatialplacement(new",{"_index":2250,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["applyspatialplacement(tx",{"_index":2204,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["applythemeclass",{"_index":3318,"title":{},"body":{"injectables/ThemingService.html":{}}}],["applythemeclass(cls",{"_index":3325,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":544,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1140,"title":{},"body":{"modules/CoreModule.html":{}}}],["appoptions",{"_index":335,"title":{"interfaces/AppOptions.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["appropriate",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":482,"title":{"components/AppWebComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["area",{"_index":946,"title":{},"body":{"components/ContentComponent.html":{}}}],["arg",{"_index":1462,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args",{"_index":1463,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args.filter(value",{"_index":1478,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argument",{"_index":1475,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arguments",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/StageNavComponent.html":{}}}],["arising",{"_index":4265,"title":{},"body":{"license.html":{}}}],["around",{"_index":2844,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["array",{"_index":1260,"title":{},"body":{"components/DetailsLabelComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["array.isarray(entity.placement",{"_index":3061,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["array.isarray(reg.placement",{"_index":2597,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["arraytostring",{"_index":1267,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(details",{"_index":1281,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arraytostring(inputarray",{"_index":1270,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["arrow_drop_down",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["arrow_drop_up",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["arrow_left",{"_index":3387,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["arrow_right",{"_index":3386,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["as.id",{"_index":191,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["as.name",{"_index":192,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["as.name.tolowercase().indexof(text.tolowercase",{"_index":186,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["asct+b",{"_index":3666,"title":{},"body":{"changelog.html":{}}}],["aslookup",{"_index":2101,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["aslookup[iri",{"_index":2106,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["assertions",{"_index":2004,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["assets/icons/ico",{"_index":1253,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/opacity",{"_index":1247,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/organs/ico",{"_index":1169,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/visibility",{"_index":1250,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/reference",{"_index":2240,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["assigned",{"_index":157,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["assignment/selection",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1896,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"license.html":{}}}],["astags",{"_index":2851,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["async",{"_index":1496,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["async)?.x",{"_index":983,"title":{},"body":{"components/ContentComponent.html":{}}}],["async)?.y",{"_index":984,"title":{},"body":{"components/ContentComponent.html":{}}}],["async)?.z",{"_index":985,"title":{},"body":{"components/ContentComponent.html":{}}}],["asynchronously",{"_index":3414,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["atlas",{"_index":3549,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attach",{"_index":3376,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["attempts",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":2492,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["authors",{"_index":4257,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1000,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["autofocus",{"_index":2537,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["automatic",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":3868,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":1502,"title":{},"body":{"classes/InitializationState.html":{}}}],["awaited",{"_index":1492,"title":{},"body":{"classes/InitializationState.html":{}}}],["award",{"_index":4213,"title":{},"body":{"index.html":{}}}],["axis",{"_index":2910,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["b",{"_index":977,"title":{},"body":{"components/ContentComponent.html":{}}}],["back",{"_index":1389,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["backbutton",{"_index":1399,"title":{},"body":{"components/HeaderComponent.html":{}}}],["backend",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/ReviewModalComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":1453,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["base",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":1042,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["basehref",{"_index":617,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["basewebcomponent",{"_index":613,"title":{},"body":{"components/AppWebComponent.html":{}}}],["basic",{"_index":3742,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bbox",{"_index":1582,"title":{},"body":{"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bbox.left",{"_index":1585,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.overlaps(getnodebbox(model",{"_index":3055,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bbox.right",{"_index":1584,"title":{},"body":{"classes/InitializationState.html":{}}}],["before",{"_index":1159,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["beforeunloadevent",{"_index":2381,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["beforeunloadlistener",{"_index":2380,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["begin",{"_index":2775,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["behavior::ng",{"_index":997,"title":{},"body":{"components/ContentComponent.html":{}}}],["being",{"_index":2822,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["belong",{"_index":1311,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["belonging",{"_index":1313,"title":{},"body":{"interfaces/ExtractionSet.html":{}}}],["beta",{"_index":3664,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RotationSliderComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["bind",{"_index":72,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"dependencies.html":{}}}],["binds",{"_index":3337,"title":{},"body":{"injectables/ThemingService.html":{}}}],["black",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["bladder",{"_index":1168,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bladder.svg",{"_index":1170,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blob([json",{"_index":2661,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["block",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["block.x",{"_index":2065,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["block_size_input",{"_index":712,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocks",{"_index":1794,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["blocksize",{"_index":670,"title":{"interfaces/BlockSize.html":{}},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["blocksize.x",{"_index":3085,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksize.y",{"_index":3100,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksize.z].map(n",{"_index":3101,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["blocksizechange",{"_index":697,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["blocksizeinputcomponent",{"_index":484,"title":{"components/BlockSizeInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["blocksizeinputmodule",{"_index":754,"title":{"modules/BlockSizeInputModule.html":{}},"body":{"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["blood",{"_index":1171,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blood.svg",{"_index":1172,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["board",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":646,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodyuimodule",{"_index":1116,"title":{},"body":{"modules/ContentModule.html":{}}}],["bold",{"_index":1858,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["bone",{"_index":1173,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["booleaninput",{"_index":1510,"title":{},"body":{"classes/InitializationState.html":{}}}],["bootstrap",{"_index":548,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["border",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["both",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["bottom",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["bounds",{"_index":890,"title":{},"body":{"components/ContentComponent.html":{}}}],["box",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["bp",{"_index":658,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.boolean",{"_index":665,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.function",{"_index":668,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.json",{"_index":666,"title":{},"body":{"components/AppWebComponent.html":{}}}],["bp.stringarray",{"_index":669,"title":{},"body":{"components/AppWebComponent.html":{}}}],["brain",{"_index":1176,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["brain.svg",{"_index":1177,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["breaking",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["breaks",{"_index":165,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["breast.svg",{"_index":1207,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bringing",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["bronchus",{"_index":1202,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bronchus.svg",{"_index":1204,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":4268,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":579,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":581,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/RightSidebarModule.html":{}}}],["browseranimationsmodule",{"_index":580,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/RightSidebarModule.html":{}}}],["browserify",{"_index":4146,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3980,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":4170,"title":{},"body":{"index.html":{}}}],["buildjsonld",{"_index":2685,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["buildmetadata",{"_index":2672,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["builds",{"_index":2671,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["builtin_parsers",{"_index":648,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.json(value",{"_index":656,"title":{},"body":{"components/AppWebComponent.html":{}}}],["button",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["button.component",{"_index":1306,"title":{},"body":{"modules/DrawerModule.html":{},"modules/ReviewButtonModule.html":{}}}],["button.component.html",{"_index":2757,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":2756,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":2752,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:101",{"_index":2780,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:19",{"_index":3374,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:20",{"_index":2779,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:22",{"_index":3375,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:25",{"_index":2769,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:27",{"_index":3385,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:30",{"_index":2768,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:36",{"_index":2765,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:38",{"_index":3382,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3381,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:42",{"_index":3372,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:43",{"_index":2770,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:48",{"_index":2777,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:55",{"_index":2763,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:65",{"_index":3378,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:69",{"_index":2783,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:75",{"_index":3379,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:79",{"_index":2787,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:85",{"_index":3377,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:86",{"_index":2785,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["button.component.ts:97",{"_index":3380,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.module",{"_index":2893,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["button.module.ts",{"_index":2815,"title":{},"body":{"modules/ReviewButtonModule.html":{}}}],["button/review",{"_index":2751,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["button/toggle",{"_index":1305,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["buttons",{"_index":959,"title":{},"body":{"components/ContentComponent.html":{}}}],["c",{"_index":4218,"title":{},"body":{"license.html":{}}}],["cache",{"_index":3556,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cacheable",{"_index":4150,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":1586,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":3399,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["calc(50",{"_index":1544,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":1578,"title":{},"body":{"classes/InitializationState.html":{}}}],["call",{"_index":1476,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["callback",{"_index":987,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{}}}],["callbackset",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["called",{"_index":1508,"title":{},"body":{"classes/InitializationState.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["calling",{"_index":3181,"title":{},"body":{"components/StageNavComponent.html":{}}}],["calls",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["cancel",{"_index":2519,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/TagListComponent.html":{}}}],["cancelregistration",{"_index":618,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"changelog.html":{}}}],["cancelregistrationcallback",{"_index":629,"title":{},"body":{"components/AppWebComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"miscellaneous/typealiases.html":{}}}],["candidate",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":2999,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["capitalize",{"_index":1781,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["capitalized",{"_index":1783,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["capitalizefirstletter",{"_index":1762,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["capitalizefirstletter(inputstring",{"_index":1774,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["capitalizes",{"_index":1776,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["capturing",{"_index":1806,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["card",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":3748,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{},"index.html":{}}}],["cases",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":657,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["catcherror",{"_index":2203,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["ccf",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["ccf_annotations",{"_index":2700,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["ccfdrawer",{"_index":1532,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":781,"title":{},"body":{"components/ContainerComponent.html":{}}}],["cdk",{"_index":1355,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["cdr",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cdr.markforcheck",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cell",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"index.html":{}}}],["centimeter",{"_index":2209,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["certain",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["cff",{"_index":1083,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["change",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":867,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectionstrategy",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["changedetectorref",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["changelog",{"_index":3547,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changerotation",{"_index":2922,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["changerotation(newrotation",{"_index":2912,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["changes",{"_index":181,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["changing",{"_index":3164,"title":{},"body":{"components/StageNavComponent.html":{}}}],["channel",{"_index":785,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["channels",{"_index":1932,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["charge",{"_index":4224,"title":{},"body":{"license.html":{}}}],["check",{"_index":2143,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["checknamevalid",{"_index":2409,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["checknamevalid(event",{"_index":2416,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["checks",{"_index":1041,"title":{},"body":{"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["chevron_left",{"_index":1388,"title":{},"body":{"components/HeaderComponent.html":{}}}],["child",{"_index":742,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{}}}],["chip",{"_index":3290,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["chip__action",{"_index":3536,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["chip__text",{"_index":3292,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["choose",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":4260,"title":{},"body":{"license.html":{}}}],["class",{"_index":132,"title":{"classes/InitializationState.html":{},"classes/MessageChannel.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class.ccf",{"_index":3370,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":1022,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["classend",{"_index":1550,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":1490,"title":{},"body":{"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"overview.html":{}}}],["classname",{"_index":786,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["clean",{"_index":1940,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["cleans",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["cleanup",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":2838,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["clearhaschanges",{"_index":2298,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["clears",{"_index":3479,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["click",{"_index":1677,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["clicked",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ReviewButtonComponent.html":{},"interfaces/User.html":{}}}],["clicking",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["clicks",{"_index":3177,"title":{},"body":{"components/StageNavComponent.html":{}}}],["client",{"_index":3555,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["close",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["closed",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["closedialog",{"_index":2410,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["closeexpanded",{"_index":1613,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeopendone",{"_index":1620,"title":{},"body":{"classes/InitializationState.html":{}}}],["closes",{"_index":1601,"title":{},"body":{"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{}}}],["cls",{"_index":3328,"title":{},"body":{"injectables/ThemingService.html":{}}}],["clsname",{"_index":693,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["cluster_appmodule",{"_index":551,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":552,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":553,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule",{"_index":755,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_declarations",{"_index":756,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_blocksizeinputmodule_exports",{"_index":757,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"overview.html":{}}}],["cluster_contentmodule",{"_index":1109,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_declarations",{"_index":1112,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_exports",{"_index":1110,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_contentmodule_imports",{"_index":1111,"title":{},"body":{"modules/ContentModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":1124,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1125,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule",{"_index":1284,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule_declarations",{"_index":1285,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_detailslabelmodule_exports",{"_index":1286,"title":{},"body":{"modules/DetailsLabelModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":1298,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":1300,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":1299,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule",{"_index":1359,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule_declarations",{"_index":1361,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_extractionsetdropdownmodule_exports",{"_index":1360,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"overview.html":{}}}],["cluster_headermodule",{"_index":1408,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":1409,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":1410,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule",{"_index":1700,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule_declarations",{"_index":1701,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_jsonfilereadermodule_exports",{"_index":1702,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule",{"_index":1745,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule_declarations",{"_index":1746,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_labeledslidetogglemodule_exports",{"_index":1747,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule",{"_index":1865,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_declarations",{"_index":1866,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_exports",{"_index":1867,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_leftsidebarmodule_imports",{"_index":1868,"title":{},"body":{"modules/LeftSidebarModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule",{"_index":2188,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule_declarations",{"_index":2190,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_nameinputmodule_exports",{"_index":2189,"title":{},"body":{"modules/NameInputModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule",{"_index":2467,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_declarations",{"_index":2468,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_exports",{"_index":2470,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationcontentmodule_imports",{"_index":2469,"title":{},"body":{"modules/RegistrationContentModule.html":{},"overview.html":{}}}],["cluster_registrationmetadatamodule",{"_index":2500,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"overview.html":{}}}],["cluster_registrationmetadatamodule_declarations",{"_index":2502,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"overview.html":{}}}],["cluster_registrationmetadatamodule_exports",{"_index":2501,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"overview.html":{}}}],["cluster_registrationmetadatamodule_imports",{"_index":2503,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["cluster_registrationmodalmodule",{"_index":2538,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_declarations",{"_index":2540,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_exports",{"_index":2541,"title":{},"body":{"modules/RegistrationModalModule.html":{},"overview.html":{}}}],["cluster_registrationmodalmodule_imports",{"_index":2539,"title":{},"body":{"modules/RegistrationModalModule.html":{}}}],["cluster_reviewbuttonmodule",{"_index":2810,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_declarations",{"_index":2812,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_exports",{"_index":2813,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewbuttonmodule_imports",{"_index":2811,"title":{},"body":{"modules/ReviewButtonModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule",{"_index":2847,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule_declarations",{"_index":2848,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_reviewmodalmodule_exports",{"_index":2849,"title":{},"body":{"modules/ReviewModalModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule",{"_index":2872,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_declarations",{"_index":2873,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_exports",{"_index":2874,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rightsidebarmodule_imports",{"_index":2875,"title":{},"body":{"modules/RightSidebarModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule",{"_index":2940,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_declarations",{"_index":2942,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_rotationslidermodule_exports",{"_index":2941,"title":{},"body":{"modules/RotationSliderModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule",{"_index":3138,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_declarations",{"_index":3139,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_slicesinputmodule_exports",{"_index":3140,"title":{},"body":{"modules/SlicesInputModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule",{"_index":3220,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_declarations",{"_index":3222,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_exports",{"_index":3221,"title":{},"body":{"modules/StageNavModule.html":{},"overview.html":{}}}],["cluster_stagenavmodule_imports",{"_index":3223,"title":{},"body":{"modules/StageNavModule.html":{}}}],["cluster_taglistmodule",{"_index":3294,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_taglistmodule_declarations",{"_index":3296,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_taglistmodule_exports",{"_index":3295,"title":{},"body":{"modules/TagListModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule",{"_index":3301,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule_declarations",{"_index":3302,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_tagsearchmodule_exports",{"_index":3303,"title":{},"body":{"modules/TagSearchModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":3308,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":3309,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule",{"_index":3445,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule_declarations",{"_index":3446,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodallaunchermodule_exports",{"_index":3447,"title":{},"body":{"modules/VideoModalLauncherModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule",{"_index":3451,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule_declarations",{"_index":3452,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_videomodalmodule_exports",{"_index":3453,"title":{},"body":{"modules/VideoModalModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule",{"_index":3518,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule_declarations",{"_index":3519,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitymenumodule_exports",{"_index":3520,"title":{},"body":{"modules/VisibilityMenuModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule",{"_index":3543,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule_declarations",{"_index":3545,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["cluster_visibilitytogglemodule_exports",{"_index":3544,"title":{},"body":{"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["coalescing",{"_index":2271,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["code",{"_index":3413,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["code.touppercase().endswith(lookup",{"_index":2274,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["codebase",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":1511,"title":{},"body":{"classes/InitializationState.html":{}}}],["collaboration",{"_index":3857,"title":{},"body":{"changelog.html":{}}}],["collapse",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":1520,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":1612,"title":{},"body":{"classes/InitializationState.html":{}}}],["collection",{"_index":13,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["collisions",{"_index":137,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["color",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["colorizing",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["combination",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["combined",{"_index":1104,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":111,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["combinelatest([regs",{"_index":2576,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["combinelatest([this.entities",{"_index":134,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["combinelatest([this.model.anatomicalstructures",{"_index":3031,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.model.organiri",{"_index":3056,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.model.organiri$.pipe(filter(organiri=>organiri",{"_index":3078,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.model.viewtype",{"_index":3086,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.page.state",{"_index":2524,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["combinelatest([this.referenceorgansimplenodes",{"_index":3048,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.rotation",{"_index":3026,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.theme",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["come",{"_index":3249,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["coming",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":4096,"title":{},"body":{"dependencies.html":{}}}],["comma",{"_index":1278,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["commas",{"_index":1264,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["common",{"_index":3697,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":759,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DetailsLabelModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["compatibility",{"_index":3246,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":1628,"title":{},"body":{"classes/InitializationState.html":{}}}],["completion",{"_index":1618,"title":{},"body":{"classes/InitializationState.html":{}}}],["complexity",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":195,"title":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":902,"title":{},"body":{"components/ContentComponent.html":{}}}],["component.component",{"_index":585,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":612,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["component.component.ts:34",{"_index":628,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":644,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":645,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":638,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:38",{"_index":632,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":641,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":630,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:41",{"_index":634,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:42",{"_index":642,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:43",{"_index":643,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:44",{"_index":635,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:45",{"_index":636,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:46",{"_index":637,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:47",{"_index":639,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:49",{"_index":626,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["componentref",{"_index":3331,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["computed",{"_index":105,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["comunica/query",{"_index":4067,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":4098,"title":{},"body":{"dependencies.html":{}}}],["concat(sortby(set.extractionsites.map((entity",{"_index":2113,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["conditions",{"_index":4243,"title":{},"body":{"license.html":{}}}],["config",{"_index":774,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["config.cancelregistration",{"_index":2359,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["config.isolated",{"_index":1934,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["config.register",{"_index":2358,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["config.user",{"_index":2361,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["configmodule",{"_index":769,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["configstore",{"_index":627,"title":{},"body":{"components/AppWebComponent.html":{}}}],["configuration",{"_index":1377,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["confirm('changes",{"_index":2365,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["confirmation",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":1955,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["connect(source",{"_index":1943,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":818,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connection",{"_index":4266,"title":{},"body":{"license.html":{}}}],["connects",{"_index":1942,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consentservice",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["consider",{"_index":3245,"title":{},"body":{"modules/StoreModule.html":{}}}],["consortium",{"_index":4219,"title":{},"body":{"license.html":{}}}],["const",{"_index":138,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["constructor(@inject(message_service_config",{"_index":1933,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["constructor(@optional",{"_index":1141,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["constructor(config",{"_index":1956,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(configstore",{"_index":625,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(defaulttheme",{"_index":3323,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(dialog",{"_index":2514,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["constructor(dialogref",{"_index":2818,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["constructor(drawer",{"_index":3371,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(ga",{"_index":721,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["constructor(globalconfig",{"_index":2307,"title":{},"body":{"injectables/PageState.html":{}}}],["constructor(globals",{"_index":2391,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["constructor(injector",{"_index":36,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"injectables/SceneState.html":{}}}],["constructor(messageservice",{"_index":794,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{}}}],["constructor(model",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{}}}],["constructor(page",{"_index":1383,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["constructor(private",{"_index":605,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["constructor(readonly",{"_index":1387,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(registry",{"_index":1480,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(renderer2",{"_index":3405,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["constructor(source",{"_index":1948,"title":{},"body":{"classes/MessageChannel.html":{}}}],["contain",{"_index":1093,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{}}}],["contained",{"_index":1966,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["container",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["container.component.html",{"_index":784,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":783,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":1304,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":486,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containerpayload",{"_index":1096,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":866,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["containing",{"_index":675,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"index.html":{}}}],["contains",{"_index":701,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ExtractionSet.html":{},"classes/InitializationState.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["content",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["content'},{'name",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["content.component",{"_index":2476,"title":{},"body":{"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{}}}],["content.component.html",{"_index":889,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["content.component.scss",{"_index":888,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/RegistrationContentComponent.html":{}}}],["content.component.ts",{"_index":2402,"title":{},"body":{"components/RegistrationContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:102",{"_index":2423,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:113",{"_index":2426,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:127",{"_index":2420,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:21",{"_index":2415,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:24",{"_index":2434,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:29",{"_index":2432,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:32",{"_index":2435,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:35",{"_index":2433,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:38",{"_index":2430,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:41",{"_index":2429,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:43",{"_index":2414,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:56",{"_index":2431,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:83",{"_index":2428,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.component.ts:93",{"_index":2417,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["content.module",{"_index":2545,"title":{},"body":{"modules/RegistrationModalModule.html":{}}}],["content.module.ts",{"_index":2472,"title":{},"body":{"modules/RegistrationContentModule.html":{}}}],["content/content.component",{"_index":841,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{}}}],["content/registration",{"_index":2401,"title":{},"body":{"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["content1",{"_index":787,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":788,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren",{"_index":838,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":820,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":830,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":488,"title":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":1085,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["contentmodule",{"_index":554,"title":{"modules/ContentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContentModule.html":{},"modules.html":{},"overview.html":{}}}],["context",{"_index":2686,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["context.jsonld",{"_index":2689,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["continue",{"_index":2456,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["contract",{"_index":4263,"title":{},"body":{"license.html":{}}}],["control",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["convention",{"_index":1108,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["converting",{"_index":1273,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["converts",{"_index":2684,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["coordinate",{"_index":4200,"title":{},"body":{"index.html":{}}}],["copies",{"_index":4238,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4226,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4217,"title":{},"body":{"license.html":{}}}],["cord",{"_index":1229,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["cord.svg",{"_index":1230,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":1142,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":587,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/anatomical",{"_index":3281,"title":{},"body":{"components/TagListComponent.html":{}}}],["core/models/extraction",{"_index":1339,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["core/models/meta",{"_index":2788,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["core/models/visibility",{"_index":1835,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["core/services/config/config",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{}}}],["core/services/theming/theming.service",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["core/store/anatomical",{"_index":2854,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["core/store/model/model.state",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["core/store/page/page.state",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/User.html":{}}}],["core/store/reference",{"_index":2522,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["core/store/registration/registration.state",{"_index":963,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{}}}],["core/store/scene/scene.state",{"_index":964,"title":{},"body":{"components/ContentComponent.html":{}}}],["coremodule",{"_index":555,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":1403,"title":{},"body":{"components/HeaderComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["cors",{"_index":4100,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":1912,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["coverage",{"_index":3928,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createcustomelement",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["createentitycollections",{"_index":100,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["creates",{"_index":40,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["createscenenodes",{"_index":2949,"title":{},"body":{"injectables/SceneState.html":{}}}],["createscenenodes(organiri",{"_index":2959,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["creating",{"_index":843,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["creation",{"_index":2764,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["creation_date",{"_index":2699,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator",{"_index":2692,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_first_name",{"_index":2694,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_last_name",{"_index":2695,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_middle_name",{"_index":2696,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["creator_orcid",{"_index":2697,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["credits",{"_index":4204,"title":{},"body":{"index.html":{}}}],["crosshairs",{"_index":914,"title":{},"body":{"components/ContentComponent.html":{}}}],["css",{"_index":960,"title":{},"body":{"components/ContentComponent.html":{},"dependencies.html":{}}}],["cube.svg",{"_index":1254,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["cuboid",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":1330,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["currentdate",{"_index":2583,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["currentidentifier",{"_index":2580,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["currently",{"_index":1338,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["currentorgan",{"_index":2403,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["currentsex",{"_index":2404,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["cursor",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["customelements.define('ccf",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["customizable",{"_index":3524,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["customized",{"_index":1668,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["cyberinfrastructure",{"_index":4206,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["damages",{"_index":4261,"title":{},"body":{"license.html":{}}}],["dark",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["dark/light",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["data.json",{"_index":2241,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["data.label",{"_index":2839,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["data.metadata",{"_index":2831,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["data.push",{"_index":2674,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["data.registrationcallbackset",{"_index":2832,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["data.sex",{"_index":2606,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["data.side",{"_index":2608,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["data.state",{"_index":1995,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["data.state.ts",{"_index":2194,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["data.state.ts:100",{"_index":2397,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:110",{"_index":2399,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:135",{"_index":2396,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:155",{"_index":2395,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:176",{"_index":2393,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:75",{"_index":2392,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.state.ts:87",{"_index":2398,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["data.ts",{"_index":1963,"title":{},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data.value",{"_index":2840,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["data/reference",{"_index":1994,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataaction",{"_index":53,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["database",{"_index":2202,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["datasets",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["datatype",{"_index":1724,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["date().toisostring().split('t')[0",{"_index":2584,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["db",{"_index":2099,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.anatomicalstructures[organiri",{"_index":2103,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.extractionsets[organiri",{"_index":2110,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.organirilookup[key",{"_index":2276,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["db.organspatialentities[organiri",{"_index":2117,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["db.placementpatches[place?.target",{"_index":2248,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["db.scenenodelookup[item.id",{"_index":3040,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.scenenodelookup[node['@id",{"_index":3109,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.simplescenenodelookup[item.id",{"_index":3041,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["db.simplescenenodelookup[node['@id",{"_index":3045,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["deal",{"_index":4227,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":4267,"title":{},"body":{"license.html":{}}}],["debug",{"_index":939,"title":{},"body":{"components/ContentComponent.html":{}}}],["debugmode",{"_index":891,"title":{},"body":{"components/ContentComponent.html":{}}}],["december",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":2766,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["deck.gl/core",{"_index":4070,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":4072,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":4074,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":4075,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":547,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["declare",{"_index":1375,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["decoration",{"_index":1397,"title":{},"body":{"components/HeaderComponent.html":{}}}],["decorator",{"_index":110,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"dependencies.html":{}}}],["decorators",{"_index":52,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["deep",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["deeply",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["def",{"_index":1436,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def.html",{"_index":1434,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def.url",{"_index":1448,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["def?.url",{"_index":1445,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default",{"_index":85,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_block_size",{"_index":687,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons",{"_index":1167,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons.find",{"_index":1442,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["default_rotation",{"_index":2897,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_search_limit",{"_index":4047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_search_throttle",{"_index":4048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_slices_config",{"_index":3111,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_theme",{"_index":588,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulticondefinition",{"_index":1146,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultposition",{"_index":2061,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["defaults",{"_index":131,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["defaulttheme",{"_index":3317,"title":{},"body":{"injectables/ThemingService.html":{}}}],["deferred",{"_index":1493,"title":{},"body":{"classes/InitializationState.html":{}}}],["define",{"_index":1291,"title":{},"body":{"interfaces/DocumentationContent.html":{}}}],["defined",{"_index":38,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["definition",{"_index":1151,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":1458,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":1457,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["degree",{"_index":2730,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["delay",{"_index":1985,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delay(0",{"_index":2125,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["delta",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["demo",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["depend",{"_index":1432,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["dependencies",{"_index":546,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":3755,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":776,"title":{},"body":{"modules/ConfigModule.html":{}}}],["depth",{"_index":678,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["descendants",{"_index":821,"title":{},"body":{"components/ContainerComponent.html":{}}}],["descrepancies",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":11,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["detaches",{"_index":909,"title":{},"body":{"components/ContentComponent.html":{}}}],["details",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["detailslabelcomponent",{"_index":490,"title":{"components/DetailsLabelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["detailslabelmodule",{"_index":1283,"title":{"modules/DetailsLabelModule.html":{}},"body":{"modules/DetailsLabelModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["detailslabels",{"_index":1756,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["detection",{"_index":805,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":798,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["determines",{"_index":1335,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{}}}],["dev",{"_index":1008,"title":{},"body":{"components/ContentComponent.html":{}}}],["developed",{"_index":4205,"title":{},"body":{"index.html":{}}}],["development",{"_index":2232,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["developmentmode",{"_index":3244,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":3950,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":1296,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{}}}],["dialog's",{"_index":2821,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["dialogopen",{"_index":2512,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["dialogref",{"_index":2406,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["dialogref.afterclosed().subscribe",{"_index":2806,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["dialogref.disableclose",{"_index":2444,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["dialogue",{"_index":2781,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["different",{"_index":1649,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{}}}],["digits",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["dimension",{"_index":703,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["dimension_units",{"_index":2712,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["dimensions",{"_index":677,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["dims",{"_index":971,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.x",{"_index":2064,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.y",{"_index":2066,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims.z",{"_index":2067,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["dims[0",{"_index":976,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[1",{"_index":978,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[2",{"_index":982,"title":{},"body":{"components/ContentComponent.html":{}}}],["dims[i",{"_index":3068,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["direct",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["directive",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["directives",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["directly",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":122,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["disabled",{"_index":1715,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/StoreModule.html":{},"components/VisibilityToggleComponent.html":{}}}],["disablepositionchange",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["disables",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["disableslider",{"_index":1768,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["display",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displayed",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":2548,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{}}}],["displaying",{"_index":1007,"title":{},"body":{"components/ContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["distinctuntilchanged",{"_index":1986,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilchanged((v1",{"_index":2034,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["distinctuntilkeychanged",{"_index":962,"title":{},"body":{"components/ContentComponent.html":{}}}],["distinctuntilkeychanged('x",{"_index":933,"title":{},"body":{"components/ContentComponent.html":{}}}],["distinctuntilkeychanged('y",{"_index":934,"title":{},"body":{"components/ContentComponent.html":{}}}],["distribute",{"_index":4234,"title":{},"body":{"license.html":{}}}],["div",{"_index":3538,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["divider",{"_index":1852,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{}}}],["dobootstrap",{"_index":567,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":3175,"title":{},"body":{"components/StageNavComponent.html":{},"components/VideoModalComponent.html":{},"dependencies.html":{}}}],["document.getelementsbyclassname('modal",{"_index":2833,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["document:click",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["document:click(target",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["document:keydown",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["document:keydown(target",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1293,"title":{},"body":{"interfaces/DocumentationContent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentationcontent",{"_index":1289,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/DocumentationContent.html":{},"coverage.html":{}}}],["dom",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["domsanitizer",{"_index":1420,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["don't",{"_index":1431,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["done",{"_index":3535,"title":{},"body":{"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["donor",{"_index":1846,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"changelog.html":{}}}],["donors",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["dot",{"_index":2870,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["dotenv",{"_index":4104,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":3167,"title":{},"body":{"components/StageNavComponent.html":{}}}],["download",{"_index":988,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"changelog.html":{}}}],["downloads",{"_index":2647,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["draft",{"_index":3102,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["draftplacement",{"_index":3094,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["draggable",{"_index":2901,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["drawer",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["drawer.close",{"_index":3393,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":3392,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":1533,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":1534,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":3394,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":876,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":842,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":1070,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["drawercontainerschanged",{"_index":1092,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawerinitialized",{"_index":1099,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":556,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":1103,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":789,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":875,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":1100,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drop",{"_index":3166,"title":{},"body":{"components/StageNavComponent.html":{}}}],["dropdown",{"_index":1318,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/StageNavComponent.html":{}}}],["dropdown'},{'name",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["dropdown.component",{"_index":1365,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{}}}],["dropdown.component.html",{"_index":1321,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":1320,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":1317,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:18",{"_index":1331,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:23",{"_index":1328,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:28",{"_index":1327,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:33",{"_index":1326,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:47",{"_index":1333,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":1334,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["dropdown.module",{"_index":1881,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["dropdown.module.ts",{"_index":1362,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{}}}],["dropdown/extraction",{"_index":1316,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["dropdowncontainer",{"_index":3215,"title":{},"body":{"components/StageNavComponent.html":{}}}],["duration",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent-1.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{}}}],["during",{"_index":3334,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["dynamic",{"_index":4065,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{}}}],["each",{"_index":1292,"title":{},"body":{"interfaces/DocumentationContent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["ease",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["easier",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["easily",{"_index":2917,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ececec",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["editregistration",{"_index":619,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["editregistration(reg",{"_index":2594,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["effect",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["element",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["element's",{"_index":1676,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["element.getboundingclientrect",{"_index":1583,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement",{"_index":3362,"title":{},"body":{"injectables/ThemingService.html":{}}}],["elementref",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["ellipsis",{"_index":3514,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["embedded",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["emit",{"_index":2919,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["emits",{"_index":1329,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["emitted",{"_index":695,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["emitter",{"_index":696,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["emitting",{"_index":1564,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["empty",{"_index":127,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["empty_result",{"_index":4049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":1032,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["enables",{"_index":2898,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["end",{"_index":852,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["end?.expanded",{"_index":1081,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["end?.opened",{"_index":1080,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["enddrawers",{"_index":877,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":880,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":883,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":1079,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["endings",{"_index":2663,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["entered",{"_index":2419,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entererrormode",{"_index":2761,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["entering",{"_index":689,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["entire",{"_index":3236,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":2102,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.comment",{"_index":2108,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.label",{"_index":2107,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.placement",{"_index":3063,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.placement[0",{"_index":3062,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.representation_of",{"_index":2104,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entity.sex?.tolowercase",{"_index":2288,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side",{"_index":2285,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side.tolowercase",{"_index":2286,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.side?.tolowercase",{"_index":2289,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["entity.y_dimension",{"_index":3071,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity.z_dimension].map(n",{"_index":3072,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["entity['@id",{"_index":2105,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["entitycollections",{"_index":101,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["entry",{"_index":2163,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{}}}],["entry.value",{"_index":2795,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["environment",{"_index":650,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["environment.customization",{"_index":663,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions",{"_index":661,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.googleanalyticstoken",{"_index":1139,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.production",{"_index":956,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["environment.skipunsavedchangesconfirmation",{"_index":2352,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["environments/environment",{"_index":651,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":846,"title":{},"body":{"components/ContainerComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{}}}],["error('the",{"_index":1143,"title":{},"body":{"modules/CoreModule.html":{}}}],["error(`multiple",{"_index":855,"title":{},"body":{"components/ContainerComponent.html":{}}}],["errors",{"_index":844,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":3000,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["eslint",{"_index":121,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/consistent",{"_index":2003,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/member",{"_index":1996,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["eslint/naming",{"_index":1107,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["eslint/no",{"_index":126,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["eslint/prefer",{"_index":2269,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{}}}],["etc",{"_index":1102,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["eui",{"_index":3631,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"license.html":{}}}],["event.firstname.length",{"_index":2448,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["event.lastname.length",{"_index":2449,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["event.preventdefault",{"_index":2382,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["event.returnvalue",{"_index":2383,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["event.target",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["eventemitter",{"_index":679,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["eventemitter(true",{"_index":1566,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":2465,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["evolution",{"_index":3289,"title":{},"body":{"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["except",{"_index":1919,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/StoreModule.html":{}}}],["executionstrategy",{"_index":3247,"title":{},"body":{"modules/StoreModule.html":{}}}],["expand",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":1622,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":1525,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expandcollapsedone",{"_index":1624,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":1561,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":1516,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":1567,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":1517,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":1519,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":1573,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":1609,"title":{},"body":{"classes/InitializationState.html":{}}}],["expansion",{"_index":1855,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["expected",{"_index":2830,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["experimentation",{"_index":2865,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["explicit",{"_index":2649,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["exploration",{"_index":4172,"title":{},"body":{"index.html":{}}}],["export",{"_index":129,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["exportas",{"_index":780,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":550,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["express",{"_index":4106,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["ext/operators",{"_index":1982,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extended",{"_index":1522,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":16,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["external",{"_index":83,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["extra",{"_index":4110,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["extraction_set_dropdown",{"_index":1342,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionset",{"_index":1307,"title":{"interfaces/ExtractionSet.html":{}},"body":{"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["extractionsetchanged",{"_index":1323,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionsetchanged(value",{"_index":1332,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["extractionsetdropdowncomponent",{"_index":495,"title":{"components/ExtractionSetDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["extractionsetdropdownmodule",{"_index":1358,"title":{"modules/ExtractionSetDropdownModule.html":{}},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["extractionsets",{"_index":1968,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsites",{"_index":1969,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["extractionsitetooltip",{"_index":1757,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["extrapulmonary",{"_index":1203,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye",{"_index":1178,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye.svg",{"_index":1179,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1219,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f.svg",{"_index":1220,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["factor",{"_index":2207,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["factory",{"_index":1910,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":2835,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["faded",{"_index":1016,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["fadeinout",{"_index":1021,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["fail",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["fallopian",{"_index":1180,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["false=right",{"_index":1730,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["favor",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":1374,"title":{},"body":{"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["fetch",{"_index":1164,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["fetched",{"_index":2573,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["fetched]).pipe",{"_index":2577,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["fetchpreviousregistrations",{"_index":620,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["fetchpreviousregistrationscallback",{"_index":633,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":573,"title":{},"body":{"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/ReviewModalComponent.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{},"interfaces/UserName.html":{},"changelog.html":{}}}],["fields",{"_index":2845,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["file(s",{"_index":2490,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["fileinput",{"_index":1660,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fileinputelement",{"_index":1685,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["fileinputelement.click",{"_index":1687,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader",{"_index":1690,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader.onload",{"_index":1691,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["filereader.readastext(file",{"_index":1697,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["files",{"_index":1669,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"license.html":{}}}],["fill",{"_index":1401,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filler",{"_index":752,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["filter",{"_index":1900,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["filter(([_nodes",{"_index":3050,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter((node",{"_index":3042,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(as",{"_index":185,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["filter(def",{"_index":1433,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["filter(e",{"_index":3077,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(item",{"_index":2625,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(key",{"_index":2028,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filter(started",{"_index":2131,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filtered",{"_index":1923,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["filternulls",{"_index":1980,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["filters",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["final",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["finished",{"_index":1097,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["finishing",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["fired",{"_index":3178,"title":{},"body":{"components/StageNavComponent.html":{}}}],["first",{"_index":1777,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/UserName.html":{},"changelog.html":{}}}],["firstname",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["firstnamevalidator",{"_index":2153,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["fit",{"_index":3426,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["fitness",{"_index":4253,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2855,"title":{},"body":{"components/RightSidebarComponent.html":{},"changelog.html":{}}}],["fixes",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":3908,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["flexible",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["float",{"_index":2842,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["floatlabel",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["fly",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["focused",{"_index":2934,"title":{},"body":{"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["following",{"_index":4242,"title":{},"body":{"license.html":{}}}],["font",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["footer",{"_index":2846,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["foreach(def",{"_index":1438,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["form",{"_index":746,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["format",{"_index":2565,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{}}}],["formatted",{"_index":1275,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["formsmodule",{"_index":2191,"title":{},"body":{"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/TagSearchModule.html":{}}}],["found",{"_index":2864,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["frame",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":4201,"title":{},"body":{"index.html":{}}}],["free",{"_index":4223,"title":{},"body":{"license.html":{}}}],["from(fetch(url)).pipe",{"_index":2243,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["fs",{"_index":4109,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":1523,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":4158,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":4211,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":4241,"title":{},"body":{"license.html":{}}}],["further",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":698,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["gap",{"_index":2458,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["gatoken",{"_index":1138,"title":{},"body":{"modules/CoreModule.html":{}}}],["general",{"_index":2295,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["generate",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":1710,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["genericmessage",{"_index":1088,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":1089,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":1090,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["getarguments",{"_index":1477,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getarguments(undefined",{"_index":1482,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getclassend",{"_index":3383,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getcontent",{"_index":832,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getdisabled",{"_index":2786,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["getglobalskipconfirmation",{"_index":2337,"title":{},"body":{"injectables/PageState.html":{}}}],["gethaschanges",{"_index":2339,"title":{},"body":{"injectables/PageState.html":{}}}],["gethasthicknessvalue",{"_index":3133,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["gethaswrappedcontent",{"_index":835,"title":{},"body":{"components/ContainerComponent.html":{}}}],["geticon",{"_index":3384,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getid",{"_index":3463,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["getid(_index",{"_index":3476,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["getislighttheme",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["getlabelel",{"_index":3191,"title":{},"body":{"components/StageNavComponent.html":{}}}],["getlatestiri",{"_index":2387,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getlatestiri(organ",{"_index":2290,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getlatesttags",{"_index":97,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["getleft",{"_index":1731,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["getmessages",{"_index":1921,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":1945,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":1924,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":1946,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":1928,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmethodname",{"_index":1468,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getmethodname(undefined",{"_index":1484,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getname",{"_index":2173,"title":{},"body":{"components/NameInputComponent.html":{}}}],["getnodebbox",{"_index":4019,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnodebbox(model",{"_index":3005,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["getnodebbox(placement[0",{"_index":3053,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getnodecollisions",{"_index":2986,"title":{},"body":{"injectables/SceneState.html":{}}}],["getnodes",{"_index":2978,"title":{},"body":{"injectables/SceneState.html":{}}}],["getoptionsel",{"_index":3195,"title":{},"body":{"components/StageNavComponent.html":{}}}],["getorgandata",{"_index":2388,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getorgandata(iri",{"_index":2279,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getorganspatialentity",{"_index":2950,"title":{},"body":{"injectables/SceneState.html":{}}}],["getorganspatialentity(organiri",{"_index":2961,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["getplacementcube",{"_index":2992,"title":{},"body":{"injectables/SceneState.html":{}}}],["getpreviousregistrationnodes",{"_index":2988,"title":{},"body":{"injectables/SceneState.html":{}}}],["getreferenceorganiri",{"_index":2389,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["getreferenceorganiri(organ",{"_index":2265,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getreferenceorgannodes",{"_index":2982,"title":{},"body":{"injectables/SceneState.html":{}}}],["getreferenceorgansimplenodes",{"_index":2984,"title":{},"body":{"injectables/SceneState.html":{}}}],["getrotatednodes",{"_index":2980,"title":{},"body":{"injectables/SceneState.html":{}}}],["getrotation",{"_index":2995,"title":{},"body":{"injectables/SceneState.html":{}}}],["gets",{"_index":1507,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["getskipconfirmation",{"_index":2335,"title":{},"body":{"injectables/PageState.html":{}}}],["getsourcedb",{"_index":2237,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["getspatialkeyboardaxis",{"_index":2990,"title":{},"body":{"injectables/SceneState.html":{}}}],["gettags",{"_index":94,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["getter/setter",{"_index":1554,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":3319,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getting",{"_index":3546,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockscene",{"_index":3002,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["gettissueblockscene(organentity",{"_index":3083,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["github",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":1913,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["given",{"_index":1274,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["gizmo",{"_index":1003,"title":{},"body":{"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["gland",{"_index":1206,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":14,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["global.editregistration",{"_index":2530,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["global_config",{"_index":772,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":244,"title":{"interfaces/GlobalConfig.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["globalconfig.getoption('fetchpreviousregistrations').pipe",{"_index":2574,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["globalconfigfactory",{"_index":773,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["globalconfigfactory(globals",{"_index":1378,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/functions.html":{}}}],["globalconfigstate",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["globally",{"_index":2234,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["globals",{"_index":2229,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["globals.get('ruiconfig",{"_index":1379,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["globalskipconfirmation",{"_index":2305,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["globalsservice",{"_index":771,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"miscellaneous/functions.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":1591,"title":{},"body":{"classes/InitializationState.html":{}}}],["globalthis['ruiconfig",{"_index":662,"title":{},"body":{"components/AppWebComponent.html":{}}}],["good",{"_index":3884,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":684,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":682,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["granted",{"_index":4222,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4269,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":4112,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":2497,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{}}}],["grow",{"_index":753,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{}}}],["gtex",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["half",{"_index":1521,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":1160,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["handleclick",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["handleclick(target",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["handlefile",{"_index":1661,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handlefile(event",{"_index":1672,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["handlekey",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["handlekey(target",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["handlemessage",{"_index":790,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":800,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":1035,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handlenodedrag",{"_index":896,"title":{},"body":{"components/ContentComponent.html":{}}}],["handlenodedrag(event",{"_index":905,"title":{},"body":{"components/ContentComponent.html":{}}}],["handler",{"_index":1678,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["handles",{"_index":1272,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["handling",{"_index":1423,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["happen",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":3240,"title":{},"body":{"modules/StoreModule.html":{}}}],["haschanges",{"_index":2306,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["hash",{"_index":4135,"title":{},"body":{"dependencies.html":{}}}],["hasthicknessvalue",{"_index":3113,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["haswrappedcontent",{"_index":793,"title":{},"body":{"components/ContainerComponent.html":{}}}],["header",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganConfig.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{}}}],["header'},{'name",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["header.component",{"_index":1412,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":1382,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1381,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":498,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodule",{"_index":557,"title":{"modules/HeaderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["heart",{"_index":1184,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["heart.svg",{"_index":1185,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["helmet",{"_index":4116,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":61,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":167,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["hereby",{"_index":4221,"title":{},"body":{"license.html":{}}}],["hex",{"_index":4118,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["hiderequiredmarker",{"_index":604,"title":{},"body":{"modules/AppModule.html":{}}}],["hides",{"_index":938,"title":{},"body":{"components/ContentComponent.html":{}}}],["highlight",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":3458,"title":{},"body":{"interfaces/VisibilityItem.html":{},"changelog.html":{}}}],["highlights",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["hint",{"_index":81,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["holders",{"_index":4258,"title":{},"body":{"license.html":{}}}],["home",{"_index":1398,"title":{},"body":{"components/HeaderComponent.html":{}}}],["homeurl",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/User.html":{}}}],["hooked",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":2936,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["host",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["hostbinding",{"_index":680,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":1572,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":1050,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbinding('@openclose",{"_index":1571,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":692,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostbinding('class.ccf",{"_index":1549,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":1046,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbinding('style.margin",{"_index":1051,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["hostbindings",{"_index":720,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["hostlistener",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":1623,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":1619,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('document:click",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["hostlistener('document:keydown",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["hostlisteners",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/StageNavComponent.html":{}}}],["hover",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["hovered",{"_index":1822,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["hovering",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":3550,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["html",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["htmlelement",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["htmlinputelement",{"_index":708,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["htmlscriptelement",{"_index":3421,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["http://purl.org/ccf/1.5/${this.currentidentifier",{"_index":2690,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["http://purl.org/ccf/1.5/${this.currentidentifier}_placement",{"_index":2713,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhmaleorgans_vhm_spleen_colic_surface",{"_index":2964,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclientmodule",{"_index":1129,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://apps.humanatlas.io/hra",{"_index":4186,"title":{},"body":{"index.html":{}}}],["https://beta",{"_index":4175,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":4179,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":2687,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"index.html":{}}}],["https://humanatlas.io",{"_index":4202,"title":{},"body":{"index.html":{}}}],["https://observablehq.com/@cns",{"_index":4197,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":4181,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":4177,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":3248,"title":{},"body":{"modules/StoreModule.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":3423,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["hubmap",{"_index":602,"title":{},"body":{"modules/AppModule.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["human",{"_index":3548,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ReviewModalComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["icon.add",{"_index":2862,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["icon.name",{"_index":1443,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["icon.namespace",{"_index":1444,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["icondefinition",{"_index":1413,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["iconregistry",{"_index":1424,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":1425,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1165,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":1149,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":154,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["idb",{"_index":4120,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1894,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["identifiers",{"_index":4281,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idmatches(ontologyid",{"_index":2043,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ids",{"_index":2635,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["iec",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":3410,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["ignoredkeys",{"_index":2026,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ignoredkeys.includes(key",{"_index":2029,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iif",{"_index":2341,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["iif(!!config.user",{"_index":2360,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["image",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":2195,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/functions.html":{}}}],["implementation",{"_index":60,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["implemented",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["implied",{"_index":4250,"title":{},"body":{"license.html":{}}}],["implies",{"_index":1101,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":99,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RotationSliderComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["imported",{"_index":1144,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":564,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["improve",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["in's",{"_index":1803,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["include",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":4245,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3685,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":18,"title":{"index.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":4209,"title":{},"body":{"index.html":{}}}],["indicator",{"_index":1859,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["individual",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["infinity",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["infix",{"_index":747,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/SlicesInputComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["info.side",{"_index":2287,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["infobuttonmodule",{"_index":2880,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["inform",{"_index":2486,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["information",{"_index":916,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ExtractionSet.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["inherit",{"_index":749,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/SlicesInputComponent.html":{}}}],["init",{"_index":3415,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["initial",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["initialconfig",{"_index":660,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialization",{"_index":1595,"title":{},"body":{"classes/InitializationState.html":{}}}],["initializationstate",{"_index":1489,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{},"coverage.html":{}}}],["initialize",{"_index":3320,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":3330,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(element",{"_index":3335,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":615,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["initializer",{"_index":3333,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":65,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["initializing",{"_index":1098,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["initialregistration",{"_index":2549,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["initskipconfirmationlisteners",{"_index":2299,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["inject",{"_index":1898,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/ThemingService.html":{},"components/VideoModalComponent.html":{}}}],["inject(default_theme",{"_index":3352,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inject(document",{"_index":3417,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["inject(mat_dialog_data",{"_index":2826,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AnatomicalStructureTagState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"injectables/IconRegistryState.html":{},"injectables/MessageService.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"injectables/SceneState.html":{},"injectables/ThemingService.html":{},"overview.html":{}}}],["injected",{"_index":2823,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["injecting",{"_index":163,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["injectiontoken",{"_index":1370,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('default",{"_index":3348,"title":{},"body":{"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":37,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["injector.get(overlaycontainer",{"_index":3363,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(renderer2",{"_index":3361,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(themingservice",{"_index":3350,"title":{},"body":{"injectables/ThemingService.html":{}}}],["inline",{"_index":2871,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["input",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["input'},{'name",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["input.component",{"_index":768,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.component.html",{"_index":690,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.scss",{"_index":691,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input.component.ts",{"_index":673,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input.component.ts:31",{"_index":3131,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:35",{"_index":724,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:36",{"_index":3129,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:40",{"_index":723,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:41",{"_index":3130,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:45",{"_index":722,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{}}}],["input.component.ts:46",{"_index":3134,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:48",{"_index":3128,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:50",{"_index":2169,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:55",{"_index":2171,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:60",{"_index":726,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:62",{"_index":2160,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:63",{"_index":3132,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["input.component.ts:66",{"_index":2175,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:70",{"_index":725,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["input.component.ts:73",{"_index":2165,"title":{},"body":{"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["input.component.ts:82",{"_index":2158,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.component.ts:97",{"_index":2162,"title":{},"body":{"components/NameInputComponent.html":{}}}],["input.module",{"_index":1886,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RightSidebarModule.html":{}}}],["input.module.ts",{"_index":758,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/SlicesInputModule.html":{}}}],["input.target",{"_index":707,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["input/block",{"_index":672,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input/name",{"_index":1885,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["input/slices",{"_index":2886,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["input[type=number",{"_index":729,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["inputarray",{"_index":1276,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputarray.filter(item",{"_index":1279,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["inputevent",{"_index":700,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputs",{"_index":616,"title":{},"body":{"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["inputstring",{"_index":1779,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["inputstring.charat(0).touppercase",{"_index":1836,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["inputstring.slice(1",{"_index":1837,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["inputtarget",{"_index":706,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputtarget.files",{"_index":1688,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["inputtarget.files[0",{"_index":1689,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["inputtarget.value",{"_index":710,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["inputted",{"_index":2772,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["inputting",{"_index":2150,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["insertitem",{"_index":2552,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["insertitem(registration",{"_index":2634,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["inside",{"_index":1297,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["instance",{"_index":41,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instant",{"_index":1515,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":3168,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["instructions",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":128,"title":{"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":194,"title":{},"body":{"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1191,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["intestine.svg",{"_index":1192,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["invisible",{"_index":1029,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["iri",{"_index":148,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["iris",{"_index":2622,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["iris.has(item.id",{"_index":2626,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["is3dview",{"_index":892,"title":{},"body":{"components/ContentComponent.html":{}}}],["isdatavalid(page",{"_index":2640,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["isdropdownactive",{"_index":3150,"title":{},"body":{"components/StageNavComponent.html":{}}}],["isdropdownhidden",{"_index":3151,"title":{},"body":{"components/StageNavComponent.html":{}}}],["islighttheme",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["ismultiple",{"_index":1324,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["isnan(this.slicesconfig.thickness",{"_index":3114,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["isnarrowview",{"_index":893,"title":{},"body":{"components/ContentComponent.html":{}}}],["isolated",{"_index":1906,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["isvalid",{"_index":2645,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["it's",{"_index":1782,"title":{},"body":{"components/LeftSidebarComponent.html":{},"changelog.html":{}}}],["item",{"_index":1314,"title":{},"body":{"interfaces/ExtractionSet.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["item).join",{"_index":1280,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["item.id",{"_index":2628,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item.name",{"_index":2629,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item.opacity",{"_index":3039,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["item.tooltip",{"_index":1840,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["item.ts",{"_index":3457,"title":{},"body":{"interfaces/VisibilityItem.html":{},"coverage.html":{}}}],["item.visible",{"_index":3038,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/VisibilityMenuComponent.html":{}}}],["item?.tooltip",{"_index":1838,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["items",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["itemschange",{"_index":3470,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["iu",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["iu/ccf",{"_index":4198,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":3573,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["join",{"_index":1277,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["json",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["json.parse(filereader.result",{"_index":1692,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["json.stringify(jsonobj",{"_index":2658,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["json_file_reader",{"_index":1694,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["jsonfilereadercomponent",{"_index":500,"title":{"components/JsonFileReaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["jsonfilereadermodule",{"_index":1699,"title":{"modules/JsonFileReaderModule.html":{}},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules.html":{},"overview.html":{}}}],["jsonld",{"_index":2564,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["jsonobj",{"_index":2654,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["july",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["keeps",{"_index":1820,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["key",{"_index":702,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{}}}],["keyboard",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["keyboardevent",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["keys",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["keyval",{"_index":4121,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":1186,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kidney.svg",{"_index":1187,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":4249,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1188,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["knee.svg",{"_index":1189,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["l",{"_index":1787,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["label",{"_index":155,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/DetailsLabelComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["label'},{'name",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["label.component",{"_index":1288,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label.component.html",{"_index":1266,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.scss",{"_index":1265,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts",{"_index":1257,"title":{},"body":{"components/DetailsLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:15",{"_index":1269,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:20",{"_index":1268,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.component.ts:29",{"_index":1271,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["label.module",{"_index":1879,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["label.module.ts",{"_index":1287,"title":{},"body":{"modules/DetailsLabelModule.html":{}}}],["label/details",{"_index":1256,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["labeled",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["labeledslidetogglecomponent",{"_index":503,"title":{"components/LabeledSlideToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labeledslidetogglemodule",{"_index":1744,"title":{"modules/LabeledSlideToggleModule.html":{}},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["labelel",{"_index":3160,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labelel.contains(target",{"_index":3202,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labelref",{"_index":3152,"title":{},"body":{"components/StageNavComponent.html":{}}}],["labels",{"_index":1716,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[0",{"_index":1740,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[0]}}{{labels[1",{"_index":1743,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labels[1",{"_index":1733,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["labs/dispatch",{"_index":4085,"title":{},"body":{"dependencies.html":{}}}],["landmark",{"_index":1346,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["landmarks",{"_index":1848,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["large",{"_index":1190,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["larynx",{"_index":1193,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["larynx.svg",{"_index":1194,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":2170,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"modules/StoreModule.html":{},"interfaces/UserName.html":{}}}],["lastname",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{}}}],["lastnamevalidator",{"_index":2154,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["latest",{"_index":3611,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["latesttags",{"_index":34,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["launch",{"_index":2753,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["launcher",{"_index":3430,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["launcher.component",{"_index":3449,"title":{},"body":{"modules/VideoModalLauncherModule.html":{}}}],["launcher.component.html",{"_index":3432,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.scss",{"_index":3431,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts",{"_index":3428,"title":{},"body":{"components/VideoModalLauncherComponent.html":{},"coverage.html":{}}}],["launcher.component.ts:17",{"_index":3435,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:22",{"_index":3434,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.component.ts:32",{"_index":3436,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launcher.module",{"_index":1122,"title":{},"body":{"modules/ContentModule.html":{}}}],["launcher.module.ts",{"_index":3448,"title":{},"body":{"modules/VideoModalLauncherModule.html":{}}}],["launcher/video",{"_index":1121,"title":{},"body":{"modules/ContentModule.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"coverage.html":{}}}],["launches",{"_index":3437,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launching",{"_index":3429,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["launchreviewmodal",{"_index":2758,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["launchvideomodal",{"_index":3433,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["layers",{"_index":4073,"title":{},"body":{"dependencies.html":{}}}],["lazy",{"_index":49,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ld",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["leading",{"_index":2032,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["leak",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["left.px",{"_index":1024,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["left.svg",{"_index":1182,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["leftmargin",{"_index":1017,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["leftsidebarcomponent",{"_index":507,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["leftsidebarmodule",{"_index":558,"title":{"modules/LeftSidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LeftSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["legend",{"_index":476,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["length",{"_index":3116,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["letter",{"_index":1778,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["level",{"_index":3357,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["levels",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":4262,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4259,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3646,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["library/assets/body4mesh_1338.glb",{"_index":2966,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["license",{"_index":4215,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["light",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["lighter",{"_index":1395,"title":{},"body":{"components/HeaderComponent.html":{}}}],["limit",{"_index":70,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["limitation",{"_index":4229,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3904,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":3115,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["line",{"_index":124,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["link",{"_index":1396,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["linkage",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":3669,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":2636,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"changelog.html":{}}}],["list'},{'name",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["list.component",{"_index":3300,"title":{},"body":{"modules/TagListModule.html":{}}}],["list.component.html",{"_index":3264,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.scss",{"_index":3263,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts",{"_index":3261,"title":{},"body":{"components/TagListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":3271,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:23",{"_index":3269,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:28",{"_index":3270,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:33",{"_index":3268,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:49",{"_index":3278,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:53",{"_index":3276,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.component.ts:62",{"_index":3272,"title":{},"body":{"components/TagListComponent.html":{}}}],["list.module",{"_index":2889,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["list.module.ts",{"_index":3297,"title":{},"body":{"modules/TagListModule.html":{}}}],["list/tag",{"_index":2888,"title":{},"body":{"modules/RightSidebarModule.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"coverage.html":{}}}],["listen",{"_index":1904,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":1617,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listeners",{"_index":810,"title":{},"body":{"components/ContainerComponent.html":{}}}],["listens",{"_index":3174,"title":{},"body":{"components/StageNavComponent.html":{}}}],["literal",{"_index":1369,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ReferenceDataStateModel.html":{},"dependencies.html":{}}}],["little",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1195,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["liver.svg",{"_index":1196,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":50,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VideoModalComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["loaded",{"_index":1152,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["loaders.gl/core",{"_index":4076,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":4078,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":4079,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["loads",{"_index":3409,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["loadyoutubeplayerapi",{"_index":3404,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["local",{"_index":2579,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["located",{"_index":1548,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":3349,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["locations",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1984,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["log",{"_index":4203,"title":{},"body":{"index.html":{}}}],["logger",{"_index":3254,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":1530,"title":{},"body":{"classes/InitializationState.html":{}}}],["logo",{"_index":1405,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logotooltip",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/User.html":{}}}],["longer",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1295,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["looks",{"_index":2263,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["lookup",{"_index":2224,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["lowerbound",{"_index":3007,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["lowerbound[i",{"_index":3016,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["lru",{"_index":4125,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":4080,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1197,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lung.svg",{"_index":1198,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1199,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":3136,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["made",{"_index":2366,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"changelog.html":{}}}],["main",{"_index":778,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":2233,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["makes",{"_index":3488,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["making",{"_index":1795,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["male",{"_index":1373,"title":{},"body":{"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["mammary",{"_index":1205,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["managers",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["manages",{"_index":3316,"title":{},"body":{"injectables/ThemingService.html":{}}}],["manually",{"_index":1683,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["map",{"_index":113,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["map(([_viewtype",{"_index":3091,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([anatomicalstructures",{"_index":3034,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([entities",{"_index":136,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["map(([haschanges",{"_index":2379,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["map(([local",{"_index":2578,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["map(([nodes",{"_index":3052,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([organ",{"_index":1813,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["map(([organiri",{"_index":3059,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([page",{"_index":2562,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["map(([placement",{"_index":3023,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([rotation",{"_index":3028,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((item",{"_index":2627,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((node",{"_index":3044,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map((set",{"_index":2111,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["map((side",{"_index":3104,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(basehref",{"_index":2239,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["map(def",{"_index":1435,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["map(dims",{"_index":924,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(node",{"_index":3108,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(organ",{"_index":1825,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["map(p",{"_index":950,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(sex",{"_index":1830,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["map(side",{"_index":1833,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["map(type",{"_index":943,"title":{},"body":{"components/ContentComponent.html":{}}}],["map(value",{"_index":2351,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["march",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":992,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/variables.html":{}}}],["margin2",{"_index":1527,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["markdown",{"_index":4130,"title":{},"body":{"dependencies.html":{}}}],["marrow",{"_index":1174,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["marrow.svg",{"_index":1175,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":745,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["mat.transformaspoint",{"_index":3008,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["mat.transformaspoint([1",{"_index":3010,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["mat_dialog_data",{"_index":2829,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["mat_form_field_default_options",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":1705,"title":{},"body":{"modules/JsonFileReaderModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/TagSearchModule.html":{}}}],["match",{"_index":2144,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["matcheckboxmodule",{"_index":3305,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["matches",{"_index":183,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["matches.length",{"_index":189,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["matches.map((as",{"_index":190,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["matching",{"_index":75,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":3298,"title":{},"body":{"modules/TagListModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["matdialog",{"_index":2515,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["matdialogmodule",{"_index":2544,"title":{},"body":{"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/VideoModalModule.html":{}}}],["matdialogref",{"_index":2413,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["matdividermodule",{"_index":1873,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["material",{"_index":1400,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["matexpansionmodule",{"_index":1875,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["matformfieldmodule",{"_index":767,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["math.floor(p.x",{"_index":951,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.floor(p.y",{"_index":952,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.floor(p.z",{"_index":953,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.gl/core",{"_index":2199,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":4083,"title":{},"body":{"dependencies.html":{}}}],["math.max(dims.x",{"_index":925,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(dims.y",{"_index":929,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(dims.z",{"_index":931,"title":{},"body":{"components/ContentComponent.html":{}}}],["math.max(n",{"_index":3015,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.min(20",{"_index":2089,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["math.min(n",{"_index":3012,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["math.round(xyz.x",{"_index":2741,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["math.round(xyz.y",{"_index":2742,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["math.round(xyz.z",{"_index":2743,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["maticonmodule",{"_index":574,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/DrawerModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["maticonregistry",{"_index":1419,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":761,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/SlicesInputModule.html":{},"modules/TagSearchModule.html":{}}}],["matlegacyslidermodule",{"_index":2945,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["matradiomodule",{"_index":2506,"title":{},"body":{"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["matripplemodule",{"_index":763,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["matrix",{"_index":2249,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["matrix.transformaspoint",{"_index":2255,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["matrix4",{"_index":2197,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["matrix4(matrix4.identity",{"_index":2251,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(matrix4.identity).rotatey(toradians(rotation)).multiplyright(n.transformmatrix",{"_index":3030,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(matrix4.identity).scale([2",{"_index":2968,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matrix4(model.transformmatrix",{"_index":3006,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["matselectmodule",{"_index":1363,"title":{},"body":{"modules/ExtractionSetDropdownModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/StageNavModule.html":{}}}],["matslidermodule",{"_index":2946,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["matslidetogglemodule",{"_index":1749,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{}}}],["matsnackbar",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["matsnackbarmodule",{"_index":576,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":765,"title":{},"body":{"modules/BlockSizeInputModule.html":{},"modules/HeaderModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{}}}],["max",{"_index":1010,"title":{},"body":{"components/ContentComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["maximum",{"_index":78,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["mc",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["mdc",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["measured",{"_index":1587,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":1589,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":1579,"title":{},"body":{"classes/InitializationState.html":{}}}],["memory",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1856,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["menu'},{'name",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["menu.component",{"_index":3522,"title":{},"body":{"modules/VisibilityMenuModule.html":{}}}],["menu.component.html",{"_index":3462,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.scss",{"_index":3461,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts",{"_index":3460,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:108",{"_index":3485,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:127",{"_index":3487,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:140",{"_index":3477,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:21",{"_index":3475,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:26",{"_index":3472,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":3473,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":3474,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":3471,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:55",{"_index":3490,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:70",{"_index":3483,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:80",{"_index":3478,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.component.ts:90",{"_index":3493,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["menu.module",{"_index":1889,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["menu.module.ts",{"_index":3521,"title":{},"body":{"modules/VisibilityMenuModule.html":{}}}],["menu/visibility",{"_index":1888,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"coverage.html":{}}}],["merchantability",{"_index":4252,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4232,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":1901,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message",{"_index":801,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message_service_config",{"_index":1302,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message_service_default_config",{"_index":1303,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagechannel",{"_index":816,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":1944,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":1931,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":797,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":782,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messageservice.connect(this",{"_index":860,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":1061,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["messageserviceconfig",{"_index":1903,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":2784,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["metadata",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["metadata'},{'name",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["metadata.component",{"_index":2505,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["metadata.component.html",{"_index":2480,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.scss",{"_index":2479,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts",{"_index":2478,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"coverage.html":{}}}],["metadata.component.ts:21",{"_index":2485,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:26",{"_index":2482,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:52",{"_index":2483,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.component.ts:61",{"_index":2484,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["metadata.module",{"_index":2475,"title":{},"body":{"modules/RegistrationContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["metadata.module.ts",{"_index":2504,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["metadata/registration",{"_index":2474,"title":{},"body":{"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["metadatafield",{"_index":1961,"title":{"interfaces/MetaDataField.html":{}},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["meter",{"_index":2211,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["method",{"_index":913,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":1465,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":1459,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":25,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["middle",{"_index":2172,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["middlename",{"_index":2164,"title":{},"body":{"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{}}}],["middlenamevalidator",{"_index":2155,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["millimeter",{"_index":2210,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["min",{"_index":748,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{}}}],["minimap",{"_index":991,"title":{},"body":{"components/ContentComponent.html":{}}}],["minor",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":4157,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":4216,"title":{},"body":{"license.html":{}}}],["mm",{"_index":727,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["mock",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["modal's",{"_index":2778,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["modal'},{'name",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["modal.component",{"_index":2543,"title":{},"body":{"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewModalModule.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{}}}],["modal.component.html",{"_index":2511,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.scss",{"_index":2817,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts",{"_index":2509,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:16",{"_index":3406,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:23",{"_index":3416,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:24",{"_index":2517,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts:26",{"_index":2516,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.component.ts:27",{"_index":2824,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:31",{"_index":2828,"title":{},"body":{"components/ReviewModalComponent.html":{},"components/VideoModalComponent.html":{}}}],["modal.component.ts:34",{"_index":2521,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.component.ts:36",{"_index":2820,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:38",{"_index":3408,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:45",{"_index":2518,"title":{},"body":{"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{}}}],["modal.component.ts:46",{"_index":2827,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:47",{"_index":3407,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal.component.ts:55",{"_index":2825,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["modal.component.ts:69",{"_index":2520,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["modal.module",{"_index":596,"title":{},"body":{"modules/AppModule.html":{},"modules/ReviewButtonModule.html":{}}}],["modal.module.ts",{"_index":2542,"title":{},"body":{"modules/RegistrationModalModule.html":{},"modules/ReviewModalModule.html":{},"modules/VideoModalModule.html":{}}}],["modal.wrapper",{"_index":3427,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["modal/registration",{"_index":595,"title":{},"body":{"modules/AppModule.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["modal/review",{"_index":2789,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"coverage.html":{}}}],["modal/video",{"_index":1120,"title":{},"body":{"modules/ContentModule.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"coverage.html":{}}}],["modalclosed",{"_index":1769,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["mode",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ReviewButtonComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["model",{"_index":22,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["model.blocksize.x.tofixed(3",{"_index":2707,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.blocksize.y.tofixed(3",{"_index":2709,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.blocksize.z.tofixed(3",{"_index":2711,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.label",{"_index":2691,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.organ$.subscribe(organ",{"_index":2439,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["model.organ.name",{"_index":2642,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.organ.organ",{"_index":2643,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.organ.src",{"_index":2534,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["model.organiri",{"_index":2715,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.position.x.tofixed(3",{"_index":2732,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.position.y.tofixed(3",{"_index":2734,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.position.z.tofixed(3",{"_index":2736,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.representation_of",{"_index":149,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["model.rotation.x.tofixed(3",{"_index":2723,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.rotation.y.tofixed(3",{"_index":2725,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.rotation.z.tofixed(3",{"_index":2727,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.slicesconfig?.numslices",{"_index":2705,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.slicesconfig?.thickness",{"_index":2703,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.snapshot",{"_index":2656,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["model.tooltip",{"_index":156,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["model/model.state",{"_index":118,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["modelchanged",{"_index":2025,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["models/anatomical",{"_index":117,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["models/extraction",{"_index":1991,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["models/meta",{"_index":2558,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["models/visibility",{"_index":1992,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["modelstate",{"_index":88,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modelstatemodel",{"_index":1964,"title":{"interfaces/ModelStateModel.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["modification",{"_index":2582,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["modify",{"_index":4231,"title":{},"body":{"license.html":{}}}],["module",{"_index":543,"title":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["modules",{"_index":545,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/content/content.module",{"_index":589,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/header/header.module",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/left",{"_index":591,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/registration",{"_index":594,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/right",{"_index":597,"title":{},"body":{"modules/AppModule.html":{}}}],["monorepo",{"_index":4166,"title":{},"body":{"index.html":{}}}],["more",{"_index":1336,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":3481,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseevent",{"_index":2425,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["mouseout",{"_index":3464,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseover",{"_index":3465,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mouseover(item",{"_index":3482,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["mousepositiontrackermodule",{"_index":1132,"title":{},"body":{"modules/CoreModule.html":{}}}],["moved",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["moz",{"_index":730,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ms",{"_index":4293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["msg",{"_index":1038,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":1071,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["msg.payload.drawers",{"_index":1065,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["msg.payload.opened",{"_index":3390,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":1063,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":1069,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["much",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":3314,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":4167,"title":{},"body":{"index.html":{}}}],["n",{"_index":967,"title":{},"body":{"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["n3",{"_index":4127,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":44,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name(value",{"_index":2180,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["name.endswith(info.organ",{"_index":2284,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["name.firstname",{"_index":2369,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["name.lastname",{"_index":2370,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["name.middlename",{"_index":2371,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["name_input",{"_index":2186,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["namechange",{"_index":2157,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["nameinputcomponent",{"_index":509,"title":{"components/NameInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameinputmodule",{"_index":1869,"title":{"modules/NameInputModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules.html":{},"overview.html":{}}}],["namematches(organname",{"_index":2048,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["names",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["namespace",{"_index":1161,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["namevalid",{"_index":2407,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["nan",{"_index":2007,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["narrow",{"_index":948,"title":{},"body":{"components/ContentComponent.html":{}}}],["native",{"_index":2664,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{}}}],["nav",{"_index":3147,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav'},{'name",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["nav.component",{"_index":3225,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav.component.html",{"_index":3149,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.scss",{"_index":3148,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts",{"_index":3143,"title":{},"body":{"components/StageNavComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["nav.component.ts:109",{"_index":3183,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:19",{"_index":3172,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:23",{"_index":3165,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:29",{"_index":3163,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:32",{"_index":3169,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:35",{"_index":3170,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:38",{"_index":3171,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:41",{"_index":3187,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:44",{"_index":3189,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:47",{"_index":3184,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:50",{"_index":3185,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:53",{"_index":3192,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:58",{"_index":3196,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:60",{"_index":3162,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:76",{"_index":3173,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.component.ts:91",{"_index":3180,"title":{},"body":{"components/StageNavComponent.html":{}}}],["nav.module",{"_index":1119,"title":{},"body":{"modules/ContentModule.html":{}}}],["nav.module.ts",{"_index":3224,"title":{},"body":{"modules/StageNavModule.html":{}}}],["nav/stage",{"_index":1118,"title":{},"body":{"modules/ContentModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["navigation",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":2771,"title":{},"body":{"components/ReviewButtonComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1156,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["needed",{"_index":3117,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["needs",{"_index":806,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["network",{"_index":4207,"title":{},"body":{"index.html":{}}}],["neuron",{"_index":1208,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["neuron.svg",{"_index":1209,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":853,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":140,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newplacement",{"_index":2257,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.x_translation",{"_index":2260,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.y_translation",{"_index":2261,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newplacement.z_translation",{"_index":2262,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["newposition",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["newrotation",{"_index":2909,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["newstructures",{"_index":2087,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["next",{"_index":123,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["nextmessageid",{"_index":1930,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ng",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ngacceptinputtype_expanded",{"_index":1653,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":1652,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":1651,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":791,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ngdobootstrap",{"_index":565,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["ngonchanges",{"_index":2759,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["ngondestroy",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["ngoninit",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["ngx",{"_index":683,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs",{"_index":3251,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":3230,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":3233,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":109,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["ngxs/store/operators",{"_index":2343,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ngxsdataentitycollectionsrepository",{"_index":17,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["ngxsdatapluginmodule",{"_index":3227,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":3242,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1421,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ngxsimmutabledatarepository",{"_index":1978,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsloggerpluginmodule",{"_index":3229,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":3255,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":3234,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":3243,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsoninit",{"_index":29,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ngxsstoragepluginmodule",{"_index":3232,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsstoragepluginmodule.forroot",{"_index":3252,"title":{},"body":{"modules/StoreModule.html":{}}}],["nih",{"_index":4212,"title":{},"body":{"index.html":{}}}],["node",{"_index":4133,"title":{},"body":{"dependencies.html":{}}}],["node.representation_of",{"_index":3043,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodecollisions",{"_index":2954,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodedragevent",{"_index":906,"title":{},"body":{"components/ContentComponent.html":{}}}],["nodes",{"_index":1200,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["nodes.filter((model",{"_index":3054,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.map(n",{"_index":3029,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes.svg",{"_index":1201,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["noninfringement",{"_index":4256,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":652,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["normalizeplacement",{"_index":2390,"title":{},"body":{"injectables/ReferenceDataState.html":{}}}],["normalizeplacement(place",{"_index":2245,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["not(.cdk",{"_index":2933,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["not(:last",{"_index":741,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/NameInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["note",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["notebooks",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["notebooks/vignettes",{"_index":4193,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":2427,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["notice",{"_index":3837,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":3214,"title":{},"body":{"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["null",{"_index":1430,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["null)?.getcontainerelement",{"_index":3364,"title":{},"body":{"injectables/ThemingService.html":{}}}],["nullish",{"_index":2270,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["number",{"_index":71,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["number(value.slice(0",{"_index":1593,"title":{},"body":{"classes/InitializationState.html":{}}}],["numbersonlymodule",{"_index":3141,"title":{},"body":{"modules/SlicesInputModule.html":{}}}],["numeric",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["numslices",{"_index":2001,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["o.id",{"_index":2046,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["o.organ.tolowercase",{"_index":2049,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["o.side",{"_index":2047,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["obj",{"_index":3283,"title":{},"body":{"components/TagListComponent.html":{}}}],["object",{"_index":1150,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/UserName.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["object.entries(entities).foreach(([id",{"_index":143,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["object.keys(data.organirilookup).length",{"_index":2531,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["object.keys(db.organirilookup).find((code",{"_index":2273,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["object.keys(this.initialstate",{"_index":2027,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["object.values(aslookup",{"_index":2109,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["objects",{"_index":674,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["observable",{"_index":96,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["observableinput",{"_index":82,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["obtaining",{"_index":4225,"title":{},"body":{"license.html":{}}}],["off/on",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1073,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["offsets",{"_index":2863,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["old",{"_index":4180,"title":{},"body":{"index.html":{}}}],["oldposition",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.x",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.y",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["oldposition.z",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["once",{"_index":1145,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":2755,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["ondestroy",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["one",{"_index":1337,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{}}}],["online",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["onorganchange(organ",{"_index":2133,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["onorganirichange",{"_index":2092,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["onreferencedatachange",{"_index":2123,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ontological",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["ontology/ccf",{"_index":2688,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["ontologyid",{"_index":1371,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["opacities",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":1001,"title":{},"body":{"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opacityslidermodule",{"_index":1877,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityMenuModule.html":{}}}],["open",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ReviewButtonComponent.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["open/close",{"_index":1570,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["openapi",{"_index":3678,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":4189,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":4191,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":4190,"title":{},"body":{"index.html":{}}}],["opendialog",{"_index":2513,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["opened",{"_index":1044,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":1557,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":1513,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":1565,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":1514,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":1610,"title":{},"body":{"classes/InitializationState.html":{}}}],["opening/closing/expanding",{"_index":1531,"title":{},"body":{"classes/InitializationState.html":{}}}],["opens",{"_index":1599,"title":{},"body":{"classes/InitializationState.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["opposite",{"_index":1518,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["optimization",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1725,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["optional",{"_index":46,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["optionsel",{"_index":3161,"title":{},"body":{"components/StageNavComponent.html":{}}}],["optionsel.contains(target",{"_index":3203,"title":{},"body":{"components/StageNavComponent.html":{}}}],["optionsref",{"_index":3153,"title":{},"body":{"components/StageNavComponent.html":{}}}],["orcid",{"_index":2493,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["orcidid",{"_index":2317,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["ordering",{"_index":1997,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/ExtractionSet.html":{},"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["organ.id",{"_index":2748,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organ.name",{"_index":2070,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.name.tolowercase",{"_index":2140,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.ontologyid",{"_index":2141,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.sex?.tolowercase",{"_index":2142,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.side",{"_index":2071,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organ.src",{"_index":2441,"title":{},"body":{"components/RegistrationContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organ.touppercase",{"_index":2266,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organconfig",{"_index":1368,"title":{"interfaces/OrganConfig.html":{}},"body":{"interfaces/GlobalConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["organdata",{"_index":2136,"title":{"interfaces/OrganData.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["organdata?.organ",{"_index":2139,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdata?.sex?.tolowercase",{"_index":2138,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions",{"_index":969,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.x",{"_index":972,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.y",{"_index":973,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.z",{"_index":2120,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organdimensions.z].map(n",{"_index":974,"title":{},"body":{"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentity",{"_index":3080,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentity?.['@id",{"_index":3084,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organentry",{"_index":2291,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["organinfo.sex",{"_index":2268,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo?.sex",{"_index":2267,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organinfo?.side?.tolowercase",{"_index":2147,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organinfo?.side].join('|').touppercase",{"_index":2272,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organiri",{"_index":1970,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organirilookup",{"_index":2223,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["organlist",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/User.html":{}}}],["organlistoptions(organoptions",{"_index":2745,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organname",{"_index":2050,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organoptions",{"_index":621,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["organoptions.includes(organ.id",{"_index":2749,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organoptions.length",{"_index":2746,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["organs",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["organselect",{"_index":2411,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organselect(organ",{"_index":2422,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["organselected",{"_index":1758,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["organselector.expanded",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["organselectormodule",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["organsex",{"_index":2134,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organside",{"_index":2044,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["organspatialentities",{"_index":2225,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["orthographic",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["ot",{"_index":1157,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["ot2od026671",{"_index":4214,"title":{},"body":{"index.html":{}}}],["other.expanded",{"_index":1639,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":1640,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":1645,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":1643,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":1642,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":1641,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":1644,"title":{},"body":{"classes/InitializationState.html":{}}}],["otherwise",{"_index":922,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"license.html":{}}}],["out",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"classes/InitializationState.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":681,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["outputs",{"_index":719,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/NameInputComponent.html":{},"components/ReviewButtonComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["outside",{"_index":2905,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ovaries",{"_index":1210,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovaries.svg",{"_index":1211,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovary",{"_index":1212,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":3484,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["overall",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["overlay",{"_index":1356,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"injectables/ThemingService.html":{}}}],["overlaycontainer",{"_index":3345,"title":{},"body":{"injectables/ThemingService.html":{}}}],["overlays",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":2650,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["overview",{"_index":4270,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owning",{"_index":3373,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":2206,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["p.target",{"_index":3064,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.translation_units",{"_index":2208,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_rotation",{"_index":2215,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_scaling",{"_index":2218,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.x_translation",{"_index":2212,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.y_rotation",{"_index":2216,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.y_scaling",{"_index":2219,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.y_translation",{"_index":2213,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_rotation].map(toradians",{"_index":2217,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_scaling",{"_index":2220,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["p.z_translation].map((n",{"_index":3067,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["p.z_translation].map(t",{"_index":2214,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["package",{"_index":3649,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["page",{"_index":23,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{}}}],["page.registrationcallbackset",{"_index":2673,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page.registrationcallbackset$.subscribe((callbackset",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["page.registrationstarted$.subscribe((registrationstarted",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["page.user$.subscribe(user",{"_index":2437,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["page.user.firstname",{"_index":2532,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.user.lastname",{"_index":2533,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["page.user.middlename",{"_index":2693,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page.user.orcidid",{"_index":2698,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["page/page.state",{"_index":119,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{}}}],["pages",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["pagestate",{"_index":91,"title":{"injectables/PageState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagestatemodel",{"_index":2348,"title":{"interfaces/PageStateModel.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["pair",{"_index":1647,"title":{},"body":{"classes/InitializationState.html":{}}}],["paired",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["palatine",{"_index":1213,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas",{"_index":1216,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas.svg",{"_index":1217,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1357,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"changelog.html":{}}}],["panel",{"_index":1294,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":2801,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["param",{"_index":159,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":1526,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":1905,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["parent.messages.pipe(takewhile",{"_index":1937,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parse",{"_index":664,"title":{},"body":{"components/AppWebComponent.html":{}}}],["parsed",{"_index":1674,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["parsedjson",{"_index":1663,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["parseorgan",{"_index":667,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parseorgan(value",{"_index":654,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":4093,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":3259,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{}}}],["particular",{"_index":4254,"title":{},"body":{"license.html":{}}}],["partly",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":1469,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":1474,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":1473,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":1472,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":1471,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["pass",{"_index":2080,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["passed",{"_index":1802,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["passing",{"_index":1807,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["patch",{"_index":2342,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["patchplacement",{"_index":2247,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["patchplacement.target",{"_index":2259,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["path",{"_index":4114,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":1094,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["pbr",{"_index":2972,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pelvis",{"_index":1218,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":2000,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["performance",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":4220,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4239,"title":{},"body":{"license.html":{}}}],["person",{"_index":2347,"title":{"interfaces/Person.html":{}},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"coverage.html":{},"license.html":{}}}],["persons",{"_index":4240,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2321,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"changelog.html":{}}}],["pipe",{"_index":3022,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pipe(filter(s",{"_index":2375,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["pipe(mergeall",{"_index":1939,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["place",{"_index":2258,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.x_rotation",{"_index":2615,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["place.x_translation",{"_index":2252,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.y_rotation",{"_index":2616,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["place.y_translation",{"_index":2253,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["place.z_rotation",{"_index":2617,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["place.z_translation",{"_index":2254,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["placed",{"_index":3241,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":1679,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"changelog.html":{}}}],["placement",{"_index":2205,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["placement.length",{"_index":3051,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placement_date",{"_index":2716,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["placementcube",{"_index":2957,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["placementpatches",{"_index":2228,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["placenta",{"_index":1221,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["placenta.svg",{"_index":1222,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["play",{"_index":3444,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["play_circle_outline",{"_index":3441,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["player",{"_index":3411,"title":{},"body":{"components/VideoModalComponent.html":{},"modules/VideoModalModule.html":{},"dependencies.html":{}}}],["pluckunique",{"_index":2344,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["plugin",{"_index":3231,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["plugins",{"_index":3250,"title":{},"body":{"modules/StoreModule.html":{}}}],["plus",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["populated",{"_index":2277,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["popup",{"_index":3176,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["portal",{"_index":1404,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":4247,"title":{},"body":{"license.html":{}}}],["position",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["position(value",{"_index":1553,"title":{},"body":{"classes/InitializationState.html":{}}}],["position.x",{"_index":981,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["position.x.tofixed(1)}_${position.y.tofixed(1)}_${position.z.tofixed(1",{"_index":2057,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["position.y",{"_index":2256,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["position.z",{"_index":979,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["position.z].map((n",{"_index":3096,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["positions",{"_index":815,"title":{},"body":{"components/ContainerComponent.html":{}}}],["possible",{"_index":1975,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["posterior",{"_index":980,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["potential",{"_index":2264,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["pre",{"_index":3525,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["preclose",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["preferences",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["prevent",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":1793,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["previousitems",{"_index":2082,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["previousitems.map(structure",{"_index":2088,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["previously",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["previousregistrationnodes",{"_index":2955,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousregistrations",{"_index":2569,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousregistrations.map((entity",{"_index":3060,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["previousvisibility",{"_index":1828,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["previousvisibilityitems",{"_index":1759,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["prevnodes",{"_index":3024,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["primary",{"_index":3537,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["private",{"_index":20,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":1037,"title":{},"body":{"components/ContentComponent-1.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["processed",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":803,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["processing",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":3659,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":2782,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["projected",{"_index":811,"title":{},"body":{"components/ContainerComponent.html":{}}}],["projects",{"_index":4168,"title":{},"body":{"index.html":{}}}],["projects/.../anatomical",{"_index":4279,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../app",{"_index":4162,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../block",{"_index":4283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../config.ts",{"_index":4161,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../container.component.ts",{"_index":4163,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../default",{"_index":4284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../drawer.component.ts",{"_index":4276,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../message.service.ts",{"_index":4289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../messages.ts",{"_index":4275,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../meta",{"_index":4277,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../model.state.ts",{"_index":4280,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../reference",{"_index":4159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../rotation",{"_index":4285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../scene.state.ts",{"_index":4160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../slices",{"_index":4287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../stage",{"_index":4278,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":4290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tag",{"_index":4286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../theming.service.ts",{"_index":4288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":1501,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["promise(resolve",{"_index":1498,"title":{},"body":{"classes/InitializationState.html":{}}}],["properties",{"_index":19,"title":{"properties.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"properties.html":{}}}],["property",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["prostate",{"_index":1223,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["prostate.svg",{"_index":1224,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":600,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":823,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":1909,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":549,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"changelog.html":{},"overview.html":{}}}],["provides",{"_index":2744,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["providing",{"_index":1013,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["public",{"_index":2405,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{},"changelog.html":{}}}],["publish",{"_index":4233,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":4255,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":941,"title":{},"body":{"components/ContentComponent.html":{},"components/JsonFileReaderComponent.html":{}}}],["push",{"_index":2523,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["pushed",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":1545,"title":{},"body":{"classes/InitializationState.html":{}}}],["python",{"_index":3572,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["q",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["qs",{"_index":4136,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":961,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":819,"title":{},"body":{"components/ContainerComponent.html":{}}}],["quickly",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["r",{"_index":1788,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["radio",{"_index":2496,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["radius",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["ratio",{"_index":2721,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["rc.1",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":4138,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":4068,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":4088,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":4140,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":2192,"title":{},"body":{"modules/NameInputModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/TagSearchModule.html":{}}}],["readable",{"_index":4142,"title":{},"body":{"dependencies.html":{}}}],["reader",{"_index":1657,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["reader'},{'name",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["reader.component",{"_index":1704,"title":{},"body":{"modules/JsonFileReaderModule.html":{}}}],["reader.component.html",{"_index":1659,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.scss",{"_index":1658,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts",{"_index":1656,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"coverage.html":{}}}],["reader.component.ts:13",{"_index":1671,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:15",{"_index":1682,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:18",{"_index":1666,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:21",{"_index":1664,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:34",{"_index":1675,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.component.ts:44",{"_index":1673,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["reader.module",{"_index":2508,"title":{},"body":{"modules/RegistrationMetadataModule.html":{}}}],["reader.module.ts",{"_index":1703,"title":{},"body":{"modules/JsonFileReaderModule.html":{}}}],["reader/json",{"_index":1655,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"modules/RegistrationMetadataModule.html":{},"coverage.html":{}}}],["readonly",{"_index":160,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["real",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":3239,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":1027,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":1911,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":1367,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["rectify",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["reduce((acc",{"_index":3046,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reduction",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["refdata",{"_index":2585,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reference",{"_index":90,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["referencedata",{"_index":2038,"title":{},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationModalComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["referencedatastate",{"_index":1993,"title":{"injectables/ReferenceDataState.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["referencedatastatemodel",{"_index":2222,"title":{"interfaces/ReferenceDataStateModel.html":{}},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{}}}],["referenceorgannodes",{"_index":2952,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["referenceorgansimplenodes",{"_index":2953,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["references",{"_index":1048,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["refernced",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":728,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["refreshblocksize",{"_index":716,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["refreshes",{"_index":715,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["refreshslices",{"_index":3125,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["reg",{"_index":2595,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_first_name",{"_index":2602,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_last_name",{"_index":2604,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.creator_middle_name",{"_index":2603,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.initialregistration",{"_index":2489,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["reg.placement",{"_index":2599,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.placement[0",{"_index":2598,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.slice_count",{"_index":2620,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.slice_thickness",{"_index":2619,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.x_dimension",{"_index":2611,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.y_dimension",{"_index":2612,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["reg.z_dimension",{"_index":2613,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["regions",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":622,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["register(usecallback",{"_index":2653,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["register/download",{"_index":2651,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["registerbuttonclick",{"_index":2412,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["registerbuttonclick(event",{"_index":2424,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["registerdata",{"_index":2762,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["registered",{"_index":1166,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["registericon",{"_index":1454,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":1451,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl",{"_index":1479,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":1455,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":1416,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registers",{"_index":1449,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/RegistrationStateModel.html":{}}}],["registration",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["registration.registrations",{"_index":3253,"title":{},"body":{"modules/StoreModule.html":{}}}],["registration.state$.subscribe(reg",{"_index":2487,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["registration/registration.state",{"_index":3001,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["registrationcallback",{"_index":640,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/RegistrationStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["registrationcallback?.(json",{"_index":2660,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["registrationcallbackset",{"_index":2296,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["registrationcontentcomponent",{"_index":510,"title":{"components/RegistrationContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationcontentmodule",{"_index":2466,"title":{"modules/RegistrationContentModule.html":{}},"body":{"modules/RegistrationContentModule.html":{},"modules/RegistrationModalModule.html":{},"modules.html":{},"overview.html":{}}}],["registrationisvalid",{"_index":2760,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["registrationmetadatacomponent",{"_index":511,"title":{"components/RegistrationMetadataComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationmetadatamodule",{"_index":2471,"title":{"modules/RegistrationMetadataModule.html":{}},"body":{"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["registrationmodalcomponent",{"_index":513,"title":{"components/RegistrationModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationmodalmodule",{"_index":559,"title":{"modules/RegistrationModalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RegistrationModalModule.html":{},"modules.html":{},"overview.html":{}}}],["registrations",{"_index":2550,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["registrations#1",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["registrationstarted",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/User.html":{}}}],["registrationstate",{"_index":899,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registrationstated",{"_index":2330,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["registrationstatemodel",{"_index":2546,"title":{"interfaces/RegistrationStateModel.html":{}},"body":{"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["registry",{"_index":1426,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":3235,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":1415,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["registry.state.ts:127",{"_index":1485,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:147",{"_index":1483,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:45",{"_index":1481,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:58",{"_index":1486,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:87",{"_index":1487,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:97",{"_index":1488,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":1148,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry/icon",{"_index":1414,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["registry[methodname",{"_index":1461,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["regs",{"_index":2570,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["related",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":1809,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["reliability",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["removable",{"_index":3262,"title":{},"body":{"components/TagListComponent.html":{}}}],["remove",{"_index":3274,"title":{},"body":{"components/TagListComponent.html":{},"injectables/ThemingService.html":{}}}],["removeclass",{"_index":3366,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removed",{"_index":142,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{}}}],["removed.add(id",{"_index":145,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["removed.has(iri",{"_index":150,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["removeeventlistener('beforeunload",{"_index":2385,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["removes",{"_index":3273,"title":{},"body":{"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["removetag",{"_index":30,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/TagListComponent.html":{}}}],["removetag(tag",{"_index":66,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagListComponent.html":{}}}],["renderer",{"_index":3360,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":3347,"title":{},"body":{"injectables/ThemingService.html":{},"components/VideoModalComponent.html":{}}}],["renderer[methodname](overlay",{"_index":3368,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":3367,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":3146,"title":{},"body":{"components/StageNavComponent.html":{}}}],["renders",{"_index":1262,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["repeat",{"_index":1407,"title":{},"body":{"components/HeaderComponent.html":{}}}],["replaysubject",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["replaysubject(1",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["repository",{"_index":4165,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2739,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["required",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["requiredvalues",{"_index":2641,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["requiredvalues.every(value",{"_index":2644,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["researcher's",{"_index":2151,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["reset",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"components/ContentComponent.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["resetitem",{"_index":3466,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["resetrotation",{"_index":2923,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["resetrotation(dimension",{"_index":2920,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["resets",{"_index":917,"title":{},"body":{"components/ContentComponent.html":{},"injectables/ThemingService.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["resetstage",{"_index":897,"title":{},"body":{"components/ContentComponent.html":{}}}],["resettheme",{"_index":3321,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resize",{"_index":910,"title":{},"body":{"components/ContentComponent.html":{}}}],["resizesensor",{"_index":955,"title":{},"body":{"components/ContentComponent.html":{}}}],["resizesensor(this.rootref.nativeelement",{"_index":966,"title":{},"body":{"components/ContentComponent.html":{}}}],["resolve",{"_index":1494,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolved",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["resolver",{"_index":1440,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["resolves",{"_index":834,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["respond",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":3480,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["restriction",{"_index":4228,"title":{},"body":{"license.html":{}}}],["result",{"_index":84,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":80,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retracted",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["return",{"_index":133,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["returned",{"_index":79,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["returns",{"_index":55,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{}}}],["reusable",{"_index":1258,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["reverted",{"_index":3491,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["review",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["review/review",{"_index":2892,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["review_button",{"_index":2798,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["reviewbuttoncomponent",{"_index":515,"title":{"components/ReviewButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reviewbuttonmodule",{"_index":2809,"title":{"modules/ReviewButtonModule.html":{}},"body":{"modules/ReviewButtonModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewing",{"_index":2816,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["reviewmodal",{"_index":2754,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["reviewmodalcomponent",{"_index":518,"title":{"components/ReviewModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reviewmodaldata",{"_index":2819,"title":{"interfaces/ReviewModalData.html":{}},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"coverage.html":{}}}],["reviewmodalmodule",{"_index":2814,"title":{"modules/ReviewModalModule.html":{}},"body":{"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules.html":{},"overview.html":{}}}],["rgb",{"_index":4119,"title":{},"body":{"dependencies.html":{}}}],["rgba(0",{"_index":2463,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["right",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["right.px",{"_index":1025,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["right.svg",{"_index":1183,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["rightmargin",{"_index":1018,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rights",{"_index":4230,"title":{},"body":{"license.html":{}}}],["rightsidebarcomponent",{"_index":519,"title":{"components/RightSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rightsidebarmodule",{"_index":560,"title":{"modules/RightSidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RightSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["ripple::after",{"_index":2499,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["ripple::before",{"_index":2498,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["root",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/CoreModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["root_states",{"_index":3237,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootref",{"_index":900,"title":{},"body":{"components/ContentComponent.html":{}}}],["rotatednodes",{"_index":2951,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotates",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["rotatexyz([p.x_rotation",{"_index":3069,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotatexyz([rotation.x",{"_index":3097,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation",{"_index":521,"title":{"interfaces/Rotation.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rotation.x",{"_index":2929,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.y",{"_index":2930,"title":{},"body":{"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation.z",{"_index":2931,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["rotation.z].map(toradians",{"_index":3098,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["rotation_order",{"_index":2728,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["rotation_slider",{"_index":2915,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotation_units",{"_index":2729,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["rotationchange",{"_index":2907,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotations",{"_index":2918,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["rotationslidercomponent",{"_index":520,"title":{"components/RotationSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rotationslidermodule",{"_index":2876,"title":{"modules/RotationSliderModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules.html":{},"overview.html":{}}}],["round",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["ru/cdk",{"_index":4053,"title":{},"body":{"dependencies.html":{}}}],["ru/common",{"_index":4055,"title":{},"body":{"dependencies.html":{}}}],["ru/common/entity",{"_index":103,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["ru/common/typings",{"_index":2196,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{}}}],["ru/ngxs",{"_index":3228,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ru/ngxs/decorators",{"_index":107,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["ru/ngxs/repositories",{"_index":108,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["rui",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{},"index.html":{}}}],["rui/src/app/app",{"_index":611,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/app.component.ts",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["rui/src/app/app.component.ts:112",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:130",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:140",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:179",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:190",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:44",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:47",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:50",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:53",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:55",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:59",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:60",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:62",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:63",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:64",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:66",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:68",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:70",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.component.ts:73",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["rui/src/app/app.module.ts",{"_index":563,"title":{},"body":{"modules/AppModule.html":{}}}],["rui/src/app/app.module.ts:56",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["rui/src/app/core/core.module.ts",{"_index":1128,"title":{},"body":{"modules/CoreModule.html":{}}}],["rui/src/app/core/models/anatomical",{"_index":3256,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/core/models/documentation.ts",{"_index":1290,"title":{},"body":{"interfaces/DocumentationContent.html":{},"coverage.html":{}}}],["rui/src/app/core/models/extraction",{"_index":1308,"title":{},"body":{"interfaces/ExtractionSet.html":{},"coverage.html":{}}}],["rui/src/app/core/models/meta",{"_index":1962,"title":{},"body":{"interfaces/MetaDataField.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/core/models/visibility",{"_index":3456,"title":{},"body":{"interfaces/VisibilityItem.html":{},"coverage.html":{}}}],["rui/src/app/core/services/config/config.module.ts",{"_index":770,"title":{},"body":{"modules/ConfigModule.html":{}}}],["rui/src/app/core/services/config/config.ts",{"_index":1366,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/services/theming/theming.module.ts",{"_index":3310,"title":{},"body":{"modules/ThemingModule.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts",{"_index":3315,"title":{},"body":{"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:13",{"_index":3342,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:14",{"_index":3343,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:16",{"_index":3341,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:18",{"_index":3344,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:21",{"_index":3332,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:25",{"_index":3324,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:39",{"_index":3329,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:48",{"_index":3340,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:60",{"_index":3338,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:71",{"_index":3336,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/services/theming/theming.service.ts:83",{"_index":3327,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rui/src/app/core/store/anatomical",{"_index":7,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["rui/src/app/core/store/icon",{"_index":1147,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/store/model/model.state.ts",{"_index":1965,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/core/store/page/page.state.ts",{"_index":2294,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"coverage.html":{}}}],["rui/src/app/core/store/page/page.state.ts:114",{"_index":2309,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:129",{"_index":2319,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:139",{"_index":2322,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:150",{"_index":2316,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:160",{"_index":2313,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:167",{"_index":2314,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:177",{"_index":2310,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:183",{"_index":2311,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:59",{"_index":2334,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:61",{"_index":2329,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:62",{"_index":2332,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:63",{"_index":2327,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:64",{"_index":2325,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:67",{"_index":2336,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:72",{"_index":2338,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:80",{"_index":2340,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:82",{"_index":2308,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/page/page.state.ts:98",{"_index":2312,"title":{},"body":{"injectables/PageState.html":{}}}],["rui/src/app/core/store/reference",{"_index":2193,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/core/store/registration/registration.state.ts",{"_index":2547,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"coverage.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts",{"_index":2948,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:121",{"_index":2987,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:132",{"_index":2989,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:160",{"_index":2991,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:172",{"_index":2993,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:179",{"_index":2994,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:197",{"_index":2996,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:219",{"_index":2975,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:235",{"_index":2976,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:236",{"_index":2977,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:237",{"_index":2958,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:253",{"_index":2963,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:263",{"_index":2960,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:287",{"_index":2962,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:56",{"_index":2979,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:67",{"_index":2981,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:84",{"_index":2983,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/scene/scene.state.ts:93",{"_index":2985,"title":{},"body":{"injectables/SceneState.html":{}}}],["rui/src/app/core/store/store.module.ts",{"_index":3226,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/modules/content/content.component.ts",{"_index":887,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["rui/src/app/modules/content/content.component.ts:108",{"_index":919,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:116",{"_index":912,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:126",{"_index":907,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:26",{"_index":904,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:28",{"_index":903,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:30",{"_index":954,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:35",{"_index":944,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:39",{"_index":935,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:50",{"_index":945,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:55",{"_index":936,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:60",{"_index":957,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:63",{"_index":901,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:86",{"_index":911,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.component.ts:99",{"_index":908,"title":{},"body":{"components/ContentComponent.html":{}}}],["rui/src/app/modules/content/content.module.ts",{"_index":1115,"title":{},"body":{"modules/ContentModule.html":{}}}],["rui/src/app/modules/content/stage",{"_index":3142,"title":{},"body":{"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rui/src/app/modules/content/video",{"_index":3402,"title":{},"body":{"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/header/header.component.ts",{"_index":1380,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["rui/src/app/modules/header/header.component.ts:17",{"_index":1386,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.component.ts:19",{"_index":1385,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.component.ts:21",{"_index":1384,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rui/src/app/modules/header/header.module.ts",{"_index":1411,"title":{},"body":{"modules/HeaderModule.html":{}}}],["rui/src/app/modules/left",{"_index":1752,"title":{},"body":{"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/registration",{"_index":2400,"title":{},"body":{"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/review/review",{"_index":2750,"title":{},"body":{"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"coverage.html":{}}}],["rui/src/app/modules/right",{"_index":2850,"title":{},"body":{"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/block",{"_index":671,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/details",{"_index":1255,"title":{},"body":{"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts",{"_index":777,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:105",{"_index":812,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:115",{"_index":802,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:124",{"_index":813,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":799,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":831,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":822,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":827,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":833,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":836,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":817,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:62",{"_index":795,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/container/container.component.ts:83",{"_index":808,"title":{},"body":{"components/ContainerComponent.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts",{"_index":1012,"title":{},"body":{"components/ContentComponent-1.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:103",{"_index":1045,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:116",{"_index":1040,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":1030,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":1031,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":1033,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":1034,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":1028,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":1047,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":1026,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:60",{"_index":1039,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/content/content.component.ts:70",{"_index":1036,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["rui/src/app/shared/components/drawer/drawer.module.ts",{"_index":1301,"title":{},"body":{"modules/DrawerModule.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":1491,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":1503,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":1500,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:41",{"_index":1504,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:46",{"_index":1505,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:56",{"_index":1509,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/drawer/drawer.component.ts:65",{"_index":1506,"title":{},"body":{"classes/InitializationState.html":{}}}],["rui/src/app/shared/components/drawer/messages.ts",{"_index":1086,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/drawer/toggle",{"_index":3369,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/extraction",{"_index":1315,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/json",{"_index":1654,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/labeled",{"_index":1707,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/name",{"_index":2149,"title":{},"body":{"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/registration",{"_index":2477,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/components/rotation",{"_index":2894,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/slices",{"_index":3110,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/tag",{"_index":3260,"title":{},"body":{"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/components/visibility",{"_index":3459,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{}}}],["rui/src/app/shared/services/message/message.service.ts",{"_index":1892,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:103",{"_index":1952,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:112",{"_index":1953,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:128",{"_index":1960,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:130",{"_index":1957,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:153",{"_index":1959,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:163",{"_index":1958,"title":{},"body":{"injectables/MessageService.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:50",{"_index":1949,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:70",{"_index":1954,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:83",{"_index":1950,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui/src/app/shared/services/message/message.service.ts:93",{"_index":1951,"title":{},"body":{"classes/MessageChannel.html":{}}}],["rui_locations.jsonld",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["rui_organs",{"_index":1823,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rui_organs.filter(organ",{"_index":2747,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["ruiconfig",{"_index":1376,"title":{},"body":{"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":807,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["runtime",{"_index":1155,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":112,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":114,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["s",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/User.html":{}}}],["safehtml",{"_index":1417,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":1418,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["same",{"_index":1998,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sample",{"_index":3978,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["samples",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":1428,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":1158,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["sanitizer",{"_index":1427,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saveas",{"_index":2553,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["saveas(data",{"_index":2665,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["saved",{"_index":2367,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["saver",{"_index":2554,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1402,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scale([blocksize.x",{"_index":3099,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scale([entity.x_dimension",{"_index":3070,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scalex",{"_index":737,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["scaling_units",{"_index":2720,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["scene",{"_index":24,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["scene/scene.state",{"_index":120,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"modules/StoreModule.html":{}}}],["scenegraph",{"_index":2965,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodelookup",{"_index":2226,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["scenestate",{"_index":92,"title":{"injectables/SceneState.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenestatemodel",{"_index":3003,"title":{"interfaces/SceneStateModel.html":{}},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{}}}],["scheduled",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["schemes",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":4208,"title":{},"body":{"index.html":{}}}],["script",{"_index":3419,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["script.src",{"_index":3422,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["scroll",{"_index":1849,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["scrollbar",{"_index":1851,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["scrolling",{"_index":885,"title":{},"body":{"components/ContainerComponent.html":{}}}],["search",{"_index":77,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":530,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["search.component",{"_index":3307,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["search.component.ts",{"_index":4045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.module",{"_index":2891,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["search.module.ts",{"_index":3304,"title":{},"body":{"modules/TagSearchModule.html":{}}}],["search/tag",{"_index":2890,"title":{},"body":{"modules/RightSidebarModule.html":{},"modules/TagSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searches",{"_index":74,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"changelog.html":{}}}],["searchexternal",{"_index":31,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["searchexternal(text",{"_index":68,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["section",{"_index":2494,"title":{},"body":{"components/RegistrationMetadataComponent.html":{},"changelog.html":{}}}],["sections",{"_index":3135,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["see",{"_index":2418,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"changelog.html":{},"index.html":{}}}],["select",{"_index":1857,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["selected",{"_index":1322,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["selecting",{"_index":1319,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["selection",{"_index":1722,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["selector",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["selects",{"_index":1467,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["sell",{"_index":4237,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":796,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["sender",{"_index":1897,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":1629,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":1596,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":1947,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":1915,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":1626,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sendtoggle",{"_index":1630,"title":{},"body":{"classes/InitializationState.html":{}}}],["sennet",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["sensitive",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["sensor",{"_index":894,"title":{},"body":{"components/ContentComponent.html":{}}}],["sent",{"_index":1087,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["separated",{"_index":1263,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["server",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":47,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["service.initialize(location",{"_index":3351,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services/config/config",{"_index":1422,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["services/config/config.module",{"_index":1134,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/message/message.service",{"_index":1091,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1135,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":141,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{}}}],["set's",{"_index":2631,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["set(reg.ccf_annotations",{"_index":2623,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["set.label",{"_index":2112,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["set.name",{"_index":1347,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["set.sites.length",{"_index":1348,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["set.ts",{"_index":1309,"title":{},"body":{"interfaces/ExtractionSet.html":{},"coverage.html":{}}}],["set__chips",{"_index":3291,"title":{},"body":{"components/TagListComponent.html":{}}}],["setallopacity",{"_index":3467,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["setallopacity(value",{"_index":3486,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["setanatomicalstructures(anatomicalstructures",{"_index":2077,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setblocksize(blocksize",{"_index":2051,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setchange",{"_index":1325,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["setdisplayerrors(displayerrors",{"_index":2632,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setextractionsets(extractionsets",{"_index":2078,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setextractionsites(extractionsites",{"_index":2076,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sethaschanges",{"_index":2300,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setname(value",{"_index":2174,"title":{},"body":{"components/NameInputComponent.html":{}}}],["setorcidid",{"_index":2301,"title":{},"body":{"injectables/PageState.html":{}}}],["setorcidid(orcidid",{"_index":2315,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setorgan(organ",{"_index":2068,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setorganselection(ids",{"_index":2637,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setposition(position",{"_index":2054,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setrotation(rotation",{"_index":2053,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sets",{"_index":809,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"injectables/ThemingService.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["sets.length",{"_index":2114,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sets[0].sites",{"_index":2115,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsex(sex",{"_index":2073,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsexfromlabel",{"_index":1763,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["setsexfromlabel(label",{"_index":1784,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["setshowprevious",{"_index":2081,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setshowprevious(showprevious",{"_index":2075,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setside(side",{"_index":2074,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setsidefromlabel",{"_index":1764,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["setsidefromlabel(label",{"_index":1786,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["setslicesconfig(slicesconfig",{"_index":2058,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["settheme",{"_index":3322,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":3339,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":1598,"title":{},"body":{"classes/InitializationState.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/ToggleButtonComponent.html":{}}}],["setting",{"_index":2899,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/StoreModule.html":{}}}],["settoinitialregistration",{"_index":2669,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setup",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["setusecancelregistrationcallback",{"_index":2302,"title":{},"body":{"injectables/PageState.html":{}}}],["setusecancelregistrationcallback(use",{"_index":2318,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setusedropdownmenu(value",{"_index":3190,"title":{},"body":{"components/StageNavComponent.html":{}}}],["setuseregistrationcallback(use",{"_index":2630,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["setusername",{"_index":2303,"title":{},"body":{"injectables/PageState.html":{}}}],["setusername(name",{"_index":2320,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["setviewside(viewside",{"_index":2060,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["setviewtype",{"_index":898,"title":{},"body":{"components/ContentComponent.html":{}}}],["setviewtype(is3dview",{"_index":918,"title":{},"body":{"components/ContentComponent.html":{}}}],["setviewtype(viewtype",{"_index":2059,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["sex",{"_index":1372,"title":{},"body":{"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["sexbylabel",{"_index":1760,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["sexes",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["sexselected",{"_index":2408,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["shadow",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RightSidebarComponent.html":{}}}],["shall",{"_index":4244,"title":{},"body":{"license.html":{}}}],["shared",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/ConfigModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/LeftSidebarModule.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"modules/RightSidebarModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"modules/SlicesInputModule.html":{},"modules/StoreModule.html":{},"interfaces/User.html":{},"modules/VisibilityMenuModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/CoreModule.html":{},"interfaces/User.html":{}}}],["shared/components/block",{"_index":2881,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/details",{"_index":1878,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/extraction",{"_index":1880,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/labeled",{"_index":1882,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["shared/components/name",{"_index":1884,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/components/registration",{"_index":2473,"title":{},"body":{"modules/RegistrationContentModule.html":{},"modules/RightSidebarModule.html":{}}}],["shared/components/rotation",{"_index":2882,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/slices",{"_index":2885,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/tag",{"_index":2887,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["shared/components/visibility",{"_index":1887,"title":{},"body":{"modules/LeftSidebarModule.html":{}}}],["shared/rxjs",{"_index":1981,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["shared/web",{"_index":649,"title":{},"body":{"components/AppWebComponent.html":{}}}],["shifts",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["shortest",{"_index":4113,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":958,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["showcollisions",{"_index":3004,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["showdebugbuttons",{"_index":895,"title":{},"body":{"components/ContentComponent.html":{}}}],["showing",{"_index":2776,"title":{},"body":{"components/ReviewButtonComponent.html":{},"changelog.html":{}}}],["shown",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["showprevious",{"_index":1971,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["shows",{"_index":937,"title":{},"body":{"components/ContentComponent.html":{},"components/StageNavComponent.html":{},"changelog.html":{}}}],["shrink",{"_index":3513,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["side",{"_index":1049,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/GlobalConfig.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["sidebar",{"_index":990,"title":{},"body":{"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["sidebar.component",{"_index":1891,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar.component.html",{"_index":1755,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1754,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":1753,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:102",{"_index":1785,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:111",{"_index":1789,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:123",{"_index":1791,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:136",{"_index":1805,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:20",{"_index":2853,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":2852,"title":{},"body":{"components/RightSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":1773,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:26",{"_index":1771,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":1772,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":1831,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":1834,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:39",{"_index":1826,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:43",{"_index":1817,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:54",{"_index":1818,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:60",{"_index":1827,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:62",{"_index":1770,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:75",{"_index":1775,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.component.ts:89",{"_index":1800,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar.module",{"_index":593,"title":{},"body":{"modules/AppModule.html":{}}}],["sidebar.module.ts",{"_index":1872,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/RightSidebarModule.html":{}}}],["sidebar/left",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"coverage.html":{}}}],["sidebar/right",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"coverage.html":{}}}],["sidebylabel",{"_index":1761,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidechange",{"_index":3158,"title":{},"body":{"components/StageNavComponent.html":{}}}],["sides",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":2421,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["significant",{"_index":3753,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":3193,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["simplescenenodelookup",{"_index":2227,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["simplifies",{"_index":3759,"title":{},"body":{"changelog.html":{}}}],["single",{"_index":1914,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["site",{"_index":1801,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sites",{"_index":1310,"title":{},"body":{"interfaces/ExtractionSet.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["sizable",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sizes",{"_index":686,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/RightSidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["skin",{"_index":1225,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skin.svg",{"_index":1226,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skipconfirmation",{"_index":2304,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["skipself",{"_index":1131,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["skipunsavedchangesconfirmation",{"_index":623,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{}}}],["skipuntil",{"_index":1987,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["skipuntil(this.page.registrationstarted$.pipe",{"_index":2130,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["slice",{"_index":1977,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["slice(0",{"_index":193,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["slice_count",{"_index":2704,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["slice_input",{"_index":3122,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slice_thickness",{"_index":2702,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["slices",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["slicesconfig",{"_index":1972,"title":{"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slicesconfigchange",{"_index":3112,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["slicesinputcomponent",{"_index":523,"title":{"components/SlicesInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["slicesinputmodule",{"_index":2877,"title":{"modules/SlicesInputModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/SlicesInputModule.html":{},"modules.html":{},"overview.html":{}}}],["slide",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{}}}],["slide_toggle",{"_index":1738,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["slider",{"_index":1711,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["slider.component",{"_index":2944,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["slider.component.html",{"_index":2903,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.scss",{"_index":2904,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slider.component.ts",{"_index":2895,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slider.component.ts:34",{"_index":2926,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":2925,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:44",{"_index":2924,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:59",{"_index":2927,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.component.ts:68",{"_index":2928,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["slider.module",{"_index":2884,"title":{},"body":{"modules/RightSidebarModule.html":{}}}],["slider.module.ts",{"_index":2943,"title":{},"body":{"modules/RotationSliderModule.html":{}}}],["slider/ngx",{"_index":4058,"title":{},"body":{"dependencies.html":{}}}],["slider/rotation",{"_index":2883,"title":{},"body":{"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sliders",{"_index":1854,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["slightly",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1227,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["snackbar",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["snackbar.dismiss",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["snackbar__surface",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["snapshot",{"_index":2363,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["snapshot.useregistrationcallback",{"_index":2659,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["software",{"_index":4169,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":1392,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["solved",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["sortby",{"_index":1983,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"modules/BlockSizeInputModule.html":{},"modules/ConfigModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"modules/DetailsLabelModule.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"modules/ExtractionSetDropdownModule.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"modules/JsonFileReaderModule.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"modules/LeftSidebarModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"modules/NameInputModule.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"modules/RegistrationContentModule.html":{},"components/RegistrationMetadataComponent.html":{},"modules/RegistrationMetadataModule.html":{},"components/RegistrationModalComponent.html":{},"modules/RegistrationModalModule.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"modules/ReviewButtonModule.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"modules/ReviewModalModule.html":{},"components/RightSidebarComponent.html":{},"modules/RightSidebarModule.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"modules/RotationSliderModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"modules/SlicesInputModule.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["sources",{"_index":1927,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["sources.includes(msg.source",{"_index":1929,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["space",{"_index":989,"title":{},"body":{"components/ContentComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["sparc",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":3583,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":996,"title":{},"body":{"components/ContentComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["spatialentity",{"_index":2116,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.x_dimension",{"_index":2118,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.y_dimension",{"_index":2119,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentity.z_dimension",{"_index":2121,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["spatialentityjsonld",{"_index":631,"title":{},"body":{"components/AppWebComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialkeyboardaxis",{"_index":2956,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialplacement",{"_index":2714,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["spatialplacementjsonld",{"_index":2200,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["spatialscenenode",{"_index":2201,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["spatialsearchkeyboarduibehaviormodule",{"_index":1123,"title":{},"body":{"modules/ContentModule.html":{}}}],["spec",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":4188,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1106,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":4187,"title":{},"body":{"index.html":{}}}],["specified",{"_index":1926,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/RegistrationStateModel.html":{}}}],["specifying",{"_index":1908,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":1228,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["spinning",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1231,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"miscellaneous/variables.html":{}}}],["spleen.svg",{"_index":1232,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["sprint",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":2005,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["stage",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["stage_nav",{"_index":3205,"title":{},"body":{"components/StageNavComponent.html":{}}}],["stagenavcomponent",{"_index":525,"title":{"components/StageNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"modules/StageNavModule.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stagenavmodule",{"_index":1113,"title":{"modules/StageNavModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/StageNavModule.html":{},"modules.html":{},"overview.html":{}}}],["staging",{"_index":3660,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["stamp",{"_index":2680,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["standalone",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":4173,"title":{},"body":{"index.html":{}}}],["start",{"_index":851,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/RegistrationContentComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":1078,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["start?.opened",{"_index":1077,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["startdrawers",{"_index":874,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":878,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":882,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":2132,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ModelStateModel.html":{},"components/RegistrationContentComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["startexpanded",{"_index":1076,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["starts",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":1153,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/RegistrationModalComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["startwith",{"_index":840,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["state",{"_index":15,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["state$.pipe(map(x",{"_index":2571,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["state('closed",{"_index":1537,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":1542,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('extended",{"_index":1546,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":1057,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["state('full",{"_index":1547,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('half",{"_index":1543,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('open",{"_index":1536,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('true",{"_index":1058,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["state.organspatialentities[updatediri",{"_index":2282,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["statechange",{"_index":1569,"title":{},"body":{"classes/InitializationState.html":{}}}],["statements",{"_index":3986,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":106,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["states",{"_index":164,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContentComponent-1.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":1650,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{}}}],["stay",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["stomach",{"_index":1233,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["stomach.svg",{"_index":1234,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1009,"title":{},"body":{"components/ContentComponent.html":{},"modules/StoreModule.html":{}}}],["store/store.module",{"_index":1136,"title":{},"body":{"modules/CoreModule.html":{}}}],["stored",{"_index":2896,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["storedebugmodule",{"_index":1117,"title":{},"body":{"modules/ContentModule.html":{}}}],["storemodule",{"_index":1126,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":3238,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":4143,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":4141,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":69,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["strings",{"_index":1261,"title":{},"body":{"components/DetailsLabelComponent.html":{}}}],["structure",{"_index":8,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/DocumentationContent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"modules/StoreModule.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["structure.opacity",{"_index":2090,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["structures",{"_index":1797,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["strvalue",{"_index":3119,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["style",{"_index":1053,"title":{},"body":{"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/VisibilityToggleComponent.html":{}}}],["style.margin",{"_index":1023,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["styled",{"_index":2767,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["styles",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":1592,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["styling",{"_index":1680,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"changelog.html":{}}}],["sub",{"_index":1105,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":1899,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"license.html":{}}}],["sublicense",{"_index":4235,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2128,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["subscribe(updateskipconfirmation",{"_index":2376,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["subscription",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["subscriptions",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["substantial",{"_index":4246,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1450,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["such",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["suffix",{"_index":744,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["suffix.show",{"_index":3137,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["super",{"_index":161,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["super(configstore",{"_index":659,"title":{},"body":{"components/AppWebComponent.html":{}}}],["super.ngxsoninit",{"_index":162,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["support",{"_index":3585,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1162,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["swiper",{"_index":4147,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["switched",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":1988,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["switchmap(data",{"_index":2244,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["switchmap(fetch",{"_index":2575,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["switchmap(organ",{"_index":2126,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["switchmap(url",{"_index":2242,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["sync",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["syncexpanded(other",{"_index":1638,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":1635,"title":{},"body":{"classes/InitializationState.html":{}}}],["t",{"_index":1895,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["t.label).join",{"_index":2679,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["table",{"_index":4052,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4051,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":12,"title":{"interfaces/Tag.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"interfaces/TagSearchResult.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tag.id",{"_index":180,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/TagListComponent.html":{}}}],["tag.label",{"_index":3286,"title":{},"body":{"components/TagListComponent.html":{}}}],["tag.ts",{"_index":3257,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tag.type",{"_index":144,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/TagListComponent.html":{}}}],["tag_list",{"_index":3285,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagclasses",{"_index":3265,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagclasses(tag",{"_index":3275,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagging",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["tagid",{"_index":115,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/typealiases.html":{}}}],["tagid(_index",{"_index":3277,"title":{},"body":{"components/TagListComponent.html":{}}}],["taglistcomponent",{"_index":527,"title":{"components/TagListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"modules/TagListModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taglistmodule",{"_index":2878,"title":{"modules/TagListModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/TagListModule.html":{},"modules.html":{},"overview.html":{}}}],["tagremoved",{"_index":3266,"title":{},"body":{"components/TagListComponent.html":{}}}],["tags",{"_index":33,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"components/TagListComponent.html":{}}}],["tags.map(t",{"_index":2678,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["tags.map(tag",{"_index":2701,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["tags.push",{"_index":153,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.push(tag",{"_index":147,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["tags.state",{"_index":2559,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{}}}],["tags.state.ts",{"_index":10,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"coverage.html":{}}}],["tags.state.ts:112",{"_index":63,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:119",{"_index":54,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:124",{"_index":67,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:140",{"_index":73,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:158",{"_index":58,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:38",{"_index":95,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:68",{"_index":87,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:70",{"_index":98,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:75",{"_index":89,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:77",{"_index":93,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:79",{"_index":39,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags.state.ts:95",{"_index":64,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{}}}],["tags/anatomical",{"_index":9,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["tagschange",{"_index":3267,"title":{},"body":{"components/TagListComponent.html":{}}}],["tagsearchcomponent",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"modules/TagSearchModule.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tagsearchmodule",{"_index":2879,"title":{"modules/TagSearchModule.html":{}},"body":{"modules/RightSidebarModule.html":{},"modules/TagSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsearchresult",{"_index":116,"title":{"interfaces/TagSearchResult.html":{}},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["take",{"_index":2345,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"changelog.html":{}}}],["take(1",{"_index":2355,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["takes",{"_index":1259,"title":{},"body":{"components/DetailsLabelComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["takewhile",{"_index":1902,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tap",{"_index":1989,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["tap(([page",{"_index":2528,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["tap(config",{"_index":2356,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["tap(reg",{"_index":2592,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["target",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{}}}],["target.key",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.nodename",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.preventdefault",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["target.repeat",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["technologies",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["technology",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["template",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["templateurl",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["temporary",{"_index":1006,"title":{},"body":{"components/ContentComponent.html":{}}}],["terms",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":940,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{}}}],["text",{"_index":76,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/BlockSizeInputComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{}}}],["textfield",{"_index":732,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/SlicesInputComponent.html":{}}}],["theme",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["thememode",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["themes",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["theming.initialize(el",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["theming.service",{"_index":3312,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":1127,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":241,"title":{"injectables/ThemingService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":3313,"title":{},"body":{"modules/ThemingModule.html":{}}}],["thick",{"_index":1243,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thick.svg",{"_index":1244,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thickness",{"_index":1999,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":1245,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["thin.svg",{"_index":1246,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":166,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this._expanded",{"_index":1560,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._latesttags",{"_index":158,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this._measuredmargin",{"_index":1590,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":1580,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._name",{"_index":2179,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this._opened",{"_index":1556,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":1552,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.addentityone",{"_index":182,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.addregistration(jsonobj",{"_index":2666,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.addtagraw(tag",{"_index":177,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.animationsenabled",{"_index":1067,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.applythemeclass(theme",{"_index":3355,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.gettheme",{"_index":3359,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":3354,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.blocksize",{"_index":709,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksize[key",{"_index":713,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.blocksizechange.emit(this.blocksize",{"_index":714,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.buildjsonld(page",{"_index":2566,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.buildjsonld(page.snapshot",{"_index":2655,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.buildmetadata(page",{"_index":2563,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.capitalizefirstletter(organ?.organ",{"_index":1814,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.capitalizefirstletter(sex",{"_index":1816,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.capitalizefirstletter(side",{"_index":1815,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.cdr.markforcheck",{"_index":868,"title":{},"body":{"components/ContainerComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.channel",{"_index":859,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":1936,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed",{"_index":1938,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":1941,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.next",{"_index":1916,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":865,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.checknamevalid(user",{"_index":2438,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["this.closedialog",{"_index":2451,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.consentservice.consent",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.content",{"_index":870,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":869,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":856,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":858,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":857,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.createscenenodes(organiri",{"_index":3035,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.ctx.patchstate",{"_index":2052,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ctx.setstate(patch",{"_index":2368,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.currentdate",{"_index":2681,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.currentidentifier",{"_index":2683,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.currentorgan",{"_index":2450,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.currentsex",{"_index":2445,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.defaultposition",{"_index":2122,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.defaulttheme",{"_index":3353,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":1529,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.dialog.open(registrationcontentcomponent",{"_index":2536,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.dialog.open(reviewmodalcomponent",{"_index":2800,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.dialog.open(videomodalcomponent",{"_index":3438,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["this.dialogopen",{"_index":2529,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.dialogref.close",{"_index":2836,"title":{},"body":{"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/VideoModalComponent.html":{}}}],["this.dialogref.close(true",{"_index":2454,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.disablepositionchange",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.drawer",{"_index":3391,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":3389,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":1064,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":863,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":873,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.editregistration(reg",{"_index":2593,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.editregistration(this.getstate().initialregistration",{"_index":2670,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.element",{"_index":3358,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.element.nativeelement",{"_index":1581,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.entererrormode.emit",{"_index":2796,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.entities$.subscribe",{"_index":175,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.expanded",{"_index":1616,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":1625,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":1606,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":1574,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.extractionsitetooltip",{"_index":1839,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.faded",{"_index":1082,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.fileinput.nativeelement",{"_index":1686,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.firstnamevalidator.setvalue(value?.firstname",{"_index":2181,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.ga.event('all_items_opacity_update",{"_index":3511,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('block_size_change",{"_index":711,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.ga.event('block_size_reset",{"_index":717,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["this.ga.event('item_reset",{"_index":3509,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('json_file_load_end",{"_index":1693,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.ga.event('json_file_load_start",{"_index":1696,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.ga.event('name_updated",{"_index":2185,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.ga.event('opacity_update",{"_index":3506,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.ga.event('organ_select",{"_index":2069,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ga.event('placement",{"_index":2055,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.ga.event('register",{"_index":2807,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.ga.event('review_start",{"_index":2797,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.ga.event('rotation_reset",{"_index":2921,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.ga.event('rotation_update",{"_index":2914,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.ga.event('selected_extraction_set_change",{"_index":1341,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.ga.event('side_update",{"_index":3204,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.ga.event('slice_config_reset",{"_index":3126,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.ga.event('slice_config_update",{"_index":3121,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.ga.event('slide_toggle_toggled",{"_index":1737,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.ga.event('tag_removed",{"_index":3284,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.ga.event('view_update",{"_index":3211,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.ga.event('visibility_toggled",{"_index":3496,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["this.getarguments(definition",{"_index":1464,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getlatestiri(iri",{"_index":2281,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getlatestiri(key",{"_index":2275,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getlatestiri(organentry.target",{"_index":2293,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":1925,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":1460,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getorganspatialentity(organiri",{"_index":3081,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.getsourcedb().subscribe(db",{"_index":2230,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalconfig.config$.pipe",{"_index":2354,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.globalconfig.getoption('basehref').pipe",{"_index":2238,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalconfig.getoption('editregistration').pipe",{"_index":2591,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.globalconfig.getoption('header",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('homeurl",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('homeurl').subscribe((url",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('logotooltip",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('logotooltip').subscribe((tooltip",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.getoption('organ').pipe",{"_index":2124,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.globalconfig.getoption('skipunsavedchangesconfirmation').pipe",{"_index":2350,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.globalconfig.getoption('theme",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.globalconfig.snapshot.basehref",{"_index":1446,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.globalconfig.state$]).pipe",{"_index":2527,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.globals.set('db",{"_index":2236,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.globalskipconfirmation",{"_index":2374,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.handlemessage(msg",{"_index":862,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.haschanges$.pipe",{"_index":2377,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.homeurl",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.hover.emit(item",{"_index":3499,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.hover.emit(undefined",{"_index":3500,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.idmatches(ontologyid",{"_index":2145,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.initialized",{"_index":1528,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":1597,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":1607,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":1631,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initskipconfirmationlisteners",{"_index":2362,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.injector",{"_index":608,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["this.injector.get(anatomicalstructuretagstate",{"_index":2587,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.injector.get(modelstate",{"_index":169,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(pagestate",{"_index":173,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.injector.get(referencedatastate",{"_index":2040,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.injector.get(registrationstate",{"_index":3107,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(scenestate",{"_index":171,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.isdatavalid(this.page.snapshot",{"_index":2646,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.isdropdownactive",{"_index":3198,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.isdropdownhidden",{"_index":3199,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.isvalid",{"_index":2568,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.items",{"_index":3504,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.items.map(i",{"_index":3510,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.items.map(item",{"_index":3505,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.itemschange.emit(this.items",{"_index":3508,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.labelref.nativeelement",{"_index":3200,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.labels[0",{"_index":1735,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.labels[1",{"_index":1736,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.lastnamevalidator.setvalue(value?.lastname",{"_index":2182,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.launchreviewmodal",{"_index":2799,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.leftmargin",{"_index":1074,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.loadyoutubeplayerapi",{"_index":3418,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.logotooltip",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.margin2",{"_index":1577,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":1576,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":1632,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":1935,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter(msg",{"_index":1922,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.metadata",{"_index":2805,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["this.metadata.length",{"_index":2791,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.metadata.slice(0",{"_index":2793,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.middlenamevalidator.setvalue(value?.middlename",{"_index":2183,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.model",{"_index":168,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.blocksize",{"_index":3087,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.defaultposition.x",{"_index":926,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.defaultposition.y",{"_index":930,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.defaultposition.z",{"_index":932,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.extractionsites",{"_index":3032,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organ",{"_index":1810,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.organ$.pipe",{"_index":1824,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.organ$]).pipe",{"_index":3090,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organdimensions$.pipe",{"_index":923,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.organiri",{"_index":3036,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.organiri$]).pipe",{"_index":3033,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.position",{"_index":3089,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.position$.pipe",{"_index":949,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.model.position$]).pipe(map(([organiri",{"_index":3079,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.rotation",{"_index":3088,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.setblocksize",{"_index":2610,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setorgan(data.organ",{"_index":2605,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setorgan(this.currentorgan",{"_index":2453,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.setposition",{"_index":2621,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setposition(newposition",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/User.html":{}}}],["this.model.setrotation",{"_index":2614,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setsex(data.sex",{"_index":2607,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setsex(label",{"_index":1841,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.setsex(label.tolowercase",{"_index":2491,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.model.setsex(this.currentsex",{"_index":2452,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.model.setside(data.side",{"_index":2609,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.setside(label",{"_index":1842,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.setslicesconfig",{"_index":2618,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.sex$.pipe",{"_index":1829,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{}}}],["this.model.sex$]).pipe",{"_index":1812,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.showprevious",{"_index":3057,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.side",{"_index":1811,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.side$.pipe",{"_index":1832,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.snapshot",{"_index":970,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.anatomicalstructures",{"_index":184,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/LeftSidebarComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.snapshot.blocksize",{"_index":3082,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.organdimensions",{"_index":3065,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.snapshot.position",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.model.state",{"_index":2525,"title":{},"body":{"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.model.state$]).pipe",{"_index":2567,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.model.toggleregistrationblocksvisibility(visible",{"_index":1844,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.model.viewside$.pipe",{"_index":3103,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.model.viewtype$.pipe",{"_index":942,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.modelchanged$.pipe",{"_index":2129,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.name",{"_index":2184,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namechange.emit(this.name",{"_index":2187,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["this.namematches(organname",{"_index":2146,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.namevalid",{"_index":2447,"title":{},"body":{"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["this.nextmessageid",{"_index":1917,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodecollisions",{"_index":3020,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.nodes$]).pipe",{"_index":3027,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.onorganchange(organ",{"_index":2127,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.onorganirichange",{"_index":2072,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.onreferencedatachange",{"_index":2042,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.open",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.opendialog",{"_index":2535,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.opened",{"_index":1604,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":1621,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":1605,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.optionsref.nativeelement",{"_index":3201,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.organlist",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/RegistrationContentComponent.html":{},"interfaces/User.html":{}}}],["this.organlistoptions(ids",{"_index":2639,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.organselected",{"_index":2440,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.page",{"_index":172,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.page.clearhaschanges",{"_index":2668,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.page.organoptions$.subscribe((options",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/RegistrationContentComponent.html":{},"interfaces/User.html":{}}}],["this.page.patchstate",{"_index":2638,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.page.registrationstarted",{"_index":2455,"title":{},"body":{"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["this.page.sethaschanges",{"_index":176,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.page.setusername",{"_index":2601,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.parsedjson.emit(json",{"_index":1695,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["this.patchstate",{"_index":2373,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.placementcube",{"_index":3017,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.placementcube$]).pipe",{"_index":3049,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.position",{"_index":1551,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.previousregistrationnodes",{"_index":3019,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.previousvisibilityitems",{"_index":1843,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.refdata",{"_index":2588,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.getorgandata(place.target",{"_index":2600,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.normalizeplacement",{"_index":2596,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.refdata.state$.subscribe",{"_index":2589,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.referencedata",{"_index":2039,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.getorgandata(organ",{"_index":2137,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.getreferenceorganiri",{"_index":2093,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.snapshot",{"_index":2100,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state",{"_index":2526,"title":{},"body":{"components/RegistrationModalComponent.html":{}}}],["this.referencedata.state$.pipe",{"_index":2148,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state$.subscribe",{"_index":2041,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.referencedata.state$]).pipe",{"_index":3037,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.referenceorgannodes",{"_index":3018,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registerdata.emit",{"_index":2808,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.registericonimpl(def",{"_index":1439,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(definition",{"_index":1452,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registration",{"_index":3106,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registration.editregistration(event",{"_index":1845,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.registration.previousregistrations$]).pipe",{"_index":3058,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.registrationcallbackset",{"_index":2804,"title":{},"body":{"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{}}}],["this.registrationisvalid",{"_index":2790,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["this.registrationstarted",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.registry",{"_index":1456,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry?.addsvgiconresolver((name",{"_index":1441,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.renderer2.appendchild(this.document.body",{"_index":3424,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.renderer2.createelement('script",{"_index":3420,"title":{},"body":{"components/VideoModalComponent.html":{}}}],["this.resolve",{"_index":1499,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.rightmargin",{"_index":1075,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.rotation",{"_index":2913,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.rotationchange.emit(this.rotation",{"_index":2916,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(def.html",{"_index":1437,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(basehref",{"_index":1447,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.scene",{"_index":170,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.scene.nodecollisions$]).pipe",{"_index":135,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.selected",{"_index":1340,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.selection",{"_index":3494,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.selection.id",{"_index":3495,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.sendtoggle",{"_index":1608,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.sensor",{"_index":965,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.setallopacity(updatedselection.opacity",{"_index":3503,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.setanatomicalstructures(newstructures",{"_index":2091,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setanatomicalstructures(previousitems",{"_index":2086,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setchange.emit(value",{"_index":1344,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.setdisplayerrors(false",{"_index":2667,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.setorganselection(organoptions",{"_index":2590,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.sets.length",{"_index":1345,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["this.setsexfromlabel(sex",{"_index":2443,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.setshowprevious(visible",{"_index":2085,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.setstate(db",{"_index":2231,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.setstate(patch",{"_index":2357,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.settheme(this.defaulttheme",{"_index":3356,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.sexbylabel$.subscribe(sex",{"_index":2442,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.sexselected",{"_index":2446,"title":{},"body":{"components/RegistrationContentComponent.html":{}}}],["this.side",{"_index":3208,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.sidechange.emit(this.side",{"_index":3209,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.skipconfirmation$.subscribe(skipconfirmation",{"_index":2384,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.slicesconfig",{"_index":3120,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfig[key",{"_index":3123,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.slicesconfigchange.emit(this.slicesconfig",{"_index":3124,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.snapshot",{"_index":2246,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.snapshot.blocksize",{"_index":2063,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.entities[tag.id",{"_index":178,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.snapshot.organ",{"_index":2097,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.name}_placement",{"_index":2056,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.organ",{"_index":2094,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organ?.sex",{"_index":2098,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.organdimensions",{"_index":2062,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.placementpatches[organ",{"_index":2292,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["this.snapshot.sex",{"_index":2095,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.snapshot.showcollisions",{"_index":3025,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.snapshot.side",{"_index":2096,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.source",{"_index":1918,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.spatialkeyboardaxis",{"_index":3021,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe",{"_index":2030,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(map(x",{"_index":2008,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["this.state$.pipe(pluckunique('haschanges",{"_index":2353,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluckunique('registrationstarted",{"_index":2328,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.state$.pipe(pluckunique('skipconfirmation",{"_index":2349,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["this.statechange.emit",{"_index":1633,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.subscriptions.add",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":3388,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":1062,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":861,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.subscriptions.unsubscribe",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{}}}],["this.syncexpanded(other",{"_index":1634,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.tagremoved.emit(tag",{"_index":3287,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.tags",{"_index":2586,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"components/TagListComponent.html":{}}}],["this.tags$.subscribe((tags",{"_index":174,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.tags.addtags",{"_index":2624,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.tags.filter(obj",{"_index":3282,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.tags.latesttags",{"_index":2657,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.tags.tags$]).pipe",{"_index":2561,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.tagschange.emit(this.tags",{"_index":3288,"title":{},"body":{"components/TagListComponent.html":{}}}],["this.theme",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"interfaces/User.html":{}}}],["this.theme$.subscribe((theme",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$.next('light",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$.next(this.islighttheme",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.thememode$]).subscribe",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.gettheme().endswith('light",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.settheme(`${theme",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.theming.settheme(`${this.theme",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":1558,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":1602,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":1600,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":1562,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":1614,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":1611,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.updateentitiesmany",{"_index":179,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{}}}],["this.updatefaded",{"_index":1066,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.updatemargin(position",{"_index":1072,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["this.updateopacity(item.opacity",{"_index":3498,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["this.updateview(false",{"_index":3207,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.updateview(true",{"_index":3206,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.uploadtext",{"_index":2488,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["this.validatedrawers",{"_index":864,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.value",{"_index":1734,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.valuechange.emit(this.value",{"_index":1739,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["this.view3d",{"_index":3210,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.view3dchange.emit(this.view3d",{"_index":3212,"title":{},"body":{"components/StageNavComponent.html":{}}}],["this.visibilitychanged.emit(this.visible",{"_index":3534,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["this.visible",{"_index":3532,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["this.width",{"_index":1575,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.xyztriplettostring(model.blocksize",{"_index":2675,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.xyztriplettostring(model.position",{"_index":2676,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["this.xyztriplettostring(model.rotation",{"_index":2677,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["those",{"_index":1920,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["throttle",{"_index":4292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throttletime",{"_index":1990,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["throttletime(0",{"_index":2031,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["through",{"_index":2902,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["throw",{"_index":854,"title":{},"body":{"components/ContainerComponent.html":{},"modules/CoreModule.html":{}}}],["throwduplicatedrawerserror",{"_index":4036,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwduplicatedrawerserror('end",{"_index":881,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":879,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":850,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["thrown",{"_index":849,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":845,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumb",{"_index":2935,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["thumbnails",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["thymus",{"_index":1235,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thymus.svg",{"_index":1236,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ticks",{"_index":2939,"title":{},"body":{"components/RotationSliderComponent.html":{}}}],["tied",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":2581,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"miscellaneous/variables.html":{}}}],["timeouts",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["timing",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent-1.html":{},"components/VisibilityMenuComponent.html":{}}}],["tissue",{"_index":676,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"changelog.html":{}}}],["tissues",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["title",{"_index":733,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"interfaces/DocumentationContent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{}}}],["tmc",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["toggle",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle(opened",{"_index":1603,"title":{},"body":{"classes/InitializationState.html":{}}}],["toggle.component",{"_index":1751,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["toggle.component.html",{"_index":1713,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.scss",{"_index":1712,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts",{"_index":1709,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{}}}],["toggle.component.ts:18",{"_index":3530,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:19",{"_index":1726,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:23",{"_index":3529,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:24",{"_index":1720,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:29",{"_index":1723,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:34",{"_index":1719,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:39",{"_index":1718,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:40",{"_index":3528,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:51",{"_index":1732,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.component.ts:52",{"_index":3531,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["toggle.component.ts:61",{"_index":1728,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["toggle.module",{"_index":1883,"title":{},"body":{"modules/LeftSidebarModule.html":{},"modules/StageNavModule.html":{}}}],["toggle.module.ts",{"_index":1748,"title":{},"body":{"modules/LabeledSlideToggleModule.html":{},"modules/VisibilityToggleModule.html":{}}}],["toggle/labeled",{"_index":1708,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/StageNavModule.html":{},"coverage.html":{}}}],["toggle/visibility",{"_index":1890,"title":{},"body":{"modules/LeftSidebarModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{}}}],["togglebuttoncomponent",{"_index":531,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"modules/DrawerModule.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":1068,"title":{},"body":{"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["toggleexpanded(expanded",{"_index":1615,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglelabel",{"_index":3526,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["togglepreviousregistrationblocks",{"_index":1765,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["togglepreviousregistrationblocks(visible",{"_index":1790,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["toggleregistrationblocksvisibility(visible",{"_index":2084,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["toggles",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["togglescheme",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["togglevisibility",{"_index":3468,"title":{},"body":{"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["togglevisibility(item",{"_index":3489,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["toggling",{"_index":1792,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{}}}],["token",{"_index":1907,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["tonsil",{"_index":1214,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tonsil.svg",{"_index":1215,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["tooltip",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/User.html":{},"interfaces/VisibilityItem.html":{},"interfaces/XYZTriplet.html":{}}}],["top",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["toradians",{"_index":2198,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tort",{"_index":4264,"title":{},"body":{"license.html":{}}}],["total",{"_index":3258,"title":{},"body":{"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{}}}],["totalcount",{"_index":188,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":886,"title":{},"body":{"components/ContainerComponent.html":{}}}],["trachea",{"_index":1237,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["trachea.svg",{"_index":1238,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":1821,"title":{},"body":{"components/LeftSidebarComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["tracking/telemetry",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["trackingpopupcomponent",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["trackingpopupmodule",{"_index":583,"title":{},"body":{"modules/AppModule.html":{}}}],["trailing",{"_index":2033,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["transform",{"_index":736,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["transformmatrix",{"_index":2967,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["transition",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["transition('closed",{"_index":1538,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":1059,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["translate",{"_index":3442,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["translate([p.x_translation",{"_index":3066,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["translate([position.x",{"_index":3095,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["translation_units",{"_index":2737,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["transparency",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["trigger",{"_index":1054,"title":{},"body":{"components/ContentComponent-1.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{}}}],["trigger('expandcollapse",{"_index":1541,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":1056,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["trigger('openclose",{"_index":1535,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggerfileinput",{"_index":1662,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["triplet",{"_index":2738,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["true",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"modules/ThemingModule.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["true=left",{"_index":1729,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["try",{"_index":655,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["ts",{"_index":4149,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":4152,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1181,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":871,"title":{},"body":{"components/ContainerComponent.html":{}}}],["turn",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["turns",{"_index":2773,"title":{},"body":{"components/ReviewButtonComponent.html":{}}}],["tutorial",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":1721,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{},"changelog.html":{}}}],["tx",{"_index":4164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tx.translate(t).rotatexyz(r).scale(s",{"_index":2221,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["type",{"_index":45,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DetailsLabelComponent.html":{},"interfaces/DocumentationContent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/MetaDataField.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4273,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":2135,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["types",{"_index":1095,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":125,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":2843,"title":{},"body":{"components/ReviewModalComponent.html":{}}}],["ufl",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":647,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":4176,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":4185,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":4182,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":4184,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":4183,"title":{},"body":{"index.html":{}}}],["uis",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":872,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["under",{"_index":1163,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["unique",{"_index":1893,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/Tag.html":{},"components/TagListComponent.html":{},"interfaces/TagSearchResult.html":{}}}],["university",{"_index":4210,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":653,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/TagListComponent.html":{},"components/VideoModalComponent.html":{}}}],["unlike",{"_index":1154,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unnecessary",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["unpickable",{"_index":2970,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["unselect",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":3398,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["until",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"classes/InitializationState.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["untypedformcontrol",{"_index":2166,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["unused",{"_index":3280,"title":{},"body":{"components/TagListComponent.html":{}}}],["up",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/Tag.html":{},"interfaces/TagSearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["update",{"_index":2911,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["updateblocksizes",{"_index":718,"title":{},"body":{"components/BlockSizeInputComponent.html":{}}}],["updateblocksizes(input",{"_index":705,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{}}}],["updated",{"_index":704,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityMenuComponent.html":{},"changelog.html":{}}}],["updatediri",{"_index":2280,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{}}}],["updatedselection",{"_index":3501,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updatedselection.id",{"_index":3502,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updatedselection.opacity",{"_index":3507,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateextractionsitetooltip",{"_index":1766,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updateextractionsitetooltip(item",{"_index":1799,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updatefaded",{"_index":1019,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatemargin",{"_index":1020,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatemargin(position",{"_index":1043,"title":{},"body":{"components/ContentComponent-1.html":{}}}],["updatename",{"_index":2156,"title":{},"body":{"components/NameInputComponent.html":{}}}],["updatename(input",{"_index":2161,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["updateopacity",{"_index":3469,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateopacity(value",{"_index":3492,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["updateregistration",{"_index":1767,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updateregistration(event",{"_index":1804,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["updates",{"_index":699,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent-1.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["updateside",{"_index":3154,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateside(selection",{"_index":3179,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateskipconfirmation",{"_index":2372,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["updateslicesdata",{"_index":3127,"title":{},"body":{"components/SlicesInputComponent.html":{}}}],["updateslicesdata(input",{"_index":3118,"title":{},"body":{"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{}}}],["updatetoggle",{"_index":1714,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updatetoggle(selection",{"_index":1727,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["updateview",{"_index":3155,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updateview(selection",{"_index":3182,"title":{},"body":{"components/StageNavComponent.html":{}}}],["updating",{"_index":2908,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{}}}],["upgraded",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":1665,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/RegistrationMetadataComponent.html":{},"changelog.html":{}}}],["uploaded",{"_index":1670,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationMetadataComponent.html":{}}}],["uploadtext",{"_index":2481,"title":{},"body":{"components/RegistrationMetadataComponent.html":{}}}],["upperbound",{"_index":3009,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["upperbound[i",{"_index":3013,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ureter",{"_index":1239,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1429,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["usage",{"_index":3570,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usage.ipynb",{"_index":4194,"title":{},"body":{"index.html":{}}}],["use",{"_index":986,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"interfaces/RegistrationStateModel.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usecallback",{"_index":2648,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["usecancelregistrationcallback",{"_index":2297,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["usecase",{"_index":4199,"title":{},"body":{"index.html":{}}}],["usecase.ipynb",{"_index":4196,"title":{},"body":{"index.html":{}}}],["used",{"_index":48,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["usedownload",{"_index":624,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/OrganConfig.html":{},"interfaces/RegistrationStateModel.html":{}}}],["usedropdownmenu",{"_index":3156,"title":{},"body":{"components/StageNavComponent.html":{}}}],["usedropdownmenu(value",{"_index":3197,"title":{},"body":{"components/StageNavComponent.html":{}}}],["usefactory",{"_index":775,"title":{},"body":{"modules/ConfigModule.html":{}}}],["useful",{"_index":847,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":332,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/GlobalConfig.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/RightSidebarComponent.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["user's",{"_index":2178,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/UserName.html":{}}}],["user/os",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["useregistrationcallback",{"_index":2551,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["username",{"_index":2159,"title":{"interfaces/UserName.html":{}},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{},"coverage.html":{}}}],["users",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["usevalue",{"_index":601,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["uterus",{"_index":1240,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uterus.svg",{"_index":1241,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["uuid",{"_index":2557,"title":{},"body":{"interfaces/RegistrationStateModel.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2556,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["v1.1",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":3662,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["v1[key",{"_index":2036,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v2",{"_index":2035,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["v2.1.0",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["v2[key",{"_index":2037,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["v3",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["v4",{"_index":2555,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["valid",{"_index":2278,"title":{},"body":{"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationMetadataComponent.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"miscellaneous/typealiases.html":{}}}],["validate",{"_index":2168,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["validatedrawers",{"_index":792,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":814,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validators",{"_index":2176,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["validators.required",{"_index":2167,"title":{},"body":{"components/NameInputComponent.html":{},"interfaces/UserName.html":{}}}],["value",{"_index":86,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"components/AppComponent.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MetaDataField.html":{},"components/NameInputComponent.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.name",{"_index":1343,"title":{},"body":{"components/ExtractionSetDropdownComponent.html":{}}}],["valuechange",{"_index":1717,"title":{},"body":{"components/LabeledSlideToggleComponent.html":{}}}],["valueof",{"_index":1495,"title":{},"body":{"classes/InitializationState.html":{}}}],["values",{"_index":694,"title":{},"body":{"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/ModelStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["variable",{"_index":1819,"title":{},"body":{"components/LeftSidebarComponent.html":{},"coverage.html":{}}}],["variables",{"_index":4282,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1242,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["vec3",{"_index":2998,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["vec3(...lowerbound.map((n",{"_index":3011,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["vec3(...upperbound.map((n",{"_index":3014,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["version",{"_index":3680,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["very",{"_index":947,"title":{},"body":{"components/ContentComponent.html":{},"changelog.html":{}}}],["via",{"_index":2900,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["video",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"modules/ContentModule.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{}}}],["videomodalcomponent",{"_index":533,"title":{"components/VideoModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videomodallaunchercomponent",{"_index":535,"title":{"components/VideoModalLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"modules/VideoModalLauncherModule.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["videomodallaunchermodule",{"_index":1114,"title":{"modules/VideoModalLauncherModule.html":{}},"body":{"modules/ContentModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules.html":{},"overview.html":{}}}],["videomodalmodule",{"_index":3450,"title":{"modules/VideoModalModule.html":{}},"body":{"modules/VideoModalModule.html":{},"modules.html":{},"overview.html":{}}}],["view",{"_index":920,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["view3d",{"_index":3157,"title":{},"body":{"components/StageNavComponent.html":{}}}],["view3dchange",{"_index":3159,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild",{"_index":1684,"title":{},"body":{"components/JsonFileReaderComponent.html":{},"components/StageNavComponent.html":{}}}],["viewchild('fileinput",{"_index":1681,"title":{},"body":{"components/JsonFileReaderComponent.html":{}}}],["viewchild('label",{"_index":3186,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchild('options",{"_index":3188,"title":{},"body":{"components/StageNavComponent.html":{}}}],["viewchildren",{"_index":839,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":826,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewed",{"_index":2002,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["viewer",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":3144,"title":{},"body":{"components/StageNavComponent.html":{},"changelog.html":{}}}],["views",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["viewside",{"_index":968,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["viewtype",{"_index":1973,"title":{},"body":{"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{}}}],["visibility",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"interfaces/ExtractionSet.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"interfaces/XYZTriplet.html":{}}}],["visibility_menu",{"_index":3497,"title":{},"body":{"components/VisibilityMenuComponent.html":{}}}],["visibility_off",{"_index":1251,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_off_cube",{"_index":1252,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_on",{"_index":1249,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_toggle",{"_index":3533,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["visibilitychanged",{"_index":3527,"title":{},"body":{"components/VisibilityToggleComponent.html":{}}}],["visibilityitem",{"_index":1312,"title":{"interfaces/VisibilityItem.html":{}},"body":{"interfaces/ExtractionSet.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["visibilityitems",{"_index":2083,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["visibilitymenucomponent",{"_index":537,"title":{"components/VisibilityMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"modules/VisibilityMenuModule.html":{},"components/VisibilityToggleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["visibilitymenumodule",{"_index":1870,"title":{"modules/VisibilityMenuModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityMenuModule.html":{},"modules.html":{},"overview.html":{}}}],["visibilitytogglecomponent",{"_index":540,"title":{"components/VisibilityToggleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"modules/VisibilityToggleModule.html":{},"coverage.html":{},"overview.html":{}}}],["visibilitytogglemodule",{"_index":1871,"title":{"modules/VisibilityToggleModule.html":{}},"body":{"modules/LeftSidebarModule.html":{},"modules/VisibilityToggleModule.html":{},"modules.html":{},"overview.html":{}}}],["visible",{"_index":1796,"title":{},"body":{"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"components/VideoModalLauncherComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["visual",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":56,"title":{},"body":{"injectables/AnatomicalStructureTagState.html":{},"interfaces/AnatomicalStructureTagStateModel.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/ExtractionSetDropdownComponent.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"components/NameInputComponent.html":{},"interfaces/OrganConfig.html":{},"interfaces/OrganData.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/User.html":{},"interfaces/UserName.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["vs",{"_index":3718,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["w",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/User.html":{}}}],["wait",{"_index":1497,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":1627,"title":{},"body":{"classes/InitializationState.html":{}}}],["walkthrough",{"_index":4195,"title":{},"body":{"index.html":{}}}],["want",{"_index":1780,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["warming",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4251,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4248,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3440,"title":{},"body":{"components/VideoModalLauncherComponent.html":{}}}],["wc",{"_index":614,"title":{},"body":{"components/AppWebComponent.html":{}}}],["wc'},{'name",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/AppWebComponent.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/DetailsLabelComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/RegistrationModalComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/TagListComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["web",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["webcomponent",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":4090,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":884,"title":{},"body":{"components/ContainerComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["webpages",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":4171,"title":{},"body":{"index.html":{}}}],["week",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":734,"title":{},"body":{"components/BlockSizeInputComponent.html":{},"components/HeaderComponent.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["whenever",{"_index":1568,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["whether",{"_index":837,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"classes/InitializationState.html":{},"components/LabeledSlideToggleComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/ModelStateModel.html":{},"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{},"components/RegistrationContentComponent.html":{},"interfaces/RegistrationStateModel.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"interfaces/ReviewModalData.html":{},"components/RightSidebarComponent.html":{},"interfaces/SlicesConfig.html":{},"interfaces/SlicesConfig-1.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"interfaces/VisibilityItem.html":{},"components/VisibilityToggleComponent.html":{},"interfaces/XYZTriplet.html":{},"license.html":{}}}],["white",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/ContentComponent.html":{},"components/ReviewModalComponent.html":{},"components/StageNavComponent.html":{},"components/VisibilityMenuComponent.html":{}}}],["whole",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/JsonFileReaderComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NameInputComponent.html":{},"components/RegistrationContentComponent.html":{},"components/RegistrationMetadataComponent.html":{},"components/ReviewButtonComponent.html":{},"components/ReviewModalComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/SlicesInputComponent.html":{},"components/StageNavComponent.html":{},"components/ToggleButtonComponent.html":{},"components/VideoModalComponent.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"components/VisibilityToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["widths",{"_index":1636,"title":{},"body":{"classes/InitializationState.html":{}}}],["within",{"_index":2906,"title":{},"body":{"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"changelog.html":{}}}],["withlatestfrom",{"_index":2346,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["withlatestfrom(this.globalskipconfirmation",{"_index":2378,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["without",{"_index":828,"title":{},"body":{"components/ContainerComponent.html":{},"changelog.html":{},"license.html":{}}}],["workaround",{"_index":1646,"title":{},"body":{"classes/InitializationState.html":{}}}],["workflows",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":3213,"title":{},"body":{"components/StageNavComponent.html":{}}}],["wrapped",{"_index":825,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/ExtractionSetDropdownComponent.html":{},"components/LeftSidebarComponent.html":{},"components/RightSidebarComponent.html":{},"components/RotationSliderComponent.html":{},"components/VisibilityToggleComponent.html":{}}}],["wrapping",{"_index":829,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent-1.html":{}}}],["x",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["x,y,z",{"_index":915,"title":{},"body":{"components/ContentComponent.html":{}}}],["x?.anatomicalstructures",{"_index":2023,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.blocksize",{"_index":2010,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.displayerrors",{"_index":2560,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x?.extractionsets",{"_index":2024,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.extractionsites",{"_index":2022,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.id",{"_index":2009,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organ",{"_index":2016,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organdimensions",{"_index":2018,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organiri",{"_index":2017,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.organoptions",{"_index":2324,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.position",{"_index":2012,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.registrationcallbackset",{"_index":2326,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.registrations",{"_index":2572,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x?.rotation",{"_index":2011,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.sex",{"_index":2019,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.showprevious",{"_index":2021,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.side",{"_index":2020,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.slicesconfig",{"_index":2013,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.usecancelregistrationcallback",{"_index":2331,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.user",{"_index":2333,"title":{},"body":{"injectables/PageState.html":{},"interfaces/PageStateModel.html":{},"interfaces/Person.html":{}}}],["x?.viewside",{"_index":2015,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x?.viewtype",{"_index":2014,"title":{},"body":{"interfaces/ModelStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{}}}],["x_dimension",{"_index":2706,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x_rotation",{"_index":2722,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x_scaling",{"_index":2717,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["x_translation",{"_index":2731,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["xyz",{"_index":998,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/RegistrationStateModel.html":{}}}],["xyztriplet",{"_index":1974,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"interfaces/SlicesConfig.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["xyztriplettostring(xyz",{"_index":2740,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["y",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContentComponent.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/TagListComponent.html":{},"interfaces/User.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["y_dimension",{"_index":2708,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["y_rotation",{"_index":2724,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["y_scaling",{"_index":2718,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["y_translation",{"_index":2733,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["yes",{"_index":2394,"title":{},"body":{"injectables/ReferenceDataState.html":{},"components/RegistrationContentComponent.html":{},"components/ReviewButtonComponent.html":{}}}],["youtube",{"_index":3403,"title":{},"body":{"components/VideoModalComponent.html":{},"changelog.html":{}}}],["youtubeplayermodule",{"_index":3454,"title":{},"body":{"modules/VideoModalModule.html":{}}}],["z",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppOptions.html":{},"interfaces/BlockSize.html":{},"components/BlockSizeInputComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ContentComponent-1.html":{},"components/LeftSidebarComponent.html":{},"interfaces/ModelStateModel.html":{},"interfaces/OrganData.html":{},"injectables/ReferenceDataState.html":{},"interfaces/ReferenceDataStateModel.html":{},"interfaces/RegistrationStateModel.html":{},"components/RightSidebarComponent.html":{},"interfaces/Rotation.html":{},"components/RotationSliderComponent.html":{},"interfaces/SlicesConfig.html":{},"components/StageNavComponent.html":{},"interfaces/User.html":{},"components/VideoModalLauncherComponent.html":{},"components/VisibilityMenuComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["z_dimension",{"_index":2710,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["z_rotation",{"_index":2726,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["z_scaling",{"_index":2719,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["z_translation",{"_index":2735,"title":{},"body":{"interfaces/RegistrationStateModel.html":{}}}],["zone.js",{"_index":4155,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockSizeInputModule.html":{},"modules/ContentModule.html":{},"modules/CoreModule.html":{},"modules/DetailsLabelModule.html":{},"modules/DrawerModule.html":{},"modules/ExtractionSetDropdownModule.html":{},"modules/HeaderModule.html":{},"modules/JsonFileReaderModule.html":{},"modules/LabeledSlideToggleModule.html":{},"modules/LeftSidebarModule.html":{},"modules/NameInputModule.html":{},"modules/RegistrationContentModule.html":{},"modules/RegistrationMetadataModule.html":{},"modules/RegistrationModalModule.html":{},"modules/ReviewButtonModule.html":{},"modules/ReviewModalModule.html":{},"modules/RightSidebarModule.html":{},"modules/RotationSliderModule.html":{},"modules/SlicesInputModule.html":{},"modules/StageNavModule.html":{},"modules/TagListModule.html":{},"modules/TagSearchModule.html":{},"modules/ThemingModule.html":{},"modules/VideoModalLauncherModule.html":{},"modules/VideoModalModule.html":{},"modules/VisibilityMenuModule.html":{},"modules/VisibilityToggleModule.html":{},"overview.html":{}}}],["zoombasedopacity",{"_index":2973,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AnatomicalStructureTagState.html":{"url":"injectables/AnatomicalStructureTagState.html","title":"injectable - AnatomicalStructureTagState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnatomicalStructureTagState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Tag collection global state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsDataEntityCollectionsRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _latestTags\n                            \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addTag\n                            \n                            \n                                    Private\n                                addTagRaw\n                            \n                            \n                                    \n                                addTags\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    \n                                removeTag\n                            \n                            \n                                    \n                                searchExternal\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tags$\n                                \n                                \n                                    latestTags\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:79\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTag(tag: Tag)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addTagRaw\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTagRaw(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:158\n                        \n                    \n\n\n            \n                \n                        Adds a tag. Implementation helper for addTags and addTag\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTags(tags: Tag[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                            Tag[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:95\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeTag\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeTag(tag: Tag)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchExternal\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchExternal(text: string, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:140\n                        \n                    \n\n\n            \n                \n                        Searches for matching tags (not in the state)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Search text\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Maximum returned results hint\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ObservableInput\n\n                        \n                            \n                                external Search result\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _latestTags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:75\n                        \n                    \n\n            \n                \n                    Reference to the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SceneState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:77\n                        \n                    \n\n            \n                \n                    Reference to the scene state\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tags$\n                    \n                \n\n                \n                    \n                        gettags$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:38\n                                \n                            \n                    \n                        \n                                Observable of tags\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        latestTags\n                    \n                \n\n                \n                    \n                        getlatestTags()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts:70\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n\n/** Tag state model */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface AnatomicalStructureTagStateModel {\n}\n\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections()\n  }\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set();\n        const removed = new Set();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned'\n            });\n          }\n        }\n        return tags;\n      })\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model: ModelState;\n  /** Reference to the scene state */\n  private scene: SceneState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput {\n    const matches = this.model.snapshot.anatomicalStructures\n      .filter(as => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1);\n    return [{\n      totalCount: matches.length,\n      results: matches.map((as): Tag => ({\n        id: as.id,\n        label: as.name,\n        type: 'added'\n      })).slice(0, limit)\n    }];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnatomicalStructureTagStateModel.html":{"url":"interfaces/AnatomicalStructureTagStateModel.html","title":"interface - AnatomicalStructureTagStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnatomicalStructureTagStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Tag state model\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { createEntityCollections, EntityCollections } from '@angular-ru/common/entity';\nimport { Injectable, Injector } from '@angular/core';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataEntityCollectionsRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { bind as Bind } from 'bind-decorator';\nimport { combineLatest, Observable, ObservableInput } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Tag, TagId, TagSearchResult } from '../../models/anatomical-structure-tag';\nimport { ModelState } from '../model/model.state';\nimport { PageState } from '../page/page.state';\nimport { SceneState } from '../scene/scene.state';\n\n\n/** Tag state model */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface AnatomicalStructureTagStateModel {\n}\n\n\n/**\n * Tag collection global state\n */\n@StateRepository()\n@State>({\n  name: 'tags',\n  defaults: {\n    ...createEntityCollections()\n  }\n})\n@Injectable()\nexport class AnatomicalStructureTagState extends NgxsDataEntityCollectionsRepository {\n  /** Observable of tags */\n  @Computed()\n  get tags$(): Observable {\n    return combineLatest([this.entities$, this.scene.nodeCollisions$]).pipe(\n      map(([entities, collisions]) => {\n        const tags: Tag[] = [];\n        const added = new Set();\n        const removed = new Set();\n        Object.entries(entities).forEach(([id, tag]) => {\n          if (tag.type === 'removed') {\n            removed.add(id);\n          } else {\n            added.add(id);\n            tags.push(tag);\n          }\n        });\n        for (const model of collisions) {\n          const iri = model.representation_of;\n          if (iri && !removed.has(iri) && !added.has(iri)) {\n            added.add(iri);\n            tags.push({\n              id: iri,\n              label: model.tooltip as string,\n              type: 'assigned'\n            });\n          }\n        }\n        return tags;\n      })\n    );\n  }\n\n  private _latestTags: Tag[] = [];\n\n  get latestTags(): Tag[] {\n    return this._latestTags;\n  }\n\n  /** Reference to the model state */\n  private model: ModelState;\n  /** Reference to the scene state */\n  private scene: SceneState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.scene = this.injector.get(SceneState);\n    this.page = this.injector.get(PageState);\n\n    this.tags$.subscribe((tags) => {\n      this._latestTags = tags;\n    });\n\n    this.entities$.subscribe(() => this.page.setHasChanges());\n  }\n\n  @DataAction()\n  addTags(tags: Tag[]): void {\n    for (const tag of tags) {\n      this.addTagRaw(tag);\n    }\n  }\n\n  @DataAction()\n  addTag(tag: Tag): void {\n    this.addTagRaw(tag);\n  }\n\n  @DataAction()\n  removeTag(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'removed' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'removed' });\n    }\n  }\n\n  /**\n   * Searches for matching tags (not in the state)\n   *\n   * @param text Search text\n   * @param limit Maximum returned results hint\n   * @returns external Search result\n   */\n  @Bind\n  searchExternal(text: string, limit: number): ObservableInput {\n    const matches = this.model.snapshot.anatomicalStructures\n      .filter(as => as.name.toLowerCase().indexOf(text.toLowerCase()) !== -1);\n    return [{\n      totalCount: matches.length,\n      results: matches.map((as): Tag => ({\n        id: as.id,\n        label: as.name,\n        type: 'added'\n      })).slice(0, limit)\n    }];\n  }\n\n  /**\n   * Adds a tag. Implementation helper for `addTags` and `addTag`\n   *\n   * @param tag The tag\n   */\n  private addTagRaw(tag: Tag): void {\n    if (this.snapshot.entities[tag.id]) {\n      this.updateEntitiesMany([{ id: tag.id, changes: { type: 'added' } }]);\n    } else {\n      this.addEntityOne({ ...tag, type: 'added' });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        App component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disablePositionChange\n                            \n                            \n                                    Readonly\n                                header$\n                            \n                            \n                                homeUrl\n                            \n                            \n                                    Readonly\n                                homeUrl$\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                    Readonly\n                                logoTooltip$\n                            \n                            \n                                open\n                            \n                            \n                                organList\n                            \n                            \n                                registrationStarted\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                theme\n                            \n                            \n                                    Readonly\n                                theme$\n                            \n                            \n                                    Readonly\n                                themeMode$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleClick\n                            \n                            \n                                    \n                                handleKey\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleScheme\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isLightTheme\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, page: PageState, consentService: ConsentService, snackbar: MatSnackBar, theming: ThemingService, el: ElementRef<>, injector: Injector, globalConfig: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/app.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                    ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theming\n                                                  \n                                                        \n                                                                        ThemingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:179\n                        \n                    \n\n\n            \n                \n                        Disables block position change if an input element is clicked\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element clicked\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(target: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Shifts block position when certain keys are pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleClick(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:179\n                        \n                    \n\n\n            \n                \n                        Disables block position change if an input element is clicked\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element clicked\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKey(target: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Shifts block position when certain keys are pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:190\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleScheme\n                        \n                    \n                \n            \n            \n                \ntoggleScheme()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Toggles scheme between light and dark mode\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disablePositionChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:53\n                        \n                    \n\n            \n                \n                    Disables changes in block position\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        header$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('header')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        homeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        homeUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('homeUrl')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logoTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        logoTooltip$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('logoTooltip')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:47\n                        \n                    \n\n            \n                \n                    True if the organ selector drawer is open\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganInfo[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:44\n                        \n                    \n\n            \n                \n                    Organs to be displayed in the organ selector\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationStarted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:50\n                        \n                    \n\n            \n                \n                    False until the initial registration modal is closed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:73\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        theme$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.globalConfig.getOption('theme')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        themeMode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app.component.ts:60\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isLightTheme\n                    \n                \n\n                \n                    \n                        getisLightTheme()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/app.component.ts:55\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, OrganInfo, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, ReplaySubject, Subscription } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** Organs to be displayed in the organ selector */\n  organList: OrganInfo[];\n\n  /** True if the organ selector drawer is open */\n  open = true;\n\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationCallbackSet$.subscribe((callbackSet) => {\n        this.open = !callbackSet;\n      })\n    );\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n    this.page.organOptions$.subscribe((options: OrganInfo[]) => {\n      this.organList = options;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    if (target.nodeName === 'INPUT') {\n      this.disablePositionChange = true;\n    } else {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n    \n    \n  \n  \n    \n    \n  \n\n  \n    \n      \n      \n        \n          \n            {{ organSelector.expanded ? 'arrow_drop_up': 'arrow_drop_down' }}\n          \n        \n        \n          \n            {{ open ? 'arrow_drop_up': 'arrow_drop_down' }}\n          \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  font-size: 1rem;\n  color: black;\n\n  .header-hidden {\n    display: none;\n  }\n\n  ccf-drawer-container {\n    height: 100%;\n\n    ccf-drawer {\n      width: 25.5rem;\n    }\n\n    ccf-drawer-content {\n      position: relative;\n      z-index: 1;\n\n      .selector-drawer {\n        top: 0rem;\n        display: flex;\n        flex-direction: column;\n        position: relative;\n        height: 5.688rem;\n        transition: all 0.5s ease-in-out;\n\n        &.expanded {\n          height: 15rem;\n        }\n\n        ccf-organ-selector {\n          height: 100%;\n          padding-top: 0.5rem;\n          transition: all 0.5s;\n\n          &.closed {\n            padding-top: 0;\n          }\n        }\n\n        .close-button-wrapper {\n          display: flex;\n          justify-content: center;\n          height: 0;\n          z-index: 2;\n\n          .close-button {\n            cursor: pointer;\n            transition: 0.6s;\n\n            .expand-collapse-icon {\n              width: 3rem;\n              height: 1.2rem;\n              display: flex;\n              justify-content: center;\n              align-items: center;\n              cursor: pointer;\n              background-color: white;\n              border-bottom-left-radius: 0.2rem;\n              border-bottom-right-radius: 0.2rem;\n              transition: 0.6s;\n\n              &:hover {\n                background-color: #ececec;\n              }\n            }\n          }\n        }\n\n\n        &.closed {\n          height: 3rem;\n          top: -2.9rem;\n        }\n      }\n\n      .stage-content {\n        border-radius: 0.5rem !important;\n        height: calc(100% - 2.688rem - 3rem - 1.5rem);\n      }\n\n      .expanded-stage {\n        height: calc(100% - 1.5rem);\n        padding-bottom: 1rem;\n      }\n\n      .retracted-stage {\n        height: calc(100% - 2.688rem - 14rem);\n      }\n\n    }\n\n\n\n    ccf-content {\n      // top: 0rem;\n      position: absolute;\n      transition-duration: 0.5s;\n      transition-timing-function: ease-in-out;\n      transition-property: all;\n      bottom: 1.5rem;\n      z-index: 1;\n\n    }\n\n  }\n\n}\n\n::ng-deep .mdc-snackbar__surface {\n  box-shadow: none !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ organSelector.expanded ? \\'arrow_drop_up\\': \\'arrow_drop_down\\' }}                                                {{ open ? \\'arrow_drop_up\\': \\'arrow_drop_down\\' }}                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nAppModule -->\n\nRegistrationModalModule->AppModule\n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContentModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            LeftSidebarModule\n                        \n                        \n                            RegistrationModalModule\n                        \n                        \n                            RightSidebarModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/app.module.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { createCustomElement } from '@angular/elements';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OrganSelectorModule, TrackingPopupModule } from 'ccf-shared';\n\nimport { AppWebComponent } from './app-web-component.component';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { DEFAULT_THEME } from './core/services/theming/theming.service';\nimport { ContentModule } from './modules/content/content.module';\nimport { HeaderModule } from './modules/header/header.module';\nimport { LeftSidebarModule } from './modules/left-sidebar/left-sidebar.module';\nimport { RegistrationModalModule } from './modules/registration-modal/registration-modal/registration-modal.module';\nimport { RightSidebarModule } from './modules/right-sidebar/right-sidebar.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    MatIconModule,\n    DrawerModule,\n    HeaderModule,\n    ContentModule,\n    LeftSidebarModule,\n    RightSidebarModule,\n    OrganSelectorModule,\n    RegistrationModalModule,\n    TrackingPopupModule,\n    MatSnackBarModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    {\n      provide: DEFAULT_THEME,\n      useValue: 'hubmap-theme-light'\n    },\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        floatLabel: true,\n        hideRequiredMarker: true\n      }\n    }\n  ]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-rui', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GlobalConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, OrganInfo, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, ReplaySubject, Subscription } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** Organs to be displayed in the organ selector */\n  organList: OrganInfo[];\n\n  /** True if the organ selector drawer is open */\n  open = true;\n\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationCallbackSet$.subscribe((callbackSet) => {\n        this.open = !callbackSet;\n      })\n    );\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n    this.page.organOptions$.subscribe((options: OrganInfo[]) => {\n      this.organList = options;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    if (target.nodeName === 'INPUT') {\n      this.disablePositionChange = true;\n    } else {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                baseHref\n                            \n                            \n                                cancelRegistration\n                            \n                            \n                                editRegistration\n                            \n                            \n                                fetchPreviousRegistrations\n                            \n                            \n                                header\n                            \n                            \n                                homeUrl\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                organ\n                            \n                            \n                                organOptions\n                            \n                            \n                                register\n                            \n                            \n                                skipUnsavedChangesConfirmation\n                            \n                            \n                                theme\n                            \n                            \n                                useDownload\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/app-web-component.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        baseHref\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cancelRegistration\n                    \n                \n                \n                    \n                        Type :     string | CancelRegistrationCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editRegistration\n                    \n                \n                \n                    \n                        Type :     string | SpatialEntityJsonLd\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fetchPreviousRegistrations\n                    \n                \n                \n                    \n                        Type :         string | FetchPreviousRegistrationsCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        organ\n                    \n                \n                \n                    \n                        Type :         string | Organ\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        organOptions\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        register\n                    \n                \n                \n                    \n                        Type :         string | RegistrationCallback\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skipUnsavedChangesConfirmation\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDownload\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         string | User\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/app-web-component.component.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, BUILTIN_PARSERS } from 'ccf-shared/web-components';\nimport { ObservableInput } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\n\nimport { environment } from '../environments/environment';\n\n\nexport type User = NonNullable;\nexport type Organ = NonNullable;\nexport type RegistrationCallback = (data: unknown) => void;\nexport type CancelRegistrationCallback = () => void;\nexport type FetchPreviousRegistrationsCallback = () => ObservableInput[]>;\n\n\nfunction parseOrgan(value: unknown): string | Organ {\n  try {\n    return BUILTIN_PARSERS.json(value) as Organ;\n  } catch {\n    return '' + value;\n  }\n}\n\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() baseHref: string;\n  @Input() useDownload: string | boolean;\n  @Input() user: string | User;\n  @Input() organ: string | Organ;\n  @Input() editRegistration: string | SpatialEntityJsonLd;\n  @Input() register: string | RegistrationCallback;\n  @Input() cancelRegistration: string | CancelRegistrationCallback;\n  @Input() fetchPreviousRegistrations: string | FetchPreviousRegistrationsCallback;\n  @Input() skipUnsavedChangesConfirmation: string | boolean;\n  @Input() theme: string;\n  @Input() header: string | boolean;\n  @Input() homeUrl: string;\n  @Input() logoTooltip: string;\n  @Input() organOptions: string | string[];\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    const BP = BUILTIN_PARSERS;\n\n    super(configStore, cdr, {\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['ruiConfig' as string],\n        ...environment.customization\n      },\n      parse: {\n        useDownload: BP.boolean,\n        user: BP.json,\n        organ: parseOrgan,\n        editRegistration: BP.json,\n        register: BP.function,\n        cancelRegistration: BP.function,\n        fetchPreviousRegistrations: BP.function,\n        skipUnsavedChangesConfirmation: BP.boolean,\n        header: BP.boolean,\n        organOptions: BP.stringArray\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockSize.html":{"url":"interfaces/BlockSize.html","title":"interface - BlockSize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockSize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for objects containing tissue block dimensions\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Height of block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Depth of block\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockSizeInputComponent.html":{"url":"components/BlockSizeInputComponent.html","title":"component - BlockSizeInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockSizeInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for entering dimensions of the tissue block\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-block-size-input\n            \n\n\n\n            \n                styleUrls\n                ./block-size-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./block-size-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshBlockSize\n                            \n                            \n                                updateBlockSizes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockSizeChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of block size input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blockSize\n                    \n                \n                \n                    \n                        Type :         BlockSize\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_BLOCK_SIZE\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:40\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blockSizeChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:45\n                            \n                        \n                \n                    \n                        Emitter for values\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-block-size-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-block-size-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshBlockSize\n                        \n                    \n                \n            \n            \n                \nrefreshBlockSize()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Refreshes all block size values to 10\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBlockSizes\n                        \n                    \n                \n            \n            \n                \nupdateBlockSizes(input: InputEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Updates values when an input changes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    InputEvent from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the dimension to be updated\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-block-size-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts:35\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Interface for objects containing tissue block dimensions\n */\nexport interface BlockSize {\n  /** Width of block */\n  x: number;\n  /** Height of block */\n  y: number;\n  /** Depth of block */\n  z: number;\n}\n\n/** Defaults for block sizes. */\nconst DEFAULT_BLOCK_SIZE: BlockSize = {\n  x: 10,\n  y: 10,\n  z: 10\n};\n\n/**\n * Component for entering dimensions of the tissue block\n */\n@Component({\n  selector: 'ccf-block-size-input',\n  templateUrl: './block-size-input.component.html',\n  styleUrls: ['./block-size-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BlockSizeInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-block-size-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() blockSize = DEFAULT_BLOCK_SIZE;\n\n  /**\n   * Emitter for values\n   */\n  @Output() readonly blockSizeChange = new EventEmitter();\n\n  /**\n   * Creates an instance of block size input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateBlockSizes(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.blockSize = { ...this.blockSize, [key]: +inputTarget.value };\n    this.ga.event('block_size_change', 'block_size_input', key, this.blockSize[key]);\n    this.blockSizeChange.emit(this.blockSize);\n  }\n\n  /**\n   * Refreshes all block size values to 10\n   */\n  refreshBlockSize(): void {\n    this.blockSize = DEFAULT_BLOCK_SIZE;\n    this.ga.event('block_size_reset', 'block_size_input');\n    this.blockSizeChange.emit(this.blockSize);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Dimensions (mm)\n  \n  refresh\n\n\n\n  \n    Width (X)\n    \n  \n\n  \n    Height (Y)\n    \n  \n\n  \n    Depth (Z)\n    \n  \n\n\n    \n\n    \n                \n                    ./block-size-input.component.scss\n                \n                :host {\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .title {\n      font-weight: 600;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n  }\n\n  .size-inputs {\n    display: flex;\n\n    .field {\n      width: 33.33%;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      ::ng-deep .mdc-text-field {\n        padding: 0;\n\n        .mat-mdc-form-field-infix {\n          padding-bottom: 0;\n          min-height: inherit;\n        }\n\n        .mat-mdc-form-field-icon-suffix {\n          padding: 1rem 0 0px .25rem;\n        }\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Dimensions (mm)    refresh      Width (X)            Height (Y)            Depth (Z)      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlockSizeInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockSizeInputModule.html":{"url":"modules/BlockSizeInputModule.html","title":"module - BlockSizeInputModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockSizeInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockSizeInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\nimport { BlockSizeInputComponent } from './block-size-input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    MatTooltipModule,\n    MatFormFieldModule\n  ],\n  declarations: [BlockSizeInputComponent],\n  exports: [BlockSizeInputComponent]\n})\nexport class BlockSizeInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\n\nimport { GLOBAL_CONFIG, globalConfigFactory } from './config';\n\n\n@NgModule({\n  providers: [\n    {\n      provide: GLOBAL_CONFIG,\n      useFactory: globalConfigFactory,\n      deps: [GlobalsService]\n    }\n  ]\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n\n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                            \n                                    \n                                    Private\n                                content1\n                            \n                            \n                                    \n                                    Private\n                                content2\n                            \n                            \n                                    \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:62\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-container\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleMessage(_msg: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Processes event messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _msg\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if change detection needs to be run.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Sets up all listeners after all content has been projected.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateDrawers\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateDrawers()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Validates the number of drawers and their positions.\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageChannel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:60\n                        \n                    \n\n            \n                \n                    The connected message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content1\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(ContentComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:45\n                        \n                    \n\n            \n                \n                    Content component if provided already wrapped.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        content2\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(ContentComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:48\n                        \n                    \n\n            \n                \n                    Content component if provided without wrapping.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(DrawerComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:41\n                        \n                    \n\n            \n                \n                    Drawer components in this container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:62\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component.\n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main content component\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-content\n            \n\n\n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                bounds$\n                            \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                debugMode\n                            \n                            \n                                    Readonly\n                                is3DView$\n                            \n                            \n                                isNarrowView\n                            \n                            \n                                    Readonly\n                                position$\n                            \n                            \n                                    Private\n                                sensor\n                            \n                            \n                                showDebugButtons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleNodeDrag\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetStage\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disablePositionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, page: PageState, registration: RegistrationState, scene: SceneState, rootRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:63\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The model state\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The page state\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The registration state\n\n                                                        \n                                                \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                        SceneState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        rootRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Component's root element\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disablePositionChange\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:28\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleNodeDrag\n                        \n                    \n                \n            \n            \n                \nhandleNodeDrag(event: NodeDragEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        NodeDragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Detaches the resize sensor\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Sets up the resize sensor\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetStage\n                        \n                    \n                \n            \n            \n                \nresetStage()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Method to reset registration block, crosshairs, and x,y,z information.\nResets to initial registration state if provided\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(is3DView: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Sets view type\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                is3DView\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Set view type to '3d' if this is true otherwise set it to 'register'\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        bounds$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.organDimensions$.pipe(\n    map(dims => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:26\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:55\n                        \n                    \n\n            \n                \n                    Shows / hides the state debug component for testing purposes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        is3DView$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.viewType$.pipe(\n    map(type => type === '3d')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether the view type is 3d or register\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNarrowView\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:50\n                        \n                    \n\n            \n                \n                    Whether the content area is very narrow\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        position$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.position$.pipe(\n    map(p => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) }))\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sensor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ResizeSensor\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:63\n                        \n                    \n\n            \n                \n                    Resize detection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDebugButtons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : !environment.production\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/content.component.ts:60\n                        \n                    \n\n            \n                \n                    Show debug buttons of content component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostBinding, Input, OnDestroy, OnInit\n} from '@angular/core';\nimport { NodeDragEvent } from 'ccf-body-ui';\nimport { ResizeSensor } from 'css-element-queries';\nimport { distinctUntilKeyChanged, map } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { SceneState } from '../../core/store/scene/scene.state';\n\n\n/**\n * Main content component\n */\n@Component({\n  selector: 'ccf-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-content';\n\n  @Input() disablePositionChange = false;\n\n  readonly position$ = this.model.position$.pipe(\n    map(p => ({ x: Math.floor(p.x), y: Math.floor(p.y), z: Math.floor(p.z) }))\n  );\n\n  /** Whether the view type is 3d or register */\n  readonly is3DView$ = this.model.viewType$.pipe(\n    map(type => type === '3d')\n  );\n\n  readonly bounds$ = this.model.organDimensions$.pipe(\n    map(dims => ({\n      x: Math.max(dims.x, this.model.defaultPosition.x + 40) / 1000,\n      y: Math.max(dims.y, this.model.defaultPosition.y + 40) / 1000,\n      z: Math.max(dims.z, this.model.defaultPosition.z + 40) / 1000\n    })),\n    distinctUntilKeyChanged('x'),\n    distinctUntilKeyChanged('y')\n  );\n\n  /** Whether the content area is very narrow */\n  isNarrowView = false;\n\n  /**\n   * Shows / hides the state debug component for testing purposes.\n   */\n  debugMode = false;\n\n  /**\n   * Show debug buttons of content component\n   */\n  showDebugButtons = !environment.production;\n\n  /** Resize detection */\n  private sensor: ResizeSensor;\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param model The model state\n   * @param page The page state\n   * @param registration The registration state\n   * @param rootRef Component's root element\n   * @param cdr Change detector\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly page: PageState,\n    readonly registration: RegistrationState,\n    readonly scene: SceneState,\n    private readonly rootRef: ElementRef,\n    private readonly cdr: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Sets up the resize sensor\n   */\n  ngOnInit(): void {\n    this.sensor = new ResizeSensor(this.rootRef.nativeElement, ({ width }) => {\n      const isNarrowView = width  n * 1000) as [number, number];\n        const { position, viewSide, organDimensions } = this.model.snapshot;\n        const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => n / 2);\n        let newPosition = position;\n        switch (viewSide) {\n          case 'anterior':\n            newPosition = { x: a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'posterior':\n            newPosition = { x: -a + dims[0], y: b + dims[1], z: position.z };\n            break;\n          case 'left':\n            newPosition = { x: position.x, y: b + dims[1], z: -a + dims[2] };\n            break;\n          case 'right':\n            newPosition = { x: position.x, y: b + dims[1], z: a + dims[2] };\n            break;\n        }\n        this.model.setPosition(newPosition);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n  refresh\n\n\n\n  \n\n  \n  \n    \n    \n    \n      \n        X: {{ (position$ | async)?.x }}\n        Y: {{ (position$ | async)?.y }}\n        Z: {{ (position$ | async)?.z }}\n      \n    \n  \n\n\n\n\n\n  State\n  Use callback\n  Use download\n\n\n    \n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  width: 100%;\n  height: 100%;\n  padding: 1.5rem;\n  overflow: hidden;\n\n  .top-bar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .reset {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: 0.6s;\n    }\n  }\n\n  .sidebar {\n    .minimap-scene {\n      margin: 1.5rem;\n      width: 12.75rem;\n      height: 11rem;\n      ::ng-deep .body-ui {\n        background-color: #232f3a;\n      }\n    }\n\n    ccf-spatial-search-keyboard-ui-behavior::ng-deep {\n      margin: 1.5rem;\n      display: flex;\n      justify-content: center;\n    }\n\n    ccf-xyz-position {\n      margin: 1.5rem;\n      padding-left: 5rem;\n    }\n  }\n\n  .main-content {\n    display: flex;\n    height: calc(100% - 1rem);\n\n    .body-ui {\n      flex: auto;\n      transition: opacity 1s;\n    }\n\n    .gizmo-area {\n      width: 7rem;\n      margin-top: 1.5rem;\n      margin-left: 1.5rem;\n      z-index: 10;\n      position: relative;\n      right: 1.5rem;\n\n      .position-display {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 1.5rem;\n      }\n\n      .gizmo {\n        height: 5.5rem;\n        .hidden {\n          opacity: 0;\n          z-index: 0;\n        }\n      }\n    }\n  }\n\n  // Temporary for displaying dev information\n  .ccf-store-debug {\n    color: white;\n    position: absolute;\n    top: 0.5rem;\n    max-width: 55rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      refresh                                X: {{ (position$ | async)?.x }}        Y: {{ (position$ | async)?.y }}        Z: {{ (position$ | async)?.z }}              State  Use callback  Use download'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent-1.html":{"url":"components/ContentComponent-1.html","title":"component - ContentComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n\n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                animationsEnabled\n                            \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    \n                                faded\n                            \n                            \n                                    \n                                leftMargin\n                            \n                            \n                                    \n                                rightMargin\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        @fadeInOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.cff-drawer-content-animations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-left.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-right.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleMessage(msg: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Process an event message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if change detection needs to run.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateFaded\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateFaded()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Checks and updates the faded state based on the drawer states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateMargin\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Updates a margin.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                        \"start\" | \"end\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Start (left) or end (right) margin.\n\n                                            \n                                        \n                                        \n                                                opened\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Whether the drawer is opened.\n\n                                            \n                                        \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The width of the drawer if opened.\n\n                                            \n                                        \n                                        \n                                                margin\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The margin size.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        animationsEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.cff-drawer-content-animations')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DrawerComponent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:39\n                        \n                    \n\n            \n                \n                    References to the side drawers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        faded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('@fadeInOut')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-left.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-right.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts:41\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = !!(startExpanded || endExpanded);\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: .5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when the content component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContentModule.html":{"url":"modules/ContentModule.html","title":"module - ContentModule","body":"\n                   \n\n\n\n\n    Modules\n    ContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_declarations\n\n\n\n\nContentComponent\n\nContentComponent\n\n\n\nContentModule\n\nContentModule\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nContentModule -->\n\nVideoModalLauncherModule->ContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StageNavModule\n                        \n                        \n                            VideoModalLauncherModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BodyUiModule, StoreDebugModule } from 'ccf-shared';\n\nimport { ContentComponent } from '../content/content.component';\nimport { StageNavModule } from './stage-nav/stage-nav.module';\nimport { VideoModalLauncherModule } from './video-modal/video-modal-launcher/video-modal-launcher.module';\nimport { SpatialSearchKeyboardUIBehaviorModule } from 'ccf-shared';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StageNavModule,\n    MatIconModule,\n    StoreDebugModule,\n    VideoModalLauncherModule,\n    MatRippleModule,\n    SpatialSearchKeyboardUIBehaviorModule,\n    BodyUiModule\n  ],\n  declarations: [ContentComponent],\n  exports: [ContentComponent]\n})\nexport class ContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\n\nimport { environment } from '../../environments/environment';\nimport { ConfigModule } from './services/config/config.module';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'rui'\n    }),\n    MousePositionTrackerModule,\n\n    ConfigModule,\n    StoreModule,\n    ThemingModule\n  ],\n  exports: []\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'larynx', namespace: 'app', url: 'assets/icons/organs/ico-organs-larynx.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'main-bronchus', namespace: 'app', url: 'assets/icons/organs/ico-organs-extrapulmonary bronchus.svg' },\n  { name: 'mammary-gland', namespace: 'app', url: 'assets/icons/organs/ico-organs-breast.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'palatine-tonsil', namespace: 'app', url: 'assets/icons/organs/ico-organs-palatine tonsil.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organs/ico-organs-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organs/ico-organs-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'trachea', namespace: 'app', url: 'assets/icons/organs/ico-organs-trachea.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' }\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsLabelComponent.html":{"url":"components/DetailsLabelComponent.html","title":"component - DetailsLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts\n\n\n\n    \n        Description\n    \n    \n        Reusable component that takes an array of strings and renders\nthat array as a string, separated by commas, in the icon color.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-details-label\n            \n\n\n\n            \n                styleUrls\n                ./details-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arrayToString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                details\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        details\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:20\n                            \n                        \n                \n                    \n                        The array of details to be displayed.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-details-label\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-details-label'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        arrayToString\n                        \n                    \n                \n            \n            \n                \narrayToString(inputArray: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Function that handles converting the array given\ninto a formatted string for display.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                inputArray\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    an array of strings to join.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                the formatted string of items separated by a comma.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-details-label'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts:15\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, HostBinding, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Reusable component that takes an array of strings and renders\n * that array as a string, separated by commas, in the icon color.\n */\n@Component({\n  selector: 'ccf-details-label',\n  templateUrl: './details-label.component.html',\n  styleUrls: ['./details-label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DetailsLabelComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-details-label';\n\n  /**\n   * The array of details to be displayed.\n   */\n  @Input() details: string[] = [];\n\n  /**\n   * Function that handles converting the array given\n   * into a formatted string for display.\n   *\n   * @param inputArray an array of strings to join.\n   * @returns the formatted string of items separated by a comma.\n   */\n  arrayToString(inputArray: string[]): string {\n    return inputArray.filter(item => !!item).join(', ');\n  }\n}\n\n    \n\n    \n        {{ arrayToString(details) }}\n    \n\n    \n                \n                    ./details-label.component.scss\n                \n                :host {\n    display: block;\n    height: 2.25rem;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ arrayToString(details) }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DetailsLabelModule.html":{"url":"modules/DetailsLabelModule.html","title":"module - DetailsLabelModule","body":"\n                   \n\n\n\n\n    Modules\n    DetailsLabelModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/details-label/details-label.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DetailsLabelComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DetailsLabelComponent } from './details-label.component';\n\n@NgModule({\n  declarations: [DetailsLabelComponent],\n  imports: [CommonModule],\n  exports: [DetailsLabelComponent]\n})\nexport class DetailsLabelModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/documentation.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drawers\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drawers:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DrawerModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            margin\n                                        \n                                \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExtractionSet.html":{"url":"interfaces/ExtractionSet.html","title":"interface - ExtractionSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExtractionSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/extraction-set.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains information for an extraction set\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            sites\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the set\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Organ that the extraction sites belong to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sites:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extraction sites belonging to the organ in the extraction set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { VisibilityItem } from './visibility-item';\n\n/**\n * Contains information for an extraction set\n */\nexport interface ExtractionSet {\n  /** Name of the set */\n  name: string;\n\n  /** Organ that the extraction sites belong to */\n  organ?: string;\n\n  /** Extraction sites belonging to the organ in the extraction set */\n  sites: VisibilityItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExtractionSetDropdownComponent.html":{"url":"components/ExtractionSetDropdownComponent.html","title":"component - ExtractionSetDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExtractionSetDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown for selecting the extraction set\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-extraction-set-dropdown\n            \n\n\n\n            \n                styleUrls\n                ./extraction-set-dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./extraction-set-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                extractionSetChanged\n                            \n                            \n                                isMultiple\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                setChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of extraction set dropdown component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sets\n                    \n                \n                \n                    \n                        Type :         ExtractionSet[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Extraction sets to be displayed as options\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        setChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Emits the current extraction set when selected\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-extraction-set-dropdown\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-extraction-set-dropdown'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        extractionSetChanged\n                        \n                    \n                \n            \n            \n                \nextractionSetChanged(value: ExtractionSet)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Sets the selected extraction set and emits the extraction set\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            ExtractionSet\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The extraction set selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMultiple\n                        \n                    \n                \n            \n            \n                \nisMultiple()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Determines whether there is more than one extraction set\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if there is more than one extraction set\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-extraction-set-dropdown'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtractionSet\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts:33\n                        \n                    \n\n            \n                \n                    The currently selected extraction set\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ExtractionSet } from '../../../core/models/extraction-set';\n\n/**\n * Dropdown for selecting the extraction set\n */\n@Component({\n  selector: 'ccf-extraction-set-dropdown',\n  templateUrl: './extraction-set-dropdown.component.html',\n  styleUrls: ['./extraction-set-dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExtractionSetDropdownComponent {\n\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-extraction-set-dropdown';\n\n  /**\n   * Emits the current extraction set when selected\n   */\n  @Output() readonly setChange = new EventEmitter();\n\n  /**\n   * Extraction sets to be displayed as options\n   */\n  @Input() sets: ExtractionSet[];\n\n  /**\n   * The currently selected extraction set\n   */\n  selected: ExtractionSet;\n\n  /**\n   * Creates an instance of extraction set dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Sets the selected extraction set and emits the extraction set\n   *\n   * @param value The extraction set selected\n   */\n  extractionSetChanged(value: ExtractionSet): void {\n    this.selected = value;\n    this.ga.event('selected_extraction_set_change', 'extraction_set_dropdown', value.name);\n    this.setChange.emit(value);\n  }\n\n  /**\n   * Determines whether there is more than one extraction set\n   *\n   * @returns true if there is more than one extraction set\n   */\n  isMultiple(): boolean {\n    return this.sets.length > 1;\n  }\n}\n\n    \n\n    \n        \n  Landmark Set\n  \n    \n      {{set.name}} ({{set.sites.length}})\n    \n  \n\n\n    \n\n    \n                \n                    ./extraction-set-dropdown.component.scss\n                \n                ::ng-deep .extraction-set-panel {\n  position: absolute !important;\n  box-shadow: 0rem 0rem 0.3rem 0.1rem #9e9e9e !important;\n  top: -3.5rem;\n\n  .extraction-set-options {\n    height: 2.5rem;\n    min-height: inherit;\n  }\n}\n\n:host {\n  ::ng-deep .mat-mdc-form-field {\n    width: 10.5rem;\n\n    .mat-mdc-text-field-wrapper {\n      padding: 0;\n    }\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0rem !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Landmark Set            {{set.name}} ({{set.sites.length}})      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExtractionSetDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExtractionSetDropdownModule.html":{"url":"modules/ExtractionSetDropdownModule.html","title":"module - ExtractionSetDropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    ExtractionSetDropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExtractionSetDropdownModule\n\n\n\ncluster_ExtractionSetDropdownModule_exports\n\n\n\ncluster_ExtractionSetDropdownModule_declarations\n\n\n\n\nExtractionSetDropdownComponent\n\nExtractionSetDropdownComponent\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule -->\n\nExtractionSetDropdownComponent->ExtractionSetDropdownModule\n\n\n\n\n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent  -->\n\nExtractionSetDropdownModule->ExtractionSetDropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExtractionSetDropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExtractionSetDropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ExtractionSetDropdownComponent } from './extraction-set-dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSelectModule],\n  declarations: [ExtractionSetDropdownComponent],\n  exports: [ExtractionSetDropdownComponent]\n})\nexport class ExtractionSetDropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            baseHref\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cancelRegistration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editRegistration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fetchPreviousRegistrations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            register\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            registrationStarted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skipUnsavedChangesConfirmation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useDownload\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseHref\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        baseHref:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cancelRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cancelRegistration:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editRegistration:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPreviousRegistrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetchPreviousRegistrations:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganConfig | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganConfig | string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organOptions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        register\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        register:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationStarted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationStarted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipUnsavedChangesConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipUnsavedChangesConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useDownload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useDownload:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\nimport { ObservableInput } from 'rxjs';\n\n\nexport interface GlobalConfig {\n  baseHref?: string;\n  editRegistration?: Record;\n  organ?: OrganConfig | string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n\n  register?: (data: string) => void;\n  useDownload?: boolean;\n\n  fetchPreviousRegistrations?: () => ObservableInput[]>;\n  registrationStarted?: boolean;\n\n  cancelRegistration?: () => void;\n\n  skipUnsavedChangesConfirmation?: boolean;\n\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  organOptions?: string[];\n}\n\nexport interface OrganConfig {\n  name: 'large intestine' | 'heart' | 'kidney' | 'spleen';\n  ontologyId?: string;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\ndeclare global {\n  let ruiConfig: GlobalConfig;\n}\n\nexport const GLOBAL_CONFIG = new InjectionToken(\n  'Global configuration object'\n);\n\nexport function globalConfigFactory(globals: GlobalsService): GlobalConfig {\n  return globals.get('ruiConfig', { user: { firstName: '', lastName: '' } });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Page header\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                homeUrl\n                            \n                            \n                                logoTooltip\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of header component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-header\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-header'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-header'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/header/header.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nimport { PageState } from '../../core/store/page/page.state';\n\n\n/**\n * Page header\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-header';\n\n  @Input() homeUrl: string;\n\n  @Input() logoTooltip: string;\n\n  /**\n   * Creates an instance of header component.\n   *\n   * @param page Page data.\n   */\n  constructor(readonly page: PageState) { }\n}\n\n    \n\n    \n        \n\n\n\n  \n    chevron_left\n    BACK\n  \n\n\n\n  \n    \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n\n  .text {\n    padding: 0.25rem 0;\n    height: 2rem;\n    display: flex;\n    align-items: center;\n    font-weight: lighter;\n    font-size: 1.5rem;\n  }\n\n\n  .link {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    text-decoration: none;\n    padding: 0.25rem 0;\n  }\n\n  .home {\n    * {\n      transition: color .6s;\n    }\n\n    .backbutton {\n      // Material icons do not always fill the space given\n      // Scale up size for icon to look correct\n      font-size: 2.25rem;\n      width: 2.25rem;\n      height: 2.25rem;\n    }\n  }\n\n  .portal {\n    height: 100%;\n    width: 25rem;\n    align-items: center;\n    display: flex;\n  }\n\n  .logo {\n    width: 100%;\n    height: 50%;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      chevron_left    BACK              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/header/header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:     SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:     SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              private readonly sanitizer: DomSanitizer,\n              private readonly globalConfig: GlobalConfigState) {\n    super();\n  }\n\n  ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS\n      .filter(def => def.html !== undefined)\n      .map(def => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html!) }))\n      .forEach(def => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find(\n        icon => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace\n      );\n\n      if (def?.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getArguments\n                        \n                    \n                \n            \n            \n                \n                        \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:147\n                        \n                    \n\n\n            \n                \n                        Selects the argument used to call the registration method.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     []\n\n                        \n                            \n                                An array of arguments.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getMethodName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:127\n                        \n                    \n\n\n            \n                \n                        Selects the MatIconRegistry method used to register the icon.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the registry method.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registerIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:87\n                        \n                    \n\n\n            \n                \n                        Registers a svg icon for use in mat-icon.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                definition\n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Icon to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if registration was successful, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerIconImpl\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts:97\n                        \n                    \n\n\n            \n                \n                        Backing implementation of registerIcon.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                definition\n                                            \n                                                            IconDefinition\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Icon to register.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if registration was successful, otherwise false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { GlobalConfig } from '../../services/config/config';\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(@Optional() private registry: MatIconRegistry | null,\n              private readonly sanitizer: DomSanitizer,\n              private readonly globalConfig: GlobalConfigState) {\n    super();\n  }\n\n  ngxsOnInit(): void {\n    // Register html icons as they don't depend on baseHref\n    DEFAULT_ICONS\n      .filter(def => def.html !== undefined)\n      .map(def => ({ ...def, html: this.sanitizer.bypassSecurityTrustHtml(def.html!) }))\n      .forEach(def => this.registerIconImpl(def));\n\n    // Use resolver for url icons\n    this.registry?.addSvgIconResolver((name, namespace) => {\n      const def = DEFAULT_ICONS.find(\n        icon => (icon.name ?? '') === name && (icon.namespace ?? '') === namespace\n      );\n\n      if (def?.url === undefined) {\n        return null;\n      }\n\n      const baseHref = this.globalConfig.snapshot.baseHref ?? '';\n      return this.sanitizer.bypassSecurityTrustResourceUrl(baseHref + def.url);\n    });\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry;\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName] as (...arg: unknown[]) => void;\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deferred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Promise(resolve => {\n    this.resolve = resolve;\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                        \n                    \n\n            \n                \n                    Promise used to await on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether this state is true or false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:41\n                        \n                    \n\n            \n                \n                    Resolve function for the promise.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Sets the state to true and\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueOf\n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Gets the boolean state of this object.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if set has been called.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        wait\n                        \n                    \n                \n            \n            \n                \n                        \n                    wait()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets a promise that resolves when this state is set to true.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state('open, open-instant', style({\n        transform: 'none'\n      })),\n      state('closed', style({ })),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input()\n  @HostBinding('class.ccf-drawer-opened')\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input()\n  @HostBinding('class.ccf-drawer-expanded')\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')\n  get expandedStateObj(): unknown {\n    return { value: this.expandedState2, params: {\n      width: this.width, margin: this.measuredMargin,\n      margin2: this.margin2\n    } };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef,\n              private element: ElementRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done')\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done')\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled': {\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JsonFileReaderComponent.html":{"url":"components/JsonFileReaderComponent.html","title":"component - JsonFileReaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  JsonFileReaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-json-file-reader\n            \n\n\n\n            \n                styleUrls\n                ./json-file-reader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./json-file-reader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                fileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleFile\n                            \n                            \n                                triggerFileInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                parsedJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of json file reader component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Upload'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:18\n                            \n                        \n                \n                    \n                        Allows the label on the upload button to be customized.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        parsedJson\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:21\n                            \n                        \n                \n                    \n                        Emits the json object of any files uploaded.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-json-file-reader\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-json-file-reader'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:13\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleFile\n                        \n                    \n                \n            \n            \n                \nhandleFile(event: InputEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Takes in a json file and emits the parsed json object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    file input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerFileInput\n                        \n                    \n                \n            \n            \n                \ntriggerFileInput()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Method used to trigger the file input element's click handler\nfrom the placeholder button used for styling purposes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-json-file-reader'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:13\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fileInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fileInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts:15\n                        \n                    \n\n            \n                \n                    File Input element, used to manually trigger the click event.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, Input, Output, ViewChild } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n@Component({\n  selector: 'ccf-json-file-reader',\n  templateUrl: './json-file-reader.component.html',\n  styleUrls: ['./json-file-reader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class JsonFileReaderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-json-file-reader';\n  /** File Input element, used to manually trigger the click event. */\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  /** Allows the label on the upload button to be customized. */\n  @Input() label = 'Upload';\n\n  /** Emits the json object of any files uploaded. */\n  @Output() readonly parsedJson = new EventEmitter();\n\n  /**\n   * Creates an instance of json file reader component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Method used to trigger the file input element's click handler\n   * from the placeholder button used for styling purposes.\n   */\n  triggerFileInput(): void {\n    const fileInputElement: HTMLElement = this.fileInput.nativeElement;\n    fileInputElement.click();\n  }\n\n  /**\n   * Takes in a json file and emits the parsed json object.\n   *\n   * @param event file input event\n   */\n  handleFile(event: InputEvent): void {\n    const inputTarget = event.target as HTMLInputElement;\n    if (!inputTarget.files) {\n      return;\n    }\n\n    const file = inputTarget.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const json = JSON.parse(fileReader.result as string) as unknown;\n      this.ga.event('json_file_load_end', 'json_file_reader');\n      this.parsedJson.emit(json);\n    };\n\n    this.ga.event('json_file_load_start', 'json_file_reader');\n    fileReader.readAsText(file);\n  }\n}\n\n    \n\n    \n        {{ label }}\n\n\n    \n\n    \n                \n                    ./json-file-reader.component.scss\n                \n                :host {\n  .upload-button {\n    width: 100%;\n    height: 2.25rem;\n    transition: .6s;\n    cursor: pointer;\n    font-weight: 500;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ label }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JsonFileReaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JsonFileReaderModule.html":{"url":"modules/JsonFileReaderModule.html","title":"module - JsonFileReaderModule","body":"\n                   \n\n\n\n\n    Modules\n    JsonFileReaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JsonFileReaderModule\n\n\n\ncluster_JsonFileReaderModule_declarations\n\n\n\ncluster_JsonFileReaderModule_exports\n\n\n\n\nJsonFileReaderComponent\n\nJsonFileReaderComponent\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nJsonFileReaderModule -->\n\nJsonFileReaderComponent->JsonFileReaderModule\n\n\n\n\n\nJsonFileReaderComponent \n\nJsonFileReaderComponent \n\nJsonFileReaderComponent  -->\n\nJsonFileReaderModule->JsonFileReaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JsonFileReaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JsonFileReaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonFileReaderComponent } from './json-file-reader.component';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [JsonFileReaderComponent],\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  exports: [JsonFileReaderComponent]\n})\nexport class JsonFileReaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabeledSlideToggleComponent.html":{"url":"components/LabeledSlideToggleComponent.html","title":"component - LabeledSlideToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabeledSlideToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Generic toggle slider component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-labeled-slide-toggle\n            \n\n\n\n            \n                styleUrls\n                ./labeled-slide-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./labeled-slide-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                labels\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    left\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of labeled slide toggle component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:34\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        labels\n                    \n                \n                \n                    \n                        Type :     [string, string]\n\n                    \n                \n                \n                    \n                        Default value : ['Left', 'Right']\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:24\n                            \n                        \n                \n                    \n                        The two selection options to be toggled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Left'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:29\n                            \n                        \n                \n                    \n                        Input value for toggle slider\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:39\n                            \n                        \n                \n                    \n                        Emits the datatype with the currently selected option\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-labeled-slide-toggle\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-labeled-slide-toggle'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateToggle\n                        \n                    \n                \n            \n            \n                \nupdateToggle(selection: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Updates and emits the currently selected option\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The current toggle state (true=left, false=right)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-labeled-slide-toggle'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        left\n                    \n                \n\n                \n                    \n                        getleft()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts:51\n                                \n                            \n                    \n                        \n                                Determines if left toggle option is selected\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Generic toggle slider component\n */\n@Component({\n  selector: 'ccf-labeled-slide-toggle',\n  templateUrl: './labeled-slide-toggle.component.html',\n  styleUrls: ['./labeled-slide-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class LabeledSlideToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-labeled-slide-toggle';\n\n  /**\n   * The two selection options to be toggled\n   */\n  @Input() labels: [string, string] = ['Left', 'Right'];\n\n  /**\n   * Input value for toggle slider\n   */\n  @Input() value = 'Left';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Emits the datatype with the currently selected option\n   */\n  @Output() readonly valueChange = new EventEmitter();\n\n  /**\n   * Creates an instance of labeled slide toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Determines if left toggle option is selected\n   */\n  get left(): boolean {\n    const { value, labels } = this;\n    return value !== labels[1];\n  }\n\n  /**\n   * Updates and emits the currently selected option\n   *\n   * @param selection The current toggle state (true=left, false=right)\n   */\n  updateToggle(selection: boolean): void {\n    this.value = selection ? this.labels[0] : this.labels[1];\n    this.ga.event('slide_toggle_toggled', 'slide_toggle', this.value);\n    this.valueChange.emit(this.value);\n  }\n}\n\n    \n\n    \n        {{labels[0]}}\n\n{{labels[1]}}\n\n    \n\n    \n                \n                    ./labeled-slide-toggle.component.scss\n                \n                :host{\n  .slide-label {\n    margin: 0 1rem;\n    transition: color .6s;\n    cursor: pointer;\n  }\n  \n  .disabled {\n    opacity: 30%;\n    cursor: not-allowed;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{labels[0]}}{{labels[1]}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LabeledSlideToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LabeledSlideToggleModule.html":{"url":"modules/LabeledSlideToggleModule.html","title":"module - LabeledSlideToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    LabeledSlideToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LabeledSlideToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { LabeledSlideToggleComponent } from './labeled-slide-toggle.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatSlideToggleModule],\n  declarations: [LabeledSlideToggleComponent],\n  exports: [LabeledSlideToggleComponent]\n})\nexport class LabeledSlideToggleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The left sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-left-sidebar\n            \n\n\n\n            \n                styleUrls\n                ./left-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./left-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                detailsLabels$\n                            \n                            \n                                extractionSiteTooltip\n                            \n                            \n                                organList\n                            \n                            \n                                    Readonly\n                                organSelected$\n                            \n                            \n                                previousVisibilityItems\n                            \n                            \n                                    Readonly\n                                sexByLabel$\n                            \n                            \n                                    Readonly\n                                sideByLabel$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                capitalizeFirstLetter\n                            \n                            \n                                setSexFromLabel\n                            \n                            \n                                setSideFromLabel\n                            \n                            \n                                togglePreviousRegistrationBlocks\n                            \n                            \n                                updateExtractionSiteTooltip\n                            \n                            \n                                updateRegistration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disableSlider\n                            \n                            \n                                modalClosed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState, model: ModelState, registration: RegistrationState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disableSlider\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalClosed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:29\n                            \n                        \n                \n                    \n                        Whether or not the initial registration modal has been closed\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-left-sidebar\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-left-sidebar'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        capitalizeFirstLetter\n                        \n                    \n                \n            \n            \n                \ncapitalizeFirstLetter(inputString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Takes the input string and capitalizes the first letter.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                inputString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The string we want to capitalize it's first letter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                string with first letter capitalized.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Sets sex from sex toggle slider\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"Female\" | \"Male\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Selected sex\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSideFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSideFromLabel(label: \"L\" | \"R\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Sets side from side toggle slider\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"L\" | \"R\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Selected side\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePreviousRegistrationBlocks\n                        \n                    \n                \n            \n            \n                \ntogglePreviousRegistrationBlocks(visible: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Handles toggling previous registration blocks visibility.\nWhen making them visible, it updates current structures to 20%\nopacity; when making not visible it sets them back to their\nprevious opacity.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                visible\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the state to set the visibility to.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateExtractionSiteTooltip\n                        \n                    \n                \n            \n            \n                \nupdateExtractionSiteTooltip(item: VisibilityItem | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Updates extraction site tooltip to either the VisibilityItem passed in's\ntooltip property, or an empty string if undefined.\nundefined.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The VisibilityItem which we want to show the tooltip of, or\nundefined.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRegistration\n                        \n                    \n                \n            \n            \n                \nupdateRegistration(event: SpatialEntityJsonLd)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Event handler for capturing uploaded json and passing it along to\nthe relevant registration state method.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        SpatialEntityJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new registration state json\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-left-sidebar'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        detailsLabels$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : combineLatest(\n    [this.model.organ$, this.model.side$, this.model.sex$]).pipe(\n    map(([organ, side, sex]) => [\n      this.capitalizeFirstLetter(organ?.organ), this.capitalizeFirstLetter(side as string), this.capitalizeFirstLetter(sex as string)\n    ])\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractionSiteTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:54\n                        \n                    \n\n            \n                \n                    Variable that keeps track of the extraction site tooltip to display on\nthe stage when hovered.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RUI_ORGANS\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organSelected$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.organ$.pipe(\n    map(organ => organ === undefined ? false : true)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousVisibilityItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [...this.model.snapshot.anatomicalStructures] as VisibilityItem[]\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:60\n                        \n                    \n\n            \n                \n                    Keeps track of the previousVisibility items so we can set the opacity\nback to what it was before we changed them to 20%\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sexByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sideByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.side$.pipe(\n    map(side => side === 'left' ? 'L' : 'R')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { VisibilityItem } from '../../core/models/visibility-item';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\nimport { RUI_ORGANS } from './../../core/store/model/model.state';\n\n\n/**\n * The left sidebar\n */\n@Component({\n  selector: 'ccf-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LeftSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-left-sidebar';\n\n  @Input() disableSlider = false;\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  readonly sexByLabel$ = this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  );\n\n  readonly sideByLabel$ = this.model.side$.pipe(\n    map(side => side === 'left' ? 'L' : 'R')\n  );\n\n  readonly organSelected$ = this.model.organ$.pipe(\n    map(organ => organ === undefined ? false : true)\n  );\n\n  readonly detailsLabels$: Observable = combineLatest(\n    [this.model.organ$, this.model.side$, this.model.sex$]).pipe(\n    map(([organ, side, sex]) => [\n      this.capitalizeFirstLetter(organ?.organ), this.capitalizeFirstLetter(side as string), this.capitalizeFirstLetter(sex as string)\n    ])\n  );\n\n  /**\n   * Variable that keeps track of the extraction site tooltip to display on\n   * the stage when hovered.\n   */\n  extractionSiteTooltip = '';\n\n  /**\n   * Keeps track of the previousVisibility items so we can set the opacity\n   * back to what it was before we changed them to 20%\n   */\n  previousVisibilityItems = [...this.model.snapshot.anatomicalStructures] as VisibilityItem[];\n\n  organList = RUI_ORGANS;\n\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    readonly registration: RegistrationState\n  ) { }\n\n  /**\n   * Takes the input string and capitalizes the first letter.\n   * @param inputString The string we want to capitalize it's first letter.\n   * @returns string with first letter capitalized.\n   */\n  capitalizeFirstLetter(inputString: string): string {\n    if (inputString) {\n      return inputString.charAt(0).toUpperCase() + inputString.slice(1);\n    }\n    return inputString;\n  }\n\n  /**\n   * Updates extraction site tooltip to either the VisibilityItem passed in's\n   * tooltip property, or an empty string if undefined.\n   *\n   * @param item The VisibilityItem which we want to show the tooltip of, or\n   * undefined.\n   */\n  updateExtractionSiteTooltip(item: VisibilityItem | undefined): void {\n    if (item?.tooltip) {\n      this.extractionSiteTooltip = item.tooltip;\n    } else {\n      this.extractionSiteTooltip = '';\n    }\n  }\n\n  /**\n   * Sets sex from sex toggle slider\n   *\n   * @param label Selected sex\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.model.setSex(label === 'Female' ? 'female' : 'male');\n  }\n\n  /**\n   * Sets side from side toggle slider\n   *\n   * @param label Selected side\n   */\n  setSideFromLabel(label: 'L' | 'R'): void {\n    this.model.setSide(label === 'L' ? 'left' : 'right');\n  }\n\n  /**\n   * Handles toggling previous registration blocks visibility.\n   * When making them visible, it updates current structures to 20%\n   * opacity; when making not visible it sets them back to their\n   * previous opacity.\n   *\n   * @param visible the state to set the visibility to.\n   */\n  togglePreviousRegistrationBlocks(visible: boolean): void {\n    if (visible) {\n      this.previousVisibilityItems = [...this.model.snapshot.anatomicalStructures];\n    }\n    this.model.toggleRegistrationBlocksVisibility(visible, this.previousVisibilityItems);\n  }\n\n  /**\n   * Event handler for capturing uploaded json and passing it along to\n   * the relevant registration state method.\n   *\n   * @param event the new registration state json\n   */\n  updateRegistration(event: SpatialEntityJsonLd): void {\n    this.registration.editRegistration(event);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n          Donor Sex:\n          \n          \n        \n\n        \n\n        \n          \n              Anatomical Structures\n          \n\n          \n              \n              \n          \n        \n\n        \n\n        \n            \n                Landmarks\n            \n            \n                \n                \n                \n                \n            \n        \n\n        \n\n        \n\n         0\">\n            {{ extractionSiteTooltip }}\n        \n    \n\n\n    \n\n    \n                \n                    ./left-sidebar.component.scss\n                \n                :host {\n\n  display: block;\n  height: calc(100% - 3rem);\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n\n  .scroll-wrapper {\n    overflow-y: scroll;\n    height: 100%;\n    margin-right: 0.375rem;\n\n    scrollbar-width: thin;\n    &::-webkit-scrollbar {\n      width: 0.75rem;\n    }\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      margin-left: 1.5rem;\n      margin-right: 0.375rem;\n      min-height: 100%;\n\n      .space {\n        height: 3rem;\n      }\n\n      mat-divider {\n        border-top-width: 3px;\n      }\n\n      .ccf-organ-selector {\n        margin-top: 1.5rem;\n      }\n\n      .organ-sliders {\n        .slider-label {\n          font-weight: 600;\n        }\n\n        display: flex;\n        height: 3rem;\n        align-items: center;\n      }\n\n      mat-expansion-panel {\n        box-shadow: none;\n        mat-expansion-panel-header {\n          .expansion-title {\n            font-size: 1rem;\n            font-weight: 600;\n          }\n        }\n      }\n\n      ::ng-deep .mat-expansion-panel-body {\n        padding: 0;\n      }\n\n      .extraction-menu,\n      .anatomical-structures-menu {\n        ::ng-deep .expansion-header {\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          padding: 0;\n          font-weight: bold;\n          height: 3rem;\n\n          .mat-expansion-indicator {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            height: 24px;\n            width: 24px;\n          }\n        }\n\n        .expansion-content {\n          margin-bottom: 0.75rem;\n          text-align: center;\n          margin-top: 2.25rem;\n          .expansion-placeholder {\n            width: 100%;\n            font-size: 0.9rem;\n            font-weight: 400;\n          }\n        }\n      }\n\n      .extraction-site-tooltip {\n        position: absolute;\n        top: 4rem;\n        left: 27rem;\n        width: 21rem;\n        padding: 1rem;\n        border-radius: 0.5rem;\n        border: 1px solid;\n        z-index: 2;\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Donor Sex:                                                                    Anatomical Structures                                                                                                              Landmarks                                                                                                                                     0\">            {{ extractionSiteTooltip }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeftSidebarModule.html":{"url":"modules/LeftSidebarModule.html","title":"module - LeftSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    LeftSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nLeftSidebarModule -->\n\nDetailsLabelModule->LeftSidebarModule\n\n\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nLeftSidebarModule -->\n\nExtractionSetDropdownModule->LeftSidebarModule\n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLeftSidebarModule -->\n\nLabeledSlideToggleModule->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nLeftSidebarModule -->\n\nVisibilityMenuModule->LeftSidebarModule\n\n\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DetailsLabelModule\n                        \n                        \n                            ExtractionSetDropdownModule\n                        \n                        \n                            LabeledSlideToggleModule\n                        \n                        \n                            NameInputModule\n                        \n                        \n                            VisibilityMenuModule\n                        \n                        \n                            VisibilityToggleModule\n                        \n                        \n                            VisibilityToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LeftSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { OpacitySliderModule } from 'ccf-shared';\n\nimport { DetailsLabelModule } from '../../shared/components/details-label/details-label.module';\nimport { ExtractionSetDropdownModule } from '../../shared/components/extraction-set-dropdown/extraction-set-dropdown.module';\nimport { LabeledSlideToggleModule } from '../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\nimport { NameInputModule } from '../../shared/components/name-input/name-input.module';\nimport { VisibilityMenuModule } from '../../shared/components/visibility-menu/visibility-menu.module';\nimport { VisibilityToggleModule } from '../../shared/components/visibility-toggle/visibility-toggle.module';\nimport { LeftSidebarComponent } from './left-sidebar.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatTooltipModule,\n\n    MatDividerModule,\n    DetailsLabelModule,\n    LabeledSlideToggleModule,\n    NameInputModule,\n    VisibilityToggleModule,\n    ExtractionSetDropdownModule,\n    OpacitySliderModule,\n    VisibilityMenuModule,\n    VisibilityToggleModule\n  ],\n  declarations: [LeftSidebarComponent],\n  exports: [LeftSidebarComponent]\n})\nexport class LeftSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Sender of the message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:50\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:50\n                        \n                    \n\n            \n                \n                    Counter used to give each message a unique id.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting all messages except for those sent by this source.\n\n\n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSource\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting messages sent from a specific source.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source messages are filtered on.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSources\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: [])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Gets an observable emitting messages sent from any of the specified sources.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                sources\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The sources messages are filtered on.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                The message observable.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nextMessageId\n                        \n                    \n                \n            \n            \n                \n                        \n                    nextMessageId()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Creates a unique message identifier.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The identifier number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Sends a single message with a payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The message payload.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(source)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:163\n                        \n                    \n\n\n            \n                \n                        Connects to a message channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The source of messages sent.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MessageChannel\n\n                        \n                            \n                                A new connected message channel.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Clean up.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:128\n                        \n                    \n\n            \n                \n                    The message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/services/message/message.service.ts:130\n                        \n                    \n\n            \n                \n                    The message listener.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isolated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MetaDataField.html":{"url":"interfaces/MetaDataField.html","title":"interface - MetaDataField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MetaDataField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/meta-data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MetaDataField {\n  label: string;\n  value: string;\n}\n\nexport type MetaData = MetaDataField[];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelStateModel.html":{"url":"interfaces/ModelStateModel.html","title":"interface - ModelStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModelStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data contained in the stage state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            blockSize\n                                        \n                                \n                                \n                                        \n                                            extractionSets\n                                        \n                                \n                                \n                                        \n                                            extractionSites\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                        \n                                            organDimensions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organIri\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            rotation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                        \n                                            showPrevious\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            slicesConfig\n                                        \n                                \n                                \n                                        \n                                            viewSide\n                                        \n                                \n                                \n                                        \n                                            viewType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Anatomical structures for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockSize:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Block size\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSets:         ExtractionSet[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtractionSet[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Extraction sets\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSites\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSites:         VisibilityItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VisibilityItem[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Possible extraction sites\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Organ name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organDimensions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organDimensions:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reference Organ Dimensions\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organIri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organIri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Reference Organ IRI\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model position\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotation:         XYZTriplet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         XYZTriplet\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Model rotation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sex if applicable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showPrevious\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showPrevious:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether previous registration blocks are visible\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Side if applicable\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slicesConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slicesConfig:         SlicesConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SlicesConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Slice configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewSide\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewSide:         ViewSide\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewSide\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View side\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewType:         ViewType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ViewType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    View type\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, distinctUntilChanged, filter, map, skipUntil, switchMap, tap, throttleTime } from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(map(x => x?.id));\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(map(x => x?.blockSize));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(map(x => x?.rotation));\n  /** Position observable */\n  readonly position$ = this.state$.pipe(map(x => x?.position));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(map(x => x?.slicesConfig));\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(map(x => x?.viewType));\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(map(x => x?.viewSide));\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(map(x => x?.organ));\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(map(x => x?.organIri));\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(map(x => x?.organDimensions));\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(map(x => x?.sex));\n  /** Side observable */\n  readonly side$ = this.state$.pipe(map(x => x?.side));\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(map(x => x?.showPrevious));\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(map(x => x?.extractionSites));\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(map(x => x?.anatomicalStructures));\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(map(x => x?.extractionSets));\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      } else {\n        this.ctx.patchState({ side: undefined });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: [{ id: 'all', name: 'all anatomical structures', opacity: 20, visible: true }, ...Object.values(asLookup)] });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: [{ id: 'all', name: 'all landmarks', visible: true, opacity: 0 }].concat(sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: true,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name'))\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n    this.ctx.patchState({ position: this.defaultPosition });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      delay(0),\n      switchMap(organ => this.onOrganChange(organ))\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n      });\n      return this.referenceData.state$.pipe(\n        tap(() => this.onOrganIriChange())\n      );\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameInputComponent.html":{"url":"components/NameInputComponent.html","title":"component - NameInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NameInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for inputting the researcher's name\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-name-input\n            \n\n\n\n            \n                styleUrls\n                ./name-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _name\n                            \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                firstNameValidator\n                            \n                            \n                                lastNameValidator\n                            \n                            \n                                middleNameValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nameChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:82\n                            \n                        \n\n                \n                    \n                            Creates an instance of name input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         UserName\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:62\n                            \n                        \n                \n                    \n                        Current user name\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nameChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:82\n                            \n                        \n                \n                    \n                        Emits a UserName object\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-name-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-name-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:40\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateName\n                        \n                    \n                \n            \n            \n                \nupdateName(input: InputEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Updates username with a new entry and emits the UserName object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    InputEvent from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    firstName or lastName\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserName\n\n                    \n                \n                \n                    \n                        Default value : {\n    firstName: '',\n    middleName: '',\n    lastName: ''\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-name-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:40\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:45\n                        \n                    \n\n            \n                \n                    Used to validate the first name input field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:50\n                        \n                    \n\n            \n                \n                    Used to validate the last name input field.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        middleNameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:55\n                        \n                    \n\n            \n                \n                    Used to validate the middle name input field.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:62\n                                \n                            \n                    \n                        \n                                Current user name\n\n\n                                \n                                    Returns :         UserName\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(value: UserName)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            UserName\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's middle name\n   */\n  middleName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the middle name input field.\n   */\n  middleNameValidator = new UntypedFormControl('', [Validators.required]);\n\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n    this.middleNameValidator.setValue(value?.middleName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    middleName: '',\n    lastName: ''\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n    \n        \n  First Name \n  \n\n\n\n  Middle Name \n  \n\n\n\n  Last Name \n  \n\n\n    \n\n    \n                \n                    ./name-input.component.scss\n                \n                :host {\n  display: flex;\n\n  .field {\n    &:not(:last-child) {\n      padding-right: 0.75rem;\n    }\n\n    .input {\n      text-align: left;\n      width: 100%;\n      font-size: 1rem;\n    }\n\n    ::ng-deep .mdc-text-field {\n      padding: 0;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  First Name     Middle Name     Last Name   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NameInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NameInputModule.html":{"url":"modules/NameInputModule.html","title":"module - NameInputModule","body":"\n                   \n\n\n\n\n    Modules\n    NameInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_exports\n\n\n\ncluster_NameInputModule_declarations\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\n\n\nNameInputModule\n\nNameInputModule\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/name-input/name-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NameInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NameInputComponent } from './name-input.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule\n  ],\n  declarations: [NameInputComponent],\n  exports: [NameInputComponent]\n})\nexport class NameInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganConfig.html":{"url":"interfaces/OrganConfig.html","title":"interface - OrganConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/config/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ontologyId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \"large intestine\" | \"heart\" | \"kidney\" | \"spleen\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"large intestine\" | \"heart\" | \"kidney\" | \"spleen\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { GlobalsService } from 'ccf-shared';\nimport { ObservableInput } from 'rxjs';\n\n\nexport interface GlobalConfig {\n  baseHref?: string;\n  editRegistration?: Record;\n  organ?: OrganConfig | string;\n  user?: {\n    firstName: string;\n    lastName: string;\n  };\n\n  register?: (data: string) => void;\n  useDownload?: boolean;\n\n  fetchPreviousRegistrations?: () => ObservableInput[]>;\n  registrationStarted?: boolean;\n\n  cancelRegistration?: () => void;\n\n  skipUnsavedChangesConfirmation?: boolean;\n\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  organOptions?: string[];\n}\n\nexport interface OrganConfig {\n  name: 'large intestine' | 'heart' | 'kidney' | 'spleen';\n  ontologyId?: string;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\ndeclare global {\n  let ruiConfig: GlobalConfig;\n}\n\nexport const GLOBAL_CONFIG = new InjectionToken(\n  'Global configuration object'\n);\n\nexport function globalConfigFactory(globals: GlobalsService): GlobalConfig {\n  return globals.get('ruiConfig', { user: { firstName: '', lastName: '' } });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganData.html":{"url":"interfaces/OrganData.html","title":"interface - OrganData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         OrganInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageState.html":{"url":"injectables/PageState.html","title":"injectable - PageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                General page global state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                organOptions$\n                            \n                            \n                                    Readonly\n                                registrationCallbackSet$\n                            \n                            \n                                    Readonly\n                                registrationStarted$\n                            \n                            \n                                    Readonly\n                                useCancelRegistrationCallback$\n                            \n                            \n                                    Readonly\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelRegistration\n                            \n                            \n                                    \n                                clearHasChanges\n                            \n                            \n                                    Private\n                                initSkipConfirmationListeners\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    \n                                registrationStarted\n                            \n                            \n                                    \n                                setHasChanges\n                            \n                            \n                                    \n                                setOrcidId\n                            \n                            \n                                    \n                                setUseCancelRegistrationCallback\n                            \n                            \n                                    \n                                setUserName\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skipConfirmation$\n                                \n                                \n                                    globalSkipConfirmation$\n                                \n                                \n                                    hasChanges$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:82\n                            \n                        \n\n                \n                    \n                            Creates an instance of page state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The global configuration\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelRegistration\n                        \n                    \n                \n            \n            \n                \ncancelRegistration()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clearHasChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearHasChanges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:177\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initSkipConfirmationListeners\n                        \n                    \n                \n            \n            \n                \n                        \n                    initSkipConfirmationListeners()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:98\n                        \n                    \n\n\n            \n                \n                        Initializes this service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registrationStarted\n                        \n                    \n                \n            \n            \n                \n                        \n                    registrationStarted()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:160\n                        \n                    \n\n\n            \n                \n                        Sets registrationStarted to true (when initial registration modal is closed)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setHasChanges\n                        \n                    \n                \n            \n            \n                \n                        \n                    setHasChanges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setOrcidId\n                        \n                    \n                \n            \n            \n                \n                        \n                    setOrcidId(orcidId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orcidId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUseCancelRegistrationCallback\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUseCancelRegistrationCallback(use: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                use\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUserName\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserName(name: Pick)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets the name of the active user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The first and last name\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organOptions$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.organOptions))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        registrationCallbackSet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.registrationCallbackSet))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        registrationStarted$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluckUnique('registrationStarted'))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:61\n                        \n                    \n\n            \n                \n                    RegistrationStated observable\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        useCancelRegistrationCallback$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.useCancelRegistrationCallback))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(map(x => x?.user))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:59\n                        \n                    \n\n            \n                \n                    Active user observable\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skipConfirmation$\n                    \n                \n\n                \n                    \n                        getskipConfirmation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        globalSkipConfirmation$\n                    \n                \n\n                \n                    \n                        getglobalSkipConfirmation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasChanges$\n                    \n                \n\n                \n                    \n                        gethasChanges$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/page/page.state.ts:80\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, take, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  orcidId?: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: []\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map(x => x?.user));\n  /** RegistrationStated observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map(x => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map(x => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map(x => x?.organOptions));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(config => this.setState(patch({\n        registrationCallbackSet: !!config.register,\n        useCancelRegistrationCallback: !!config.cancelRegistration,\n        user: iif(!!config.user, config.user!),\n        registrationStarted: config.user ? true : undefined\n      })))\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch({\n        firstName: name.firstName,\n        lastName: name.lastName,\n        middleName: name.middleName !== '' ? name.middleName : undefined\n      })\n    }));\n  }\n\n  @DataAction()\n  setOrcidId(orcidId: string): void {\n    this.ctx.setState(patch({\n      user: patch({ orcidId: orcidId !== '' ? orcidId : undefined })\n    }));\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageStateModel.html":{"url":"interfaces/PageStateModel.html","title":"interface - PageStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Page state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hasChanges\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            organOptions\n                                        \n                                \n                                \n                                        \n                                            registrationCallbackSet\n                                        \n                                \n                                \n                                        \n                                            registrationStarted\n                                        \n                                \n                                \n                                        \n                                            skipConfirmation\n                                        \n                                \n                                \n                                        \n                                            useCancelRegistrationCallback\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasChanges\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasChanges:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organOptions:         OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationCallbackSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationCallbackSet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationStarted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationStarted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the initial registration modal has been closed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipConfirmation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipConfirmation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useCancelRegistrationCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useCancelRegistrationCallback:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Person\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Active user\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, take, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  orcidId?: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: []\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map(x => x?.user));\n  /** RegistrationStated observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map(x => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map(x => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map(x => x?.organOptions));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(config => this.setState(patch({\n        registrationCallbackSet: !!config.register,\n        useCancelRegistrationCallback: !!config.cancelRegistration,\n        user: iif(!!config.user, config.user!),\n        registrationStarted: config.user ? true : undefined\n      })))\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch({\n        firstName: name.firstName,\n        lastName: name.lastName,\n        middleName: name.middleName !== '' ? name.middleName : undefined\n      })\n    }));\n  }\n\n  @DataAction()\n  setOrcidId(orcidId: string): void {\n    this.ctx.setState(patch({\n      user: patch({ orcidId: orcidId !== '' ? orcidId : undefined })\n    }));\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/page/page.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A record with information about a single person\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            middleName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            orcidId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orcidId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orcidId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { iif, patch } from '@ngxs/store/operators';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { pluckUnique } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map, take, tap, withLatestFrom } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A record with information about a single person */\nexport interface Person {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  orcidId?: string;\n}\n\n/** Page state model */\nexport interface PageStateModel {\n  /** Active user */\n  user: Person;\n  /** Whether or not the initial registration modal has been closed */\n  registrationStarted: boolean;\n  useCancelRegistrationCallback: boolean;\n  registrationCallbackSet: boolean;\n  skipConfirmation: boolean;\n  hasChanges: boolean;\n  organOptions?: OrganInfo[];\n}\n\n/**\n * General page global state\n */\n@StateRepository()\n@State({\n  name: 'page',\n  defaults: {\n    user: {\n      firstName: '',\n      lastName: ''\n    },\n    registrationStarted: false,\n    useCancelRegistrationCallback: false,\n    registrationCallbackSet: false,\n    skipConfirmation: true,\n    hasChanges: false,\n    organOptions: []\n  }\n})\n@Injectable()\nexport class PageState extends NgxsImmutableDataRepository {\n  /** Active user observable */\n  readonly user$ = this.state$.pipe(map(x => x?.user));\n  /** RegistrationStated observable */\n  readonly registrationStarted$ = this.state$.pipe(pluckUnique('registrationStarted'));\n  readonly useCancelRegistrationCallback$ = this.state$.pipe(map(x => x?.useCancelRegistrationCallback));\n  readonly registrationCallbackSet$ = this.state$.pipe(map(x => x?.registrationCallbackSet));\n  readonly organOptions$ = this.state$.pipe(map(x => x?.organOptions));\n\n  @Computed()\n  get skipConfirmation$(): Observable {\n    return this.state$.pipe(pluckUnique('skipConfirmation'));\n  }\n\n  @Computed()\n  get globalSkipConfirmation$(): Observable {\n    return this.globalConfig.getOption('skipUnsavedChangesConfirmation').pipe(\n      map(value => value ?? environment.skipUnsavedChangesConfirmation),\n      distinctUntilChanged()\n    );\n  }\n\n  @Computed()\n  get hasChanges$(): Observable {\n    return this.state$.pipe(pluckUnique('hasChanges'));\n  }\n\n  /**\n   * Creates an instance of page state.\n   *\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.globalConfig.config$.pipe(\n      take(1),\n      tap(config => this.setState(patch({\n        registrationCallbackSet: !!config.register,\n        useCancelRegistrationCallback: !!config.cancelRegistration,\n        user: iif(!!config.user, config.user!),\n        registrationStarted: config.user ? true : undefined\n      })))\n    ).subscribe();\n\n    this.initSkipConfirmationListeners();\n  }\n\n  cancelRegistration(): void {\n    const {\n      globalConfig: { snapshot: { cancelRegistration: cancelRegistrationCallback } },\n      snapshot: { useCancelRegistrationCallback, skipConfirmation }\n    } = this;\n\n    if (useCancelRegistrationCallback) {\n      // eslint-disable-next-line no-alert\n      if (skipConfirmation || confirm('Changes you made may not be saved.')) {\n        cancelRegistrationCallback?.();\n      }\n    }\n  }\n\n  @DataAction()\n  setUseCancelRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useCancelRegistrationCallback: use });\n  }\n\n  /**\n   * Sets the name of the active user.\n   *\n   * @param name The first and last name\n   */\n  @DataAction()\n  setUserName(name: Pick): void {\n    this.ctx.setState(patch({\n      user: patch({\n        firstName: name.firstName,\n        lastName: name.lastName,\n        middleName: name.middleName !== '' ? name.middleName : undefined\n      })\n    }));\n  }\n\n  @DataAction()\n  setOrcidId(orcidId: string): void {\n    this.ctx.setState(patch({\n      user: patch({ orcidId: orcidId !== '' ? orcidId : undefined })\n    }));\n  }\n\n  /**\n   * Sets registrationStarted to true (when initial registration modal is closed)\n   */\n  @DataAction()\n  registrationStarted(): void {\n    this.ctx.setState(patch({\n      registrationStarted: true\n    }));\n  }\n\n  @DataAction()\n  setHasChanges(): void {\n    const { snapshot: { registrationStarted, hasChanges } } = this;\n    if (registrationStarted && !hasChanges) {\n      this.ctx.patchState({\n        hasChanges: true\n      });\n    }\n  }\n\n  @DataAction()\n  clearHasChanges(): void {\n    this.ctx.patchState({\n      hasChanges: false\n    });\n  }\n\n  private initSkipConfirmationListeners(): void {\n    const updateSkipConfirmation = (skipConfirmation: boolean) => this.patchState({ skipConfirmation });\n\n    this.globalSkipConfirmation$\n      .pipe(filter(s => s))\n      .subscribe(updateSkipConfirmation);\n\n    this.hasChanges$.pipe(\n      withLatestFrom(this.globalSkipConfirmation$),\n      map(([hasChanges, skipConfirmation]) => skipConfirmation || !hasChanges),\n      distinctUntilChanged()\n    ).subscribe(updateSkipConfirmation);\n\n    const beforeUnloadListener = (event: BeforeUnloadEvent) => {\n      event.preventDefault();\n      event.returnValue = 'Changes you made may not be saved.';\n      return event.returnValue;\n    };\n\n    this.skipConfirmation$.subscribe(skipConfirmation => {\n      if (skipConfirmation) {\n        removeEventListener('beforeunload', beforeUnloadListener);\n      } else {\n        addEventListener('beforeunload', beforeUnloadListener);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReferenceDataState.html":{"url":"injectables/ReferenceDataState.html","title":"injectable - ReferenceDataState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReferenceDataState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Data for the main 3d model display\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLatestIri\n                            \n                            \n                                getOrganData\n                            \n                            \n                                getReferenceOrganIri\n                            \n                            \n                                    Private\n                                getSourceDB\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                normalizePlacement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globals: GlobalsService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globals\n                                                  \n                                                        \n                                                                    GlobalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLatestIri\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatestIri(organ?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganData\n                        \n                    \n                \n            \n            \n                \ngetOrganData(iri: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:155\n                        \n                    \n\n\n            \n                \n                        Looks up organ information from an IRI\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                iri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The IRI\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         OrganData | undefined\n\n                        \n                            \n                                A populated organ data if the IRI is valid, otherwise undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganIri\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganIri(organ: string, sex?: \"Male\" | \"Female\" | string, side?: \"Left\" | \"Right\" | string, organInfo?: OrganInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:135\n                        \n                    \n\n\n            \n                \n                        Looks up an IRI for a potential reference organ.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the organ\n\n                                            \n                                        \n                                        \n                                                sex\n                                            \n                                                        \"Male\" | \"Female\" | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    the sex: male, female, or undefined\n\n                                            \n                                        \n                                        \n                                                side\n                                            \n                                                        \"Left\" | \"Right\" | string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    the side: left, right, or undefined\n\n                                            \n                                        \n                                        \n                                                organInfo\n                                            \n                                                            OrganInfo\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                An IRI if there is a reference organ for this state, otherwise undefined\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getSourceDB\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSourceDB()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:87\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        normalizePlacement\n                        \n                    \n                \n            \n            \n                \nnormalizePlacement(place: SpatialPlacementJsonLd)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                place\n                                            \n                                                        SpatialPlacementJsonLd\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialPlacementJsonLd\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReferenceDataStateModel.html":{"url":"interfaces/ReferenceDataStateModel.html","title":"interface - ReferenceDataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReferenceDataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            extractionSets\n                                        \n                                \n                                \n                                        \n                                            organIRILookup\n                                        \n                                \n                                \n                                        \n                                            organSpatialEntities\n                                        \n                                \n                                \n                                        \n                                            placementPatches\n                                        \n                                \n                                \n                                        \n                                            sceneNodeLookup\n                                        \n                                \n                                \n                                        \n                                            simpleSceneNodeLookup\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructures:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        extractionSets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extractionSets:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organIRILookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organIRILookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organSpatialEntities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organSpatialEntities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placementPatches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placementPatches:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sceneNodeLookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sceneNodeLookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        simpleSceneNodeLookup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        simpleSceneNodeLookup:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\nimport { SpatialPlacementJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { ExtractionSet, SpatialEntity } from 'ccf-database';\nimport { ALL_ORGANS, GlobalConfigState, GlobalsService, OrganInfo } from 'ccf-shared';\nimport { EMPTY, from, Observable } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { GlobalConfig } from '../../services/config/config';\nimport { XYZTriplet } from '../model/model.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\nexport function applySpatialPlacement(tx: Matrix4, placement: Immutable): Matrix4 {\n  const p = placement;\n  let factor: number;\n  switch (p.translation_units) {\n    case 'centimeter':\n      factor = 1 / 100;\n      break;\n    case 'millimeter':\n      factor = 1 / 1000;\n      break;\n    case 'meter':\n    default:\n      factor = 1;\n      break;\n  }\n  const T = [p.x_translation, p.y_translation, p.z_translation].map(t => t * factor);\n  const R = [p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number];\n  const S = [p.x_scaling, p.y_scaling, p.z_scaling];\n\n  return tx.translate(T).rotateXYZ(R).scale(S);\n}\n\nexport interface ReferenceDataStateModel {\n  organIRILookup: { [lookup: string]: string };\n  organSpatialEntities: { [iri: string]: SpatialEntity };\n  anatomicalStructures: { [iri: string]: SpatialEntity[] };\n  extractionSets: { [iri: string]: ExtractionSet[] };\n  sceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  simpleSceneNodeLookup: { [iri: string]: SpatialSceneNode };\n  placementPatches: { [iri: string]: SpatialPlacementJsonLd };\n}\n\nexport interface OrganData {\n  organ: OrganInfo;\n  sex?: 'male' | 'female';\n  side?: 'left' | 'right';\n}\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'reference',\n  defaults: {\n    organIRILookup: {},\n    organSpatialEntities: {},\n    anatomicalStructures: {},\n    extractionSets: {},\n    sceneNodeLookup: {},\n    simpleSceneNodeLookup: {},\n    placementPatches: {}\n  }\n})\n@Injectable()\nexport class ReferenceDataState extends NgxsImmutableDataRepository {\n\n  constructor(\n    private readonly globals: GlobalsService,\n    private globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.getSourceDB().subscribe(db => {\n      this.setState(db);\n\n      // In development, make the db globally accessible\n      if (!environment.production) {\n        this.globals.set('db', db);\n      }\n    });\n  }\n\n  private getSourceDB(): Observable {\n    return this.globalConfig.getOption('baseHref').pipe(\n      map(baseHref => (baseHref ?? '') + 'assets/reference-organ-data.json'),\n      switchMap(url => from(fetch(url)).pipe(\n        switchMap(data => data.json()),\n        catchError(() => EMPTY)\n      ))\n    );\n  }\n\n  normalizePlacement(place: SpatialPlacementJsonLd): SpatialPlacementJsonLd {\n    const db = this.snapshot;\n    const patchPlacement = db.placementPatches[place?.target];\n    if (patchPlacement) {\n      const matrix = applySpatialPlacement(new Matrix4(Matrix4.IDENTITY), patchPlacement);\n      const position: XYZTriplet = { x: place.x_translation, y: place.y_translation, z: place.z_translation };\n      const [x, y, z] = matrix.transformAsPoint([ position.x, position.y, position.z ], []);\n      const newPlacement = { ...place, target: patchPlacement.target };\n      newPlacement.x_translation = x;\n      newPlacement.y_translation = y;\n      newPlacement.z_translation = z;\n      return newPlacement;\n    } else {\n      return place;\n    }\n  }\n\n  /**\n   * Looks up an IRI for a potential reference organ.\n   *\n   * @param organ the organ\n   * @param sex the sex: male, female, or undefined\n   * @param side the side: left, right, or undefined\n   * @returns An IRI if there is a reference organ for this state, otherwise undefined\n   */\n  getReferenceOrganIri(organ: string, sex?: 'Male' | 'Female' | string, side?: 'Left' | 'Right' | string, organInfo?: OrganInfo): string | undefined {\n    const db = this.snapshot;\n    if (organ.toUpperCase() !== 'KIDNEY') {\n      side = '';\n    }\n    if (organInfo?.sex) {\n      sex = organInfo.sex;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    const lookup = [organ, sex, side || organInfo?.side].join('|').toUpperCase();\n    const key = Object.keys(db.organIRILookup).find((code) => code.toUpperCase().endsWith(lookup));\n    return this.getLatestIri(key ? db.organIRILookup[key] : undefined);\n  }\n\n  /**\n   * Looks up organ information from an IRI\n   *\n   * @param iri The IRI\n   * @returns A populated organ data if the IRI is valid, otherwise undefined\n   */\n  getOrganData(iri: string): OrganData | undefined {\n    const updatedIri = this.getLatestIri(iri);\n    const state = this.snapshot;\n    const entity = state.organSpatialEntities[updatedIri];\n    if (!entity) {\n      return undefined;\n    }\n\n    const name = entity.label ?? '';\n    const organ = ALL_ORGANS.find(info => name.endsWith(info.organ) && (!entity.side || entity.side.toLowerCase() === info.side));\n    if (!organ) {\n      return undefined;\n    }\n\n    return {\n      organ,\n      sex: entity.sex?.toLowerCase() as 'male' | 'female',\n      side: entity.side?.toLowerCase() as 'left' | 'right'\n    };\n  }\n\n  private getLatestIri(organ?: string): string {\n    if (!organ) {\n      return '';\n    }\n    const organEntry = this.snapshot.placementPatches[organ];\n    return organEntry ? this.getLatestIri(organEntry.target) : organ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationContentComponent.html":{"url":"components/RegistrationContentComponent.html","title":"component - RegistrationContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component containing content of the initial registration modal\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-content\n            \n\n\n\n            \n                styleUrls\n                ./registration-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                currentOrgan\n                            \n                            \n                                currentSex\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                nameValid\n                            \n                            \n                                organList\n                            \n                            \n                                organSelected\n                            \n                            \n                                    Readonly\n                                sexByLabel$\n                            \n                            \n                                sexSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNameValid\n                            \n                            \n                                closeDialog\n                            \n                            \n                                organSelect\n                            \n                            \n                                registerButtonClick\n                            \n                            \n                                setSexFromLabel\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(page: PageState, model: ModelState, dialogRef: MatDialogRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of the registration dialog\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page state\n\n                                                        \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration dialog\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-registration-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkNameValid\n                        \n                    \n                \n            \n            \n                \ncheckNameValid(event: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Checks to see if a first and last name has been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Closes the dialog and sets the correct sex and organ in the model state\nUpdates page state to signal registration has started\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organSelect\n                        \n                    \n                \n            \n            \n                \norganSelect(organ: OrganInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Updates current organ selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                organ\n                                            \n                                                            OrganInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Organ selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonClick\n                        \n                    \n                \n            \n            \n                \nregisterButtonClick(event?: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Handles button click\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                Returns nothing is no organ is selected\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Updates current sex selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"Female\" | \"Male\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Sex selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentOrgan\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganInfo\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:41\n                        \n                    \n\n            \n                \n                    Current organ selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:38\n                        \n                    \n\n            \n                \n                    Current sex selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:56\n                        \n                    \n\n            \n                \n                    Registration dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RUI_ORGANS\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:29\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether  an organ has been selected\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sexByLabel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:24\n                        \n                    \n\n            \n                \n                    Current sex in the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sexSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts:32\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { OrganInfo } from 'ccf-shared';\nimport { map } from 'rxjs/operators';\n\nimport { ModelState, RUI_ORGANS } from '../../../core/store/model/model.state';\nimport { PageState, Person } from '../../../core/store/page/page.state';\n\n\n/**\n * Component containing content of the initial registration modal\n */\n@Component({\n  selector: 'ccf-registration-content',\n  templateUrl: './registration-content.component.html',\n  styleUrls: ['./registration-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RegistrationContentComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-content';\n\n  /** Current sex in the model state */\n  readonly sexByLabel$ = this.model.sex$.pipe(\n    map(sex => sex === 'female' ? 'Female' : 'Male')\n  );\n\n  /** HTML class name */\n  organList = RUI_ORGANS;\n\n  /** HTML class name */\n  sexSelected: boolean;\n\n  /** Whether  an organ has been selected */\n  organSelected: boolean;\n\n  /** Current sex selected */\n  currentSex: string;\n\n  /** Current organ selected */\n  currentOrgan: OrganInfo;\n\n  nameValid: boolean;\n\n  /**\n   * Creates an instance of the registration dialog\n   *\n   * @param page Page state\n   * @param model Model state\n   * @param registration Registration state\n   * @param dialogRef Registration dialog\n   */\n  constructor(\n    readonly page: PageState,\n    readonly model: ModelState,\n    public dialogRef: MatDialogRef,\n    cdr: ChangeDetectorRef\n  ) {\n    page.user$.subscribe(user => {\n      this.checkNameValid(user);\n      cdr.markForCheck();\n    });\n    model.organ$.subscribe(organ => {\n      this.organSelected = organ.src !== '';\n      cdr.markForCheck();\n    });\n    this.sexByLabel$.subscribe(sex => {\n      this.setSexFromLabel(sex);\n      cdr.markForCheck();\n    });\n    dialogRef.disableClose = true;\n    this.page.organOptions$.subscribe((options: OrganInfo[]) => {\n      this.organList = options;\n      cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Updates current sex selected\n   *\n   * @param label Sex selected\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.currentSex = label;\n    this.sexSelected = true;\n  }\n\n  /**\n   * Checks to see if a first and last name has been entered\n   *\n   * @param event Name input event\n   */\n  checkNameValid(event: Pick): void {\n    this.nameValid = event.firstName.length > 0 && event.lastName.length > 0;\n  }\n\n  /**\n   * Updates current organ selected\n   *\n   * @param organ Organ selected\n   */\n  organSelect(organ: OrganInfo): void {\n    this.currentOrgan = organ;\n    this.organSelected = true;\n  }\n\n  /**\n   * Handles button click\n   *\n   * @param [event] The click event\n   * @returns  Returns nothing is no organ is selected\n   */\n  registerButtonClick(event?: MouseEvent): void {\n    if (event) {\n      event.preventDefault();\n    }\n    if (!this.organSelected || !this.nameValid) {\n      return;\n    }\n    this.closeDialog();\n  }\n\n  /**\n   * Closes the dialog and sets the correct sex and organ in the model state\n   * Updates page state to signal registration has started\n   */\n  closeDialog(): void {\n    this.model.setSex(this.currentSex === 'Female' ? 'female' : 'male');\n    this.model.setOrgan(this.currentOrgan);\n    this.dialogRef.close(true);\n    this.page.registrationStarted();\n  }\n}\n\n    \n\n    \n        \n  Start Registration\n  \n  Continue\n\n\n    \n\n    \n                \n                    ./registration-content.component.scss\n                \n                .modal {\n  padding: 2rem;\n  border-radius: 0.5rem;\n  max-width: 47rem;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n\n  .title {\n    font-size: 1.25rem;\n    font-weight: 600;\n  }\n\n  .organ-sliders {\n    .slider-label {\n      font-weight: 600;\n    }\n\n    display: flex;\n    height: 3rem;\n    align-items: center;\n  }\n\n  .selector-label {\n    font-weight: 600;\n    height: 3rem;\n    line-height: 3rem;\n  }\n\n  .selector-container {\n    margin: 0 auto;\n  }\n\n  .registration-button {\n    transition: 0.6s;\n    display: flex;\n    width: 10rem;\n    height: 2rem;\n    padding: 0.25rem 1rem;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0.125rem;\n    box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.16);\n    cursor: pointer;\n\n    &.disabled {\n      pointer-events: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Start Registration    Continue'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationContentModule.html":{"url":"modules/RegistrationContentModule.html","title":"module - RegistrationContentModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationContentModule\n\n\n\ncluster_RegistrationContentModule_declarations\n\n\n\ncluster_RegistrationContentModule_imports\n\n\n\ncluster_RegistrationContentModule_exports\n\n\n\n\nRegistrationContentComponent\n\nRegistrationContentComponent\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationContentModule -->\n\nRegistrationContentComponent->RegistrationContentModule\n\n\n\n\n\nRegistrationContentComponent \n\nRegistrationContentComponent \n\nRegistrationContentComponent  -->\n\nRegistrationContentModule->RegistrationContentComponent \n\n\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRegistrationContentModule -->\n\nRegistrationMetadataModule->RegistrationContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegistrationMetadataModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RegistrationMetadataModule } from '../../../shared/components/registration-metadata/registration-metadata.module';\nimport { RegistrationContentComponent } from './registration-content.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\n@NgModule({\n  declarations: [RegistrationContentComponent],\n  imports: [CommonModule, MatTooltipModule, RegistrationMetadataModule],\n  exports: [RegistrationContentComponent]\n})\nexport class RegistrationContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationMetadataComponent.html":{"url":"components/RegistrationMetadataComponent.html","title":"component - RegistrationMetadataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationMetadataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts\n\n\n\n    \n        Description\n    \n    \n        Right side registration menu\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-metadata\n            \n\n\n\n            \n                styleUrls\n                ./registration-metadata.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-metadata.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nameValid\n                            \n                            \n                                uploadText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkNameValid\n                            \n                            \n                                setSexFromLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, registration: RegistrationState, page: PageState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration metadata component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration state\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Page state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkNameValid\n                        \n                    \n                \n            \n            \n                \ncheckNameValid(event: Pick)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Checks to see if a first and last name has been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            Pick\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name input event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSexFromLabel\n                        \n                    \n                \n            \n            \n                \nsetSexFromLabel(label: \"Female\" | \"Male\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Updates current sex selected\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        \"Female\" | \"Male\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Sex selected\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nameValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:21\n                        \n                    \n\n            \n                \n                    Name valid of registration metadata component\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts:26\n                        \n                    \n\n            \n                \n                    Text to inform user if a registration file has been uploaded\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { ModelState } from '../../../core/store/model/model.state';\nimport { PageState, Person } from '../../../core/store/page/page.state';\nimport { RegistrationState } from '../../../core/store/registration/registration.state';\n\n/**\n * Right side registration menu\n */\n@Component({\n  selector: 'ccf-registration-metadata',\n  templateUrl: './registration-metadata.component.html',\n  styleUrls: ['./registration-metadata.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n\n})\nexport class RegistrationMetadataComponent {\n  /**\n   * Name valid of registration metadata component\n   */\n  nameValid: boolean;\n\n  /**\n   * Text to inform user if a registration file has been uploaded\n   */\n  uploadText: string;\n\n  /**\n   * Creates an instance of registration metadata component.\n   * @param model Model state\n   * @param registration Registration state\n   * @param page Page state\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n    readonly page: PageState,\n  ) {\n    page.user$.subscribe(user => {\n      this.checkNameValid(user);\n    });\n    registration.state$.subscribe(reg => {\n      this.uploadText = reg.initialRegistration ? 'File(s) uploaded' : 'No file(s) uploaded';\n    });\n  }\n\n  /**\n   * Checks to see if a first and last name has been entered\n   *\n   * @param event Name input event\n   */\n  checkNameValid(event: Pick): void {\n    this.nameValid = event.firstName.length > 0 && event.lastName.length > 0;\n  }\n\n  /**\n   * Updates current sex selected\n   *\n   * @param label Sex selected\n   */\n  setSexFromLabel(label: 'Female' | 'Male'): void {\n    this.model.setSex(label.toLowerCase() as 'male' | 'female');\n  }\n}\n\n    \n\n    \n        \n  Author Data\n\n  \n  \n\n  \n    ORCID identifier (optional)\n    \n  \n\n\n\n  Donor Data\n\n  \n    Donor Sex: \n    \n      Male\n      Female\n    \n  \n\n  \n    Select an organ: \n    \n      Organs\n      \n        \n          {{organ.name}}\n        \n      \n    \n  \n\n  \n    Upload previous registration data (optional):\n\n    \n\n    {{uploadText}}\n\n  \n\n\n    \n\n    \n                \n                    ./registration-metadata.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n\n  .section-title {\n    font-weight: 400;\n    line-height: 1.5rem;\n    margin: 0;\n    padding-bottom: 1.5rem;\n  }\n\n  .label {\n    font-size: 1rem;\n    font-weight: 700;\n    line-height: 1.5rem;\n  }\n\n  ::ng-deep .mat-mdc-form-field-infix {\n    padding-bottom: 0 !important;\n    min-height: inherit;\n  }\n\n  ::ng-deep .mdc-text-field {\n    padding: 0;\n    padding-bottom: .3rem !important;\n  }\n\n  .author-section {\n    display: flex;\n    flex-direction: column;\n\n    .orcid-input {\n      width: 100%;\n      font-size: 1rem;\n    }\n  }\n\n  .donor-section {\n    display: flex;\n    flex-direction: column;\n\n    .sex-toggle {\n      display: flex;\n      align-items: center;\n      padding-bottom: 1.5rem;\n\n      .label {\n        padding-right: 1rem;\n      }\n\n      mat-radio-group {\n        display: flex;\n        gap: 3rem;\n      }\n    }\n\n    .organ-selector {\n      padding-bottom: 1.5rem;\n\n      ::ng-deep .mat-mdc-select-value {\n        font-size: 1rem;\n      }\n    }\n\n    .upload-registration {\n      display: flex;\n      flex-direction: column;\n      gap: 1rem;\n\n      ccf-json-file-reader {\n        ::ng-deep button {\n          width: 10rem;\n          height: 2rem;\n          padding: 0.25rem 1rem;\n          border-radius: 0.125rem;\n        }\n      }\n    }\n  }\n\n  ::ng-deep .mdc-line-ripple::before,\n  .mdc-line-ripple::after {\n    border-bottom-width: 0.125rem !important;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Author Data          ORCID identifier (optional)        Donor Data      Donor Sex:           Male      Female            Select an organ:           Organs                        {{organ.name}}                          Upload previous registration data (optional):        {{uploadText}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationMetadataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationMetadataModule.html":{"url":"modules/RegistrationMetadataModule.html","title":"module - RegistrationMetadataModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationMetadataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationMetadataModule\n\n\n\ncluster_RegistrationMetadataModule_exports\n\n\n\ncluster_RegistrationMetadataModule_declarations\n\n\n\ncluster_RegistrationMetadataModule_imports\n\n\n\n\nRegistrationMetadataComponent\n\nRegistrationMetadataComponent\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule -->\n\nRegistrationMetadataComponent->RegistrationMetadataModule\n\n\n\n\n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent  -->\n\nRegistrationMetadataModule->RegistrationMetadataComponent \n\n\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nRegistrationMetadataModule -->\n\nJsonFileReaderModule->RegistrationMetadataModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nRegistrationMetadataModule -->\n\nNameInputModule->RegistrationMetadataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationMetadataComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JsonFileReaderModule\n                        \n                        \n                            NameInputModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationMetadataComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { RegistrationMetadataComponent } from './registration-metadata.component';\nimport { NameInputModule } from '../name-input/name-input.module';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { JsonFileReaderModule } from '../json-file-reader/json-file-reader.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTooltipModule,\n    NameInputModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTooltipModule,\n    JsonFileReaderModule\n  ],\n  declarations: [RegistrationMetadataComponent],\n  exports: [RegistrationMetadataComponent]\n})\nexport class RegistrationMetadataModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationModalComponent.html":{"url":"components/RegistrationModalComponent.html","title":"component - RegistrationModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Registration modal that appears on startup\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-registration-modal\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./registration-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, page: PageState, model: ModelState, referenceData: ReferenceDataState, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of registration modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Dialog for the modal\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        referenceData\n                                                  \n                                                        \n                                                                        ReferenceDataState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-registration-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Opens the dialog on startup (but not if cancel registration callback is set)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Opens dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-registration-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:24\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:34\n                        \n                    \n\n            \n                \n                    Dialog for the modal\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostBinding, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { GlobalConfig } from '../../../core/services/config/config';\nimport { ModelState } from '../../../core/store/model/model.state';\nimport { PageState } from '../../../core/store/page/page.state';\nimport { ReferenceDataState } from '../../../core/store/reference-data/reference-data.state';\nimport { RegistrationContentComponent } from '../registration-content/registration-content.component';\n\n\n/**\n * Registration modal that appears on startup\n */\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\n@Component({\n  selector: 'ccf-registration-modal',\n  templateUrl: './registration-modal.component.html'\n})\nexport class RegistrationModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-registration-modal';\n\n  dialogOpen = false;\n\n  /**\n   * Creates an instance of registration modal component.\n   *\n   * @param dialog Dialog for the modal\n   */\n  constructor(\n    public dialog: MatDialog,\n    private readonly page: PageState,\n    private readonly model: ModelState,\n    private readonly referenceData: ReferenceDataState,\n    private readonly globalConfig: GlobalConfigState\n\n  ) {}\n\n  /**\n   * Opens the dialog on startup (but not if cancel registration callback is set)\n   */\n  ngOnInit(): void {\n    combineLatest([this.page.state$, this.model.state$, this.referenceData.state$, this.globalConfig.state$]).pipe(\n      tap(([page, model, data, global]) => {\n        if (this.dialogOpen) {\n          return;\n        }\n        if (global.editRegistration) {\n          return;\n        }\n        if (Object.keys(data.organIRILookup).length === 0) {\n          return;\n        }\n        if (page.user.firstName !== '' && page.user.lastName !== '' && model.organ.src !== '') {\n          return;\n        }\n        this.dialogOpen = true;\n        this.openDialog();\n      })\n    ).subscribe();\n  }\n\n  /**\n   * Opens dialog\n   */\n  openDialog(): void {\n    this.dialog.open(RegistrationContentComponent, {\n      autoFocus: false,\n    });\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegistrationModalModule.html":{"url":"modules/RegistrationModalModule.html","title":"module - RegistrationModalModule","body":"\n                   \n\n\n\n\n    Modules\n    RegistrationModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegistrationModalModule\n\n\n\ncluster_RegistrationModalModule_imports\n\n\n\ncluster_RegistrationModalModule_declarations\n\n\n\ncluster_RegistrationModalModule_exports\n\n\n\n\nRegistrationModalComponent\n\nRegistrationModalComponent\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nRegistrationModalModule -->\n\nRegistrationModalComponent->RegistrationModalModule\n\n\n\n\n\nRegistrationModalComponent \n\nRegistrationModalComponent \n\nRegistrationModalComponent  -->\n\nRegistrationModalModule->RegistrationModalComponent \n\n\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationModalModule -->\n\nRegistrationContentModule->RegistrationModalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegistrationModalComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegistrationContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegistrationModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegistrationModalComponent } from './registration-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RegistrationContentModule } from '../registration-content/registration-content.module';\n\n@NgModule({\n  declarations: [RegistrationModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, RegistrationContentModule],\n  exports: [RegistrationModalComponent]\n})\nexport class RegistrationModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegistrationStateModel.html":{"url":"interfaces/RegistrationStateModel.html","title":"interface - RegistrationStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegistrationStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Registration state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayErrors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            initialRegistration\n                                        \n                                \n                                \n                                        \n                                            registrations\n                                        \n                                \n                                \n                                        \n                                            useRegistrationCallback\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayErrors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not to display user registration errors\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialRegistration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialRegistration:     SpatialEntityJsonLd\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialEntityJsonLd\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Registration provided by user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrations:     Record[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Previous registrations\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useRegistrationCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useRegistrationCallback:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to use the registration callback function\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { insertItem, patch } from '@ngxs/store/operators';\nimport { SpatialEntityJsonLd } from 'ccf-body-ui';\nimport { GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { saveAs } from 'file-saver';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, startWith, switchMap, take, tap } from 'rxjs/operators';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { Tag } from '../../models/anatomical-structure-tag';\nimport { MetaData } from '../../models/meta-data';\nimport { GlobalConfig } from '../../services/config/config';\nimport { AnatomicalStructureTagState } from '../anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState, ModelStateModel, RUI_ORGANS, XYZTriplet } from '../model/model.state';\nimport { PageState, PageStateModel } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/**\n * Registration state model\n */\nexport interface RegistrationStateModel {\n  /** Whether to use the registration callback function */\n  useRegistrationCallback: boolean;\n  /** Whether or not to display user registration errors */\n  displayErrors: boolean;\n  /** Previous registrations */\n  registrations: Record[];\n  /** Registration provided by user */\n  initialRegistration?: SpatialEntityJsonLd;\n}\n\n\n/**\n * Data for model registrations\n */\n@StateRepository()\n@State({\n  name: 'registration',\n  defaults: {\n    useRegistrationCallback: false,\n    displayErrors: false,\n    registrations: []\n  }\n})\n@Injectable()\nexport class RegistrationState extends NgxsImmutableDataRepository {\n  readonly displayErrors$ = this.state$.pipe(map(x => x?.displayErrors));\n\n  /** Observable of registration metadata */\n  @Computed()\n  get metadata$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildMetadata(page, model, tags))\n    );\n  }\n\n  /** Observable of registration data in jsonld format */\n  @Computed()\n  get jsonld$(): Observable> {\n    return combineLatest([this.page.state$, this.model.state$, this.tags.tags$]).pipe(\n      map(([page, model, tags]) => this.buildJsonLd(page, model, tags))\n    );\n  }\n\n  @Computed()\n  get valid$(): Observable {\n    return combineLatest([this.page.state$, this.model.state$]).pipe(\n      map(() => this.isValid)\n    );\n  }\n\n  /**\n   * Observable of previous registrations\n   */\n  @Computed()\n  get previousRegistrations$(): Observable[]> {\n    const { globalConfig, state$ } = this;\n    const regs = state$.pipe(map(x => x?.registrations));\n    const fetched = globalConfig.getOption('fetchPreviousRegistrations').pipe(\n      switchMap(fetch => fetch?.() ?? [[]]),\n      startWith([])\n    );\n\n    return combineLatest([regs, fetched]).pipe(\n      map(([local, external]) => [...local, ...external])\n    );\n  }\n\n  /** Current uuid identifier used when registering */\n  @Computed()\n  private get currentIdentifier(): string {\n    return uuidV4();\n  }\n\n  /** Time of last modification to registration data */\n  @Computed()\n  private get currentDate(): string {\n    return new Date().toISOString().split('T')[0];\n  }\n\n  /** Reference to the page state */\n  private page: PageState;\n\n  /** Reference to the model state */\n  private model: ModelState;\n\n  /** Reference to the AS Tag state */\n  private tags: AnatomicalStructureTagState;\n\n  /** Reference to the reference data state */\n  private refData: ReferenceDataState;\n\n  /**\n   * Creates an instance of registration state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   * @param globalConfig The global configuration\n   */\n  constructor(\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.page = this.injector.get(PageState);\n    this.model = this.injector.get(ModelState);\n    this.tags = this.injector.get(AnatomicalStructureTagState);\n    this.refData = this.injector.get(ReferenceDataState);\n\n    this.refData.state$.subscribe(() => {\n      this.globalConfig.config$.pipe(\n        take(1),\n        tap(({ useDownload, register, organOptions }) => {\n          this.ctx.patchState({\n            useRegistrationCallback: !!(!useDownload && register),\n          });\n          this.setOrganSelection(organOptions as string[]);\n        })\n      ).subscribe();\n\n      this.globalConfig.getOption('editRegistration').pipe(\n        filterNulls(),\n        tap(reg => {\n          this.editRegistration(reg as SpatialEntityJsonLd);\n        })\n      ).subscribe();\n    });\n  }\n\n  async editRegistration(reg: SpatialEntityJsonLd): Promise {\n    this.ctx.patchState({ initialRegistration: reg });\n    const place = this.refData.normalizePlacement(\n      Array.isArray(reg.placement) ? reg.placement[0] : reg.placement\n    );\n    const data = this.refData.getOrganData(place.target);\n\n    this.page.setUserName({\n      firstName: reg.creator_first_name,\n      middleName: reg.creator_middle_name,\n      lastName: reg.creator_last_name\n    });\n\n    if (data) {\n      this.model.setOrgan(data.organ);\n      if (data.sex) {\n        this.model.setSex(data.sex);\n      }\n      if (data.side) {\n        this.model.setSide(data.side);\n      }\n    }\n\n    this.model.setBlockSize({ x: reg.x_dimension, y: reg.y_dimension, z: reg.z_dimension });\n    this.model.setRotation({ x: place.x_rotation, y: place.y_rotation, z: place.z_rotation });\n    this.model.setSlicesConfig({ thickness: reg.slice_thickness || NaN, numSlices: reg.slice_count || NaN });\n\n    this.model.setPosition({ x: place.x_translation, y: place.y_translation, z: place.z_translation });\n    const iris = new Set(reg.ccf_annotations);\n    this.tags.addTags(\n      this.model.snapshot.anatomicalStructures\n        .filter(item => iris.has(item.id as string))\n        .map((item) => ({ id: item.id, label: item.name, type: 'added' }))\n    );\n\n    this.page.registrationStarted();\n  }\n\n  /**\n   * Sets whether to use the registration callback function or download.\n   *\n   * @param use True to use the callback, false to download\n   */\n  @DataAction()\n  setUseRegistrationCallback(use: boolean): void {\n    this.ctx.patchState({ useRegistrationCallback: use });\n  }\n\n  /**\n   * Set's whether or not we should display the user's registration errors\n   *\n   * @param displayErrors the value to set it to\n   */\n  @DataAction()\n  setDisplayErrors(displayErrors: boolean): void {\n    this.ctx.patchState({ displayErrors });\n  }\n\n  /**\n   * Adds an entry to the previous registrations\n   *\n   * @param registration The new entry\n   */\n  @DataAction()\n  addRegistration(registration: Record): void {\n    this.ctx.setState(patch({\n      registrations: insertItem(registration as Immutable>)\n    }));\n  }\n\n  /**\n   * Sets organ options in the RUI\n   * @param ids list of organ ids\n   */\n  @DataAction()\n  setOrganSelection(ids: string[] = []): void {\n    this.page.patchState({ organOptions: this.organListOptions(ids) });\n  }\n\n  isDataValid(page: Immutable, model: Immutable): boolean {\n    const requiredValues = [\n      page.user.firstName,\n      page.user.lastName,\n      model.organ.src,\n      model.organ.name,\n      model.organ.organ\n    ];\n\n    return requiredValues.every(value => !!value);\n  }\n\n  @Computed()\n  get isValid(): boolean {\n    return this.isDataValid(this.page.snapshot, this.model.snapshot);\n  }\n\n  /**\n   * Registers or downloads json data.\n   *\n   * @param [useCallback] Explicit override selecting the register/download action\n   */\n  register(useCallback?: boolean): void {\n    if (!this.isValid) {\n      return;\n    }\n\n    const {\n      globalConfig: { snapshot: { register: registrationCallback } },\n      page, model, snapshot\n    } = this;\n    const jsonObj = this.buildJsonLd(page.snapshot, model.snapshot, this.tags.latestTags);\n    const json = JSON.stringify(jsonObj, undefined, 2);\n\n    if (useCallback ?? (useCallback === undefined && snapshot.useRegistrationCallback)) {\n      registrationCallback?.(json);\n    } else {\n      const data = new Blob([json], {\n        type: 'application/json',\n        endings: 'native'\n      });\n\n      saveAs(data, 'registration-data.json');\n    }\n\n    this.addRegistration(jsonObj);\n    this.setDisplayErrors(false);\n    this.page.clearHasChanges();\n  }\n\n  /**\n   * Sets the state back to the initial registration\n   */\n  setToInitialRegistration() {\n    this.editRegistration(this.getState().initialRegistration as SpatialEntityJsonLd);\n  }\n\n  /**\n   * Builds a metadata array from the specified data.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns metadata An array of label-value objects\n   */\n  private buildMetadata(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[]\n  ): MetaData {\n    const data: MetaData = [];\n\n    if (!page.registrationCallbackSet) {\n      data.push(\n        { label: 'First Name', value: page.user.firstName },\n        { label: 'Last Name', value: page.user.lastName }\n      );\n    }\n\n    data.push(\n      { label: 'Reference Organ Name', value: model.organ.name },\n      { label: 'Tissue Block Dimensions (mm)', value: this.xyzTripletToString(model.blockSize) },\n      { label: 'Tissue Block Position (mm)', value: this.xyzTripletToString(model.position) },\n      { label: 'Tissue Block Rotation', value: this.xyzTripletToString(model.rotation) },\n      { label: 'Anatomical Structure Tags', value: tags.map(t => t.label).join(', ') },\n      { label: 'Time Stamp', value: this.currentDate },\n      { label: 'Alignment ID', value: this.currentIdentifier }\n    );\n\n    return data;\n  }\n\n  /**\n   * Converts the registration data into jsonld format.\n   *\n   * @param page The current page state data\n   * @param model The current model state data\n   * @returns A jsonld object\n   */\n  private buildJsonLd(\n    page: Immutable,\n    model: Immutable,\n    tags: Tag[]\n  ): Record {\n    return {\n      '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n      '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}`,\n      '@type': 'SpatialEntity',\n      label: model.label || undefined,\n      creator: `${page.user.firstName} ${page.user.middleName ? page.user.middleName + ' ' : ''}${ page.user.lastName}`,\n      creator_first_name: page.user.firstName,\n      creator_last_name: page.user.lastName,\n      creator_middle_name: page.user.middleName,\n      creator_orcid: page.user.orcidId,\n      creation_date: this.currentDate,\n      ccf_annotations: tags.map(tag => tag.id),\n      slice_thickness: model.slicesConfig?.thickness || undefined,\n      slice_count: model.slicesConfig?.numSlices || undefined,\n\n      x_dimension: +model.blockSize.x.toFixed(3),\n      y_dimension: +model.blockSize.y.toFixed(3),\n      z_dimension: +model.blockSize.z.toFixed(3),\n      dimension_units: 'millimeter',\n\n      placement: {\n        '@context': 'https://hubmapconsortium.github.io/ccf-ontology/ccf-context.jsonld',\n        '@id': `http://purl.org/ccf/1.5/${this.currentIdentifier}_placement`,\n        '@type': 'SpatialPlacement',\n        target: model.organIri as string,\n        placement_date: this.currentDate,\n\n        x_scaling: 1, y_scaling: 1, z_scaling: 1, scaling_units: 'ratio',\n\n        x_rotation: +model.rotation.x.toFixed(3),\n        y_rotation: +model.rotation.y.toFixed(3),\n        z_rotation: +model.rotation.z.toFixed(3),\n        rotation_order: 'XYZ',\n        rotation_units: 'degree',\n\n        x_translation: +model.position.x.toFixed(3),\n        y_translation: +model.position.y.toFixed(3),\n        z_translation: +model.position.z.toFixed(3),\n        translation_units: 'millimeter'\n      }\n    };\n  }\n\n  /**\n   * Format a XYZTriplet as a string.\n   *\n   * @param xyz The triplet values\n   * @returns The string representation\n   */\n  private xyzTripletToString(xyz: XYZTriplet): string {\n    return `${Math.round(xyz.x)}, ${Math.round(xyz.y)}, ${Math.round(xyz.z)}`;\n  }\n\n  /**\n   * Provides list of organ objects given an array of organ ids\n   * @param organOptions array of organ ids\n   * @returns list of organ info\n   */\n  private organListOptions(organOptions?: string[]): OrganInfo[] {\n    if (organOptions && organOptions.length > 0) {\n      return RUI_ORGANS.filter(organ => {\n        if (!organ.id) {\n          return false;\n        } else {\n          return organOptions.includes(organ.id);\n        }\n      });\n    } else {\n      return RUI_ORGANS;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewButtonComponent.html":{"url":"components/ReviewButtonComponent.html","title":"component - ReviewButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to launch the ReviewModal component.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-review-button\n            \n\n\n\n            \n                styleUrls\n                ./review-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchReviewModal\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                registerButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrors\n                            \n                            \n                                metaData\n                            \n                            \n                                registrationCallbackSet\n                            \n                            \n                                registrationIsValid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                enterErrorMode\n                            \n                            \n                                registerData\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    disabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:55\n                            \n                        \n\n                \n                    \n                            Creates an instance of review button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayErrors\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:36\n                            \n                        \n                \n                    \n                        Whether or not the app is currently displaying errors\nDecides how the button should be styled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        metaData\n                    \n                \n                \n                    \n                        Type :         MetaData\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:30\n                            \n                        \n                \n                    \n                        Input object of information to display in the modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registrationCallbackSet\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:25\n                            \n                        \n                \n                    \n                        Input to set whether the component should be in register (true) or download (false) mode\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registrationIsValid\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:43\n                            \n                        \n                \n                    \n                        Whether or not all the necessary data has been inputted from\nthe user.  Decides whether or not to let the user open the\nregistration / download modal\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        enterErrorMode\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:55\n                            \n                        \n                \n                    \n                        Turns on the 'error mode' for the application.\nUsed to begin showing the user what they need to\ndo to be able to register / download.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        registerData\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:48\n                            \n                        \n                \n                    \n                        Output that emits when the modal's register button was clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-review-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchReviewModal\n                        \n                    \n                \n            \n            \n                \nlaunchReviewModal()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Opens the info dialogue with the project details\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Updates the value of registrationIsValid based on the\nmeta data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerButtonClick\n                        \n                    \n                \n            \n            \n                \nregisterButtonClick(event?: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Handles the click action for the register button.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n                \n                    \n                        getdisabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts:79\n                                \n                            \n                    \n                        \n                                Decides whether or not the download / register button should\nbe disabled.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnChanges, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { MetaData } from '../../../core/models/meta-data';\nimport { ReviewModalComponent } from '../review-modal/review-modal.component';\n\n\n/**\n * Component to launch the ReviewModal component.\n */\n@Component({\n  selector: 'ccf-review-button',\n  templateUrl: './review-button.component.html',\n  styleUrls: ['./review-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewButtonComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-button';\n\n  /**\n   * Input to set whether the component should be in register (true) or download (false) mode\n   */\n  @Input() registrationCallbackSet = true;\n\n  /**\n   * Input object of information to display in the modal\n   */\n  @Input() metaData: MetaData = [];\n\n  /**\n   * Whether or not the app is currently displaying errors\n   * Decides how the button should be styled\n   */\n  @Input() displayErrors = true;\n\n  /**\n   * Whether or not all the necessary data has been inputted from\n   * the user.  Decides whether or not to let the user open the\n   * registration / download modal\n   */\n  @Input() registrationIsValid = false;\n\n  /**\n   * Output that emits when the modal's register button was clicked\n   */\n  @Output() readonly registerData = new EventEmitter();\n\n  /**\n   * Turns on the 'error mode' for the application.\n   * Used to begin showing the user what they need to\n   * do to be able to register / download.\n   */\n  @Output() readonly enterErrorMode = new EventEmitter();\n\n  /**\n   * Creates an instance of review button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param ga Analytics service\n   */\n  constructor(private readonly dialog: MatDialog, private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates the value of registrationIsValid based on the\n   * meta data.\n   */\n  ngOnChanges(): void {\n    this.registrationIsValid =\n      this.metaData.length >= 3 &&\n      this.metaData.slice(0, 3).every(entry => entry.value);\n  }\n\n  /**\n   * Decides whether or not the download / register button should\n   * be disabled.\n   */\n  get disabled(): boolean {\n    return !this.registrationIsValid;\n  }\n\n  /**\n   * Handles the click action for the register button.\n   */\n  registerButtonClick(event?: MouseEvent): false {\n    if (event) {\n      event.preventDefault();\n    }\n    this.enterErrorMode.emit();\n    if (this.registrationIsValid) {\n      this.ga.event('review_start', 'review_button');\n      this.launchReviewModal();\n    }\n    return false;\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchReviewModal(): void {\n    const dialogRef = this.dialog.open(ReviewModalComponent, {\n      panelClass: 'modal-animated',\n      width: '60rem',\n      data: {\n        registrationCallbackSet: this.registrationCallbackSet,\n        metaData: this.metaData\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(\n      data => {\n        if (data) {\n          this.ga.event('register', 'review_button');\n          this.registerData.emit();\n        }\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    {{ registrationCallbackSet ? 'Review and Register' : 'Review and Download' }}\n\n\n    \n\n    \n                \n                    ./review-button.component.scss\n                \n                .review-button {\n    width: 100%;\n    height: 2.25rem;\n    transition: .6s;\n    font-weight: 500;\n\n    &.disabled {\n        cursor: not-allowed;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ registrationCallbackSet ? \\'Review and Register\\' : \\'Review and Download\\' }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewButtonModule.html":{"url":"modules/ReviewButtonModule.html","title":"module - ReviewButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewButtonModule\n\n\n\ncluster_ReviewButtonModule_imports\n\n\n\ncluster_ReviewButtonModule_declarations\n\n\n\ncluster_ReviewButtonModule_exports\n\n\n\n\nReviewButtonComponent\n\nReviewButtonComponent\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nReviewButtonModule -->\n\nReviewButtonComponent->ReviewButtonModule\n\n\n\n\n\nReviewButtonComponent \n\nReviewButtonComponent \n\nReviewButtonComponent  -->\n\nReviewButtonModule->ReviewButtonComponent \n\n\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewButtonModule -->\n\nReviewModalModule->ReviewButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-button/review-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReviewButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ReviewModalModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewButtonComponent } from './review-button.component';\nimport { ReviewModalModule } from '../review-modal/review-modal.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [ReviewButtonComponent],\n  imports: [\n    CommonModule,\n    ReviewModalModule,\n    MatButtonModule,\n    MatTooltipModule\n  ],\n  exports: [ReviewButtonComponent]\n})\nexport class ReviewButtonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReviewModalComponent.html":{"url":"components/ReviewModalComponent.html","title":"component - ReviewModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReviewModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Modal for reviewing the registration\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-review-modal\n            \n\n\n\n            \n                styleUrls\n                ./review-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./review-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                metaData\n                            \n                            \n                                registrationCallbackSet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ReviewModalData)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of the review modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ReviewModalData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-review-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Closes info dialog component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-review-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewModalData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:46\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:45\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        metaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetaData\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:36\n                        \n                    \n\n            \n                \n                    The object containing all of the review information for displaying inside the modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationCallbackSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts:31\n                        \n                    \n\n            \n                \n                    Whether or not the cancel registration callback is set\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, HostBinding, ChangeDetectionStrategy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(()=>{\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      Registration Review\n\n      \n        \n          \n            {{ data.label }}\n            {{ data.value }}\n          \n        \n      \n\n      \n        {{ registrationCallbackSet ? 'REGISTER' : 'DOWNLOAD REGISTRATION DATA' }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./review-modal.component.scss\n                \n                :host {\n  .ccf-about.wrapper {\n    .container {\n      .close {\n        .close-icon {\n          float: right;\n          margin-top: 1rem;\n          margin-right: 1rem;\n          cursor: pointer;\n        }\n      }\n\n      .content {\n        padding: 2rem;\n        background-color: white;\n\n        .title {\n          text-align: center;\n          font-size: 1.5rem;\n          margin-bottom: 0;\n          font-weight: 500;\n        }\n\n        .mat-typography {\n          justify-content: space-around;\n          display: flex;\n          font-weight: 500;\n          font-size: 1rem;\n\n          .display-fields {\n            margin-top: 2rem;\n            margin-bottom: 2rem;\n            width: 100%;\n\n            .field {\n              display: flex;\n\n              .label {\n                width: 50%;\n                text-align: right;\n                padding-right: 1rem;\n              }\n\n              .data {\n                width: 50%;\n                text-align: left;\n                padding-left: 1rem;\n              }\n            }\n          }\n        }\n      }\n\n      .footer {\n        padding-top: 1.5rem;\n        display: flex;\n        justify-content: space-around;\n\n        .download-button {\n          padding: 0 1rem;\n          transition: 0.6s;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              Registration Review                                    {{ data.label }}            {{ data.value }}                                      {{ registrationCallbackSet ? \\'REGISTER\\' : \\'DOWNLOAD REGISTRATION DATA\\' }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReviewModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReviewModalData.html":{"url":"interfaces/ReviewModalData.html","title":"interface - ReviewModalData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReviewModalData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n        \n\n\n            \n                Description\n            \n            \n                The expected format of the review modal's data input.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            metaData\n                                        \n                                \n                                \n                                        \n                                            registrationCallbackSet\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        metaData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metaData:         MetaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MetaData\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The object containing all of the review information for displaying inside the modal\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationCallbackSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationCallbackSet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether or not the cancel registration callback is set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, HostBinding, ChangeDetectionStrategy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { MetaData } from '../../../core/models/meta-data';\n\n/**\n * The expected format of the review modal's data input.\n */\ninterface ReviewModalData {\n  /** The object containing all of the review information for displaying inside the modal */\n  metaData: MetaData;\n\n  /** Whether or not the cancel registration callback is set */\n  registrationCallbackSet: boolean;\n}\n\n/**\n * Modal for reviewing the registration\n */\n@Component({\n  selector: 'ccf-review-modal',\n  templateUrl: './review-modal.component.html',\n  styleUrls: ['./review-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ReviewModalComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-review-modal';\n  /**\n   * Whether or not the cancel registration callback is set\n   */\n  registrationCallbackSet: boolean;\n\n  /**\n   * The object containing all of the review information for displaying inside the modal\n   */\n  metaData: MetaData;\n\n  /**\n   * Creates an instance of the review modal component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ReviewModalData\n  ) {\n    this.metaData = data.metaData;\n    this.registrationCallbackSet = data.registrationCallbackSet;\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(()=>{\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewModalModule.html":{"url":"modules/ReviewModalModule.html","title":"module - ReviewModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReviewModalModule\n\n\n\ncluster_ReviewModalModule_declarations\n\n\n\ncluster_ReviewModalModule_exports\n\n\n\n\nReviewModalComponent\n\nReviewModalComponent\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewModalModule -->\n\nReviewModalComponent->ReviewModalModule\n\n\n\n\n\nReviewModalComponent \n\nReviewModalComponent \n\nReviewModalComponent  -->\n\nReviewModalModule->ReviewModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/review/review-modal/review-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ReviewModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReviewModalComponent } from './review-modal.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [ReviewModalComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatButtonModule],\n  exports: [ReviewModalComponent]\n})\nexport class ReviewModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RightSidebarComponent.html":{"url":"components/RightSidebarComponent.html","title":"component - RightSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RightSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n\n\n\n    \n        Description\n    \n    \n        The right sidebar\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-right-sidebar\n            \n\n\n\n            \n                styleUrls\n                ./right-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./right-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalClosed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(model: ModelState, registration: RegistrationState, page: PageState, astags: AnatomicalStructureTagState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:23\n                            \n                        \n\n                \n                    \n                            Creates an instance of right sidebar component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        ModelState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Model state service\n\n                                                        \n                                                \n                                                \n                                                        registration\n                                                  \n                                                        \n                                                                        RegistrationState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Registration state service\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        PageState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The page state\n\n                                                        \n                                                \n                                                \n                                                        astags\n                                                  \n                                                        \n                                                                        AnatomicalStructureTagState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The anatomical structure tags state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalClosed\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:23\n                            \n                        \n                \n                    \n                        Whether or not the initial registration modal has been closed\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-right-sidebar\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-right-sidebar'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-right-sidebar'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts:20\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\nimport { AnatomicalStructureTagState } from '../../core/store/anatomical-structure-tags/anatomical-structure-tags.state';\nimport { ModelState } from '../../core/store/model/model.state';\nimport { PageState } from '../../core/store/page/page.state';\nimport { RegistrationState } from '../../core/store/registration/registration.state';\n\n\n/**\n * The right sidebar\n */\n@Component({\n  selector: 'ccf-right-sidebar',\n  templateUrl: './right-sidebar.component.html',\n  styleUrls: ['./right-sidebar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RightSidebarComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-right-sidebar';\n\n  /** Whether or not the initial registration modal has been closed */\n  @Input() modalClosed = false;\n\n  /**\n   * Creates an instance of right sidebar component.\n   *\n   * @param model Model state service\n   * @param registration Registration state service\n   * @param page The page state\n   * @param astags The anatomical structure tags state\n   */\n  constructor(\n    readonly model: ModelState,\n    readonly registration: RegistrationState,\n    readonly page: PageState,\n    readonly astags: AnatomicalStructureTagState\n  ) {\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n\n    \n      \n        Registration Metadata\n      \n\n      \n\n    \n\n    \n\n    \n    \n\n\n    \n    \n\n    \n    \n\n    \n    \n      \n        Anatomical Structure Tags\n      \n\n      \n      \n\n      \n      \n      \n      \n\n      \n        \n        Assigned\n        \n        Added\n      \n    \n    \n\n    \n\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./right-sidebar.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 3rem);\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n\n  .scroll-wrapper {\n    overflow-y: scroll;\n    height: calc(100% - 4rem);\n\n    scrollbar-width: thin;\n    &::-webkit-scrollbar {\n      width: 0.75rem;\n    }\n\n    .container {\n      display: flex;\n      flex-direction: column;\n      min-height: 100%;\n      margin-left: 1.5rem;\n      margin-right: 0.375rem;\n\n      .review-button {\n        position: fixed;\n        bottom: 1.4rem;\n        right: 0.7rem;\n        width: 23rem;\n        z-index: 999;\n      }\n\n      .info-button-container {\n        height: 3.75rem;\n        display: flex;\n        justify-content: flex-end;\n      }\n\n      .registration-metadata-panel {\n        ::ng-deep .mat-expansion-panel-body {\n          padding-left: 0;\n          padding-right: 0;\n        }\n      }\n\n      mat-divider {\n        border-top-width: 3px;\n      }\n\n      mat-expansion-panel {\n        box-shadow: none;\n\n        mat-expansion-panel-header {\n          padding: 0 0.5rem 0 0;\n          font-weight: bold;\n          -webkit-user-select: none;\n          -moz-user-select: none;\n          font-size: 1rem;\n          height: 3rem;\n        }\n      }\n\n      .tags-container {\n        // Allow tag search to overflow when displaying results\n        overflow: visible;\n\n        ::ng-deep .mat-expansion-panel-body {\n          padding-left: 0;\n          padding-right: 0;\n        }\n\n        .header {\n          height: 3rem;\n        }\n\n        .search {\n          margin-top: 1rem;\n\n          .icon.add {\n            position: absolute;\n            // Sizes and offsets found by experimentation\n            width: 3.625rem;\n            height: 3.625rem;\n            font-size: 3.625rem;\n            top: -1.9375rem;\n            right: -1.1875rem;\n          }\n        }\n\n        .tag-list {\n          max-height: 32rem;\n          margin-left: -1rem;\n        }\n\n        .tag-list-placeholder {\n          display: flex;\n          height: 4rem;\n          align-items: center;\n          justify-content: center;\n          font-weight: 400;\n        }\n\n        .legend {\n          display: flex;\n          width: 100%;\n          margin-top: 1.5rem;\n          align-items: center;\n          font-size: 0.9rem;\n\n          .dot {\n            display: inline-block;\n            width: 1rem;\n            height: 1rem;\n            border-radius: 50%;\n\n            &.assigned {\n              margin-left: 0.5rem;\n            }\n\n            &.added {\n\n              margin-left: 1rem;\n            }\n          }\n\n          .text {\n            margin-left: 0.5rem;\n          }\n        }\n      }\n\n      .filler {\n        flex-grow: 1;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  Registration Metadata                                                                  Anatomical Structure Tags                                                                Assigned                Added                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RightSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RightSidebarModule.html":{"url":"modules/RightSidebarModule.html","title":"module - RightSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    RightSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRightSidebarModule -->\n\nRegistrationMetadataModule->RightSidebarModule\n\n\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nRightSidebarModule -->\n\nReviewButtonModule->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nTagListModule\n\nTagListModule\n\nRightSidebarModule -->\n\nTagListModule->RightSidebarModule\n\n\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nRightSidebarModule -->\n\nTagSearchModule->RightSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockSizeInputModule\n                        \n                        \n                            RegistrationMetadataModule\n                        \n                        \n                            ReviewButtonModule\n                        \n                        \n                            RotationSliderModule\n                        \n                        \n                            SlicesInputModule\n                        \n                        \n                            TagListModule\n                        \n                        \n                            TagSearchModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RightSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { InfoButtonModule } from 'ccf-shared';\n\nimport { BlockSizeInputModule } from '../../shared/components/block-size-input/block-size-input.module';\nimport { RotationSliderModule } from '../../shared/components/rotation-slider/rotation-slider.module';\nimport { SlicesInputModule } from '../../shared/components/slices-input/slices-input.module';\nimport { TagListModule } from '../../shared/components/tag-list/tag-list.module';\nimport { TagSearchModule } from '../../shared/components/tag-search/tag-search.module';\nimport { ReviewButtonModule } from '../review/review-button/review-button.module';\nimport { RightSidebarComponent } from './right-sidebar.component';\nimport { RegistrationMetadataModule } from '../../shared/components/registration-metadata/registration-metadata.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatExpansionModule,\n    MatDividerModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatTooltipModule,\n\n    BlockSizeInputModule,\n    ReviewButtonModule,\n    RotationSliderModule,\n    SlicesInputModule,\n    TagListModule,\n    TagSearchModule,\n    InfoButtonModule,\n    RegistrationMetadataModule\n  ],\n  declarations: [RightSidebarComponent],\n  exports: [RightSidebarComponent]\n})\nexport class RightSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rotation.html":{"url":"interfaces/Rotation.html","title":"interface - Rotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Type in which the values of the sliders are stored.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X slider value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y slider value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z slider value\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   *\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    this.rotation = { ... this.rotation, [axis]: +newRotation };\n    this.ga.event('rotation_update', 'rotation_slider', axis, +newRotation);\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(dimension: 'x' | 'y' | 'z'): void {\n    this.rotation = { ...this.rotation, [dimension]: 0 };\n    this.ga.event('rotation_reset', 'rotation_slider');\n    this.rotationChange.emit(this.rotation);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RotationSliderComponent.html":{"url":"components/RotationSliderComponent.html","title":"component - RotationSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RotationSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that enables the setting of a Rotation object via either 3 draggable sliders\nor through an Input method.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-rotation-slider\n            \n\n\n\n            \n                styleUrls\n                ./rotation-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rotation-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeRotation\n                            \n                            \n                                resetRotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotationChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:44\n                            \n                        \n\n                \n                    \n                            Creates an instance of rotation slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotation\n                    \n                \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_ROTATION\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:39\n                            \n                        \n                \n                    \n                        Input that allows the rotation to be changed from outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        rotationChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:44\n                            \n                        \n                \n                    \n                        Output that emits the new rotation whenever it is changed from within the component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-rotation-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-rotation-slider'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeRotation\n                        \n                    \n                \n            \n            \n                \nchangeRotation(newRotation: number | string, axis: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Function that handles updating the rotation and emitting the new value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newRotation\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new value for one of the axis to be set to\n\n                                            \n                                        \n                                        \n                                                axis\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    which axis to update\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetRotation\n                        \n                    \n                \n            \n            \n                \nresetRotation(dimension: \"x\" | \"y\" | \"z\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Function to easily reset the rotations to 0 and emit this change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dimension\n                                            \n                                                        \"x\" | \"y\" | \"z\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-rotation-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts:34\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Type in which the values of the sliders are stored. */\nexport interface Rotation {\n  /** X slider value */\n  x: number;\n  /** Y slider value */\n  y: number;\n  /** Z slider value */\n  z: number;\n}\n\n/** Default values for rotation. */\nconst DEFAULT_ROTATION: Rotation = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\n/**\n * Component that enables the setting of a Rotation object via either 3 draggable sliders\n * or through an Input method.\n */\n@Component({\n  selector: 'ccf-rotation-slider',\n  templateUrl: './rotation-slider.component.html',\n  styleUrls: ['./rotation-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RotationSliderComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-rotation-slider';\n\n  /**\n   * Input that allows the rotation to be changed from outside of the component\n   */\n  @Input() rotation = DEFAULT_ROTATION;\n\n  /**\n   * Output that emits the new rotation whenever it is changed from within the component\n   */\n  @Output() readonly rotationChange = new EventEmitter();\n\n  /**\n   * Creates an instance of rotation slider component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Function that handles updating the rotation and emitting the new value\n   *\n   * @param newRotation the new value for one of the axis to be set to\n   * @param axis which axis to update\n   */\n  changeRotation(newRotation: number | string, axis: string): void {\n    this.rotation = { ... this.rotation, [axis]: +newRotation };\n    this.ga.event('rotation_update', 'rotation_slider', axis, +newRotation);\n    this.rotationChange.emit(this.rotation);\n  }\n\n  /**\n   * Function to easily reset the rotations to 0 and emit this change.\n   */\n  resetRotation(dimension: 'x' | 'y' | 'z'): void {\n    this.rotation = { ...this.rotation, [dimension]: 0 };\n    this.ga.event('rotation_reset', 'rotation_slider');\n    this.rotationChange.emit(this.rotation);\n  }\n}\n\n    \n\n    \n        \n  Tissue Block Rotation\n  \n\n\n\n  refresh\n\n\n  X\n  \n    \n  \n  {{ rotation.x }}\n\n\n\n  refresh\n\n\n  Y\n  \n    \n  \n  {{ rotation.y }}\n\n\n\n  refresh\n\n\n  Z\n  \n    \n  \n  {{ rotation.z }}\n\n\n    \n\n    \n                \n                    ./rotation-slider.component.scss\n                \n                :host {\n  .header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 1.5rem;\n\n    .title {\n      font-weight: 600;\n    }\n  }\n\n  .reset {\n    transform: scaleX(-1);\n    cursor: pointer;\n    transition: .6s;\n\n    &:hover {\n      border-radius: 2px;\n    }\n\n  }\n\n  .refresh-button-container {\n    display: flex;\n    height: 1rem;\n    justify-content: flex-end;\n  }\n\n  .slider-box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 4rem;\n    padding-left: 0.5rem;\n\n    .label {\n      width: 1rem;\n    }\n\n    .value {\n      width: 2.75rem;\n      text-align: center;\n    }\n\n    .slider-container {\n      width: 100%;\n      padding-left: 2rem;\n      padding-right: 2rem;\n      padding-bottom: 1rem;\n      padding-top: 1rem;\n\n      .slider {\n        width: 100%;\n\n        &:not(.cdk-focused) {\n          ::ng-deep .mat-slider-thumb {\n            width: 1.25rem;\n            height: 1.25rem;\n            transform: none;\n          }\n        }\n      }\n\n      ::ng-deep .mat-slider-horizontal {\n        .mat-slider-wrapper {\n          right: 0.625rem;\n          &:after {\n            margin-top: -0.25rem;\n            height: 0.625rem !important;\n          }\n        }\n\n        .mat-slider-thumb-label-text {\n          font-size: 12px;\n        }\n\n        .mat-slider-ticks-container {\n          margin-top: -0.25rem;\n          height: 0.625rem;\n\n          .mat-slider-ticks {\n            height: 0.625rem;\n          }\n        }\n      }\n    }\n\n    .filler {\n      flex-grow: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Block Rotation    refresh  X          {{ rotation.x }}  refresh  Y          {{ rotation.y }}  refresh  Z          {{ rotation.z }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RotationSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RotationSliderModule.html":{"url":"modules/RotationSliderModule.html","title":"module - RotationSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    RotationSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RotationSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RotationSliderComponent } from './rotation-slider.component';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatLegacySliderModule as MatSliderModule } from '@angular/material/legacy-slider';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [RotationSliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule,\n    MatTooltipModule\n  ],\n  exports: [RotationSliderComponent]\n})\nexport class RotationSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SceneState.html":{"url":"injectables/SceneState.html","title":"injectable - SceneState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SceneState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                3d Scene state\n\n            \n\n            \n                Extends\n            \n            \n                        NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                gizmo$\n                            \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Private\n                                referenceData\n                            \n                            \n                                    Private\n                                registration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSceneNodes\n                            \n                            \n                                    Private\n                                getOrganSpatialEntity\n                            \n                            \n                                ngxsOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodes$\n                                \n                                \n                                    rotatedNodes$\n                                \n                                \n                                    referenceOrganNodes$\n                                \n                                \n                                    referenceOrganSimpleNodes$\n                                \n                                \n                                    nodeCollisions$\n                                \n                                \n                                    previousRegistrationNodes$\n                                \n                                \n                                    spatialKeyBoardAxis$\n                                \n                                \n                                    placementCube$\n                                \n                                \n                                    placementCube\n                                \n                                \n                                    rotation$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:237\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load page and model state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createSceneNodes\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSceneNodes(organIri: string, items: VisibilityItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:263\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organIri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                items\n                                            \n                                                            VisibilityItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialSceneNode[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getOrganSpatialEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrganSpatialEntity(organIri: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:287\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organIri\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     SpatialEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:253\n                        \n                    \n\n\n            \n                \n                        Initializes this state service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        gizmo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:219\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModelState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:235\n                        \n                    \n\n            \n                \n                    Reference to the model state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        referenceData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReferenceDataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:237\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RegistrationState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:236\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodes$\n                    \n                \n\n                \n                    \n                        getnodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rotatedNodes$\n                    \n                \n\n                \n                    \n                        getrotatedNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        referenceOrganNodes$\n                    \n                \n\n                \n                    \n                        getreferenceOrganNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:84\n                                \n                            \n                    \n                        \n                                Observable of spatial nodes\n\n\n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        referenceOrganSimpleNodes$\n                    \n                \n\n                \n                    \n                        getreferenceOrganSimpleNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:93\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nodeCollisions$\n                    \n                \n\n                \n                    \n                        getnodeCollisions$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:121\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        previousRegistrationNodes$\n                    \n                \n\n                \n                    \n                        getpreviousRegistrationNodes$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:132\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        spatialKeyBoardAxis$\n                    \n                \n\n                \n                    \n                        getspatialKeyBoardAxis$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:160\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        placementCube$\n                    \n                \n\n                \n                    \n                        getplacementCube$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:172\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        placementCube\n                    \n                \n\n                \n                    \n                        getplacementCube()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:179\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        rotation$\n                    \n                \n\n                \n                    \n                        getrotation$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/core/store/scene/scene.state.ts:197\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { SpatialEntity } from 'ccf-database';\nimport { Position } from 'ccf-shared';\nimport { environment } from '../../../../environments/environment';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { getTissueBlockScene } from 'ccf-database';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$, this.referenceOrganNodes$, this.previousRegistrationNodes$, this.nodeCollisions$, this.spatialKeyBoardAxis$\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions, axis]) => [\n        ...placement, ...prevNodes, ...nodes, ...axis, ...(this.snapshot.showCollisions ? collisions : [])\n      ])\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map(n => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY).rotateY(toRadians(rotation)).multiplyRight(n.transformMatrix)\n          }));\n        }\n      })\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) =>\n        this.createSceneNodes(organIri as string, [...anatomicalStructures, ...extractionSites] as VisibilityItem[])\n      )\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [{\n                ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                opacity: (item.opacity ?? 100) / 100,\n                color: [255, 255, 255, 255]\n              }];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map((node): SpatialSceneNode => ({\n                  ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255]\n                }));\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), [])\n      )\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.placementCube$]).pipe(\n      filter(([_nodes, placement]) => placement.length > 0),\n      map(([nodes, placement]) => {\n        const bbox = getNodeBbox(placement[0]);\n        return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n      })\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([this.model.organIri$, this.model.showPrevious$, this.registration.previousRegistrations$]).pipe(\n      map(([organIri, showPrevious, previousRegistrations]) =>\n        showPrevious ? previousRegistrations.map((entity: SpatialEntityJsonLd): SpatialSceneNode => {\n          const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n          if (p.target === organIri) {\n            const organDimensions = this.model.snapshot.organDimensions;\n            const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n            return {\n              '@id': entity['@id'],\n              '@type': 'SpatialSceneNode',\n              transformMatrix: new Matrix4(Matrix4.IDENTITY)\n                .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n                .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n                .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map(n => n / 1000 / 2)),\n              color: [25, 118, 210, 200],\n              tooltip: entity.label,\n              unpickable: true\n            };\n          } else {\n            return undefined as unknown as SpatialSceneNode;\n          }\n        }).filter(e => !!e) : []\n      )\n    );\n  }\n\n  @Computed()\n  get spatialKeyBoardAxis$(): Observable{\n    return combineLatest([this.model.organIri$.pipe(filter(organIri=>organIri!=='')), this.model.position$]).pipe(map(([organIri, position]: [string, Position]) => {\n      const organEntity = this.getOrganSpatialEntity(organIri);\n      const blockSize = this.model.snapshot.blockSize;\n      return organEntity ? getTissueBlockScene(organEntity, {\n        ...position, target: organEntity?.['@id'], radius: blockSize.x,\n      }): [];\n    }\n    ));\n  }\n\n  @Computed()\n  get placementCube$(): Observable | [] {\n    return combineLatest([this.model.viewType$, this.model.blockSize$, this.model.rotation$, this.model.position$, this.model.organ$]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => organ.src === '' ? [] : [this.placementCube])\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map(n => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      })\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ]);\n\n  /** Reference to the model state */\n  private model: ModelState;\n  private registration: RegistrationState;\n  private referenceData: ReferenceDataState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter(item => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [{\n            ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n            opacity: (item.opacity ?? 100) / 100,\n            color: [255, 255, 255, 255]\n          }];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map(node => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255]\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n\n  private getOrganSpatialEntity(organIri: string): SpatialEntity {\n    const db = this.referenceData.snapshot;\n    return db.organSpatialEntities[organIri] as SpatialEntity;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SceneStateModel.html":{"url":"interfaces/SceneStateModel.html","title":"interface - SceneStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SceneStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Scene state model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            showCollisions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        showCollisions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCollisions:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { Matrix4, toRadians } from '@math.gl/core';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { AABB, Vec3 } from 'cannon-es';\nimport { SpatialEntityJsonLd, SpatialSceneNode } from 'ccf-body-ui';\nimport { Observable, combineLatest, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { SpatialEntity } from 'ccf-database';\nimport { Position } from 'ccf-shared';\nimport { environment } from '../../../../environments/environment';\nimport { ModelState } from '../model/model.state';\nimport { RegistrationState } from '../registration/registration.state';\nimport { getTissueBlockScene } from 'ccf-database';\nimport { VisibilityItem } from './../../models/visibility-item';\nimport { ReferenceDataState } from './../reference-data/reference-data.state';\n\n\n/**\n * Scene state model\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SceneStateModel {\n  showCollisions: boolean;\n}\n\nfunction getNodeBbox(model: SpatialSceneNode): AABB {\n  const mat = new Matrix4(model.transformMatrix);\n  const lowerBound = mat.transformAsPoint([-1, -1, -1], []);\n  const upperBound = mat.transformAsPoint([1, 1, 1], []);\n  return new AABB({\n    lowerBound: new Vec3(...lowerBound.map((n, i) => Math.min(n, upperBound[i]))),\n    upperBound: new Vec3(...upperBound.map((n, i) => Math.max(n, lowerBound[i])))\n  });\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    showCollisions: !environment.production\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n\n  @Computed()\n  get nodes$(): Observable {\n    return combineLatest([\n      this.placementCube$, this.referenceOrganNodes$, this.previousRegistrationNodes$, this.nodeCollisions$, this.spatialKeyBoardAxis$\n    ]).pipe(\n      map(([placement, nodes, prevNodes, collisions, axis]) => [\n        ...placement, ...prevNodes, ...nodes, ...axis, ...(this.snapshot.showCollisions ? collisions : [])\n      ])\n    );\n  }\n\n  @Computed()\n  get rotatedNodes$(): Observable {\n    return combineLatest([this.rotation$, this.nodes$]).pipe(\n      map(([rotation, nodes]) => {\n        if (rotation === 0) {\n          return nodes;\n        } else {\n          return nodes.map(n => ({\n            ...n,\n            transformMatrix: new Matrix4(Matrix4.IDENTITY).rotateY(toRadians(rotation)).multiplyRight(n.transformMatrix)\n          }));\n        }\n      })\n    );\n  }\n\n  /** Observable of spatial nodes */\n  @Computed()\n  get referenceOrganNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.extractionSites$, this.model.organIri$]).pipe(\n      map(([anatomicalStructures, extractionSites, organIri]) =>\n        this.createSceneNodes(organIri as string, [...anatomicalStructures, ...extractionSites] as VisibilityItem[])\n      )\n    );\n  }\n\n  @Computed()\n  get referenceOrganSimpleNodes$(): Observable {\n    return combineLatest([this.model.anatomicalStructures$, this.model.organIri$, this.referenceData.state$]).pipe(\n      map(([anatomicalStructures, organIri, db]) =>\n        anatomicalStructures\n          // .filter(item => item.visible && item.opacity && item.opacity > 0)\n          .map((item): SpatialSceneNode[] => {\n            if (db.sceneNodeLookup[item.id]) {\n              return [{\n                ...(db.simpleSceneNodeLookup[item.id] as SpatialSceneNode),\n                opacity: (item.opacity ?? 100) / 100,\n                color: [255, 255, 255, 255]\n              }];\n            } else {\n              return (db.anatomicalStructures[organIri as string] || [])\n                .filter((node) => node.representation_of === item.id)\n                .map((node): SpatialSceneNode => ({\n                  ...(db.simpleSceneNodeLookup[node['@id']] as SpatialSceneNode),\n                  opacity: (item.opacity ?? 100) / 100,\n                  color: [255, 255, 255, 255]\n                }));\n            }\n          })\n          .reduce((acc, nodes) => acc.concat(nodes), [])\n      )\n    );\n  }\n\n  @Computed()\n  get nodeCollisions$(): Observable {\n    return combineLatest([this.referenceOrganSimpleNodes$, this.placementCube$]).pipe(\n      filter(([_nodes, placement]) => placement.length > 0),\n      map(([nodes, placement]) => {\n        const bbox = getNodeBbox(placement[0]);\n        return nodes.filter((model) => bbox.overlaps(getNodeBbox(model)));\n      })\n    );\n  }\n\n  @Computed()\n  get previousRegistrationNodes$(): Observable {\n    return combineLatest([this.model.organIri$, this.model.showPrevious$, this.registration.previousRegistrations$]).pipe(\n      map(([organIri, showPrevious, previousRegistrations]) =>\n        showPrevious ? previousRegistrations.map((entity: SpatialEntityJsonLd): SpatialSceneNode => {\n          const p = Array.isArray(entity.placement) ? entity.placement[0] : entity.placement;\n          if (p.target === organIri) {\n            const organDimensions = this.model.snapshot.organDimensions;\n            const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n            return {\n              '@id': entity['@id'],\n              '@type': 'SpatialSceneNode',\n              transformMatrix: new Matrix4(Matrix4.IDENTITY)\n                .translate([p.x_translation, p.y_translation, p.z_translation].map((n, i) => n / 1000 + dims[i]))\n                .rotateXYZ([p.x_rotation, p.y_rotation, p.z_rotation].map(toRadians) as [number, number, number])\n                .scale([entity.x_dimension, entity.y_dimension, entity.z_dimension].map(n => n / 1000 / 2)),\n              color: [25, 118, 210, 200],\n              tooltip: entity.label,\n              unpickable: true\n            };\n          } else {\n            return undefined as unknown as SpatialSceneNode;\n          }\n        }).filter(e => !!e) : []\n      )\n    );\n  }\n\n  @Computed()\n  get spatialKeyBoardAxis$(): Observable{\n    return combineLatest([this.model.organIri$.pipe(filter(organIri=>organIri!=='')), this.model.position$]).pipe(map(([organIri, position]: [string, Position]) => {\n      const organEntity = this.getOrganSpatialEntity(organIri);\n      const blockSize = this.model.snapshot.blockSize;\n      return organEntity ? getTissueBlockScene(organEntity, {\n        ...position, target: organEntity?.['@id'], radius: blockSize.x,\n      }): [];\n    }\n    ));\n  }\n\n  @Computed()\n  get placementCube$(): Observable | [] {\n    return combineLatest([this.model.viewType$, this.model.blockSize$, this.model.rotation$, this.model.position$, this.model.organ$]).pipe(\n      map(([_viewType, _blockSize, _rotation, _position, organ]) => organ.src === '' ? [] : [this.placementCube])\n    );\n  }\n\n  @Computed()\n  get placementCube(): SpatialSceneNode {\n    const { viewType, blockSize, rotation, position, organDimensions } = this.model.snapshot;\n    const dims = [organDimensions.x, organDimensions.y, organDimensions.z].map(n => -n / 1000 / 2);\n    return {\n      '@id': '#DraftPlacement',\n      '@type': 'SpatialSceneNode',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY)\n        .translate([position.x, position.y, position.z].map((n, i) => n / 1000 + dims[i]))\n        .rotateXYZ([rotation.x, rotation.y, rotation.z].map(toRadians) as [number, number, number])\n        .scale([blockSize.x, blockSize.y, blockSize.z].map(n => n / 1000 / 2)),\n      color: [255, 255, 0, 200],\n      tooltip: 'Draft Placement',\n      unpickable: viewType === '3d',\n    };\n  }\n\n\n  @Computed()\n  get rotation$(): Observable {\n    return this.model.viewSide$.pipe(\n      map((side) => {\n        let rotation = 0;\n        switch (side) {\n          case 'left':\n            rotation = -90;\n            break;\n          case 'right':\n            rotation = 90;\n            break;\n          case 'posterior':\n            rotation = 180;\n            break;\n          default:\n            break;\n        }\n        return rotation;\n      })\n    );\n  }\n\n  readonly gizmo$: Observable = of([\n    {\n      '@id': 'http://purl.org/ccf/latest/ccf.owl#VHMaleOrgans_VHM_Spleen_Colic_Surface',\n      '@type': 'SpatialSceneNode',\n      scenegraph: 'https://hubmapconsortium.github.io/ccf-3d-reference-object-library/Assets/body4Mesh_1338.glb',\n      transformMatrix: new Matrix4(Matrix4.IDENTITY).scale([2, 2, 2]).rotateY(toRadians(0)),\n      tooltip: 'Gizmo',\n      unpickable: true,\n      _lighting: 'pbr',\n      zoomBasedOpacity: false,\n      color: [255, 255, 255, 255],\n      opacity: 1\n    }\n  ]);\n\n  /** Reference to the model state */\n  private model: ModelState;\n  private registration: RegistrationState;\n  private referenceData: ReferenceDataState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load page and model state\n   */\n  constructor(\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.model = this.injector.get(ModelState);\n    this.registration = this.injector.get(RegistrationState);\n    this.referenceData = this.injector.get(ReferenceDataState);\n  }\n\n  private createSceneNodes(organIri: string, items: VisibilityItem[]): SpatialSceneNode[] {\n    const db = this.referenceData.snapshot;\n    return items\n      .filter(item => item.visible && item.opacity && item.opacity > 0)\n      .map((item): SpatialSceneNode[] => {\n        if (db.sceneNodeLookup[item.id]) {\n          return [{\n            ...(db.sceneNodeLookup[item.id] as SpatialSceneNode),\n            opacity: (item.opacity ?? 100) / 100,\n            color: [255, 255, 255, 255]\n          }];\n        } else {\n          return (db.anatomicalStructures[organIri] || [])\n            .filter((node) => node.representation_of === item.id)\n            .map(node => ({\n              ...(db.sceneNodeLookup[node['@id']] as SpatialSceneNode),\n              opacity: (item.opacity ?? 100) / 100,\n              color: [255, 255, 255, 255]\n            }));\n        }\n      })\n      .reduce((acc, nodes) => acc.concat(nodes), []);\n  }\n\n  private getOrganSpatialEntity(organIri: string): SpatialEntity {\n    const db = this.referenceData.snapshot;\n    return db.organSpatialEntities[organIri] as SpatialEntity;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig.html":{"url":"interfaces/SlicesConfig.html","title":"interface - SlicesConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Slices configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numSlices\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices per block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of slice\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, distinctUntilChanged, filter, map, skipUntil, switchMap, tap, throttleTime } from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(map(x => x?.id));\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(map(x => x?.blockSize));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(map(x => x?.rotation));\n  /** Position observable */\n  readonly position$ = this.state$.pipe(map(x => x?.position));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(map(x => x?.slicesConfig));\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(map(x => x?.viewType));\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(map(x => x?.viewSide));\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(map(x => x?.organ));\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(map(x => x?.organIri));\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(map(x => x?.organDimensions));\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(map(x => x?.sex));\n  /** Side observable */\n  readonly side$ = this.state$.pipe(map(x => x?.side));\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(map(x => x?.showPrevious));\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(map(x => x?.extractionSites));\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(map(x => x?.anatomicalStructures));\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(map(x => x?.extractionSets));\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      } else {\n        this.ctx.patchState({ side: undefined });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: [{ id: 'all', name: 'all anatomical structures', opacity: 20, visible: true }, ...Object.values(asLookup)] });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: [{ id: 'all', name: 'all landmarks', visible: true, opacity: 0 }].concat(sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: true,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name'))\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n    this.ctx.patchState({ position: this.defaultPosition });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      delay(0),\n      switchMap(organ => this.onOrganChange(organ))\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n      });\n      return this.referenceData.state$.pipe(\n        tap(() => this.onOrganIriChange())\n      );\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SlicesConfig-1.html":{"url":"interfaces/SlicesConfig-1.html","title":"interface - SlicesConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SlicesConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface containing slices data of the tissue block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            numSlices\n                                        \n                                \n                                \n                                        \n                                            thickness\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        numSlices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numSlices:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of slices in the block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thickness\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thickness:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Thickness of each tissue slice\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlicesInputComponent.html":{"url":"components/SlicesInputComponent.html","title":"component - SlicesInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlicesInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for entering data on block slices\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-slices-input\n            \n\n\n\n            \n                styleUrls\n                ./slices-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slices-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                refreshSlices\n                            \n                            \n                                updateSlicesData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                slicesConfigChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasThicknessValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:48\n                            \n                        \n\n                \n                    \n                            Creates an instance of slices input component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        slicesConfig\n                    \n                \n                \n                    \n                        Type :         SlicesConfig\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT_SLICES_CONFIG\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:36\n                            \n                        \n                \n                    \n                        Values of block dimensions to be emitted\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        slicesConfigChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:41\n                            \n                        \n                \n                    \n                        Emitter for slice data values\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-slices-input\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-slices-input'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshSlices\n                        \n                    \n                \n            \n            \n                \nrefreshSlices()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Refreshes all slice data values to empty values\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSlicesData\n                        \n                    \n                \n            \n            \n                \nupdateSlicesData(input: InputEvent, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Limits the length of the input if needed and updates values when an input changes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        InputEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    InputEvent from the input element which contains the new value\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Name of the dimension to be updated\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-slices-input'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:31\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasThicknessValue\n                    \n                \n\n                \n                    \n                        gethasThicknessValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts:46\n                                \n                            \n                    \n                        \n                                Returns whether a valid thickness value has been entered.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Interface containing slices data of the tissue block\n */\nexport interface SlicesConfig {\n  /** Thickness of each tissue slice */\n  thickness: number;\n  /** Number of slices in the block */\n  numSlices: number;\n}\n\n/** Default values for slices config. */\nconst DEFAULT_SLICES_CONFIG: SlicesConfig = {\n  thickness: NaN,\n  numSlices: NaN\n};\n\n/**\n * Component for entering data on block slices\n */\n@Component({\n  selector: 'ccf-slices-input',\n  templateUrl: './slices-input.component.html',\n  styleUrls: ['./slices-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SlicesInputComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-slices-input';\n\n  /**\n   * Values of block dimensions to be emitted\n   */\n  @Input() slicesConfig = DEFAULT_SLICES_CONFIG;\n\n  /**\n   * Emitter for slice data values\n   */\n  @Output() readonly slicesConfigChange = new EventEmitter();\n\n  /**\n   * Returns whether a valid thickness value has been entered.\n   */\n  get hasThicknessValue(): boolean {\n    return !isNaN(this.slicesConfig.thickness);\n  }\n\n  /**\n   * Creates an instance of slices input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Limits the length of the input if needed and updates values when an input changes\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key Name of the dimension to be updated\n   */\n  updateSlicesData(input: InputEvent, key: string): void {\n    const { value: strValue } = input.target as HTMLInputElement;\n    this.slicesConfig = { ...this.slicesConfig, [key]: strValue !== '' ? +strValue : NaN };\n    this.ga.event('slice_config_update', 'slice_input', key, this.slicesConfig[key]);\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n\n  /**\n   * Refreshes all slice data values to empty values\n   */\n  refreshSlices(): void {\n    this.slicesConfig = DEFAULT_SLICES_CONFIG;\n    this.ga.event('slice_config_reset', 'slice_input');\n    this.slicesConfigChange.emit(this.slicesConfig);\n  }\n}\n\n    \n\n    \n        \n  Tissue Sections\n  \n  \n    refresh\n  \n\n\n\n  \n    Thickness\n    \n    μm\n  \n\n  \n    # Sections\n    \n  \n\n\n    \n\n    \n                \n                    ./slices-input.component.scss\n                \n                :host {\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    height: 1.5rem;\n\n    .title {\n      font-weight: 600;\n    }\n\n    .refresh {\n      transform: scaleX(-1);\n      cursor: pointer;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n  }\n\n  .slices-inputs {\n    display: flex;\n\n    .field {\n      width: 33.33%;\n\n      &:not(:last-child) {\n        padding-right: 0.75rem;\n      }\n\n      .input {\n        text-align: center;\n      }\n\n      .suffix {\n        display: none;\n      }\n\n      &.mat-focused .suffix, .suffix.show {\n        display: initial;\n      }\n\n      ::ng-deep .mdc-text-field {\n        padding: 0;\n\n        .mat-mdc-form-field-infix {\n          padding-bottom: 0;\n          min-height: inherit;\n        }\n\n        .mat-mdc-form-field-icon-suffix {\n          padding: 1.5rem 0 0 0;\n        }\n      }\n    }\n  }\n\n  .filler {\n    flex-grow: 1;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tissue Sections        refresh        Thickness        μm        # Sections      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlicesInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SlicesInputModule.html":{"url":"modules/SlicesInputModule.html","title":"module - SlicesInputModule","body":"\n                   \n\n\n\n\n    Modules\n    SlicesInputModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/slices-input/slices-input.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SlicesInputComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { NumbersOnlyModule } from 'ccf-shared';\nimport { SlicesInputComponent } from './slices-input.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatIconModule,\n    MatRippleModule,\n    MatTooltipModule,\n    NumbersOnlyModule,\n    MatFormFieldModule\n  ],\n  declarations: [SlicesInputComponent],\n  exports: [SlicesInputComponent]\n})\nexport class SlicesInputModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StageNavComponent.html":{"url":"components/StageNavComponent.html","title":"component - StageNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StageNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that allows the user to change the viewing angle and rendering mode of the stage.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-stage-nav\n            \n\n\n\n            \n                styleUrls\n                ./stage-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stage-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                isDropdownActive\n                            \n                            \n                                isDropdownHidden\n                            \n                            \n                                    \n                                labelRef\n                            \n                            \n                                    \n                                optionsRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleClick\n                            \n                            \n                                updateSide\n                            \n                            \n                                updateView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                side\n                            \n                            \n                                useDropdownMenu\n                            \n                            \n                                view3D\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sideChange\n                            \n                            \n                                view3DChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    useDropdownMenu\n                                \n                                \n                                    labelEl\n                                \n                                \n                                    optionsEl\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of stage nav component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        side\n                    \n                \n                \n                    \n                        Type :         Side\n\n                    \n                \n                \n                    \n                        Default value : 'anterior'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:29\n                            \n                        \n                \n                    \n                        Input that allows changing the current side from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropdownMenu\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:23\n                            \n                        \n                \n                    \n                        Whether to use a drop down menu instead of a options bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3D\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:32\n                            \n                        \n                \n                    \n                        Input that allows toggling of 3D view on / off from outside the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sideChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:35\n                            \n                        \n                \n                    \n                        Output that emits whenever the current side selection changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        view3DChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:38\n                            \n                        \n                \n                    \n                        Output that emits whenever the 3D view is toggled on / off\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-stage-nav\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-stage-nav'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element on which the event was fired\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleClick(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])\n                \n            \n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Listens to document click event\nCloses the popup only if user clicks outside the popup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The element on which the event was fired\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSide\n                        \n                    \n                \n            \n            \n                \nupdateSide(selection: Side)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Handles the updating of the side selection and calling the event emitter\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            Side\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the new selected side\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateView\n                        \n                    \n                \n            \n            \n                \nupdateView(selection: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Handles updating of the boolean that keeps track of current view\nand calling the event emitter.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selection\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    3D (true) or Register (false)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-stage-nav'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:47\n                        \n                    \n\n            \n                \n                    Whether this component shows a dropdown menu or an options bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDropdownHidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:50\n                        \n                    \n\n            \n                \n                    Whether the dropdown menu is hidden\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        labelRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('label', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:41\n                        \n                    \n\n            \n                \n                    Label for dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        optionsRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('options', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:44\n                        \n                    \n\n            \n                \n                    Options dropdown\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        useDropdownMenu\n                    \n                \n\n\n                \n                    \n                        setuseDropdownMenu(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:23\n                                \n                            \n                    \n                        \n                                Whether to use a drop down menu instead of a options bar\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        labelEl\n                    \n                \n\n                \n                    \n                        getlabelEl()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:53\n                                \n                            \n                    \n                        \n                                Simple helper for accessing the native label element\n\n\n                                \n                                    Returns :     HTMLElement\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        optionsEl\n                    \n                \n\n                \n                    \n                        getoptionsEl()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts:58\n                                \n                            \n                    \n                        \n                                Simple helper for accessing the native options element\n\n\n                                \n                                    Returns :     HTMLElement\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output, ViewChild,\n} from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/** Valid values for side. */\nexport type Side = 'left' | 'right' | 'anterior' | 'posterior' | '3D';\n\n/** Component that allows the user to change the viewing angle and rendering mode of the stage. */\n@Component({\n  selector: 'ccf-stage-nav',\n  templateUrl: './stage-nav.component.html',\n  styleUrls: ['./stage-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StageNavComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-stage-nav';\n\n  /** Whether to use a drop down menu instead of a options bar */\n  @Input()\n  set useDropdownMenu(value: boolean) {\n    this.isDropdownActive = value;\n    this.isDropdownHidden = true;\n  }\n\n  /** Input that allows changing the current side from outside the component */\n  @Input() side: Side = 'anterior';\n\n  /** Input that allows toggling of 3D view on / off from outside the component */\n  @Input() view3D = false;\n\n  /** Output that emits whenever the current side selection changes */\n  @Output() readonly sideChange = new EventEmitter();\n\n  /** Output that emits whenever the 3D view is toggled on / off */\n  @Output() readonly view3DChange = new EventEmitter();\n\n  /** Label for dropdown */\n  @ViewChild('label', { static: true }) labelRef: ElementRef;\n\n  /** Options dropdown */\n  @ViewChild('options', { static: true }) optionsRef: ElementRef;\n\n  /** Whether this component shows a dropdown menu or an options bar */\n  isDropdownActive = false;\n\n  /** Whether the dropdown menu is hidden */\n  isDropdownHidden = true;\n\n  /** Simple helper for accessing the native label element */\n  private get labelEl(): HTMLElement {\n    return this.labelRef.nativeElement;\n  }\n\n  /** Simple helper for accessing the native options element */\n  private get optionsEl(): HTMLElement {\n    return this.optionsRef.nativeElement;\n  }\n\n  /**\n   * Creates an instance of stage nav component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Listens to document click event\n   * Closes the popup only if user clicks outside the popup\n   *\n   * @param target The element on which the event was fired\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    const { isDropdownHidden, labelEl, optionsEl } = this;\n\n    if (labelEl.contains(target)) {\n      this.isDropdownHidden = !isDropdownHidden;\n    } else if (!optionsEl.contains(target)) {\n      this.isDropdownHidden = true;\n    }\n  }\n\n  /**\n   * Handles the updating of the side selection and calling the event emitter\n   *\n   * @param selection the new selected side\n   */\n  updateSide(selection: Side): void {\n    this.ga.event('side_update', 'stage_nav', selection);\n\n    if (selection === '3D') {\n      this.updateView(true);\n    } else {\n      this.updateView(false);\n      this.side = selection;\n      this.sideChange.emit(this.side);\n    }\n  }\n\n  /**\n   * Handles updating of the boolean that keeps track of current view\n   * and calling the event emitter.\n   *\n   * @param selection 3D (true) or Register (false)\n   */\n  updateView(selection: boolean): void {\n    this.view3D = selection;\n    this.ga.event('view_update', 'stage_nav', selection ? '3D' : 'Register');\n    this.view3DChange.emit(this.view3D);\n  }\n}\n\n    \n\n    \n        \n  Options\n  arrow_drop_down\n\n\n\n  \n    Left\n    Right\n    Anterior\n    Posterior\n  \n\n  \n\n\n\n    \n\n    \n                \n                    ./stage-nav.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  .dropdown-label {\n    display: none;\n    align-items: center;\n\n    mat-label,\n    mat-icon {\n      line-height: 1.5rem;\n    }\n\n    &.dropdown {\n      display: flex;\n      cursor: pointer;\n      align-items: start;\n    }\n  }\n\n  .stage-options {\n    display: flex;\n    align-items: center;\n\n    .input-group {\n      .nav-input {\n        margin-right: 1rem;\n        margin-bottom: 1.5rem;\n      }\n    }\n\n    .view-slider {\n      white-space: nowrap;\n    }\n\n    &.dropdowncontainer {\n      display: flex;\n      flex-direction: column;\n      border-radius: 0.25rem;\n      width: 16.5rem;\n      position: absolute;\n      top: 3.5rem;\n      z-index: 1;\n      transition: opacity 0.25s;\n\n      :first-child {\n        margin-top: 0.5rem;\n      }\n\n      :last-child {\n        margin-bottom: 0.5rem;\n      }\n\n      .input-group {\n        margin-left: .875rem;\n        margin-right: 0;\n        display: flex;\n        flex-wrap: wrap;\n\n        .nav-input {\n          display: flex;\n          margin: 0;\n          margin-right: 0.875rem;\n          height: 2.5rem;\n\n          ::ng-deep .mdc-label {\n            padding-left: 0;\n          }\n        }\n      }\n\n      .view-slider {\n        display: flex;\n        align-items: center;\n        height: 3rem;\n        margin: 0 0.5rem;\n      }\n\n      mat-divider {\n        visibility: visible;\n        border-top: 2px solid;\n      }\n    }\n\n    &.hidden {\n      visibility: hidden;\n      opacity: 0;\n      transition: visibility 0.25s, opacity 0.25s;\n\n      mat-divider {\n        visibility: hidden;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Options  arrow_drop_down      Left    Right    Anterior    Posterior    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StageNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StageNavModule.html":{"url":"modules/StageNavModule.html","title":"module - StageNavModule","body":"\n                   \n\n\n\n\n    Modules\n    StageNavModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_imports\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\n\n\nStageNavModule\n\nStageNavModule\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LabeledSlideToggleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StageNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LabeledSlideToggleModule } from '../../../shared/components/labeled-slide-toggle/labeled-slide-toggle.module';\n\nimport { StageNavComponent } from './stage-nav.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDividerModule,\n    LabeledSlideToggleModule,\n    MatTooltipModule\n  ],\n  declarations: [StageNavComponent],\n  exports: [StageNavComponent]\n})\nexport class StageNavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@angular-ru/ngxs';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsStoragePluginModule } from '@ngxs/storage-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\nimport { AnatomicalStructureTagState } from './anatomical-structure-tags/anatomical-structure-tags.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ModelState } from './model/model.state';\nimport { PageState } from './page/page.state';\nimport { ReferenceDataState } from './reference-data/reference-data.state';\nimport { RegistrationState } from './registration/registration.state';\nimport { SceneState } from './scene/scene.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    // Must come before all other plugins except the ngxs data plugin!\n    NgxsStoragePluginModule.forRoot({\n      key: ['registration.registrations']\n    }),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tag.html":{"url":"interfaces/Tag.html","title":"interface - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n        \n\n\n            \n                Description\n            \n            \n                A tag\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         TagId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TagId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Display label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"assigned\" | \"added\" | \"removed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"assigned\" | \"added\" | \"removed\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    How the tag was added\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TagId = string | number;\n\n/**\n * A tag\n */\nexport interface Tag {\n  /** Unique identifier */\n  id: TagId;\n  /** Display label */\n  label: string;\n  /** How the tag was added */\n  type: 'assigned' | 'added' | 'removed';\n}\n\n/**\n * Search result\n */\nexport interface TagSearchResult {\n  /** Total number of possible results */\n  totalCount: number;\n  /** Partial results up to a limit */\n  results: Tag[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagListComponent.html":{"url":"components/TagListComponent.html","title":"component - TagListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        A list of removable tags\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tag-list\n            \n\n\n\n            \n                styleUrls\n                ./tag-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tag-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                removeTag\n                            \n                            \n                                tagClasses\n                            \n                            \n                                tagId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tagRemoved\n                            \n                            \n                                tagsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates an instance of tag list component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tags\n                    \n                \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:23\n                            \n                        \n                \n                    \n                        The tags\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tagRemoved\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:28\n                            \n                        \n                \n                    \n                        Emits when a tag is removed\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tagsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:33\n                            \n                        \n                \n                    \n                        Emits the new array of tags when a tag has been removed\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tag-list\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-list'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        removeTag\n                        \n                    \n                \n            \n            \n                \nremoveTag(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Removes a tag from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tag to remove\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagClasses\n                        \n                    \n                \n            \n            \n                \ntagClasses(tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagId\n                        \n                    \n                \n            \n            \n                \ntagId(_index: number, tag: Tag)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:49\n                        \n                    \n\n\n            \n                \n                        Gets the unique identifier for a tag\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Unused\n\n                                            \n                                        \n                                        \n                                                tag\n                                            \n                                                            Tag\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    A tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tag-list'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { Tag } from '../../../core/models/anatomical-structure-tag';\n\n\n/**\n * A list of removable tags\n */\n@Component({\n  selector: 'ccf-tag-list',\n  templateUrl: './tag-list.component.html',\n  styleUrls: ['./tag-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TagListComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-tag-list';\n\n  /**\n   * The tags\n   */\n  @Input() tags: Tag[];\n\n  /**\n   * Emits when a tag is removed\n   */\n  @Output() readonly tagRemoved = new EventEmitter();\n\n  /**\n   * Emits the new array of tags when a tag has been removed\n   */\n  @Output() readonly tagsChange = new EventEmitter();\n\n  /**\n   * Creates an instance of tag list component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Gets the unique identifier for a tag\n   *\n   * @param _index Unused\n   * @param tag A tag\n   * @returns An identifier\n   */\n  tagId(_index: number, tag: Tag): unknown {\n    return tag.id;\n  }\n\n  tagClasses(tag: Tag): string[] {\n    return tag.type === 'added' ? ['added'] : ['assigned'];\n  }\n\n  /**\n   * Removes a tag from the list\n   *\n   * @param tag Tag to remove\n   */\n  removeTag(tag: Tag): void {\n    this.tags = this.tags.filter(obj => obj !== tag);\n    this.ga.event('tag_removed', 'tag_list', tag.label);\n    this.tagRemoved.emit(tag);\n    this.tagsChange.emit(this.tags);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ tag.label }}\n    cancel\n  \n\n\n    \n\n    \n                \n                    ./tag-list.component.scss\n                \n                :host {\n  display: block;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  ::ng-deep .mdc-evolution-chip-set__chips {\n    margin: 0 !important;\n\n    .mdc-evolution-chip__text-label {\n      font-size: 14px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ tag.label }}    cancel  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagListModule.html":{"url":"modules/TagListModule.html","title":"module - TagListModule","body":"\n                   \n\n\n\n\n    Modules\n    TagListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagListModule\n\n\n\ncluster_TagListModule_exports\n\n\n\ncluster_TagListModule_declarations\n\n\n\n\nTagListComponent\n\nTagListComponent\n\n\n\nTagListModule\n\nTagListModule\n\nTagListModule -->\n\nTagListComponent->TagListModule\n\n\n\n\n\nTagListComponent \n\nTagListComponent \n\nTagListComponent  -->\n\nTagListModule->TagListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/tag-list/tag-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagListComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { TagListComponent } from './tag-list.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatChipsModule,\n    MatIconModule\n  ],\n  declarations: [TagListComponent],\n  exports: [TagListComponent],\n})\nexport class TagListModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagSearchModule.html":{"url":"modules/TagSearchModule.html","title":"module - TagSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TagSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagSearchModule\n\n\n\ncluster_TagSearchModule_declarations\n\n\n\ncluster_TagSearchModule_exports\n\n\n\n\nTagSearchComponent\n\nTagSearchComponent\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nTagSearchModule -->\n\nTagSearchComponent->TagSearchModule\n\n\n\n\n\nTagSearchComponent \n\nTagSearchComponent \n\nTagSearchComponent  -->\n\nTagSearchModule->TagSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/tag-search/tag-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { TagSearchComponent } from './tag-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n  ],\n  declarations: [TagSearchComponent],\n  exports: [TagSearchComponent]\n})\nexport class TagSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagSearchResult.html":{"url":"interfaces/TagSearchResult.html","title":"interface - TagSearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TagSearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n        \n\n\n            \n                Description\n            \n            \n                Search result\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            results\n                                        \n                                \n                                \n                                        \n                                            totalCount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:         Tag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Tag[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Partial results up to a limit\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Total number of possible results\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type TagId = string | number;\n\n/**\n * A tag\n */\nexport interface Tag {\n  /** Unique identifier */\n  id: TagId;\n  /** Display label */\n  label: string;\n  /** How the tag was added */\n  type: 'assigned' | 'added' | 'removed';\n}\n\n/**\n * Search result\n */\nexport interface TagSearchResult {\n  /** Total number of possible results */\n  totalCount: number;\n  /** Partial results up to a limit */\n  results: Tag[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                element\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                initialize\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:25\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        applyThemeClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Adds or removes a theme class from the necessary components.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cls\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The theme class.\n\n                                            \n                                        \n                                        \n                                                method\n                                            \n                                                        \"add\" | \"remove\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'add'\n                                            \n\n                                            \n                                                    Whether to add or remove the theme.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Get the currently active theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize(component: ComponentRef<>)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Initializer called during bootstrap to set up theming.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                        ComponentRef<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(element: ElementRef<>, injector: Injector)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Binds theming service to a component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        ElementRef<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                injector\n                                            \n                                                        Injector\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTheme\n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Resets the theme to the default.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Sets the currently active theme.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new theme class.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:16\n                        \n                    \n\n            \n                \n                    Default theme class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef<>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Injector\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/core/services/theming/theming.service.ts:18\n                        \n                    \n\n            \n                \n                    Currently active theme class.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, ElementRef, Inject, Injector, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element: ElementRef;\n  private injector: Injector;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n\n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classEnd\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-toggle-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.ccf-drawer-toggle-button-end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                        \n                    \n\n            \n                \n                    Whether this button is attach to a drawer in position 'end'.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Process an event message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                msg\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                true if change detection needs to be run.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Initializes this component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Cleans up all subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Updates the drawer state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:40\n                        \n                    \n\n            \n                \n                    Whether the owning drawer is opened.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"start\" | \"end\"\n\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                        \n                    \n\n            \n                \n                    Position of the owning side drawer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classEnd\n                    \n                \n\n                \n                    \n                        getclassEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                                \n                            \n                    \n                        \n                                Whether this button is attach to a drawer in position 'end'.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:27\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end')\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      ([expand, collapse] = [collapse, expand]);\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  arrow_right\n\n\n  arrow_left\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0rem 0.25rem 0.25rem 0rem;\n  cursor: pointer;\n  transition: .25s;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 0.25rem 0rem 0rem 0.25rem;\n  }\n\n  .expand-collapse-icon {\n    position: absolute;\n    right: 0rem;\n    transition: .6s;\n    padding-left: .15rem;\n\n    &.hidden {\n      opacity: 0;\n    }\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n.mat-icon {\n  right: 0.3rem;\n  top: .675rem;\n  padding-top: .05rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  arrow_right  arrow_left'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/app.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Injector,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GlobalConfigState, OrganInfo, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, ReplaySubject, Subscription } from 'rxjs';\n\nimport { GlobalConfig } from './core/services/config/config';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { ModelState } from './core/store/model/model.state';\nimport { PageState } from './core/store/page/page.state';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n}\n\ninterface AppOptions extends GlobalConfig {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n}\n\n/**\n * App component\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  /** Organs to be displayed in the organ selector */\n  organList: OrganInfo[];\n\n  /** True if the organ selector drawer is open */\n  open = true;\n\n  /** False until the initial registration modal is closed */\n  registrationStarted = false;\n\n  /** Disables changes in block position */\n  disablePositionChange = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n\n  theme: string;\n\n  homeUrl: string;\n\n  logoTooltip: string;\n\n  /** All subscriptions managed by the container. */\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    readonly model: ModelState, readonly page: PageState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, readonly theming: ThemingService,\n    el: ElementRef, injector: Injector, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    this.subscriptions.add(\n      page.registrationCallbackSet$.subscribe((callbackSet) => {\n        this.open = !callbackSet;\n      })\n    );\n    this.subscriptions.add(\n      page.registrationStarted$.subscribe((registrationStarted) => {\n        this.registrationStarted = registrationStarted;\n      })\n    );\n    this.theme$.subscribe((theme: string) => {\n      this.theme = theme;\n    });\n    this.globalConfig.getOption('homeUrl').subscribe((url: string) => {\n      this.homeUrl = url;\n    });\n    this.globalConfig.getOption('logoTooltip').subscribe((tooltip: string) => {\n      this.logoTooltip = tooltip;\n    });\n    this.page.organOptions$.subscribe((options: OrganInfo[]) => {\n      this.organList = options;\n    });\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    this.themeMode$.next('light');\n\n    this.theming.setTheme(`${this.theme}-theme-light`);\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Shifts block position when certain keys are pressed\n   *\n   * @param target The keyboard event\n   */\n  @HostListener('document:keydown', ['$event'])\n  handleKey(target: KeyboardEvent): void {\n    const oldPosition = this.model.snapshot.position;\n    if (this.disablePositionChange || !this.registrationStarted) {\n      return;\n    }\n    target.preventDefault();\n    const delta = target.repeat ? 1.0 : 0.5;\n    let newPosition = oldPosition;\n    switch (target.key) {\n      case 'q':\n        newPosition = { ...oldPosition, z: oldPosition.z + delta };\n        break;\n      case 'e':\n        newPosition = { ...oldPosition, z: oldPosition.z - delta };\n        break;\n      case 'w':\n        newPosition = { ...oldPosition, y: oldPosition.y + delta };\n        break;\n      case 's':\n        newPosition = { ...oldPosition, y: oldPosition.y - delta };\n        break;\n      case 'a':\n        newPosition = { ...oldPosition, x: oldPosition.x - delta };\n        break;\n      case 'd':\n        newPosition = { ...oldPosition, x: oldPosition.x + delta };\n        break;\n      default:\n        break;\n    }\n    this.model.setPosition(newPosition);\n  }\n\n  /**\n   * Disables block position change if an input element is clicked\n   *\n   * @param target The element clicked\n   */\n  @HostListener('document:click', ['$event.target'])\n  handleClick(target: HTMLElement): void {\n    if (target.nodeName === 'INPUT') {\n      this.disablePositionChange = true;\n    } else {\n      this.disablePositionChange = false;\n    }\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserName.html":{"url":"interfaces/UserName.html","title":"interface - UserName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n        \n\n\n            \n                Description\n            \n            \n                User name data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            middleName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's first name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's last name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        middleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        middleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    User's middle name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { UntypedFormControl, Validators } from '@angular/forms';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * User name data\n */\nexport interface UserName {\n  /**\n   * User's first name\n   */\n  firstName: string;\n\n  /**\n   * User's middle name\n   */\n  middleName: string;\n\n  /**\n   * User's last name\n   */\n  lastName: string;\n}\n\n/**\n * Component for inputting the researcher's name\n */\n@Component({\n  selector: 'ccf-name-input',\n  templateUrl: './name-input.component.html',\n  styleUrls: ['./name-input.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NameInputComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-name-input';\n\n  /**\n   * Used to validate the first name input field.\n   */\n  firstNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the last name input field.\n   */\n  lastNameValidator = new UntypedFormControl('', [Validators.required]);\n\n  /**\n   * Used to validate the middle name input field.\n   */\n  middleNameValidator = new UntypedFormControl('', [Validators.required]);\n\n\n  /**\n   * Current user name\n   */\n  @Input()\n  get name(): UserName {\n    return this._name;\n  }\n\n  set name(value: UserName) {\n    this._name = value;\n    this.firstNameValidator.setValue(value?.firstName || '');\n    this.lastNameValidator.setValue(value?.lastName || '');\n    this.middleNameValidator.setValue(value?.middleName || '');\n  }\n\n  private _name: UserName = {\n    firstName: '',\n    middleName: '',\n    lastName: ''\n  };\n\n  /**\n   * Emits a UserName object\n   */\n  @Output() readonly nameChange = new EventEmitter();\n\n  /**\n   * Creates an instance of name input component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Updates username with a new entry and emits the UserName object\n   *\n   * @param input InputEvent from the input element which contains the new value\n   * @param key firstName or lastName\n   */\n  updateName(input: InputEvent, key: string): void {\n    const inputTarget = input.target as HTMLInputElement;\n    this.name = { ...this.name, [key]: inputTarget.value };\n    this.ga.event('name_updated', 'name_input', key);\n    this.nameChange.emit(this.name);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoModalComponent.html":{"url":"components/VideoModalComponent.html","title":"component - VideoModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying a youtube video inside of an angular material modal.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-video-modal\n            \n\n\n\n            \n                styleUrls\n                ./video-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                loadYoutubePlayerAPI\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer2: Renderer2, dialogRef: MatDialogRef, data, document: Document)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of video modal component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer2\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-video-modal\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Closes the video modal component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYoutubePlayerAPI\n                        \n                    \n                \n            \n            \n                \nloadYoutubePlayerAPI()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:38\n                        \n                    \n\n\n            \n                \n                        loads the IFrame Player API code asynchronously from YouTube.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:31\n                        \n                    \n\n\n            \n                \n                        load the youtube player api in on init\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, HostBinding, Inject, Renderer2, ChangeDetectionStrategy } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Component for displaying a youtube video inside of an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal',\n  templateUrl: './video-modal.component.html',\n  styleUrls: ['./video-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoModalComponent implements OnInit {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal';\n\n  /**\n   * Creates an instance of video modal component.\n   */\n  constructor(\n    private renderer2: Renderer2,\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: unknown,\n    @Inject(DOCUMENT) private document: Document\n  ) { }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    this.loadYoutubePlayerAPI();\n  }\n\n  /**\n   * loads the IFrame Player API code asynchronously from YouTube.\n   */\n  loadYoutubePlayerAPI(): void {\n    const script = this.renderer2.createElement('script') as HTMLScriptElement;\n    script.src = 'https://www.youtube.com/iframe_api';\n    this.renderer2.appendChild(this.document.body, script);\n  }\n\n  /**\n   * Closes the video modal component\n   */\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n    \n        clear\n        \n            \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./video-modal.component.scss\n                \n                ::ng-deep {\n  .mat-dialog-container {\n    padding: 0;\n  }\n\n  .mat-dialog-content {\n    display: block;\n    margin: auto;\n    padding: 0;\n    max-height: 65vh;\n    overflow: auto;\n    width: fit-content;\n  }\n}\n\n:host {\n  .video-modal.wrapper {\n    width: fit-content;\n\n    .container {\n      position: relative;\n\n      .content {\n        padding: 0.5rem;\n        padding-top: 3rem;\n        width: fit-content;\n        border-radius: .5rem;\n      }\n\n      .close-icon {\n        cursor: pointer;\n        position: absolute;\n        right: 0rem;\n        font-size: 2.5rem;\n        width: 2.5rem;\n        height: 2.5rem;\n        transition: .5s color;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VideoModalLauncherComponent.html":{"url":"components/VideoModalLauncherComponent.html","title":"component - VideoModalLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VideoModalLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for launching an angular material modal.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-video-modal-launcher\n            \n\n\n\n            \n                styleUrls\n                ./video-modal-launcher.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./video-modal-launcher.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchVideoModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of video modal launcher component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:22\n                            \n                        \n                \n                    \n                        Input used to toggle the launcher on and off.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-video-modal-launcher\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal-launcher'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchVideoModal\n                        \n                    \n                \n            \n            \n                \nlaunchVideoModal()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:32\n                        \n                    \n\n\n            \n                \n                        Launches the video modal component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-video-modal-launcher'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { VideoModalComponent } from '../video-modal/video-modal.component';\n\n/**\n * Component for launching an angular material modal.\n */\n@Component({\n  selector: 'ccf-video-modal-launcher',\n  templateUrl: './video-modal-launcher.component.html',\n  styleUrls: ['./video-modal-launcher.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VideoModalLauncherComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-video-modal-launcher';\n\n  /**\n   * Input used to toggle the launcher on and off.\n   */\n  @Input() visible = true;\n\n  /**\n   * Creates an instance of video modal launcher component.\n   */\n  constructor(private readonly dialog: MatDialog) { }\n\n  /**\n   * Launches the video modal component.\n   */\n  launchVideoModal(): void {\n    this.dialog.open(VideoModalComponent, {\n      width: '46rem',\n      data: {}\n    });\n  }\n}\n\n    \n\n    \n        \n    WATCH\n    \"How to use the HuBMAP Registration User Interface\"\n\n\n    play_circle_outline\n\n    \n\n    \n                \n                    ./video-modal-launcher.component.scss\n                \n                :host {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 1;\n\n    .video-description {\n        margin-bottom: 1.5rem;\n        text-align: center;\n        width: 30rem;\n\n        .title {\n            margin-bottom: 1rem;\n        }\n    }\n\n    .play-icon-button {\n        cursor: pointer;\n        font-size: 5rem;\n        width: 5rem;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    WATCH    \"How to use the HuBMAP Registration User Interface\"    play_circle_outline'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VideoModalLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideoModalLauncherModule.html":{"url":"modules/VideoModalLauncherModule.html","title":"module - VideoModalLauncherModule","body":"\n                   \n\n\n\n\n    Modules\n    VideoModalLauncherModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VideoModalLauncherModule\n\n\n\ncluster_VideoModalLauncherModule_declarations\n\n\n\ncluster_VideoModalLauncherModule_exports\n\n\n\n\nVideoModalLauncherComponent\n\nVideoModalLauncherComponent\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule -->\n\nVideoModalLauncherComponent->VideoModalLauncherModule\n\n\n\n\n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent  -->\n\nVideoModalLauncherModule->VideoModalLauncherComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VideoModalLauncherComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VideoModalLauncherComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VideoModalLauncherComponent } from './video-modal-launcher.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ VideoModalLauncherComponent ],\n  imports: [\n    CommonModule,\n    MatIconModule\n  ],\n  exports: [ VideoModalLauncherComponent ]\n})\nexport class VideoModalLauncherModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideoModalModule.html":{"url":"modules/VideoModalModule.html","title":"module - VideoModalModule","body":"\n                   \n\n\n\n\n    Modules\n    VideoModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VideoModalModule\n\n\n\ncluster_VideoModalModule_declarations\n\n\n\ncluster_VideoModalModule_exports\n\n\n\n\nVideoModalComponent\n\nVideoModalComponent\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalModule -->\n\nVideoModalComponent->VideoModalModule\n\n\n\n\n\nVideoModalComponent \n\nVideoModalComponent \n\nVideoModalComponent  -->\n\nVideoModalModule->VideoModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VideoModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VideoModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VideoModalComponent } from './video-modal.component';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  declarations: [ VideoModalComponent ],\n  imports: [\n    CommonModule,\n    YouTubePlayerModule,\n    MatIconModule,\n    MatDialogModule\n  ],\n  exports: [ VideoModalComponent ]\n})\nexport class VideoModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VisibilityItem.html":{"url":"interfaces/VisibilityItem.html","title":"interface - VisibilityItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VisibilityItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/models/visibility-item.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for visibility item data\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            opacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tooltip\n                                        \n                                \n                                \n                                        \n                                            visible\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Opacity value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Tooltip text to be displayed in the stage\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the item is currently highlighted\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface VisibilityItem {\n  /**\n   * Id of the item\n   */\n  id: string | number;\n\n  /**\n   * Name of the item\n   */\n  name: string;\n\n  /**\n   * Whether the item is currently highlighted\n   */\n  visible: boolean;\n\n  /**\n   * Opacity value\n   */\n  opacity?: number;\n\n  /**\n   * Tooltip text to be displayed in the stage\n   */\n  tooltip?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityMenuComponent.html":{"url":"components/VisibilityMenuComponent.html","title":"component - VisibilityMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisibilityMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Menu for displaying visibility options\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-visibility-menu\n            \n\n\n\n            \n                styleUrls\n                ./visibility-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visibility-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getId\n                            \n                            \n                                mouseOut\n                            \n                            \n                                mouseOver\n                            \n                            \n                                resetItem\n                            \n                            \n                                setAllOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                            \n                                updateOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                hover\n                            \n                            \n                                itemsChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of visibility menu component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :         VisibilityItem[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:26\n                            \n                        \n                \n                    \n                        Items to be displayed in the visibility menu\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         VisibilityItem | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:31\n                            \n                        \n                \n                    \n                        The currently selected item\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        hover\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:36\n                            \n                        \n                \n                    \n                        Emits the currently hovered item\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemsChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:41\n                            \n                        \n                \n                    \n                        Emits whenever there is a change to one or more items.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-visibility-menu\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-menu'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId(_index: number, item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:140\n                        \n                    \n\n\n            \n                \n                        Returns the id of an item\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The item to get an id for\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | number\n\n                        \n                            \n                                id Id of the item\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseOut\n                        \n                    \n                \n            \n            \n                \nmouseOut()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Clears current selection and emits undefined in response to mouse out\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseOver\n                        \n                    \n                \n            \n            \n                \nmouseOver(item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Changes current selection to hovered over item and emits the item\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menu item\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetItem\n                        \n                    \n                \n            \n            \n                \nresetItem()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Resets item to opacity 20 and visible\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAllOpacity\n                        \n                    \n                \n            \n            \n                \nsetAllOpacity(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:127\n                        \n                    \n\n\n            \n                \n                        Sets all items to the same opacity and makes them visible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated opacity value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility(item: VisibilityItem)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            VisibilityItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menu item\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOpacity\n                        \n                    \n                \n            \n            \n                \nupdateOpacity(value: number | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Updates opacity of the currently selected item (if one is selected) and emits the new items\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        number | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Updated opacity value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-menu'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { VisibilityItem } from '../../../core/models/visibility-item';\n\n\n/**\n * Menu for displaying visibility options\n */\n@Component({\n  selector: 'ccf-visibility-menu',\n  templateUrl: './visibility-menu.component.html',\n  styleUrls: ['./visibility-menu.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisibilityMenuComponent {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-menu';\n\n  /**\n   * Items to be displayed in the visibility menu\n   */\n  @Input() items: VisibilityItem[];\n\n  /**\n   * The currently selected item\n   */\n  @Input() selection: VisibilityItem | undefined;\n\n  /**\n   * Emits the currently hovered item\n   */\n  @Output() readonly hover = new EventEmitter();\n\n  /**\n   * Emits whenever there is a change to one or more items.\n   */\n  @Output() readonly itemsChange = new EventEmitter();\n\n  /**\n   * Creates an instance of visibility menu component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Toggles visibility of an item; opacity is reverted to the previous value if visibility toggled back on\n   *\n   * @param item Menu item\n   */\n  toggleVisibility(item: VisibilityItem): void {\n    item = { ...item, visible: !item.visible };\n    if (this.selection && item.id === this.selection.id) {\n      this.selection = { ...this.selection, visible: item.visible };\n    }\n\n    this.ga.event('visibility_toggled', 'visibility_menu', '' + item.id, +item.visible);\n    this.updateOpacity(item.opacity);\n  }\n\n  /**\n   * Changes current selection to hovered over item and emits the item\n   *\n   * @param item Menu item\n   */\n  mouseOver(item: VisibilityItem): void {\n    this.selection = item === this.selection ? undefined : item;\n    this.hover.emit(item);\n  }\n\n  /**\n   * Clears current selection and emits undefined in response to mouse out\n   *\n   * @param item Menu item\n   */\n  mouseOut(): void {\n    this.selection = undefined;\n    this.hover.emit(undefined);\n  }\n\n  /**\n   * Updates opacity of the currently selected item (if one is selected) and emits the new items\n   *\n   * @param value Updated opacity value\n   */\n  updateOpacity(value: number | undefined): void {\n    if (!this.selection) {\n      return;\n    }\n    const updatedSelection = { ...this.selection, opacity: value };\n    this.selection = updatedSelection;\n    if (updatedSelection.id === 'all') {\n      this.setAllOpacity(updatedSelection.opacity as number);\n    } else {\n      this.items = this.items.map(item => item.id === updatedSelection.id ? updatedSelection : item);\n      this.ga.event('opacity_update', 'visibility_menu', '' + updatedSelection.id, updatedSelection.opacity);\n    }\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Resets item to opacity 20 and visible\n   */\n  resetItem(): void {\n    if (this.selection) {\n      const updatedSelection = { ...this.selection, opacity: 20, visible: true };\n      this.selection = updatedSelection;\n      if (this.selection.id === 'all') {\n        this.setAllOpacity(updatedSelection.opacity);\n      } else {\n        this.items = this.items.map(item => item.id === updatedSelection.id ? updatedSelection : item);\n        this.ga.event('item_reset', 'visibility_menu', '' + updatedSelection.id);\n      }\n      this.itemsChange.emit(this.items);\n    }\n  }\n\n  /**\n   * Sets all items to the same opacity and makes them visible\n   *\n   * @param value Updated opacity value\n   */\n  setAllOpacity(value: number): void {\n    this.items = this.items.map(i => ({ ...i, opacity: value, visible: true }));\n    this.ga.event('all_items_opacity_update', 'visibility_menu', undefined, value);\n    this.itemsChange.emit(this.items);\n  }\n\n  /**\n   * Returns the id of an item\n   *\n   * @param index Index of item in items array\n   * @param item The item to get an id for\n   * @returns id Id of the item\n   */\n  getId(_index: number, item: VisibilityItem): string | number {\n    return item.id;\n  }\n}\n\n    \n\n    \n        refresh\n\n\n  \n  {{ item.name }}\n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./visibility-menu.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  margin-right: 0;\n  margin-left: 0;\n  max-height: 18rem;\n  overflow-y: auto;\n  scrollbar-width: thin;\n\n  .icon {\n    padding: 0.25rem;\n    border-radius: 0.25rem;\n  }\n\n  .reset {\n    transform: scaleX(-1);\n    cursor: pointer;\n    transition: .6s;\n    position: absolute;\n    top: 3rem;\n    \n    &:hover {\n      border-radius: 2px;\n    }\n  }\n\n  .item-entry {\n    display: flex;\n    height: 2.25rem;\n    align-items: center;\n    flex-shrink: 0;\n    position: relative;\n\n    .opacity {\n      cursor: pointer;\n    }\n\n    .opacity-icon {\n      z-index: 1;\n      transition: .6s;\n\n      &:hover {\n        border-radius: 2px;\n      }\n    }\n\n    .item-name {\n      user-select: none;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      margin-left: 0.5rem;\n      opacity: 1;\n      transition-duration: 0.4s;\n      transition-timing-function: ease-in-out;\n      transition-property: opacity;\n      max-width: calc(100% - 2.5rem);\n\n      &.hidden {\n        opacity: 0;\n      }\n    }\n\n    .slider {\n      width: calc(100% - 2rem);\n      transition-duration: 0.3s;\n      transition-timing-function: ease-in-out;\n      transition-property: opacity;\n      left: 2rem;\n      position: absolute;\n      opacity: 1;\n\n      &.hidden {\n        opacity: 0;\n        transition-duration: 0.1s;\n        transition-timing-function: ease-in-out;\n        transition-property: opacity;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'refresh    {{ item.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisibilityMenuModule.html":{"url":"modules/VisibilityMenuModule.html","title":"module - VisibilityMenuModule","body":"\n                   \n\n\n\n\n    Modules\n    VisibilityMenuModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VisibilityMenuModule\n\n\n\ncluster_VisibilityMenuModule_declarations\n\n\n\ncluster_VisibilityMenuModule_exports\n\n\n\n\nVisibilityMenuComponent\n\nVisibilityMenuComponent\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nVisibilityMenuModule -->\n\nVisibilityMenuComponent->VisibilityMenuModule\n\n\n\n\n\nVisibilityMenuComponent \n\nVisibilityMenuComponent \n\nVisibilityMenuComponent  -->\n\nVisibilityMenuModule->VisibilityMenuComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisibilityMenuComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisibilityMenuComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { OpacitySliderModule } from 'ccf-shared';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { VisibilityMenuComponent } from './visibility-menu.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, MatRippleModule, OpacitySliderModule],\n  declarations: [VisibilityMenuComponent],\n  exports: [VisibilityMenuComponent]\n})\nexport class VisibilityMenuModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisibilityToggleComponent.html":{"url":"components/VisibilityToggleComponent.html","title":"component - VisibilityToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VisibilityToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for easily adding a visibility toggle with customizable label and\npre set up emitter.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-visibility-toggle\n            \n\n\n\n            \n                styleUrls\n                ./visibility-toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./visibility-toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                toggleLabel\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                visibilityChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of visibility toggle component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:34\n                            \n                        \n                \n                    \n                        Whether or not the slider is disabled\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggleLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:29\n                            \n                        \n                \n                    \n                        Input that allows the label to be set from outside the component,\nmaking it more reusable.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:23\n                            \n                        \n                \n                    \n                        Keeps track of the current visibility state of the toggle.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        visibilityChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:40\n                            \n                        \n                \n                    \n                        Outputs the new visibility state whenever toggleVisibility()\nchanges it.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-visibility-toggle\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-toggle'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Toggles visibility and emits the new value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-visibility-toggle'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts:18\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for easily adding a visibility toggle with customizable label and\n * pre set up emitter.\n */\n@Component({\n  selector: 'ccf-visibility-toggle',\n  templateUrl: './visibility-toggle.component.html',\n  styleUrls: ['./visibility-toggle.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VisibilityToggleComponent {\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-visibility-toggle';\n\n  /**\n   * Keeps track of the current visibility state of the toggle.\n   */\n  @Input() visible = false;\n\n  /**\n   * Input that allows the label to be set from outside the component,\n   * making it more reusable.\n   */\n  @Input() toggleLabel = '';\n\n  /**\n   * Whether or not the slider is disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * Outputs the new visibility state whenever toggleVisibility()\n   * changes it.\n   */\n  @Output() readonly visibilityChanged = new EventEmitter();\n\n  /**\n   * Creates an instance of visibility toggle component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Toggles visibility and emits the new value.\n   */\n  toggleVisibility(): void {\n    this.visible = !this.visible;\n\n    this.ga.event('visibility_toggled', 'visibility_toggle', '' + this.visible);\n    this.visibilityChanged.emit(this.visible);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      done\n    \n\n    {{ toggleLabel }}\n  \n\n\n    \n\n    \n                \n                    ./visibility-toggle.component.scss\n                \n                :host {\n  height: 3rem;\n  display: flex;\n  align-items: center;\n\n  ::ng-deep .mat-mdc-chip {\n    padding: 0 !important;\n\n    &.disabled {\n      cursor: not-allowed !important;\n      pointer-events: none;\n    }\n\n    .mdc-evolution-chip__action--primary {\n      padding: 0;\n      cursor: pointer;\n    }\n\n    .mdc-evolution-chip__text-label {\n      display: flex;\n      align-items: center;\n      font-size: 14px;\n    }\n  }\n\n  .toggle-div {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    padding-top: 1.5rem;\n\n    .toggle-wrapper {\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      cursor: pointer;\n      border-width: 0.075rem;\n      border-style: solid;\n      height: 2.25rem;\n      border-radius: 1.5rem;\n      transition: background-color 0.2s ease-in-out;\n\n      .icon-background {\n        border-radius: 1.5rem;\n        height: 2.06rem;\n        width: 2.06rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n\n        .icon {\n          transition: .6s;\n          position: absolute;\n          &.block {\n              width: 1.125rem;\n          }\n          &.hidden {\n              opacity: 0;\n          }\n        }\n      }\n\n      .toggle-label {\n        font-weight: bold;\n        margin-left: 0.5rem;\n        padding-right: 1.25rem;\n        padding-left: 0.25rem;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  done        {{ toggleLabel }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'BlockSizeInputComponent', 'selector': 'ccf-block-size-input'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-content'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DetailsLabelComponent', 'selector': 'ccf-details-label'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'ExtractionSetDropdownComponent', 'selector': 'ccf-extraction-set-dropdown'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'JsonFileReaderComponent', 'selector': 'ccf-json-file-reader'},{'name': 'LabeledSlideToggleComponent', 'selector': 'ccf-labeled-slide-toggle'},{'name': 'LeftSidebarComponent', 'selector': 'ccf-left-sidebar'},{'name': 'NameInputComponent', 'selector': 'ccf-name-input'},{'name': 'RegistrationContentComponent', 'selector': 'ccf-registration-content'},{'name': 'RegistrationMetadataComponent', 'selector': 'ccf-registration-metadata'},{'name': 'RegistrationModalComponent', 'selector': 'ccf-registration-modal'},{'name': 'ReviewButtonComponent', 'selector': 'ccf-review-button'},{'name': 'ReviewModalComponent', 'selector': 'ccf-review-modal'},{'name': 'RightSidebarComponent', 'selector': 'ccf-right-sidebar'},{'name': 'RotationSliderComponent', 'selector': 'ccf-rotation-slider'},{'name': 'SlicesInputComponent', 'selector': 'ccf-slices-input'},{'name': 'StageNavComponent', 'selector': 'ccf-stage-nav'},{'name': 'TagListComponent', 'selector': 'ccf-tag-list'},{'name': 'TagSearchComponent', 'selector': 'ccf-tag-search'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'VideoModalComponent', 'selector': 'ccf-video-modal'},{'name': 'VideoModalLauncherComponent', 'selector': 'ccf-video-modal-launcher'},{'name': 'VisibilityMenuComponent', 'selector': 'ccf-visibility-menu'},{'name': 'VisibilityToggleComponent', 'selector': 'ccf-visibility-toggle'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisibilityToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisibilityToggleModule.html":{"url":"modules/VisibilityToggleModule.html","title":"module - VisibilityToggleModule","body":"\n                   \n\n\n\n\n    Modules\n    VisibilityToggleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VisibilityToggleModule\n\n\n\ncluster_VisibilityToggleModule_exports\n\n\n\ncluster_VisibilityToggleModule_declarations\n\n\n\n\nVisibilityToggleComponent\n\nVisibilityToggleComponent\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nVisibilityToggleModule -->\n\nVisibilityToggleComponent->VisibilityToggleModule\n\n\n\n\n\nVisibilityToggleComponent \n\nVisibilityToggleComponent \n\nVisibilityToggleComponent  -->\n\nVisibilityToggleModule->VisibilityToggleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VisibilityToggleComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VisibilityToggleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VisibilityToggleComponent } from './visibility-toggle.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatChipsModule } from '@angular/material/chips';\n\n@NgModule({\n  declarations: [VisibilityToggleComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatChipsModule\n  ],\n  exports: [ VisibilityToggleComponent ]\n})\nexport class VisibilityToggleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-rui/src/app/core/store/model/model.state.ts\n        \n\n\n            \n                Description\n            \n            \n                A object with x, y, and z channels of the same type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    X channel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Y channel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Z channel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Computed, DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { Injectable, Injector } from '@angular/core';\nimport { State } from '@ngxs/store';\nimport { ALL_ORGANS, GlobalConfigState, OrganInfo } from 'ccf-shared';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, distinctUntilChanged, filter, map, skipUntil, switchMap, tap, throttleTime } from 'rxjs/operators';\n\nimport { ExtractionSet } from '../../models/extraction-set';\nimport { VisibilityItem } from '../../models/visibility-item';\nimport { GlobalConfig, OrganConfig } from '../../services/config/config';\nimport { PageState } from '../page/page.state';\nimport { ReferenceDataState } from '../reference-data/reference-data.state';\n\n\n/* eslint-disable @typescript-eslint/member-ordering */\n\n/** A object with x, y, and z channels of the same type. */\nexport interface XYZTriplet {\n  /** X channel */\n  x: T;\n  /** Y channel */\n  y: T;\n  /** Z channel */\n  z: T;\n}\n\n/** Slices configuration */\nexport interface SlicesConfig {\n  /** Thickness of slice */\n  thickness: number;\n  /** Number of slices per block */\n  numSlices: number;\n}\n\n/** Model view type */\nexport type ViewType = 'register' | '3d';\n\n/** Side which the model is viewed from */\nexport type ViewSide = 'left' | 'right' | 'anterior' | 'posterior';\n\n/** Data contained in the stage state. */\nexport interface ModelStateModel {\n  /** Model identifier */\n  id: string;\n  /** Model label */\n  label: string;\n  /** Organ name */\n  organ: OrganInfo;\n  /** Reference Organ IRI */\n  organIri?: string;\n  /** Reference Organ Dimensions */\n  organDimensions: XYZTriplet;\n  /** Sex if applicable */\n  sex?: 'male' | 'female';\n  /** Side if applicable */\n  side?: 'left' | 'right';\n  /** Block size */\n  blockSize: XYZTriplet;\n  /** Model rotation */\n  rotation: XYZTriplet;\n  /** Model position */\n  position: XYZTriplet;\n  /** Slice configuration */\n  slicesConfig: SlicesConfig;\n  /** View type */\n  viewType: ViewType;\n  /** View side */\n  viewSide: ViewSide;\n  /** Whether previous registration blocks are visible */\n  showPrevious: boolean;\n  /** Possible extraction sites */\n  extractionSites: VisibilityItem[];\n  /** Anatomical structures for the organ */\n  anatomicalStructures: VisibilityItem[];\n  /** Extraction sets */\n  extractionSets: ExtractionSet[];\n}\n\n/**\n * All organs to be displayed\n */\nexport const RUI_ORGANS = ALL_ORGANS;\n\n/**\n * Data for the main 3d model display\n */\n@StateRepository()\n@State({\n  name: 'model',\n  defaults: {\n    id: '',\n    label: '',\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    organ: { src: '', name: '' } as OrganInfo,\n    organIri: '',\n    organDimensions: { x: 90, y: 90, z: 90 },\n    sex: 'male',\n    blockSize: { x: 10, y: 10, z: 10 },\n    rotation: { x: 0, y: 0, z: 0 },\n    position: { x: 0, y: 0, z: 0 },\n    slicesConfig: { thickness: NaN, numSlices: NaN },\n    viewType: 'register',\n    viewSide: 'anterior',\n    showPrevious: false,\n    extractionSites: [],\n    anatomicalStructures: [],\n    extractionSets: []\n  }\n})\n@Injectable()\nexport class ModelState extends NgxsImmutableDataRepository {\n  /** Identifier observable */\n  readonly id$ = this.state$.pipe(map(x => x?.id));\n  /** Block size observable */\n  readonly blockSize$ = this.state$.pipe(map(x => x?.blockSize));\n  /** Rotation observable */\n  readonly rotation$ = this.state$.pipe(map(x => x?.rotation));\n  /** Position observable */\n  readonly position$ = this.state$.pipe(map(x => x?.position));\n  /** Slice configuration observable */\n  readonly slicesConfig$ = this.state$.pipe(map(x => x?.slicesConfig));\n  /** View type observable */\n  readonly viewType$ = this.state$.pipe(map(x => x?.viewType));\n  /** View side observable */\n  readonly viewSide$ = this.state$.pipe(map(x => x?.viewSide));\n  /** Organ observable */\n  readonly organ$ = this.state$.pipe(map(x => x?.organ));\n  /** Organ IRI observable */\n  readonly organIri$ = this.state$.pipe(map(x => x?.organIri));\n  /** Organ IRI observable */\n  readonly organDimensions$ = this.state$.pipe(map(x => x?.organDimensions));\n  /** Sex observable */\n  readonly sex$ = this.state$.pipe(map(x => x?.sex));\n  /** Side observable */\n  readonly side$ = this.state$.pipe(map(x => x?.side));\n  /** Show previous observable */\n  readonly showPrevious$ = this.state$.pipe(map(x => x?.showPrevious));\n  /** Extraction sites observable */\n  readonly extractionSites$ = this.state$.pipe(map(x => x?.extractionSites));\n  /** Anatomical structures observable */\n  readonly anatomicalStructures$ = this.state$.pipe(map(x => x?.anatomicalStructures));\n  /** Extraction sets observable */\n  readonly extractionSets$ = this.state$.pipe(map(x => x?.extractionSets));\n\n  @Computed()\n  get modelChanged$(): Observable {\n    const ignoredKeys = ['viewType', 'viewSide', 'showPrevious'];\n    const keys = Object.keys(this.initialState)\n      .filter(key => !ignoredKeys.includes(key));\n\n    return this.state$.pipe(\n      throttleTime(0, undefined, { leading: false, trailing: true }),\n      distinctUntilChanged((v1, v2) => {\n        for (const key of keys) {\n          if (v1[key] !== v2[key]) {\n            return false;\n          }\n        }\n\n        return true;\n      }),\n      map(() => undefined)\n    );\n  }\n\n  /** Reference to the reference data state */\n  private referenceData: ReferenceDataState;\n\n  private page: PageState;\n\n  /**\n   * Creates an instance of model state.\n   *\n   * @param injector Injector service used to lazy load reference data state\n   */\n  constructor(\n    private readonly ga: GoogleAnalyticsService,\n    private readonly injector: Injector,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    super();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    this.referenceData = this.injector.get(ReferenceDataState);\n    this.page = this.injector.get(PageState);\n\n    this.referenceData.state$.subscribe(() => this.onReferenceDataChange());\n  }\n\n  idMatches(ontologyId?: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      ontologyId && o.id === ontologyId ? (o.side ? o.side === organSide : true) : false\n    );\n  }\n\n  nameMatches(organName: string, organSide?: string): OrganInfo | undefined {\n    return ALL_ORGANS.find((o) =>\n      o.side ? o.organ.toLowerCase() === organName && o.side === organSide : o.organ.toLowerCase() === organName\n    );\n  }\n\n  /**\n   * Updates the block size\n   *\n   * @param blockSize The new block size values\n   */\n  @DataAction()\n  setBlockSize(blockSize: XYZTriplet): void {\n    this.ctx.patchState({ blockSize });\n  }\n\n  /**\n   * Updates the rotation\n   *\n   * @param rotation The new rotation values\n   */\n  @DataAction()\n  setRotation(rotation: XYZTriplet): void {\n    this.ctx.patchState({ rotation });\n  }\n\n  /**\n   * Updates the position\n   *\n   * @param position The new position values\n   */\n  @DataAction()\n  setPosition(position: XYZTriplet): void {\n    this.ga.event('placement', `${this.snapshot.organ?.name}_placement`, `${position.x.toFixed(1)}_${position.y.toFixed(1)}_${position.z.toFixed(1)}`);\n    this.ctx.patchState({ position });\n  }\n\n  /**\n   * Updates the slice configuration\n   *\n   * @param slicesConfig The new slice configuration\n   */\n  @DataAction()\n  setSlicesConfig(slicesConfig: SlicesConfig): void {\n    this.ctx.patchState({ slicesConfig });\n  }\n\n  /**\n   * Updates the view type\n   *\n   * @param viewType the new view type\n   */\n  @DataAction()\n  setViewType(viewType: ViewType): void {\n    this.ctx.patchState({ viewType });\n  }\n\n  /**\n   * Updates the view side\n   *\n   * @param viewSide The side to view\n   */\n  @DataAction()\n  setViewSide(viewSide: ViewSide): void {\n    this.ctx.patchState({ viewSide });\n  }\n\n  @Computed()\n  get defaultPosition(): XYZTriplet {\n    const dims = this.snapshot.organDimensions;\n    const block = this.snapshot.blockSize;\n    return { x: dims.x + 2 * block.x, y: dims.y / 2, z: dims.z / 2 };\n  }\n\n  /**\n   * Updates the organ\n   *\n   * @param organ Name of the organ\n   */\n  @DataAction()\n  setOrgan(organ: OrganInfo): void {\n    if (organ) {\n      this.ga.event('organ_select', 'organ', organ.name);\n      this.ctx.patchState({ organ });\n      if (organ.side) {\n        this.ctx.patchState({ side: organ.side });\n      } else {\n        this.ctx.patchState({ side: undefined });\n      }\n      this.onOrganIriChange();\n    }\n  }\n\n  /**\n   * Updates the sex\n   *\n   * @param [sex] The new sex\n   */\n  @DataAction()\n  setSex(sex?: 'male' | 'female'): void {\n    this.ctx.patchState({ sex });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates the side\n   *\n   * @param [side] The new side\n   */\n  @DataAction()\n  setSide(side?: 'left' | 'right'): void {\n    this.ctx.patchState({ side });\n    this.onOrganIriChange();\n  }\n\n  /**\n   * Updates show previous\n   *\n   * @param showPrevious Whether to show\n   */\n  @DataAction()\n  setShowPrevious(showPrevious: boolean): void {\n    this.ctx.patchState({ showPrevious });\n  }\n\n  /**\n   * Updates extraction sites\n   *\n   * @param extractionSites New array of items\n   */\n  @DataAction()\n  setExtractionSites(extractionSites: VisibilityItem[]): void {\n    this.ctx.patchState({ extractionSites });\n  }\n\n  /**\n   * Updates anatomical structures\n   *\n   * @param anatomicalStructures New array of items\n   */\n  @DataAction()\n  setAnatomicalStructures(anatomicalStructures: VisibilityItem[]): void {\n    this.ctx.patchState({ anatomicalStructures });\n  }\n\n  /**\n   * Updates extraction sets\n   *\n   * @param extractionSets New array of extraction sets\n   */\n  @DataAction()\n  setExtractionSets(extractionSets: ExtractionSet[]): void {\n    this.ctx.patchState({ extractionSets });\n  }\n\n  /**\n   * Toggles registration blocks visibility and handles anatomical structures\n   * opacity changes accordingly\n   *\n   * @param visible the visible state to pass along to setShowPrevious()\n   * @param previousItems visibilityItems to set anatomical structures\n   */\n  toggleRegistrationBlocksVisibility(visible: boolean, previousItems: VisibilityItem[]): void {\n    this.setShowPrevious(visible);\n\n    if (!visible) {\n      this.setAnatomicalStructures(previousItems);\n    } else {\n      const newStructures = previousItems.map(structure => ({\n        ...structure, opacity: Math.min(20, structure.opacity ?? 20)\n      }));\n      this.setAnatomicalStructures(newStructures);\n    }\n  }\n\n  private onOrganIriChange(): void {\n    const organIri = this.referenceData.getReferenceOrganIri(\n      this.snapshot.organ?.organ || '', this.snapshot.sex, this.snapshot.side, this.snapshot.organ\n    );\n    const organDimensions: XYZTriplet = { x: 100, y: 100, z: 100 };\n\n    if (this.snapshot.organ?.sex) {\n      this.ctx.patchState({ sex: this.snapshot.organ?.sex });\n    }\n\n    if (organIri) {\n      const db = this.referenceData.snapshot;\n      const asLookup: { [id: string]: VisibilityItem } = {};\n      for (const entity of (db.anatomicalStructures[organIri] || [])) {\n        const iri = entity.representation_of ?? entity['@id'];\n        if (!asLookup[iri]) {\n          asLookup[iri] = {\n            id: entity.representation_of ?? entity['@id'],\n            name: entity.label!,\n            visible: true,\n            opacity: 20,\n            tooltip: entity.comment\n          };\n        }\n      }\n      this.ctx.patchState({ anatomicalStructures: [{ id: 'all', name: 'all anatomical structures', opacity: 20, visible: true }, ...Object.values(asLookup)] });\n\n      const sets: ExtractionSet[] = (db.extractionSets[organIri] || []).map((set) => ({\n        name: set.label,\n        sites: [{ id: 'all', name: 'all landmarks', visible: true, opacity: 0 }].concat(sortBy(set.extractionSites.map((entity) => ({\n          id: entity['@id'],\n          name: entity.label!,\n          visible: true,\n          opacity: 0,\n          tooltip: entity.comment\n        })), 'name'))\n      }));\n      this.ctx.patchState({ extractionSets: sets });\n      this.ctx.patchState({ extractionSites: sets.length > 0 ? sets[0].sites : [] });\n\n      const spatialEntity = db.organSpatialEntities[organIri];\n      organDimensions.x = spatialEntity.x_dimension;\n      organDimensions.y = spatialEntity.y_dimension;\n      organDimensions.z = spatialEntity.z_dimension;\n    }\n\n    this.ctx.patchState({ organIri, organDimensions });\n    this.ctx.patchState({ position: this.defaultPosition });\n  }\n\n  private onReferenceDataChange(): void {\n    this.globalConfig.getOption('organ').pipe(\n      filterNulls(),\n      delay(0),\n      switchMap(organ => this.onOrganChange(organ))\n    ).subscribe();\n\n    this.modelChanged$.pipe(\n      skipUntil(this.page.registrationStarted$.pipe(\n        filter(started => started),\n      ))\n    ).subscribe(() => this.page.setHasChanges());\n  }\n\n  private onOrganChange(organ: string | OrganConfig): Observable {\n    let organInfo: OrganInfo | undefined;\n    let organSex: 'male' | 'female';\n    if (typeof organ === 'string') {\n      const organData = this.referenceData.getOrganData(organ);\n      organSex = organData?.sex?.toLowerCase() as 'male' | 'female';\n      organInfo = organData?.organ;\n    } else {\n      const organName = organ.name.toLowerCase();\n      const organSide = organ.side;\n      const ontologyId = organ.ontologyId;\n      organSex = organ.sex?.toLowerCase() as 'male' | 'female';\n      // check for an id match\n      organInfo = this.idMatches(ontologyId, organSide);\n      // if no id matches, check for a name match\n      if (!organInfo) {\n        organInfo = this.nameMatches(organName, organSide);\n      }\n    }\n\n    if (organInfo) {\n      this.ctx.patchState({\n        organ: organInfo,\n        sex: organSex,\n        side: organInfo?.side?.toLowerCase() as 'left' | 'right'\n      });\n      return this.referenceData.state$.pipe(\n        tap(() => this.onOrganIriChange())\n      );\n    }\n\n    return EMPTY;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.7.2 - 2023-07-12\nAdded in 3.7.2\n\nClient side cache has been updated to be more sensitive to configuration changes. Fixes hra-registrations#1\n\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-rui/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app-web-component.component.ts\n            \n            function\n            parseOrgan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                54 %\n                (12/22)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/app.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n            \n            interface\n            Tag\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n            \n            interface\n            TagSearchResult\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/documentation.ts\n            \n            interface\n            DocumentationContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/extraction-set.ts\n            \n            interface\n            ExtractionSet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/meta-data.ts\n            \n            interface\n            MetaDataField\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/models/visibility-item.ts\n            \n            interface\n            VisibilityItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            interface\n            OrganConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            function\n            globalConfigFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            variable\n            GLOBAL_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/config/config.ts\n            \n            variable\n            ruiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n            \n            injectable\n            ThemingService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n            \n            variable\n            DEFAULT_THEME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n            \n            injectable\n            AnatomicalStructureTagState\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/anatomical-structure-tags/anatomical-structure-tags.state.ts\n            \n            interface\n            AnatomicalStructureTagStateModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n            \n            interface\n            DefaultIconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n            \n            variable\n            DEFAULT_ICONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            injectable\n            IconRegistryState\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            interface\n            IconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            injectable\n            ModelState\n            \n                85 %\n                (34/40)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            ModelStateModel\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            SlicesConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            interface\n            XYZTriplet\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/model/model.state.ts\n            \n            variable\n            RUI_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            injectable\n            PageState\n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            interface\n            PageStateModel\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/page/page.state.ts\n            \n            interface\n            Person\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            injectable\n            ReferenceDataState\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            interface\n            OrganData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            interface\n            ReferenceDataStateModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n            \n            function\n            applySpatialPlacement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n            \n            injectable\n            RegistrationState\n            \n                85 %\n                (17/20)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/registration/registration.state.ts\n            \n            interface\n            RegistrationStateModel\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            injectable\n            SceneState\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            interface\n            SceneStateModel\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n            \n            function\n            getNodeBbox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                76 %\n                (13/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n            \n            component\n            StageNavComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/video-modal/video-modal-launcher/video-modal-launcher.component.ts\n            \n            component\n            VideoModalLauncherComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/content/video-modal/video-modal/video-modal.component.ts\n            \n            component\n            VideoModalComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/left-sidebar/left-sidebar.component.ts\n            \n            component\n            LeftSidebarComponent\n            \n                63 %\n                (12/19)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/registration-modal/registration-content/registration-content.component.ts\n            \n            component\n            RegistrationContentComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/registration-modal/registration-modal/registration-modal.component.ts\n            \n            component\n            RegistrationModalComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-button/review-button.component.ts\n            \n            component\n            ReviewButtonComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n            \n            component\n            ReviewModalComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/review/review-modal/review-modal.component.ts\n            \n            interface\n            ReviewModalData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/modules/right-sidebar/right-sidebar.component.ts\n            \n            component\n            RightSidebarComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            component\n            BlockSizeInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            interface\n            BlockSize\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n            \n            variable\n            DEFAULT_BLOCK_SIZE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/details-label/details-label.component.ts\n            \n            component\n            DetailsLabelComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n            \n            function\n            throwDuplicateDrawersError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            component\n            DrawerComponent\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            class\n            InitializationState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            variable\n            EXPAND_COLLAPSE_PARAMS_DEFAULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            ContentContainerChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerContainersChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerInitialized\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerToggled\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n            \n            variable\n            MessageService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n            \n            component\n            ToggleButtonComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/extraction-set-dropdown/extraction-set-dropdown.component.ts\n            \n            component\n            ExtractionSetDropdownComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/json-file-reader/json-file-reader.component.ts\n            \n            component\n            JsonFileReaderComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/labeled-slide-toggle/labeled-slide-toggle.component.ts\n            \n            component\n            LabeledSlideToggleComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n            \n            component\n            NameInputComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/name-input/name-input.component.ts\n            \n            interface\n            UserName\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/registration-metadata/registration-metadata.component.ts\n            \n            component\n            RegistrationMetadataComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            component\n            RotationSliderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            interface\n            Rotation\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n            \n            variable\n            DEFAULT_ROTATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            component\n            SlicesInputComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            interface\n            SlicesConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n            \n            variable\n            DEFAULT_SLICES_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-list/tag-list.component.ts\n            \n            component\n            TagListComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            component\n            TagSearchComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            DEFAULT_SEARCH_LIMIT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            DEFAULT_SEARCH_THROTTLE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n            \n            variable\n            EMPTY_RESULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/visibility-menu/visibility-menu.component.ts\n            \n            component\n            VisibilityMenuComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/components/visibility-toggle/visibility-toggle.component.ts\n            \n            component\n            VisibilityToggleComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            class\n            MessageChannel\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            injectable\n            MessageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            Message\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            MessageServiceConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-rui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_DEFAULT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/cdk : 14.10.1\n        \n            @angular-ru/common : 15.313.0\n        \n            @angular-ru/ngxs : 14.1.4\n        \n            @angular-slider/ngx-slider : ^2.0.4\n        \n            @angular/animations : ^16.1.5\n        \n            @angular/cdk : ^16.1.5\n        \n            @angular/common : ^16.1.5\n        \n            @angular/compiler : ^16.1.5\n        \n            @angular/core : ^16.1.6\n        \n            @angular/elements : ^16.1.6\n        \n            @angular/forms : ^16.1.5\n        \n            @angular/material : ^16.1.5\n        \n            @angular/platform-browser : ^16.1.5\n        \n            @angular/platform-browser-dynamic : ^16.1.5\n        \n            @angular/router : ^16.1.5\n        \n            @angular/youtube-player : ^16.1.5\n        \n            @comunica/query-sparql-rdfjs : ^2.8.1\n        \n            @deck.gl/core : ~8.8.20\n        \n            @deck.gl/geo-layers : ~8.8.20\n        \n            @deck.gl/layers : ~8.8.20\n        \n            @deck.gl/mesh-layers : ~8.8.20\n        \n            @loaders.gl/core : ~3.2.10\n        \n            @loaders.gl/draco : ~3.2.10\n        \n            @loaders.gl/gltf : ~3.2.10\n        \n            @luma.gl/core : ~8.5.16\n        \n            @math.gl/core : ~3.6.3\n        \n            @math.gl/culling : ~3.5.7\n        \n            @ngxs-labs/dispatch-decorator : ^5.0.0\n        \n            @ngxs/logger-plugin : ^3.8.1\n        \n            @ngxs/storage-plugin : ^3.8.1\n        \n            @ngxs/store : ^3.8.1\n        \n            @rdfjs/data-model : ^2.0.1\n        \n            @webcomponents/webcomponentsjs : ^2.8.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.20.2\n        \n            cannon-es : ^0.20.0\n        \n            comlink : ^4.4.1\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.14.10\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^11.1.1\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^7.0.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.2.1\n        \n            jsonld : ^8.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^10.0.0\n        \n            n3 : ^1.17.0\n        \n            ngx-google-analytics : ^14.0.1\n        \n            ngx-markdown : ^16.0.0\n        \n            ngx-slider-v2 : ^16.0.2\n        \n            node-fetch : ^3.3.2\n        \n            object-hash : ^3.0.0\n        \n            qs : ^6.11.2\n        \n            rdf-literal : ^1.3.1\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^4.4.2\n        \n            rxjs : ^7.8.1\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^8.0.6\n        \n            ts-cacheable : ^1.0.9\n        \n            tslib : ^2.6.1\n        \n            uuid : ^9.0.0\n        \n            zone.js : ~0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            applySpatialPlacement   (projects/.../reference-data.state.ts)\n                        \n                        \n                            getNodeBbox   (projects/.../scene.state.ts)\n                        \n                        \n                            globalConfigFactory   (projects/.../config.ts)\n                        \n                        \n                            parseOrgan   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            throwDuplicateDrawersError   (projects/.../container.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/core/store/reference-data/reference-data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applySpatialPlacement\n                        \n                    \n                \n            \n            \n                \napplySpatialPlacement(tx: Matrix4, placement: Immutable)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tx\n                                            \n                                                        Matrix4\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                placement\n                                            \n                                                        Immutable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Matrix4\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getNodeBbox\n                        \n                    \n                \n            \n            \n                \ngetNodeBbox(model: SpatialSceneNode)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                model\n                                            \n                                                        SpatialSceneNode\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     AABB\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/services/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        globalConfigFactory\n                        \n                    \n                \n            \n            \n                \nglobalConfigFactory(globals: GlobalsService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                globals\n                                            \n                                                        GlobalsService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         GlobalConfig\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseOrgan\n                        \n                    \n                \n            \n            \n                \nparseOrgan(value)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string | Organ\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/container/container.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throwDuplicateDrawersError\n                        \n                    \n                \n            \n            \n                \nthrowDuplicateDrawersError(position)\n                \n            \n\n\n\n\n            \n                \n                        Helper function for creating drawer errors.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                position\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The position of the drawer.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     never\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the EUI, RUI, and Organ-Info.\nWebsite Links\n\nHRA Exploration User Interface (EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nHRA Registration User Interface (RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nHRA Organ Info Component (Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nHRA API\nProduction: https://apps.humanatlas.io/hra-api/\nStaging: https://apps.humanatlas.io/hra-api--staging/\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nHRA API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\nHRA API Sample Notebooks/Vignettes:\nPython 3.6+:\nBasic Usage: ccf-api-usage.ipynb\nUse case walkthrough: ccf-api-usecase.ipynb\n\n\nJavaScript:\nBasic Usage: https://observablehq.com/@cns-iu/ccf-api-documentation-javascript\nUse case walkthrough: https://observablehq.com/@cns-iu/ccf-api-usecase-javascript\n\n\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockSizeInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DetailsLabelModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExtractionSetDropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JsonFileReaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LabeledSlideToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeftSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NameInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationMetadataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegistrationModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RightSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RotationSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SlicesInputModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StageNavModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideoModalLauncherModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideoModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisibilityMenuModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisibilityToggleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_BlockSizeInputModule\n\n\n\ncluster_BlockSizeInputModule_declarations\n\n\n\ncluster_BlockSizeInputModule_exports\n\n\n\ncluster_ContentModule\n\n\n\ncluster_ContentModule_declarations\n\n\n\ncluster_ContentModule_imports\n\n\n\ncluster_ContentModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DetailsLabelModule\n\n\n\ncluster_DetailsLabelModule_declarations\n\n\n\ncluster_DetailsLabelModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_ExtractionSetDropdownModule\n\n\n\ncluster_ExtractionSetDropdownModule_declarations\n\n\n\ncluster_ExtractionSetDropdownModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_JsonFileReaderModule\n\n\n\ncluster_JsonFileReaderModule_declarations\n\n\n\ncluster_JsonFileReaderModule_exports\n\n\n\ncluster_LabeledSlideToggleModule\n\n\n\ncluster_LabeledSlideToggleModule_declarations\n\n\n\ncluster_LabeledSlideToggleModule_exports\n\n\n\ncluster_LeftSidebarModule\n\n\n\ncluster_LeftSidebarModule_declarations\n\n\n\ncluster_LeftSidebarModule_imports\n\n\n\ncluster_LeftSidebarModule_exports\n\n\n\ncluster_NameInputModule\n\n\n\ncluster_NameInputModule_declarations\n\n\n\ncluster_NameInputModule_exports\n\n\n\ncluster_RegistrationContentModule\n\n\n\ncluster_RegistrationContentModule_declarations\n\n\n\ncluster_RegistrationContentModule_imports\n\n\n\ncluster_RegistrationContentModule_exports\n\n\n\ncluster_RegistrationMetadataModule\n\n\n\ncluster_RegistrationMetadataModule_declarations\n\n\n\ncluster_RegistrationMetadataModule_exports\n\n\n\ncluster_RegistrationModalModule\n\n\n\ncluster_RegistrationModalModule_declarations\n\n\n\ncluster_RegistrationModalModule_exports\n\n\n\ncluster_ReviewButtonModule\n\n\n\ncluster_ReviewButtonModule_declarations\n\n\n\ncluster_ReviewButtonModule_imports\n\n\n\ncluster_ReviewButtonModule_exports\n\n\n\ncluster_ReviewModalModule\n\n\n\ncluster_ReviewModalModule_declarations\n\n\n\ncluster_ReviewModalModule_exports\n\n\n\ncluster_RightSidebarModule\n\n\n\ncluster_RightSidebarModule_declarations\n\n\n\ncluster_RightSidebarModule_imports\n\n\n\ncluster_RightSidebarModule_exports\n\n\n\ncluster_RotationSliderModule\n\n\n\ncluster_RotationSliderModule_declarations\n\n\n\ncluster_RotationSliderModule_exports\n\n\n\ncluster_SlicesInputModule\n\n\n\ncluster_SlicesInputModule_declarations\n\n\n\ncluster_SlicesInputModule_exports\n\n\n\ncluster_StageNavModule\n\n\n\ncluster_StageNavModule_declarations\n\n\n\ncluster_StageNavModule_exports\n\n\n\ncluster_TagListModule\n\n\n\ncluster_TagListModule_declarations\n\n\n\ncluster_TagListModule_exports\n\n\n\ncluster_TagSearchModule\n\n\n\ncluster_TagSearchModule_declarations\n\n\n\ncluster_TagSearchModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_VideoModalLauncherModule\n\n\n\ncluster_VideoModalLauncherModule_declarations\n\n\n\ncluster_VideoModalLauncherModule_exports\n\n\n\ncluster_VideoModalModule\n\n\n\ncluster_VideoModalModule_declarations\n\n\n\ncluster_VideoModalModule_exports\n\n\n\ncluster_VisibilityMenuModule\n\n\n\ncluster_VisibilityMenuModule_declarations\n\n\n\ncluster_VisibilityMenuModule_exports\n\n\n\ncluster_VisibilityToggleModule\n\n\n\ncluster_VisibilityToggleModule_declarations\n\n\n\ncluster_VisibilityToggleModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nContentModule\n\nContentModule\n\nAppModule -->\n\nContentModule->AppModule\n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nContentModule->ContentComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nLeftSidebarModule\n\nLeftSidebarModule\n\nAppModule -->\n\nLeftSidebarModule->AppModule\n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLeftSidebarModule->LeftSidebarComponent \n\n\n\n\n\nRegistrationModalModule\n\nRegistrationModalModule\n\nAppModule -->\n\nRegistrationModalModule->AppModule\n\n\n\n\n\nRegistrationModalComponent \n\nRegistrationModalComponent \n\nRegistrationModalComponent  -->\n\nRegistrationModalModule->RegistrationModalComponent \n\n\n\n\n\nRightSidebarModule\n\nRightSidebarModule\n\nAppModule -->\n\nRightSidebarModule->AppModule\n\n\n\n\n\nRightSidebarComponent \n\nRightSidebarComponent \n\nRightSidebarComponent  -->\n\nRightSidebarModule->RightSidebarComponent \n\n\n\n\n\nBlockSizeInputComponent\n\nBlockSizeInputComponent\n\n\n\nBlockSizeInputModule\n\nBlockSizeInputModule\n\nBlockSizeInputModule -->\n\nBlockSizeInputComponent->BlockSizeInputModule\n\n\n\nRightSidebarModule -->\n\nBlockSizeInputModule->RightSidebarModule\n\n\n\n\n\nBlockSizeInputComponent \n\nBlockSizeInputComponent \n\nBlockSizeInputComponent  -->\n\nBlockSizeInputModule->BlockSizeInputComponent \n\n\n\n\n\nContentComponent\n\nContentComponent\n\nContentModule -->\n\nContentComponent->ContentModule\n\n\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nStageNavModule\n\nStageNavModule\n\nContentModule -->\n\nStageNavModule->ContentModule\n\n\n\n\n\nStageNavComponent \n\nStageNavComponent \n\nStageNavComponent  -->\n\nStageNavModule->StageNavComponent \n\n\n\n\n\nVideoModalLauncherModule\n\nVideoModalLauncherModule\n\nContentModule -->\n\nVideoModalLauncherModule->ContentModule\n\n\n\n\n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent \n\nVideoModalLauncherComponent  -->\n\nVideoModalLauncherModule->VideoModalLauncherComponent \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nDetailsLabelComponent\n\nDetailsLabelComponent\n\n\n\nDetailsLabelModule\n\nDetailsLabelModule\n\nDetailsLabelModule -->\n\nDetailsLabelComponent->DetailsLabelModule\n\n\n\nLeftSidebarModule -->\n\nDetailsLabelModule->LeftSidebarModule\n\n\n\n\n\nDetailsLabelComponent \n\nDetailsLabelComponent \n\nDetailsLabelComponent  -->\n\nDetailsLabelModule->DetailsLabelComponent \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nExtractionSetDropdownComponent\n\nExtractionSetDropdownComponent\n\n\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule\n\nExtractionSetDropdownModule -->\n\nExtractionSetDropdownComponent->ExtractionSetDropdownModule\n\n\n\nLeftSidebarModule -->\n\nExtractionSetDropdownModule->LeftSidebarModule\n\n\n\n\n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent \n\nExtractionSetDropdownComponent  -->\n\nExtractionSetDropdownModule->ExtractionSetDropdownComponent \n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nJsonFileReaderComponent\n\nJsonFileReaderComponent\n\n\n\nJsonFileReaderModule\n\nJsonFileReaderModule\n\nJsonFileReaderModule -->\n\nJsonFileReaderComponent->JsonFileReaderModule\n\n\n\n\n\nJsonFileReaderComponent \n\nJsonFileReaderComponent \n\nJsonFileReaderComponent  -->\n\nJsonFileReaderModule->JsonFileReaderComponent \n\n\n\n\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule\n\nRegistrationMetadataModule -->\n\nJsonFileReaderModule->RegistrationMetadataModule\n\n\n\n\n\nLabeledSlideToggleComponent\n\nLabeledSlideToggleComponent\n\n\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule\n\nLabeledSlideToggleModule -->\n\nLabeledSlideToggleComponent->LabeledSlideToggleModule\n\n\n\nLeftSidebarModule -->\n\nLabeledSlideToggleModule->LeftSidebarModule\n\n\n\nStageNavModule -->\n\nLabeledSlideToggleModule->StageNavModule\n\n\n\n\n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent \n\nLabeledSlideToggleComponent  -->\n\nLabeledSlideToggleModule->LabeledSlideToggleComponent \n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nLeftSidebarModule -->\n\nLeftSidebarComponent->LeftSidebarModule\n\n\n\n\n\nNameInputModule\n\nNameInputModule\n\nLeftSidebarModule -->\n\nNameInputModule->LeftSidebarModule\n\n\n\n\n\nNameInputComponent \n\nNameInputComponent \n\nNameInputComponent  -->\n\nNameInputModule->NameInputComponent \n\n\n\nRegistrationMetadataModule -->\n\nNameInputModule->RegistrationMetadataModule\n\n\n\n\n\nVisibilityMenuModule\n\nVisibilityMenuModule\n\nLeftSidebarModule -->\n\nVisibilityMenuModule->LeftSidebarModule\n\n\n\n\n\nVisibilityMenuComponent \n\nVisibilityMenuComponent \n\nVisibilityMenuComponent  -->\n\nVisibilityMenuModule->VisibilityMenuComponent \n\n\n\n\n\nVisibilityToggleModule\n\nVisibilityToggleModule\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\nLeftSidebarModule -->\n\nVisibilityToggleModule->LeftSidebarModule\n\n\n\n\n\nVisibilityToggleComponent \n\nVisibilityToggleComponent \n\nVisibilityToggleComponent  -->\n\nVisibilityToggleModule->VisibilityToggleComponent \n\n\n\n\n\nNameInputComponent\n\nNameInputComponent\n\nNameInputModule -->\n\nNameInputComponent->NameInputModule\n\n\n\n\n\nRegistrationContentComponent\n\nRegistrationContentComponent\n\n\n\nRegistrationContentModule\n\nRegistrationContentModule\n\nRegistrationContentModule -->\n\nRegistrationContentComponent->RegistrationContentModule\n\n\n\nRegistrationModalModule -->\n\nRegistrationContentModule->RegistrationModalModule\n\n\n\n\n\nRegistrationContentComponent \n\nRegistrationContentComponent \n\nRegistrationContentComponent  -->\n\nRegistrationContentModule->RegistrationContentComponent \n\n\n\nRightSidebarModule -->\n\nRegistrationMetadataModule->RightSidebarModule\n\n\n\nRegistrationContentModule -->\n\nRegistrationMetadataModule->RegistrationContentModule\n\n\n\n\n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent \n\nRegistrationMetadataComponent  -->\n\nRegistrationMetadataModule->RegistrationMetadataComponent \n\n\n\n\n\nRegistrationMetadataComponent\n\nRegistrationMetadataComponent\n\nRegistrationMetadataModule -->\n\nRegistrationMetadataComponent->RegistrationMetadataModule\n\n\n\n\n\nRegistrationModalComponent\n\nRegistrationModalComponent\n\nRegistrationModalModule -->\n\nRegistrationModalComponent->RegistrationModalModule\n\n\n\n\n\nReviewButtonComponent\n\nReviewButtonComponent\n\n\n\nReviewButtonModule\n\nReviewButtonModule\n\nReviewButtonModule -->\n\nReviewButtonComponent->ReviewButtonModule\n\n\n\nRightSidebarModule -->\n\nReviewButtonModule->RightSidebarModule\n\n\n\n\n\nReviewButtonComponent \n\nReviewButtonComponent \n\nReviewButtonComponent  -->\n\nReviewButtonModule->ReviewButtonComponent \n\n\n\n\n\nReviewModalModule\n\nReviewModalModule\n\nReviewButtonModule -->\n\nReviewModalModule->ReviewButtonModule\n\n\n\n\n\nReviewModalComponent \n\nReviewModalComponent \n\nReviewModalComponent  -->\n\nReviewModalModule->ReviewModalComponent \n\n\n\n\n\nReviewModalComponent\n\nReviewModalComponent\n\nReviewModalModule -->\n\nReviewModalComponent->ReviewModalModule\n\n\n\n\n\nRightSidebarComponent\n\nRightSidebarComponent\n\nRightSidebarModule -->\n\nRightSidebarComponent->RightSidebarModule\n\n\n\n\n\nRotationSliderModule\n\nRotationSliderModule\n\nRightSidebarModule -->\n\nRotationSliderModule->RightSidebarModule\n\n\n\n\n\nRotationSliderComponent \n\nRotationSliderComponent \n\nRotationSliderComponent  -->\n\nRotationSliderModule->RotationSliderComponent \n\n\n\n\n\nSlicesInputModule\n\nSlicesInputModule\n\nRightSidebarModule -->\n\nSlicesInputModule->RightSidebarModule\n\n\n\n\n\nSlicesInputComponent \n\nSlicesInputComponent \n\nSlicesInputComponent  -->\n\nSlicesInputModule->SlicesInputComponent \n\n\n\n\n\nTagListModule\n\nTagListModule\n\nRightSidebarModule -->\n\nTagListModule->RightSidebarModule\n\n\n\n\n\nTagListComponent \n\nTagListComponent \n\nTagListComponent  -->\n\nTagListModule->TagListComponent \n\n\n\n\n\nTagSearchModule\n\nTagSearchModule\n\nRightSidebarModule -->\n\nTagSearchModule->RightSidebarModule\n\n\n\n\n\nTagSearchComponent \n\nTagSearchComponent \n\nTagSearchComponent  -->\n\nTagSearchModule->TagSearchComponent \n\n\n\n\n\nRotationSliderComponent\n\nRotationSliderComponent\n\nRotationSliderModule -->\n\nRotationSliderComponent->RotationSliderModule\n\n\n\n\n\nSlicesInputComponent\n\nSlicesInputComponent\n\nSlicesInputModule -->\n\nSlicesInputComponent->SlicesInputModule\n\n\n\n\n\nStageNavComponent\n\nStageNavComponent\n\nStageNavModule -->\n\nStageNavComponent->StageNavModule\n\n\n\n\n\nTagListComponent\n\nTagListComponent\n\nTagListModule -->\n\nTagListComponent->TagListModule\n\n\n\n\n\nTagSearchComponent\n\nTagSearchComponent\n\nTagSearchModule -->\n\nTagSearchComponent->TagSearchModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nVideoModalLauncherComponent\n\nVideoModalLauncherComponent\n\nVideoModalLauncherModule -->\n\nVideoModalLauncherComponent->VideoModalLauncherModule\n\n\n\n\n\nVideoModalComponent\n\nVideoModalComponent\n\n\n\nVideoModalModule\n\nVideoModalModule\n\nVideoModalModule -->\n\nVideoModalComponent->VideoModalModule\n\n\n\n\n\nVideoModalComponent \n\nVideoModalComponent \n\nVideoModalComponent  -->\n\nVideoModalModule->VideoModalComponent \n\n\n\n\n\nVisibilityMenuComponent\n\nVisibilityMenuComponent\n\nVisibilityMenuModule -->\n\nVisibilityMenuComponent->VisibilityMenuModule\n\n\n\n\n\nVisibilityToggleComponent\n\nVisibilityToggleComponent\n\nVisibilityToggleModule -->\n\nVisibilityToggleComponent->VisibilityToggleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        30 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    33 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.7.2\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CancelRegistrationCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            FetchPreviousRegistrationsCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            MetaData   (projects/.../meta-data.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            Organ   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            RegistrationCallback   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            Side   (projects/.../stage-nav.component.ts)\n                        \n                        \n                            TagId   (projects/.../anatomical-structure-tag.ts)\n                        \n                        \n                            User   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            ViewSide   (projects/.../model.state.ts)\n                        \n                        \n                            ViewType   (projects/.../model.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/app-web-component.component.ts\n    \n    \n        \n            \n                \n                    \n                    CancelRegistrationCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPreviousRegistrationsCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Organ\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RegistrationCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container.\n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers.\n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type.\n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type.\n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type.\n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components.\n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer.\n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/models/meta-data.ts\n    \n    \n        \n            \n                \n                    \n                    MetaData\n                \n            \n            \n                \n                            MetaDataField[]\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/modules/content/stage-nav/stage-nav.component.ts\n    \n    \n        \n            \n                \n                    \n                    Side\n                \n            \n            \n                \n                    Valid values for side.\n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\" | \"3D\"\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/models/anatomical-structure-tag.ts\n    \n    \n        \n            \n                \n                    \n                    TagId\n                \n            \n            \n                \n                    Type for tag identifiers\n\n                \n            \n            \n                \n                        string | number\n\n                \n            \n        \n    \n    projects/ccf-rui/src/app/core/store/model/model.state.ts\n    \n    \n        \n            \n                \n                    \n                    ViewSide\n                \n            \n            \n                \n                    Side which the model is viewed from\n\n                \n            \n            \n                \n                        \"left\" | \"right\" | \"anterior\" | \"posterior\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ViewType\n                \n            \n            \n                \n                    Model view type\n\n                \n            \n            \n                \n                        \"register\" | \"3d\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_BLOCK_SIZE   (projects/.../block-size-input.component.ts)\n                        \n                        \n                            DEFAULT_ICONS   (projects/.../default-icons.ts)\n                        \n                        \n                            DEFAULT_ROTATION   (projects/.../rotation-slider.component.ts)\n                        \n                        \n                            DEFAULT_SEARCH_LIMIT   (projects/.../tag-search.component.ts)\n                        \n                        \n                            DEFAULT_SEARCH_THROTTLE   (projects/.../tag-search.component.ts)\n                        \n                        \n                            DEFAULT_SLICES_CONFIG   (projects/.../slices-input.component.ts)\n                        \n                        \n                            DEFAULT_THEME   (projects/.../theming.service.ts)\n                        \n                        \n                            EMPTY_RESULT   (projects/.../tag-search.component.ts)\n                        \n                        \n                            EXPAND_COLLAPSE_PARAMS_DEFAULT   (projects/.../drawer.component.ts)\n                        \n                        \n                            GLOBAL_CONFIG   (projects/.../config.ts)\n                        \n                        \n                            MESSAGE_SERVICE_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MESSAGE_SERVICE_DEFAULT_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                        \n                            RUI_ORGANS   (projects/.../model.state.ts)\n                        \n                        \n                            ruiConfig   (projects/.../config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-rui/src/app/shared/components/block-size-input/block-size-input.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_BLOCK_SIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockSize\n\n                    \n                \n                \n                    \n                        Default value : {\n  x: 10,\n  y: 10,\n  z: 10\n}\n                    \n                \n\n            \n                \n                    Defaults for block sizes.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/icon-registry/default-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultIconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'larynx', namespace: 'app', url: 'assets/icons/organs/ico-organs-larynx.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'main-bronchus', namespace: 'app', url: 'assets/icons/organs/ico-organs-extrapulmonary bronchus.svg' },\n  { name: 'mammary-gland', namespace: 'app', url: 'assets/icons/organs/ico-organs-breast.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'palatine-tonsil', namespace: 'app', url: 'assets/icons/organs/ico-organs-palatine tonsil.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organs/ico-organs-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organs/ico-organs-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'trachea', namespace: 'app', url: 'assets/icons/organs/ico-organs-trachea.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'visibility_off_cube', namespace: 'app', url: 'assets/icons/ico-cube.svg' }\n]\n                    \n                \n\n            \n                \n                    Icons registered at startup.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/rotation-slider/rotation-slider.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ROTATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Rotation\n\n                    \n                \n                \n                    \n                        Default value : {\n  x: 0,\n  y: 0,\n  z: 0\n}\n                    \n                \n\n            \n                \n                    Default values for rotation.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/tag-search/tag-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEARCH_LIMIT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n            \n                \n                    Default search results limit\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SEARCH_THROTTLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n\n            \n                \n                    Default search throttle time in ms\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EMPTY_RESULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagSearchResult\n\n                    \n                \n                \n                    \n                        Default value : { totalCount: 0, results: [] }\n                    \n                \n\n            \n                \n                    Empty search result object\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/slices-input/slices-input.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SLICES_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SlicesConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  thickness: NaN,\n  numSlices: NaN\n}\n                    \n                \n\n            \n                \n                    Default values for slices config.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/services/theming/theming.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_THEME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Default theme class')\n                    \n                \n\n            \n                \n                    Token for specifying the default theme class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXPAND_COLLAPSE_PARAMS_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n}\n                    \n                \n\n            \n                \n                    Default animation parameters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/services/config/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GLOBAL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Global configuration object'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ruiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConfig\n\n                    \n                \n\n\n        \n    \n\n    projects/ccf-rui/src/app/shared/services/message/message.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n)\n                    \n                \n\n            \n                \n                    Token for specifying the message service configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageServiceConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  isolated: true\n}\n                    \n                \n\n            \n                \n                    Default message service configuration.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/shared/components/drawer/messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MessageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GenericMessageService\n                    \n                \n\n            \n                \n                    Reference to the service class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState,\n  IconRegistryState,\n  PageState,\n  ModelState,\n  AnatomicalStructureTagState,\n  ReferenceDataState,\n  RegistrationState,\n  SceneState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n    projects/ccf-rui/src/app/core/store/model/model.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RUI_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_ORGANS\n                    \n                \n\n            \n                \n                    All organs to be displayed\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
