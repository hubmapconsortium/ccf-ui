var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AnalyticsModule.html",[0,0.858,1,2.731]],["body/modules/AnalyticsModule.html",[0,1.015,1,5.48,2,1.704,3,1.704,4,1.289,5,1.906,6,1.906,7,2.397,8,1.906,9,4.184,10,4.184,11,3.929,12,0.014,13,4.58,14,4.58,15,2.37,16,1.835,17,1.479,18,0.153,19,0.187,20,0.136,21,0.153,22,3.232,23,1.125,24,3.166,25,4.801,26,5.403,27,5.058,28,0.947,29,4.801,30,1.164,31,0.792,32,0.378,33,0.852,34,3.495,35,0.681,36,5.984,37,0.407,38,5.403,39,2.624,40,0.337,41,4.879,42,5.403,43,2.707,44,3.166,45,3.024,46,3.475,47,5.403,48,3.778,49,2.707,50,0.242,51,0.441,52,4.184,53,0.829,54,5.984,55,5.984,56,5.984,57,1.704,58,1.219,59,4.97,60,2.049,61,3.778,62,3.166,63,1.242,64,4.184,65,2.342,66,1.555,67,2.342,68,4.184,69,4.184,70,4.879,71,4.184,72,1.704,73,2.342,74,3.475,75,1.981,76,3.031,77,4.184,78,2.148,79,4.184,80,1.768,81,4.184,82,0.102,83,4.184,84,4.184,85,0.01,86,0.01]],["title/interfaces/AnalyticsOptions.html",[27,2.731,51,0.373]],["body/interfaces/AnalyticsOptions.html",[1,4.236,7,2.215,11,3.213,12,0.014,13,3.746,14,3.746,18,0.156,19,0.192,20,0.139,21,0.122,22,3.308,24,2.509,26,4.282,27,4.928,32,0.576,33,1.374,34,2.77,36,5.484,37,0.41,38,5.484,39,2.653,40,0.345,41,4.952,42,5.484,43,2.77,44,3.213,45,3.069,46,3.556,47,5.484,48,3.866,49,2.77,50,0.246,51,0.452,52,6.38,53,0.972,54,6.747,55,6.747,56,6.747,57,2.464,58,1.232,59,5.024,60,2.079,61,3.866,62,3.213,63,1.253,64,4.282,65,2.397,66,1.573,67,2.397,68,4.282,69,4.282,70,4.952,71,4.282,72,1.744,73,2.397,74,3.556,75,2.028,76,3.101,77,4.282,78,2.198,79,4.282,80,1.809,81,4.282,82,0.105,83,4.282,84,4.282,85,0.01,86,0.01,87,1.567,88,0.43,89,0.825]],["title/interfaces/ApiEndpointDataSourceOptions.html",[51,0.373,90,2.561]],["body/interfaces/ApiEndpointDataSourceOptions.html",[7,1.081,12,0.014,18,0.108,19,0.191,20,0.096,21,0.084,32,0.545,33,0.867,35,0.481,37,0.403,40,0.238,50,0.191,51,0.527,53,0.949,58,1.179,60,1.614,63,1.37,80,2.816,82,0.072,85,0.009,86,0.008,87,1.081,88,0.296,89,0.64,90,3.083,91,1.295,92,1.91,93,1.91,94,4.537,95,4.537,96,0.867,97,2.452,98,2.281,99,1.91,100,3.005,101,1.91,102,2.452,103,1.91,104,2.925,105,1.91,106,1.069,107,1.516,108,1.91,109,3.535,110,4.22,111,3.535,112,2.452,113,2.452,114,2.139,115,3.535,116,2.586,117,2.617,118,0.822,119,1.398,120,2.185,121,2.017,122,2.139,123,1.203,124,3.856,125,3.288,126,2.28,127,1.815,128,1.815,129,2.494,130,2.208,131,2.452,132,3.615,133,2.452,134,4.22,135,5.762,136,3.957,137,3.856,138,2.674,139,2.452,140,2.139,141,3.534,142,2.017,143,2.281,144,2.452,145,2.281,146,2.452,147,2.452,148,2.452,149,2.017,150,2.139,151,2.139,152,2.139,153,2.281,154,1.16,155,1.652,156,1.652,157,3.615,158,0.964,159,2.139,160,3.288,161,2.139,162,2.281,163,2.139,164,2.452,165,4.37,166,1.516,167,2.139,168,2.382,169,2,170,3.288,171,2.281,172,2.139,173,3.535,174,2.017,175,2.452,176,2.017,177,2.452,178,2.452,179,1.295,180,1.203,181,2.139,182,1.044,183,1.119,184,2.12,185,0.806,186,2.754,187,2.754,188,2.452,189,1.581,190,4.145,191,2.452,192,5.01,193,1.581,194,2.452,195,1.581,196,2.452,197,1.581,198,5.535,199,2.452,200,1.581,201,2.452,202,2.452,203,1.345,204,2.017,205,2.452,206,1.581,207,2.452,208,1.581,209,2.452,210,5.164,211,1.581,212,2.452,213,1.581,214,2.452,215,1.581,216,2.452,217,1.581,218,2.452,219,1.581,220,2.452,221,1.581,222,2.452,223,3.083,224,1.581,225,2.452,226,1.581,227,4.145,228,2.674,229,4.145,230,2.452,231,2.281,232,2.452,233,2.452,234,2.452,235,2.452,236,2.452,237,2.452,238,2.452,239,2.452,240,2.452,241,2.452,242,2.452]],["title/injectables/ApiEndpointDataSourceService.html",[96,0.72,181,2.561]],["body/injectables/ApiEndpointDataSourceService.html",[7,0.796,12,0.014,18,0.079,19,0.152,20,0.07,21,0.191,23,0.91,28,1.515,30,1.799,31,1.176,32,0.608,33,1.264,35,1.09,37,0.371,40,0.175,50,0.152,51,0.438,53,0.874,58,1.034,60,1.283,63,1.305,80,2.846,82,0.053,85,0.008,86,0.006,88,0.218,90,1.575,91,2.954,92,4.357,93,1.407,94,1.806,95,1.806,96,0.689,97,1.806,98,1.68,99,1.407,100,3.083,101,1.407,102,1.806,103,1.407,104,2.434,105,1.407,106,0.85,107,1.116,108,1.407,109,3.892,110,3.621,111,2.81,112,1.806,113,1.806,114,1.575,115,2.81,116,2.618,117,2.08,118,0.605,119,1.03,120,1.737,121,1.485,122,1.575,123,0.886,124,3.209,125,2.614,126,2.511,127,1.337,128,1.337,129,1.983,130,1.968,131,1.806,132,3.009,133,1.806,134,4.71,135,5.684,136,4.63,137,4.337,138,2.72,139,2.81,140,1.575,141,3.032,142,1.485,143,1.68,144,1.806,145,1.68,146,1.806,147,1.806,148,1.806,149,1.485,150,1.575,151,1.575,152,1.575,153,1.68,154,0.854,155,1.217,156,1.217,157,3.009,158,0.766,159,1.575,160,2.614,161,1.575,162,1.68,163,1.575,164,1.806,165,3.895,166,1.116,167,1.575,168,1.894,169,1.716,170,2.614,171,1.68,172,1.575,173,2.81,174,1.485,175,1.806,176,1.485,177,1.806,178,1.806,179,0.954,180,0.886,181,2.451,182,0.769,183,1.283,184,2.273,185,0.641,186,2.687,187,3.032,188,1.806,189,2.511,190,3.449,191,1.806,192,5.237,193,2.511,194,1.806,195,2.511,196,1.806,197,2.511,198,5.156,199,1.806,200,2.511,201,1.806,202,2.81,203,1.541,204,2.311,205,2.81,206,2.511,207,1.806,208,2.511,209,1.806,210,5.37,211,1.812,212,1.806,213,1.812,214,1.806,215,1.812,216,1.806,217,1.812,218,1.806,219,1.812,220,1.806,221,1.812,222,1.806,223,2.451,224,1.812,225,1.806,226,1.812,227,4.952,228,2.88,229,4.662,230,1.806,231,1.68,232,1.806,233,1.806,234,1.806,235,1.806,236,1.806,237,1.806,238,1.806,239,1.806,240,1.806,241,1.806,242,1.806,243,0.99,244,2.08,245,2.08,246,2.08,247,2.08,248,2.08,249,2.08,250,2.08,251,2.495,252,2.495,253,4.766,254,2.495,255,3.326,256,2.495,257,2.495,258,3.027,259,2.495,260,2.495,261,2.495,262,2.495,263,2.495,264,2.495,265,2.495,266,2.495,267,2.495,268,2.495,269,2.495,270,2.495,271,2.495,272,2.495]],["title/interfaces/AutoCompleteOption.html",[51,0.373,273,2.936]],["body/interfaces/AutoCompleteOption.html",[12,0.014,18,0.126,19,0.154,20,0.112,21,0.098,31,0.653,32,0.429,33,1.25,34,3.073,35,0.562,37,0.394,40,0.278,50,0.243,51,0.364,53,0.917,58,0.967,60,1.308,63,0.933,66,1.235,72,1.405,76,3.44,82,0.116,85,0.009,86,0.009,87,1.263,88,0.346,89,0.714,106,1.193,116,1.739,118,0.96,119,1.633,120,1.771,121,2.356,123,1.405,141,2.231,158,1.23,166,1.771,168,1.931,169,2.379,174,2.356,179,1.513,180,1.405,183,1.308,184,1.739,185,1.202,273,3.944,274,2.665,275,2.665,276,2.864,277,1.1,278,3.944,279,4.75,280,5.098,281,6.068,282,4.522,283,4.104,284,4.523,285,3.935,286,3.44,287,3.944,288,3.34,289,1.457,290,1.188,291,3.073,292,1.7,293,2.231,294,3.944,295,2.692,296,3.514,297,4.75,298,2.864,299,5.285,300,2.864,301,3.449,302,3.669,303,3.44,304,4.75,305,2.121,306,1.571,307,2.021,308,1.567,309,5.285,310,5.98,311,3.115,312,3.115,313,2.864,314,2.864,315,2.498,316,2.626,317,2.965,318,5.729,319,3.449,320,3.115,321,1.308,322,1.457,323,3.449,324,1.457,325,3.449,326,1.457,327,1.457,328,1.571,329,1.513,330,1.7,331,1.7,332,3.669,333,3.449,334,3.449,335,3.449,336,3.449,337,1.931,338,3.449,339,5.853,340,3.449,341,3.449,342,3.514,343,5.433,344,3.935,345,1.931,346,3.449,347,3.115,348,2.498,349,3.449,350,3.115,351,4.75,352,4.75,353,3.449,354,3.449,355,2.021,356,1.848,357,1.679,358,4.75,359,3.449,360,3.449,361,3.449,362,2.864,363,3.449,364,3.115,365,2.356,366,3.449,367,2.356,368,3.449,369,3.449]],["title/modules/BodyUiModule.html",[0,0.858,370,2.936]],["body/modules/BodyUiModule.html",[0,1.25,2,2.098,3,2.098,4,1.587,5,2.994,6,2.346,7,1.885,8,2.994,12,0.013,15,2.696,16,2.259,17,1.821,18,0.188,19,0.231,20,0.167,21,0.146,37,0.408,39,2.696,40,0.415,50,0.231,75,2.439,82,0.126,85,0.011,86,0.011,370,5.925,371,5.151,372,5.151,373,5.151,374,3.472,375,4.651,376,4.651,377,5.91,378,3.157,379,2.439,380,2.439,381,5.91]],["title/injectables/CCFDatabaseDataSourceBaseService.html",[96,0.72,382,2.561]],["body/injectables/CCFDatabaseDataSourceBaseService.html",[12,0.014,18,0.108,19,0.245,20,0.096,21,0.165,23,1.15,28,1.601,30,1.908,31,1.264,32,0.619,33,1.359,35,1.137,37,0.387,40,0.24,50,0.191,51,0.313,53,0.592,58,1.02,63,0.984,80,1.255,82,0.122,85,0.008,86,0.008,88,0.298,89,0.643,91,2.546,96,1.116,100,3.016,106,0.746,107,3.274,116,2.597,118,0.827,119,1.407,120,1.525,123,1.21,126,2.935,127,1.827,128,1.827,130,1.087,155,1.663,156,3.249,158,0.673,179,1.303,180,1.21,183,1.126,184,1.834,185,1.145,187,1.922,189,2.683,193,2.683,195,2.683,197,2.683,200,2.683,206,2.683,208,2.683,211,1.591,213,1.591,215,1.591,217,1.591,219,1.591,221,1.591,224,1.591,226,1.591,228,1.591,243,1.353,244,2.629,245,2.629,246,2.629,247,2.629,248,2.629,249,2.629,250,2.629,255,3.337,365,3.421,367,2.921,382,3.969,383,4.485,384,2.295,385,3.249,386,3.21,387,3.241,388,4.16,389,3.92,390,3.717,391,3.861,392,2.921,393,3.303,394,4.906,395,2.683,396,4.704,397,5.474,398,3.409,399,4.55,400,4.55,401,3.409,402,2.152,403,3.241,404,2.921,405,5.365,406,4.244,407,2.295,408,2.295,409,2.295,410,2.295,411,2.295,412,2.295,413,2.295,414,2.295,415,2.295,416,2.295,417,2.295,418,2.295,419,2.295,420,2.295,421,2.295,422,2.683,423,3.551,424,3.551,425,2.467,426,3.551,427,2.467,428,2.295,429,3.551,430,3.097,431,1.922,432,1.827,433,2.295,434,2.295,435,2.467,436,2.295,437,2.467,438,2.467,439,1.126,440,2.467,441,2.467,442,2.467,443,2.467,444,2.467,445,2.029,446,3.551,447,2.467,448,2.295,449,2.295,450,2.467,451,2.152,452,2.467,453,3.303,454,2.152,455,2.467,456,3.303,457,2.467,458,2.467,459,2.467,460,2.467]],["title/injectables/CCFDatabaseDataSourceService.html",[96,0.72,451,2.561]],["body/injectables/CCFDatabaseDataSourceService.html",[12,0.014,18,0.11,19,0.247,20,0.098,21,0.086,23,1.165,28,1.598,30,1.899,31,1.253,32,0.617,33,1.348,35,1.14,37,0.389,40,0.244,50,0.194,51,0.319,53,0.6,58,1.03,63,0.994,80,1.278,82,0.124,85,0.008,86,0.008,88,0.304,89,0.652,91,1.327,96,1.125,100,3.022,106,0.76,107,3.29,116,2.602,118,0.842,119,1.433,120,1.553,123,1.232,126,2.32,127,1.86,128,1.86,130,1.107,155,1.693,156,3.272,158,0.685,179,1.327,180,1.232,184,1.852,185,1.152,189,2.711,193,2.711,195,2.711,197,2.711,200,2.711,206,2.711,208,2.711,211,1.621,213,1.621,215,1.621,217,1.621,219,1.621,221,1.621,224,1.621,226,1.621,228,1.621,243,1.378,244,2.663,245,2.663,246,2.663,247,2.663,248,2.663,249,2.663,250,2.663,255,3.355,365,3.456,367,2.959,382,4.537,383,2.337,384,2.337,385,3.272,386,2.965,387,3.274,388,4.202,389,3.939,390,3.397,391,3.912,392,2.959,393,2.337,395,2.732,396,4.725,397,5.496,399,4.588,400,4.588,402,2.191,403,3.274,404,2.959,405,5.454,406,4.256,407,2.337,408,2.337,409,2.337,410,2.337,411,2.337,412,2.337,413,2.337,414,2.337,415,2.337,416,2.337,417,2.337,418,2.337,419,2.337,420,2.337,421,2.337,422,2.732,423,3.597,424,3.597,425,2.512,426,3.597,427,2.512,428,2.337,429,3.597,430,3.138,431,1.957,432,1.86,433,2.337,434,2.337,435,2.512,436,2.337,437,2.512,438,2.512,439,1.147,440,2.512,441,2.512,442,2.512,443,2.512,444,2.512,445,2.067,446,3.597,447,2.512,448,2.337,449,2.337,450,2.512,451,3.138,452,2.512,453,3.347,454,2.191,455,2.512,456,3.347,457,2.512,458,2.512,459,2.512,460,2.512,461,3.472,462,3.026,463,3.026]],["title/interfaces/CCFDatabaseManager.html",[51,0.373,396,2.561]],["body/interfaces/CCFDatabaseManager.html",[12,0.014,18,0.151,19,0.282,20,0.134,21,0.118,32,0.374,37,0.423,40,0.334,50,0.24,51,0.437,58,1.213,63,1.17,80,1.75,82,0.146,85,0.01,86,0.01,87,1.516,88,0.416,89,0.807,91,1.817,96,1.283,100,1.75,106,1.04,107,3.58,116,2.306,118,1.153,119,1.962,120,2.127,123,1.687,126,2.875,127,2.547,128,2.547,130,1.516,155,2.318,156,3.004,158,0.938,179,1.817,180,1.687,184,1.516,185,1.017,365,2.829,367,2.829,382,4.314,383,3.2,384,3.2,385,3.653,386,3.145,387,2.68,388,3.44,389,3.874,390,3.874,393,3.2,396,4.93,397,5.553,399,4.946,400,4.946,423,4.458,424,5.232,425,3.44,426,5.232,427,3.44,428,3.2,429,4.946,430,3.888,431,2.68,432,2.547,433,3.2,434,3.2,435,3.44,436,3.2,437,3.44,438,3.44,439,1.57,440,3.44,441,3.44,442,3.44,443,3.44,444,3.44,445,2.829,446,4.458,447,3.44,448,3.2,449,3.2,450,3.44,451,3,452,3.44,453,4.147,454,3,455,3.44,456,4.147,457,3.44,458,3.44,459,3.44,460,3.44]],["title/components/CallToActionBehaviorComponent.html",[290,0.773,464,1.55]],["body/components/CallToActionBehaviorComponent.html",[4,1.073,12,0.014,18,0.225,19,0.156,20,0.113,21,0.185,28,1.441,31,1.034,32,0.531,35,0.567,37,0.395,40,0.281,50,0.156,66,1.243,82,0.085,85,0.009,86,0.009,88,0.349,89,0.719,106,1.774,116,2.465,154,1.368,158,1.083,185,1.354,203,1.586,258,3.013,277,1.11,289,1.471,290,1.347,300,2.892,306,1.586,308,1.577,316,1.32,317,1.471,321,2.691,322,2.02,324,2.02,326,2.02,327,2.02,328,1.586,329,2.097,374,1.649,380,1.649,464,2.577,465,2.455,466,1.949,467,1.649,468,1.949,469,5.034,470,3.315,471,5.034,472,3.482,473,3.693,474,3.265,475,3.463,476,3.265,477,3.265,478,3.97,479,4.317,480,1.788,481,2.953,482,3.97,483,6.264,484,5.486,485,3.532,486,3.532,487,4.218,488,4.216,489,3.954,490,3.056,491,5.486,492,3.995,493,7.067,494,3.995,495,3.693,496,2.356,497,5.486,498,3.995,499,3.995,500,5.486,501,3.463,502,3.093,503,3.693,504,5.486,505,3.995,506,5.486,507,3.995,508,3.482,509,3.482,510,3.482,511,2.04,512,3.995,513,3.532,514,5.486,515,2.561,516,3.144,517,2.892,518,3.995,519,2.178,520,1.649,521,3.289,522,1.949,523,1.949,524,1.949,525,1.649,526,1.949,527,1.527,528,1.949,529,1.649,530,1.949,531,1.471,532,1.949,533,1.649,534,1.788,535,1.949,536,1.649,537,1.586,538,1.949,539,1.586,540,1.949,541,1.649,542,1.865,543,1.949,544,1.949,545,1.649,546,1.716,547,1.949,548,1.649,549,1.865,550,1.649,551,1.865,552,1.586,553,1.865,554,1.949]],["title/modules/CallToActionBehaviorModule.html",[0,0.858,555,2.936]],["body/modules/CallToActionBehaviorModule.html",[0,1.173,2,1.969,3,1.969,4,1.489,5,2.913,6,2.202,7,1.769,8,2.913,12,0.013,15,2.595,16,2.12,17,1.709,18,0.176,19,0.216,20,0.157,21,0.137,37,0.442,39,2.595,40,0.39,50,0.216,75,2.802,82,0.118,85,0.011,86,0.011,378,3.038,379,2.289,464,3.19,469,3.734,470,2.913,471,3.734,481,2.595,511,2.832,515,2.589,555,5.95,556,4.834,557,4.834,558,4.834,559,4.834,560,5.373,561,5.547,562,5.917,563,4.834,564,5.342,565,3.127,566,4.041,567,3.302,568,6.789,569,5.547,570,4.365]],["title/components/CallToActionComponent.html",[290,0.773,525,1.674]],["body/components/CallToActionComponent.html",[4,0.881,12,0.014,18,0.247,19,0.128,20,0.093,21,0.188,23,1.119,28,1.48,31,0.928,32,0.57,35,0.677,37,0.178,40,0.231,50,0.128,53,0.891,60,2.041,66,1.081,82,0.146,85,0.008,86,0.008,88,0.287,89,0.626,106,1.768,154,1.124,158,0.942,185,1.083,203,1.303,258,1.355,277,0.912,284,2.841,288,2.558,289,1.209,290,1.407,291,3.7,292,1.41,295,2.508,296,3.172,306,1.303,308,1.372,316,1.084,317,1.209,321,2.618,322,1.758,324,1.758,326,1.758,327,1.758,328,1.303,329,2.508,330,2.05,331,2.416,374,1.355,380,1.355,464,1.254,465,2.136,466,1.601,467,1.355,468,1.601,469,5.115,470,2.931,473,5.115,474,3.677,475,3.551,476,2.841,477,2.841,478,3.455,479,3.756,480,1.469,481,2.964,485,3.172,486,3.861,487,3.787,489,4.571,490,2.744,496,2.05,515,3.547,519,1.895,520,1.355,521,3.013,522,1.601,523,1.601,524,1.601,525,2.549,526,1.601,527,1.254,528,1.601,529,1.355,530,1.601,531,1.209,532,1.601,533,1.355,534,1.469,535,1.601,536,1.355,537,1.303,538,1.601,539,1.303,540,1.601,541,1.355,542,1.532,543,1.601,544,1.601,545,1.355,546,1.41,547,1.601,548,1.355,549,1.532,550,1.97,551,1.532,552,1.303,553,1.532,554,1.601,571,2.86,572,5.625,573,4.773,574,5.383,575,2.841,576,3.906,577,3.455,578,5.625,579,5.625,580,2.691,581,3.282,582,3.282,583,2.438,584,3.455,585,3.455,586,3.282,587,3.282,588,3.756,589,5.383,590,3.282,591,6.177,592,6.177,593,5.383,594,3.282,595,4.773,596,3.282,597,4.16,598,4.158,599,1.55,600,3.282,601,3.756,602,4.773,603,2.841,604,3.282,605,3.282,606,3.756,607,1.759,608,2.136,609,2.05,610,2.21,611,3.349,612,2.841,613,4.758,614,2.841,615,4.773,616,3.013,617,4.071,618,4.427,619,4.773,620,2.375,621,2.583,622,3.282,623,3.455,624,2.86,625,2.375,626,2.375,627,4.071,628,2.375,629,3.787,630,4.47,631,3.282,632,2.86,633,2.583,634,2.072,635,3.282,636,1.85,637,2.626,638,3.551,639,2.841,640,3.482,641,3.282,642,3.282,643,4.16,644,3.282,645,2.375,646,4.773,647,3.756,648,3.455,649,2.86,650,3.282,651,3.282,652,2.583,653,1.85,654,4.16,655,3.282,656,2.86,657,2.583,658,2.21,659,3.282,660,2.375,661,3.282,662,2.86,663,1.954,664,2.583,665,2.21,666,3.282]],["title/interfaces/CallToActionModel.html",[51,0.373,667,2.731]],["body/interfaces/CallToActionModel.html",[12,0.014,18,0.189,19,0.142,20,0.103,21,0.09,24,1.854,31,0.599,32,0.558,35,0.728,37,0.424,40,0.255,43,2.047,44,1.854,45,1.771,49,2.047,50,0.2,51,0.595,53,0.971,57,2.515,58,1.32,60,1.2,63,1.019,65,1.771,78,2.663,82,0.077,85,0.008,86,0.008,87,1.158,88,0.318,89,0.673,96,0.911,116,2.064,118,0.881,119,1.499,122,2.292,123,1.289,130,1.637,154,1.757,158,1.013,182,1.119,183,1.2,184,2.26,185,1.126,277,1.009,290,0.692,316,1.2,317,1.89,337,2.904,357,2.103,464,1.388,470,2.363,471,2.445,481,1.388,482,2.628,485,4.106,487,4.595,488,2.047,489,4.308,490,3.456,495,2.445,496,3.128,501,3.24,502,2.894,511,1.854,513,2.047,515,1.695,516,2.858,531,1.337,565,2.047,570,2.858,583,1.854,598,2.445,599,1.623,608,2.297,637,2.396,640,2.047,647,4.039,667,3.455,668,2.047,669,2.628,670,4.473,671,5.188,672,4.473,673,5.731,674,5.853,675,3.455,676,2.292,677,4.039,678,4.473,679,3.19,680,5.948,681,3.714,682,3.165,683,2.75,684,2.894,685,4.473,686,1.854,687,2.445,688,2.047,689,2.628,690,3.455,691,3.165,692,2.628,693,3.165,694,3.055,695,2.628,696,2.858,697,2.628,698,2.628,699,2.858,700,2.445,701,2.858,702,4.039,703,2.628,704,2.628,705,2.858,706,2.292,707,3.24,708,4.008,709,2.858,710,2.628,711,3.165,712,3.165,713,3.165,714,2.162,715,2.858,716,3.165,717,2.445,718,2.858,719,3.165,720,3.165,721,3.165,722,4.684,723,3.165,724,2.628,725,3.165,726,3.165,727,3.165,728,4.473,729,4.473,730,3.165,731,2.628,732,3.165,733,2.445,734,3.165,735,3.165,736,4.473,737,3.165,738,4.473,739,3.165,740,4.473,741,3.165,742,3.165,743,3.165,744,3.165,745,2.445,746,3.165,747,3.165,748,4.039,749,3.165,750,2.858,751,4.039,752,4.039,753,3.24,754,4.039,755,2.858,756,2.047,757,3.165,758,2.292,759,2.445,760,3.165,761,3.165,762,3.165,763,4.473,764,3.165,765,5.188,766,3.165,767,3.165,768,3.165,769,3.165,770,3.165,771,3.165,772,3.165,773,3.165,774,3.165,775,3.165,776,3.165,777,3.165,778,3.165,779,3.165,780,3.165,781,3.165,782,3.165]],["title/modules/CallToActionModule.html",[0,0.858,560,2.731]],["body/modules/CallToActionModule.html",[0,1.22,2,2.047,3,2.047,4,1.548,5,2.962,6,2.289,7,1.839,8,2.962,12,0.013,15,2.657,16,2.204,17,1.776,18,0.183,19,0.225,20,0.163,21,0.143,37,0.436,39,2.657,40,0.405,50,0.225,75,2.38,82,0.123,85,0.011,86,0.011,378,3.11,379,2.38,469,3.882,481,2.204,515,2.692,525,3.461,560,5.485,562,6.058,563,5.025,564,5.47,565,3.251,566,4.138,567,3.432,783,5.025,784,5.025,785,5.025,786,5.766,787,5.766]],["title/classes/CallToActionSelectors.html",[82,0.086,517,2.936]],["body/classes/CallToActionSelectors.html",[12,0.013,18,0.151,19,0.186,20,0.134,21,0.193,23,1.445,24,4.269,28,1.515,30,1.861,31,1.267,32,0.604,33,1.362,35,1.089,37,0.334,50,0.186,53,0.974,57,2.188,63,1.314,82,0.101,85,0.01,86,0.01,88,0.416,258,3.168,321,1.572,481,1.819,485,3.475,487,4.15,489,3.891,490,3.007,511,2.43,515,3.647,517,4.461,667,5.641,668,4.405,673,4.851,674,4.851,679,4.113,717,3.204,788,2.321,789,4.147,790,6.164,791,7.676,792,4.759,793,6.164,794,4.759,795,6.164,796,4.759,797,6.164,798,4.759,799,6.164,800,4.759,801,6.164,802,4.759,803,4.759,804,7.676,805,4.759,806,4.759,807,4.759,808,4.759,809,4.759,810,4.759]],["title/injectables/CallToActionState.html",[96,0.72,717,2.731]],["body/injectables/CallToActionState.html",[12,0.014,18,0.205,19,0.123,20,0.089,21,0.181,23,1.085,24,2.803,28,1.412,30,1.691,31,1.181,32,0.549,33,1.238,35,1.054,37,0.413,40,0.221,43,1.774,44,1.606,45,1.534,49,3.095,50,0.181,51,0.505,53,0.864,57,2.395,58,1.27,60,1.529,63,0.94,65,1.534,66,0.713,78,2.456,82,0.067,85,0.007,86,0.007,88,0.275,96,0.821,116,2.225,118,0.763,119,1.298,122,1.986,123,1.117,130,1.476,154,1.584,158,0.913,182,0.969,183,1.529,184,2.283,185,1.065,243,1.249,258,2.266,277,0.874,290,0.599,308,0.904,316,1.039,317,1.704,337,2.678,357,1.987,464,1.202,470,2.179,471,2.118,481,1.202,482,2.277,485,3.413,486,2.609,487,3.115,488,3.095,489,2.921,490,2.678,495,3.115,496,3.234,501,3.465,502,3.095,503,3.115,511,1.606,513,1.774,515,3.409,516,2.475,531,1.158,565,1.774,570,2.475,583,2.363,598,3.115,599,1.795,608,2.456,637,2.16,640,1.774,647,2.475,667,2.118,668,4.117,669,2.277,670,2.742,671,4.784,672,2.742,673,5.076,674,5.076,675,4.075,676,1.986,677,4.763,678,5.276,679,2.941,680,6.706,681,4.381,682,2.742,683,3.243,684,3.413,685,4.033,686,1.606,687,2.118,688,1.774,689,2.277,690,4.075,691,2.742,692,2.277,693,2.742,694,2.755,695,2.277,696,2.475,697,2.277,698,2.277,699,2.475,700,2.118,701,2.475,702,4.32,703,2.277,704,2.277,705,2.475,706,2.921,707,3.465,708,4.542,709,2.475,710,2.277,711,2.742,712,2.742,713,2.742,714,1.873,715,2.475,716,2.742,717,3.115,718,3.641,719,4.033,720,4.033,721,4.033,722,5.076,723,4.033,724,3.349,725,4.033,726,4.033,727,4.033,728,4.033,729,4.033,730,2.742,731,3.973,732,4.784,733,3.696,734,4.033,735,2.742,736,4.033,737,2.742,738,4.033,739,2.742,740,4.033,741,2.742,742,4.033,743,5.276,744,2.742,745,2.118,746,2.742,747,2.742,748,4.763,749,4.033,750,2.475,751,3.641,752,3.641,753,2.921,754,3.641,755,2.475,756,1.774,757,2.742,758,2.921,759,3.115,760,4.784,761,4.033,762,4.033,763,4.033,764,2.742,765,4.784,766,2.742,767,2.742,768,2.742,769,4.784,770,4.033,771,4.033,772,2.742,773,2.742,774,2.742,775,2.742,776,2.742,777,2.742,778,4.033,779,2.742,780,4.033,781,4.033,782,2.742,811,4.627,812,4.627,813,2.742,814,3.146,815,3.146,816,3.146,817,3.146,818,3.146,819,3.146,820,3.146,821,3.146]],["title/classes/CloseDialog.html",[82,0.086,513,2.287]],["body/classes/CloseDialog.html",[12,0.013,18,0.191,19,0.234,20,0.17,21,0.176,24,4.093,28,1.185,32,0.598,50,0.296,53,0.725,66,1.36,82,0.162,85,0.011,86,0.011,88,0.525,89,0.933,185,1.323,308,1.726,485,3.385,486,4.015,488,3.385,496,3.261,501,3.79,502,3.385,503,4.042,513,4.015,515,3.324,668,4.015,694,3.574,788,2.929,822,4.345,823,6.004,824,5.974]],["title/injectables/ConsentService.html",[11,2.071,96,0.72]],["body/injectables/ConsentService.html",[11,3.382,12,0.014,18,0.169,19,0.208,20,0.151,21,0.198,23,1.552,28,1.56,30,1.292,31,0.879,32,0.567,33,0.946,35,1.023,37,0.359,40,0.374,50,0.258,66,1.756,72,2.676,82,0.114,85,0.01,86,0.01,88,0.466,89,0.868,96,1.175,118,1.292,158,1.307,182,1.641,183,2.381,185,1.189,243,2.115,308,1.904,599,1.983,825,4.193,826,5.155,827,7.206,828,4.487,829,6.623,830,7.539,831,6.623,832,5.328,833,6.623,834,5.328,835,5.328,836,5.328,837,6.623,838,3.942,839,5.328,840,3.856,841,3.587,842,5.328,843,5.328,844,6.623,845,5.328,846,5.328]],["title/interfaces/DataSource.html",[51,0.373,129,2.071]],["body/interfaces/DataSource.html",[12,0.014,18,0.115,19,0.141,20,0.102,21,0.198,23,1.196,28,1.567,30,1.856,31,1.199,32,0.615,33,1.29,35,1.127,37,0.321,50,0.284,51,0.331,53,0.778,63,1.367,82,0.109,85,0.008,86,0.008,87,1.15,88,0.315,91,3.053,99,2.032,100,3.124,101,2.032,103,2.032,104,1.84,105,2.032,106,0.789,107,1.613,108,2.032,116,2.708,118,0.874,120,1.613,123,1.279,129,3.292,166,1.613,182,1.11,185,0.595,189,3.177,193,3.177,195,3.177,197,3.177,200,3.177,206,3.177,208,3.177,211,2.767,213,2.767,215,2.767,217,2.767,219,2.767,221,2.767,224,2.767,226,2.383,228,2.383,244,2.735,245,2.735,246,2.735,247,2.735,248,2.735,249,2.735,250,2.735,255,3.392,302,3.991,385,1.758,386,1.84,387,2.032,389,2.735,390,3.455,392,3.039,403,3.342,404,3.529,406,2.735,432,1.931,847,5.043,848,2.426,849,3.604,850,3.604,851,3.604,852,3.604,853,3.604,854,3.604,855,3.604,856,3.604,857,3.604,858,3.604,859,3.604,860,3.604,861,3.604,862,3.604,863,3.694,864,2.836,865,3.694,866,2.608,867,2.836,868,2.608,869,2.836,870,2.836,871,2.836,872,2.836,873,2.836,874,2.836,875,2.836,876,2.836,877,2.836,878,2.836,879,2.836,880,2.836,881,2.836,882,2.836,883,2.836,884,2.836,885,2.836,886,2.836,887,2.836,888,2.836]],["title/injectables/DataSourceService.html",[96,0.72,889,3.192]],["body/injectables/DataSourceService.html",[12,0.013,18,0.131,19,0.219,20,0.117,21,0.202,23,1.314,28,1.598,30,1.829,31,1.245,32,0.594,33,1.338,35,1.15,37,0.37,40,0.29,50,0.161,53,0.769,82,0.088,85,0.009,86,0.009,88,0.361,91,3.111,96,0.995,99,2.326,100,3.109,101,2.326,103,2.326,104,2.107,105,2.326,106,0.903,107,1.846,108,2.326,116,2.687,118,1.001,129,2.863,130,1.316,182,1.271,189,3.19,193,3.19,195,3.19,197,3.19,200,3.19,206,3.19,208,3.19,211,2.618,213,2.618,215,2.618,217,2.618,219,2.618,221,2.618,224,2.618,226,1.926,243,1.638,244,3.005,245,3.005,246,3.005,247,3.005,248,3.005,249,3.005,250,3.005,255,3.52,390,4.569,847,5.139,889,4.413,890,3.596,891,4.126,892,4.126,893,4.126,894,4.126,895,4.126,896,4.126,897,4.126,898,4.126,899,4.126,900,4.126,901,4.126,902,4.126,903,4.126,904,4.126]],["title/interfaces/DecoratedRange.html",[51,0.373,305,2.174]],["body/interfaces/DecoratedRange.html",[12,0.014,18,0.157,19,0.193,20,0.14,21,0.122,32,0.577,35,0.701,50,0.193,51,0.454,53,0.84,58,1.302,60,1.632,62,3.554,63,1.081,66,1.119,72,2.241,85,0.01,86,0.01,87,1.575,88,0.725,89,0.828,168,3.781,169,2.591,277,1.372,305,3.729,307,2.522,357,1.945,439,2.299,467,3.326,653,2.784,658,3.325,788,3.93,905,2.94,906,3.886,907,3.325,908,6.341,909,7.979,910,4.569,911,6.313,912,6.606,913,7.334,914,4.938,915,6.313,916,4.304,917,3.325,918,4.304,919,2.522,920,5.213,921,4.304,922,4.304,923,2.646,924,4.304,925,4.304,926,4.939,927,4.939,928,4.939,929,3.574]],["title/components/DecoratedTextComponent.html",[290,0.773,527,1.55]],["body/components/DecoratedTextComponent.html",[4,0.651,12,0.014,17,1.17,18,0.149,19,0.095,20,0.068,21,0.18,23,0.89,28,1.418,30,1.394,31,1.167,32,0.546,33,1.02,35,1.004,37,0.206,40,0.17,50,0.148,51,0.349,53,0.819,58,1.231,62,1.939,63,1.091,66,1.06,72,0.861,73,2.583,82,0.141,85,0.006,86,0.006,88,0.557,89,0.799,100,0.893,106,1.684,154,0.83,158,1.135,168,2.583,169,1.211,182,1.17,184,2.4,185,0.772,203,0.963,258,1.001,277,1.694,282,5.064,285,2.397,286,3.343,289,0.893,290,0.892,292,1.041,295,1.789,305,4.094,306,3.072,307,3.721,308,1.346,316,2.714,317,0.893,321,2.486,322,1.398,324,1.398,326,1.398,327,1.398,328,0.963,329,2.197,330,1.631,331,2.01,342,2.141,345,3.385,355,3.114,356,1.772,357,1.631,374,1.001,380,1.001,439,1.546,464,0.927,465,1.699,466,1.183,467,2.723,468,1.183,470,0.963,480,1.085,481,1.451,519,1.507,520,1.001,521,2.583,522,1.183,523,1.183,524,1.183,525,1.001,526,1.183,527,2.024,528,1.183,529,1.001,530,1.183,531,0.893,532,1.183,533,1.001,534,1.085,535,1.183,536,1.001,537,0.963,538,1.183,539,0.963,540,1.183,541,1.001,542,1.132,543,1.183,544,1.183,545,1.001,546,1.041,547,1.183,548,1.001,549,1.132,550,1.001,551,1.132,552,0.963,553,1.132,554,1.183,575,2.26,580,2.141,599,0.953,607,1.299,609,2.619,634,2.397,636,1.367,658,2.556,788,2.974,905,4.337,907,1.632,910,2.748,917,2.556,919,3.255,920,2.397,929,1.755,930,1.755,931,2.954,932,5.919,933,3.387,934,3.683,935,2.988,936,5.865,937,4.167,938,3.797,939,4.167,940,3.797,941,3.797,942,3.797,943,3.797,944,2.425,945,5.46,946,2.988,947,2.988,948,3.683,949,2.988,950,2.425,951,3.797,952,2.425,953,2.954,954,5.145,955,2.988,956,2.425,957,2.988,958,6.124,959,4.524,960,3.683,961,4.291,962,2.425,963,2.748,964,2.988,965,2.748,966,2.988,967,2.425,968,2.425,969,4.68,970,2.425,971,2.425,972,2.988,973,2.748,974,3.832,975,2.425,976,2.988,977,2.988,978,2.748,979,2.988,980,5.192,981,2.425,982,2.748,983,4.524,984,2.748,985,2.425,986,2.748,987,2.748,988,1.632,989,1.755,990,1.908,991,2.26,992,1.755,993,1.755,994,2.748,995,2.397,996,2.397,997,1.908,998,1.908,999,2.988,1000,1.908,1001,2.988,1002,1.908,1003,1.908,1004,1.53,1005,2.988,1006,1.908,1007,3.683,1008,1.755,1009,1.908,1010,1.908,1011,2.988,1012,1.908,1013,1.908,1014,2.988,1015,1.908,1016,1.755,1017,2.988,1018,2.988,1019,2.988,1020,1.632,1021,1.908,1022,1.443,1023,1.908,1024,1.908,1025,1.908,1026,1.908,1027,1.908,1028,1.908,1029,1.908,1030,1.908,1031,1.908,1032,1.908,1033,1.908,1034,1.908,1035,1.908,1036,1.908,1037,1.908,1038,1.908,1039,1.632,1040,1.755,1041,1.632,1042,1.908,1043,1.908,1044,1.755,1045,1.755,1046,1.908,1047,1.755,1048,1.908,1049,1.443,1050,1.908,1051,1.908,1052,1.755,1053,1.755,1054,1.908,1055,1.908,1056,3.683,1057,1.908,1058,1.908,1059,3.797]],["title/modules/DecoratedTextModule.html",[0,0.858,1060,2.731]],["body/modules/DecoratedTextModule.html",[0,1.254,2,2.105,3,2.105,4,1.592,5,2.998,6,2.354,7,1.891,8,2.998,12,0.013,15,2.701,16,2.266,17,1.826,18,0.188,19,0.231,20,0.167,21,0.147,37,0.409,39,2.701,40,0.417,50,0.231,75,2.447,82,0.126,85,0.011,86,0.011,306,2.354,307,3.028,378,3.162,379,2.447,527,3.216,905,3.529,1060,5.515,1061,5.167,1062,5.167,1063,5.167,1064,5.929,1065,5.929]],["title/interfaces/DefaultParams.html",[51,0.373,140,2.561]],["body/interfaces/DefaultParams.html",[7,1.087,12,0.014,18,0.108,19,0.191,20,0.096,21,0.084,32,0.524,33,0.871,35,0.484,37,0.404,40,0.24,50,0.191,51,0.529,53,0.934,58,1.182,60,1.621,63,1.371,80,2.82,82,0.073,85,0.009,86,0.008,87,1.087,88,0.298,89,0.643,90,2.152,91,1.303,92,1.922,93,1.922,94,2.467,95,2.467,96,0.871,97,2.467,98,2.295,99,1.922,100,3.007,101,1.922,102,2.467,103,1.922,104,2.935,105,1.922,106,1.074,107,1.525,108,1.922,109,3.551,110,4.233,111,3.551,112,2.467,113,2.467,114,2.152,115,3.551,116,2.588,117,2.629,118,0.827,119,1.407,120,2.195,121,2.029,122,2.152,123,1.21,124,3.87,125,3.303,126,2.29,127,1.827,128,1.827,129,2.505,130,2.213,131,2.467,132,3.628,133,2.467,134,4.233,135,5.767,136,3.969,137,3.87,138,2.683,139,2.467,140,3.097,141,4.031,142,2.029,143,2.295,144,2.467,145,2.295,146,2.467,147,2.467,148,2.467,149,2.029,150,2.152,151,2.152,152,2.152,153,2.295,154,1.167,155,1.663,156,1.663,157,3.628,158,0.968,159,2.152,160,3.303,161,2.152,162,2.295,163,2.152,164,2.467,165,4.379,166,1.525,167,2.152,168,2.393,169,2.005,170,3.303,171,2.295,172,2.152,173,3.551,174,2.029,175,2.467,176,2.029,177,2.467,178,2.467,179,1.303,180,1.21,181,2.152,182,1.05,183,1.126,184,2.125,185,0.81,186,2.766,187,2.766,188,2.467,189,1.591,190,4.16,191,2.467,192,5.021,193,1.591,194,2.467,195,1.591,196,2.467,197,1.591,198,5.542,199,2.467,200,1.591,201,2.467,202,2.467,203,1.353,204,2.029,205,2.467,206,1.591,207,2.467,208,1.591,209,2.467,210,5.174,211,1.591,212,2.467,213,1.591,214,2.467,215,1.591,216,2.467,217,1.591,218,2.467,219,1.591,220,2.467,221,1.591,222,2.467,223,3.097,224,1.591,225,2.467,226,1.591,227,4.16,228,2.683,229,4.16,230,2.467,231,2.295,232,2.467,233,2.467,234,2.467,235,2.467,236,2.467,237,2.467,238,2.467,239,2.467,240,2.467,241,2.467,242,2.467]],["title/classes/DelegateDataSource.html",[82,0.086,386,2.071]],["body/classes/DelegateDataSource.html",[12,0.014,18,0.111,19,0.136,20,0.099,21,0.124,23,1.171,28,1.578,30,1.916,31,1.216,32,0.626,33,1.307,35,1.129,37,0.316,50,0.281,51,0.322,53,0.768,63,1.361,82,0.106,85,0.008,86,0.008,88,0.306,89,0.655,91,1.91,99,1.972,100,3.12,101,1.972,103,1.972,104,1.786,105,1.972,106,0.766,107,1.565,108,1.972,116,2.708,118,0.848,120,1.565,123,1.241,129,2.977,166,1.565,182,1.077,185,0.962,189,3.141,193,3.141,195,3.141,197,3.141,200,3.141,206,3.141,208,3.141,211,2.722,213,2.722,215,2.722,217,2.722,219,2.722,221,2.722,224,2.722,226,2.333,228,2.722,244,2.677,245,2.677,246,2.677,247,2.677,248,2.677,249,2.677,250,2.677,255,3.363,302,3.925,385,2.437,386,2.552,387,3.287,389,3.408,390,3.749,392,3.786,402,2.208,403,3.945,404,4.005,405,5.354,406,4.327,407,2.355,408,2.355,409,2.355,410,2.355,411,2.355,412,2.355,413,2.355,414,2.355,415,2.355,416,2.355,417,2.355,418,2.355,419,2.355,420,2.355,421,2.355,432,1.874,788,1.706,847,3.154,848,2.355,863,3.616,864,2.752,865,3.616,866,2.531,867,2.752,868,2.531,869,2.752,870,2.752,871,2.752,872,2.752,873,2.752,874,2.752,875,2.752,876,2.752,877,2.752,878,2.752,879,2.752,880,2.752,881,2.752,882,2.752,883,2.752,884,2.752,885,2.752,886,2.752,887,2.752,888,2.752,1066,3.497]],["title/interfaces/DocumentationContent.html",[51,0.373,683,2.174]],["body/interfaces/DocumentationContent.html",[12,0.014,18,0.228,19,0.181,20,0.202,21,0.115,32,0.477,35,0.657,37,0.365,40,0.325,50,0.263,51,0.557,53,1.001,58,1.352,60,1.53,63,0.793,82,0.099,85,0.01,86,0.01,87,1.477,88,0.405,89,0.794,96,1.075,117,2.481,118,1.123,130,1.932,158,0.914,179,1.77,180,1.644,185,0.764,277,1.287,290,0.882,316,1.53,357,1.427,490,3.84,496,2.898,576,4.421,599,1.162,603,4.017,608,3.622,675,4.077,676,2.923,683,4.083,684,2.611,686,2.365,733,3.118,745,3.118,756,4.296,919,2.365,923,2.481,1022,2.757,1067,2.481,1068,3.351,1069,4.077,1070,4.766,1071,4.077,1072,3.835,1073,4.9,1074,4.383,1075,4.766,1076,5.31,1077,3.823,1078,3.118,1079,3.351,1080,4.766,1081,3.118,1082,3.351,1083,4.766,1084,3.644,1085,3.644,1086,2.923,1087,3.644,1088,3.644,1089,3.644,1090,3.644,1091,3.644,1092,3.644,1093,3.644,1094,3.644,1095,3.644,1096,3.644,1097,3.644,1098,4.766,1099,4.766,1100,3.644,1101,3.644,1102,3.644,1103,3.644,1104,3.644,1105,3.644,1106,3.644,1107,3.644,1108,3.644,1109,3.644,1110,3.644]],["title/interfaces/FilterParams.html",[51,0.373,142,2.415]],["body/interfaces/FilterParams.html",[7,1.934,12,0.014,18,0.1,19,0.181,20,0.089,21,0.078,32,0.611,33,1.426,35,0.448,37,0.396,40,0.222,50,0.181,51,0.506,53,0.977,58,1.146,60,1.533,63,1.356,80,2.774,82,0.067,85,0.009,86,0.007,87,1.007,88,0.276,89,0.608,90,1.992,91,1.206,92,1.779,93,1.779,94,2.284,95,2.284,96,0.823,97,2.284,98,2.125,99,1.779,100,2.981,101,1.779,102,2.284,103,1.779,104,2.809,105,1.779,106,1.015,107,1.412,108,1.779,109,3.357,110,4.822,111,4.388,112,2.284,113,2.284,114,1.992,115,3.357,116,2.564,117,2.486,118,0.765,119,1.303,120,2.076,121,1.879,122,1.992,123,1.12,124,3.703,125,3.123,126,2.165,127,1.691,128,1.691,129,2.369,130,2.154,131,2.284,132,3.472,133,2.284,134,4.082,135,5.7,136,3.827,137,3.703,138,2.567,139,2.284,140,1.992,141,3.418,142,2.761,143,4.082,144,4.388,145,4.082,146,4.388,147,4.388,148,4.388,149,3.609,150,3.472,151,3.472,152,3.472,153,4.082,154,2.076,155,1.54,156,1.54,157,3.472,158,0.915,159,1.992,160,3.123,161,1.992,162,2.125,163,1.992,164,2.284,165,4.263,166,1.412,167,1.992,168,2.263,169,1.934,170,3.123,171,2.125,172,1.992,173,3.357,174,1.879,175,2.284,176,1.879,177,2.284,178,2.284,179,1.206,180,1.12,181,1.992,182,0.972,183,1.043,184,2.061,185,0.766,186,2.615,187,2.615,188,2.284,189,1.473,190,3.981,191,2.284,192,4.888,193,1.473,194,2.284,195,1.473,196,2.284,197,1.473,198,5.453,199,2.284,200,1.473,201,2.284,202,2.284,203,1.253,204,1.879,205,2.284,206,1.473,207,2.284,208,1.473,209,2.284,210,5.053,211,1.473,212,2.284,213,1.473,214,2.284,215,1.473,216,2.284,217,1.473,218,2.284,219,1.473,220,2.284,221,1.473,222,2.284,223,2.928,224,1.473,225,2.284,226,1.473,227,3.981,228,2.567,229,3.981,230,2.284,231,2.125,232,2.284,233,2.284,234,2.284,235,2.284,236,2.284,237,2.284,238,2.284,239,2.284,240,2.284,241,2.284,242,2.284]],["title/classes/ForwardingDataSource.html",[82,0.086,406,2.174]],["body/classes/ForwardingDataSource.html",[12,0.014,18,0.111,19,0.136,20,0.099,21,0.198,23,1.17,28,1.569,30,1.916,31,1.215,32,0.622,33,1.307,35,1.128,37,0.316,50,0.281,51,0.321,53,0.768,63,1.361,82,0.106,85,0.008,86,0.008,88,0.306,91,3.056,99,1.97,100,3.119,101,1.97,103,1.97,104,1.784,105,1.97,106,0.765,107,1.563,108,1.97,116,2.706,118,0.847,120,1.563,123,1.24,129,3.247,166,1.563,182,1.538,185,0.577,189,3.14,193,3.14,195,3.14,197,3.14,200,3.14,206,3.14,208,3.14,211,2.72,213,2.72,215,2.72,217,2.72,219,2.72,221,2.72,224,2.72,226,2.331,228,2.72,244,2.676,245,2.676,246,2.676,247,2.676,248,2.676,249,2.676,250,2.676,255,3.362,302,3.923,385,1.704,386,1.784,387,1.97,389,3.407,390,3.748,392,3.785,402,2.206,403,3.944,404,4.004,406,3.122,432,1.872,788,1.704,847,5.048,848,2.352,863,3.614,864,2.75,865,3.614,866,2.529,867,2.75,868,2.529,869,2.75,870,2.75,871,2.75,872,2.75,873,2.75,874,2.75,875,2.75,876,2.75,877,2.75,878,2.75,879,2.75,880,2.75,881,2.75,882,2.75,883,2.75,884,2.75,885,2.75,886,2.75,887,2.75,888,2.75,1111,3.494,1112,3.494,1113,3.494,1114,3.494,1115,3.494,1116,3.494,1117,3.494,1118,3.494,1119,3.494,1120,3.494,1121,3.494,1122,3.494,1123,3.494,1124,3.494,1125,3.494]],["title/injectables/GlobalConfigState.html",[96,0.72,126,1.894]],["body/injectables/GlobalConfigState.html",[12,0.014,18,0.122,19,0.15,20,0.108,21,0.196,23,1.25,28,1.546,30,1.944,31,1.28,32,0.631,33,1.359,35,1.087,37,0.415,40,0.27,50,0.15,53,0.961,58,0.947,63,1.192,65,1.872,66,0.869,67,1.872,82,0.082,85,0.008,86,0.008,88,0.336,89,0.699,96,0.947,106,0.84,116,2.571,118,0.931,119,2.202,123,1.362,126,2.49,156,3.398,158,1.053,169,2.443,184,2.3,185,1.012,187,2.164,243,1.523,303,3.871,308,1.103,385,2.602,431,2.164,445,3.65,511,1.96,599,1.663,679,2.859,700,4.462,707,2.422,986,3.861,1126,6.89,1127,3.345,1128,4.826,1129,6.133,1130,7.756,1131,5.335,1132,5.335,1133,5.335,1134,5.335,1135,3.368,1136,7.211,1137,6.343,1138,3.838,1139,6.308,1140,3.838,1141,5.82,1142,3.838,1143,6.628,1144,3.838,1145,4.198,1146,3.838,1147,5.335,1148,3.838,1149,5.335,1150,6.133,1151,3.838,1152,5.335,1153,6.628,1154,3.838,1155,5.335,1156,6.628,1157,3.838,1158,3.838,1159,3.838,1160,3.838,1161,3.838,1162,3.945,1163,3.838,1164,4.198,1165,3.02,1166,3.02,1167,3.838,1168,3.02,1169,2.584,1170,3.838,1171,3.02,1172,3.838,1173,3.838,1174,3.838,1175,5.335,1176,3.838,1177,3.838,1178,3.838,1179,3.838,1180,6.133,1181,3.838,1182,3.838,1183,3.838]],["title/injectables/GlobalsService.html",[96,0.72,1184,3.192]],["body/injectables/GlobalsService.html",[12,0.014,18,0.091,19,0.112,20,0.081,21,0.187,23,1.012,28,1.474,30,1.88,31,1.198,32,0.624,33,1.308,35,1.092,37,0.155,40,0.201,50,0.203,53,0.346,57,1.532,58,1.101,63,1.219,65,4.01,66,1.851,67,3.025,72,2.471,76,2.725,78,2.587,80,2.809,82,0.061,85,0.007,86,0.007,88,0.251,96,0.766,138,3.388,155,1.397,158,1.141,166,2.587,179,1.095,180,1.017,185,0.473,228,2.015,243,1.137,255,1.337,277,1.723,308,1.241,320,3.397,337,2.105,356,1.337,357,2.008,364,4.549,389,2.783,403,4.212,456,1.929,583,2.204,599,1.746,608,1.282,639,1.705,652,3.397,653,4.528,706,2.725,914,1.929,995,3.649,1004,1.808,1020,1.929,1135,2.725,1184,3.397,1185,2.073,1186,4.316,1187,5.851,1188,5.78,1189,6.757,1190,2.865,1191,4.316,1192,4.316,1193,4.316,1194,4.316,1195,5.193,1196,3.762,1197,4.316,1198,3.124,1199,4.316,1200,4.316,1201,3.762,1202,3.762,1203,5.711,1204,7.258,1205,2.865,1206,3.124,1207,7.372,1208,6.51,1209,2.865,1210,3.762,1211,6.974,1212,2.865,1213,2.865,1214,2.865,1215,4.316,1216,2.865,1217,4.316,1218,3.762,1219,4.316,1220,3.397,1221,4.316,1222,6.201,1223,4.316,1224,2.865,1225,2.725,1226,6.518,1227,2.865,1228,2.865,1229,2.865,1230,2.865,1231,2.865,1232,2.254,1233,2.497,1234,4.88,1235,2.865,1236,2.865,1237,2.865,1238,2.865,1239,2.865,1240,2.254,1241,4.316,1242,5.193,1243,4.316,1244,4.316,1245,2.865,1246,2.497,1247,2.865,1248,4.316,1249,2.906,1250,2.865,1251,2.865,1252,2.254,1253,2.865,1254,6.201,1255,2.865,1256,2.497,1257,2.865,1258,2.865,1259,2.865,1260,2.865,1261,2.254,1262,2.865,1263,2.865,1264,3.397,1265,2.073,1266,2.497,1267,3.124,1268,2.073,1269,2.497,1270,2.497,1271,2.865,1272,2.865,1273,2.865,1274,2.865,1275,2.073,1276,1.929,1277,2.865,1278,1.808,1279,2.254,1280,2.497,1281,2.865,1282,2.865,1283,2.254,1284,2.865,1285,2.865]],["title/injectables/GoogleAnalyticsSyncService.html",[13,2.415,96,0.72]],["body/injectables/GoogleAnalyticsSyncService.html",[11,3.965,12,0.014,13,3.774,18,0.158,19,0.194,20,0.14,21,0.192,23,1.486,28,1.499,30,1.537,31,1.046,32,0.549,33,1.125,35,0.9,37,0.398,40,0.349,43,2.803,44,2.539,45,3.849,46,3.598,50,0.194,53,0.765,57,2.478,62,3.565,66,1.126,67,3.405,80,1.831,82,0.106,85,0.01,86,0.01,88,0.435,89,0.831,96,1.125,118,1.206,141,3.936,158,1.251,182,1.531,183,2.095,184,2.594,185,1.303,243,1.974,293,2.803,308,1.429,599,1.844,826,3.138,828,4.376,838,3.774,841,3.347,1264,5.493,1276,3.347,1286,6.768,1287,3.598,1288,4.7,1289,6.34,1290,4.333,1291,7.352,1292,6.34,1293,4.971,1294,6.34,1295,4.971,1296,4.002,1297,4.155,1298,4.971,1299,4.971,1300,4.971,1301,4.971,1302,4.971,1303,6.34,1304,6.34,1305,4.971,1306,4.971,1307,3.598,1308,4.971,1309,4.971]],["title/components/InfoButtonComponent.html",[290,0.773,529,1.674]],["body/components/InfoButtonComponent.html",[4,0.926,12,0.014,18,0.263,19,0.135,20,0.097,21,0.185,23,1.16,28,1.448,30,1.2,31,1.105,32,0.527,33,0.878,35,0.821,37,0.377,40,0.242,50,0.135,53,0.808,66,1.121,82,0.074,85,0.008,86,0.008,88,0.302,89,0.649,106,1.747,116,1.578,118,0.836,130,2.016,154,1.181,158,0.976,182,1.524,183,1.14,184,2.016,185,1.105,203,1.369,277,1.375,289,1.27,290,1.424,295,2.416,306,1.369,308,1.423,316,1.14,317,1.27,321,2.638,322,1.822,324,1.822,326,1.822,327,1.822,328,1.369,329,1.891,337,1.683,355,2.527,356,2.31,357,1.524,374,1.424,380,1.424,439,1.14,453,3.331,464,1.318,465,2.214,466,1.683,467,1.424,468,1.683,470,1.369,473,5.222,474,3.763,475,3.123,476,2.945,477,3.763,478,4.575,479,3.894,480,1.543,481,1.891,490,2.822,496,3.081,519,1.964,520,1.424,521,3.083,522,1.683,523,1.683,524,1.683,525,1.424,526,1.683,527,1.318,528,1.683,529,2.609,530,1.683,531,1.822,532,1.683,533,1.424,534,1.543,535,1.683,536,1.424,537,1.369,538,1.683,539,1.369,540,1.683,541,1.424,542,1.61,543,1.683,544,1.683,545,1.424,546,1.481,547,1.683,548,1.424,549,1.61,550,1.424,551,1.61,552,1.369,553,1.61,554,1.683,565,1.945,574,5.509,575,2.945,576,3.444,583,2.527,584,3.581,585,3.581,598,3.331,599,1.747,601,3.894,608,1.543,611,2.053,613,2.322,617,2.496,618,2.714,620,2.496,621,2.714,623,3.581,624,3.006,625,2.496,626,2.496,627,2.496,628,2.496,629,2.322,630,2.496,632,3.006,633,2.714,637,1.61,677,4.974,684,4.138,686,3.873,687,3.331,688,1.945,689,2.496,748,3.894,750,2.714,751,2.714,752,2.714,753,2.177,754,2.714,755,2.714,756,3.564,813,3.006,828,3.763,838,3.444,1067,4.004,1073,3.123,1077,3.99,1081,2.322,1288,3.895,1297,3.444,1307,2.496,1310,3.006,1311,5.786,1312,4.948,1313,4.948,1314,5.786,1315,4.948,1316,3.763,1317,4.948,1318,4.974,1319,3.449,1320,3.449,1321,3.449,1322,4.948,1323,3.449,1324,4.948,1325,3.449,1326,4.948,1327,3.449,1328,3.331,1329,3.449,1330,3.449,1331,3.449,1332,3.449,1333,3.006,1334,2.714,1335,3.449,1336,3.449,1337,3.449,1338,2.714,1339,2.714,1340,3.449,1341,2.714,1342,2.714,1343,3.449,1344,2.714]],["title/modules/InfoButtonModule.html",[0,0.858,1345,2.936]],["body/modules/InfoButtonModule.html",[0,1.201,2,2.016,3,2.016,4,1.525,5,2.943,6,2.255,7,1.812,8,2.943,12,0.013,15,2.632,16,2.171,17,1.75,18,0.236,19,0.222,20,0.16,21,0.141,37,0.435,39,2.632,40,0.399,50,0.222,75,2.843,82,0.121,85,0.011,86,0.011,378,3.082,379,2.344,529,3.455,566,4.1,567,3.381,676,3.585,686,2.9,688,3.202,1067,3.043,1345,5.973,1346,4.95,1347,4.95,1348,4.95,1349,4.95,1350,5.403,1351,5.68,1352,5.68,1353,6.888,1354,5.68]],["title/injectables/InfoButtonService.html",[96,0.72,684,2.287]],["body/injectables/InfoButtonService.html",[12,0.014,18,0.218,19,0.162,20,0.213,21,0.177,23,1.321,28,1.353,30,1.551,31,1.055,32,0.54,33,1.135,35,0.908,37,0.346,40,0.292,50,0.25,51,0.518,53,1.003,58,1.311,60,1.863,63,0.712,66,0.942,82,0.089,85,0.009,86,0.009,88,0.364,89,0.739,96,1,117,3.02,118,1.008,130,2.187,158,1.112,179,1.589,180,1.476,183,1.374,185,0.686,243,1.651,277,1.155,290,1.074,308,1.195,316,1.374,357,1.281,490,3.495,496,2.747,576,4.576,599,1.414,603,4.398,608,3.487,675,4.616,676,2.625,683,4.049,684,3.178,686,3.659,733,3.795,745,2.799,756,4.442,919,2.878,923,3.02,1022,3.355,1067,3.84,1068,3.009,1069,2.799,1070,3.272,1071,2.799,1072,3.84,1073,4.524,1074,3.009,1075,3.272,1076,5.639,1077,3.558,1078,3.795,1079,4.079,1080,5.395,1081,2.799,1082,4.079,1083,5.032,1084,4.436,1085,4.436,1086,3.558,1087,4.436,1088,3.272,1089,3.272,1090,3.272,1091,3.272,1092,4.436,1093,4.436,1094,4.436,1095,4.436,1096,4.436,1097,4.436,1098,4.436,1099,4.436,1100,3.272,1101,3.272,1102,3.272,1103,3.272,1104,3.272,1105,3.272,1106,3.272,1107,3.272,1108,3.272,1109,3.272,1110,3.272,1355,5.637,1356,5.637,1357,4.158,1358,5.637,1359,4.158,1360,4.158,1361,3.009]],["title/components/InfoDialogComponent.html",[290,0.773,531,1.494]],["body/components/InfoDialogComponent.html",[4,0.814,12,0.014,17,0.933,18,0.247,19,0.118,20,0.086,21,0.179,23,1.489,28,1.397,30,0.735,31,0.981,32,0.524,33,0.538,35,0.639,37,0.291,40,0.213,50,0.176,51,0.279,53,0.803,58,0.538,82,0.065,85,0.007,86,0.007,88,0.265,89,0.59,106,1.701,130,2.348,154,1.037,172,1.913,182,1.387,183,1.487,186,2.538,203,1.203,204,1.804,258,1.25,277,1.492,289,1.116,290,1.44,293,1.708,295,1.158,306,1.203,316,1.774,317,1.116,321,2.586,322,1.657,324,1.657,326,1.657,327,1.657,328,1.203,329,1.72,355,3.243,356,2.101,357,1.387,374,1.25,380,1.25,439,2.277,464,1.158,465,2.014,466,1.478,467,1.25,468,1.478,470,1.203,474,2.679,475,1.913,476,2.679,477,2.679,480,1.356,481,2.427,486,3.752,490,2.899,495,3.03,496,3.382,519,1.787,520,1.25,521,2.899,522,1.478,523,1.478,524,1.478,525,1.25,526,1.478,527,1.158,528,1.478,529,1.25,530,1.478,531,2.189,532,1.478,533,1.25,534,1.356,535,1.478,536,1.25,537,1.203,538,1.478,539,1.203,540,1.478,541,1.25,542,1.414,543,1.478,544,1.478,545,1.25,546,1.301,547,1.478,548,1.25,549,1.414,550,2.216,551,1.414,552,1.203,553,1.414,554,1.478,565,1.708,576,3.781,599,1.491,603,1.804,606,3.542,608,2.66,609,2.553,611,2.679,612,2.679,613,4.481,614,3.197,616,2.841,623,2.193,625,2.193,626,2.193,628,2.193,629,4.276,630,3.886,634,1.913,636,3.351,637,2.775,638,2.841,639,3.197,640,4.077,645,3.886,648,2.193,652,2.384,662,3.923,663,4.445,664,4.998,665,4.002,683,3.185,686,1.547,687,2.04,688,4.077,753,2.841,756,3.351,758,2.841,923,2.877,991,2.679,1049,2.679,1067,3.875,1072,2.412,1073,1.913,1316,3.197,1338,2.384,1339,2.384,1341,2.384,1342,2.384,1344,5.237,1361,3.257,1362,2.384,1363,2.841,1364,3.923,1365,3.923,1366,3.923,1367,4.226,1368,4.68,1369,3.923,1370,4.816,1371,5.535,1372,4.68,1373,4.677,1374,3.03,1375,5.535,1376,4.596,1377,4.501,1378,4.68,1379,4.226,1380,4.68,1381,3.03,1382,3.03,1383,3.542,1384,3.542,1385,3.886,1386,3.923,1387,3.923,1388,3.03,1389,3.03,1390,3.03,1391,3.923,1392,3.03,1393,4.226,1394,2.641,1395,2.641,1396,2.641,1397,2.641,1398,2.641,1399,2.641,1400,2.641,1401,2.641,1402,2.641,1403,2.641,1404,2.641,1405,2.641,1406,2.641,1407,2.641,1408,2.641,1409,4.501,1410,4.596,1411,4.596,1412,3.03,1413,4.501,1414,3.257,1415,2.641,1416,2.384,1417,5.8,1418,2.641,1419,3.03,1420,3.03,1421,3.03,1422,2.193,1423,3.542,1424,4.501,1425,4.501,1426,3.03,1427,3.03,1428,2.641,1429,3.03,1430,3.03,1431,3.03,1432,3.03,1433,2.641,1434,3.03]],["title/interfaces/InfoDialogData.html",[51,0.373,1376,2.936]],["body/interfaces/InfoDialogData.html",[12,0.014,17,1.466,18,0.248,19,0.186,20,0.134,21,0.118,23,1.115,32,0.538,37,0.37,40,0.334,50,0.241,51,0.438,53,0.956,58,0.845,82,0.101,85,0.01,86,0.01,87,1.518,88,0.416,89,0.808,106,1.042,130,2.39,182,1.466,183,1.572,186,2.683,204,3.669,277,1.322,289,1.752,290,1.463,293,2.683,295,2.356,321,1.572,322,1.752,324,1.752,326,1.752,327,1.752,355,3.148,356,2.221,357,1.899,474,2.833,476,2.833,477,2.833,481,1.819,486,2.683,490,3.655,495,3.204,496,3.401,531,1.752,565,2.683,576,2.833,599,1.547,608,3.236,683,4.014,686,2.43,687,3.204,688,2.683,753,3.004,756,4.224,758,3.004,923,2.55,1049,2.833,1067,2.55,1072,2.55,1316,2.833,1338,3.745,1339,3.745,1341,3.745,1342,3.745,1361,3.444,1362,3.745,1363,3.004,1364,4.147,1365,4.147,1366,4.147,1367,4.851,1368,4.147,1369,4.147,1370,4.461,1371,5.373,1372,4.147,1373,3.745,1375,5.373,1376,4.949,1378,4.147,1379,3.745,1380,4.147,1383,3.745,1384,3.745,1385,3.444,1386,4.147,1387,4.147,1391,4.147,1393,3.745,1394,4.147,1395,4.147,1396,4.147,1397,4.147,1398,4.147,1399,4.147,1400,4.147,1401,4.147,1402,4.147,1403,4.147,1404,4.147,1405,4.147,1406,4.147,1407,4.147,1408,4.147]],["title/modules/InfoDialogModule.html",[0,0.858,1350,2.731]],["body/modules/InfoDialogModule.html",[0,1.196,2,2.007,3,2.007,4,1.518,5,2.937,6,2.245,7,1.804,8,2.937,12,0.013,15,2.625,16,2.161,17,1.742,18,0.218,19,0.221,20,0.16,21,0.14,37,0.443,39,2.625,40,0.397,43,3.188,50,0.221,75,2.334,82,0.12,85,0.011,86,0.011,378,3.074,379,2.334,531,3.081,564,5.405,565,3.188,566,4.089,567,3.366,603,3.366,688,3.188,689,4.092,1067,3.03,1350,5.463,1385,4.092,1435,4.928,1436,4.928,1437,4.928,1438,5.654,1439,6.869,1440,5.654,1441,5.654,1442,6.869,1443,4.928,1444,5.654]],["title/injectables/InjectorDelegateDataSourceService.html",[96,0.72,1445,3.192]],["body/injectables/InjectorDelegateDataSourceService.html",[12,0.013,18,0.127,19,0.263,20,0.113,21,0.155,23,1.287,28,1.62,30,1.944,31,1.291,32,0.627,33,1.388,35,1.156,37,0.383,40,0.281,50,0.156,53,0.663,82,0.085,85,0.009,86,0.009,88,0.35,89,0.72,91,2.396,96,0.974,100,3.056,116,2.627,118,0.97,119,1.651,123,1.42,126,3.149,127,2.143,128,2.143,130,1.276,156,1.951,183,1.814,185,1.035,187,3.095,189,2.926,193,2.926,195,2.926,197,2.926,200,2.926,206,2.926,208,2.926,211,1.867,213,1.867,215,1.867,217,1.867,219,1.867,221,1.867,224,1.867,226,1.867,228,1.867,243,1.588,244,2.941,245,2.941,246,2.941,247,2.941,248,2.941,249,2.941,250,2.941,255,3.492,303,3.465,385,2.678,386,3.445,387,3.534,389,3.788,390,3.615,392,3.268,393,2.693,402,2.525,403,3.534,404,3.268,405,5.483,406,4.344,407,2.693,408,2.693,409,2.693,410,2.693,411,2.693,412,2.693,413,2.693,414,2.693,415,2.693,416,2.693,417,2.693,418,2.693,419,2.693,420,2.693,421,2.693,431,2.255,432,2.143,433,2.693,434,2.693,436,2.693,445,2.381,1445,4.32,1446,5.463,1447,3.486,1448,5.49,1449,7.48,1450,4,1451,5.49,1452,5.463,1453,4,1454,6.268,1455,4,1456,4,1457,4,1458,4,1459,4]],["title/classes/LearnMore.html",[82,0.086,488,2.287]],["body/classes/LearnMore.html",[12,0.013,18,0.191,19,0.234,20,0.17,21,0.176,24,4.093,28,1.185,32,0.598,50,0.296,53,0.725,66,1.36,82,0.162,85,0.011,86,0.011,88,0.525,89,0.933,185,1.323,308,1.726,485,3.385,486,3.385,488,4.015,496,3.058,501,4.495,502,4.015,503,4.042,513,3.385,515,3.324,668,4.015,694,3.574,788,2.929,822,4.345,824,5.974,1460,6.004]],["title/injectables/LocalStorageService.html",[96,0.72,690,2.731]],["body/injectables/LocalStorageService.html",[12,0.014,18,0.111,19,0.136,20,0.098,21,0.182,23,1.168,24,2.971,28,1.42,30,1.629,31,1.153,32,0.529,33,1.127,35,1.092,37,0.189,40,0.245,48,4.997,49,4.628,50,0.136,53,0.965,57,1.769,58,1.127,63,1.282,65,3.899,66,1.811,67,3.097,78,2.603,80,2.338,82,0.074,85,0.008,86,0.008,88,0.588,89,0.653,96,0.884,169,2.143,179,1.332,180,1.237,243,1.383,255,1.627,277,0.968,308,1.673,337,2.838,357,2.153,439,1.923,597,4.344,599,1.593,606,4.997,690,3.355,692,5.326,706,3.146,920,4.241,953,4.645,1049,3.78,1135,3.146,1206,5.058,1208,6.271,1225,3.146,1252,3.922,1267,4.211,1283,4.579,1318,3.922,1461,6.413,1462,3.037,1463,4.984,1464,4.344,1465,4.984,1466,3.484,1467,4.984,1468,4.984,1469,6.718,1470,3.484,1471,3.922,1472,4.984,1473,3.484,1474,4.984,1475,3.484,1476,4.984,1477,3.484,1478,4.984,1479,4.984,1480,4.344,1481,4.984,1482,4.984,1483,4.984,1484,4.984,1485,4.997,1486,4.984,1487,4.984,1488,4.984,1489,5.534,1490,4.984,1491,4.984,1492,6.35,1493,6.35,1494,7.359,1495,6.35,1496,4.344,1497,4.984,1498,3.607,1499,4.344,1500,4.984,1501,6.35,1502,4.984,1503,4.984,1504,4.984,1505,3.484,1506,3.484,1507,3.484,1508,3.146,1509,3.484,1510,3.484,1511,3.484,1512,3.484,1513,3.037,1514,3.484,1515,3.484]],["title/injectables/LocalStorageSyncService.html",[14,2.415,96,0.72]],["body/injectables/LocalStorageSyncService.html",[11,3.901,12,0.014,14,3.628,18,0.149,19,0.183,20,0.132,21,0.193,23,1.429,28,1.508,30,1.478,31,1.006,32,0.48,33,1.275,35,0.962,37,0.367,40,0.329,46,3.385,49,4.537,50,0.238,53,0.819,58,1.203,63,1.161,65,3.307,66,1.731,67,2.281,72,2.164,82,0.1,85,0.01,86,0.01,88,0.409,89,0.799,96,1.082,118,1.134,158,1.338,179,1.787,180,1.66,182,1.441,183,2.014,184,2.616,185,1.284,243,1.857,293,2.637,294,3.385,308,1.752,314,3.385,588,3.68,599,1.802,826,4.912,828,4.277,838,3.628,840,3.385,841,3.149,1234,3.68,1267,3.385,1283,3.68,1287,3.385,1288,4.565,1290,4.076,1297,4.036,1307,3.385,1513,4.076,1516,6.123,1517,7.185,1518,6.095,1519,6.095,1520,4.677,1521,4.677,1522,6.095,1523,4.677,1524,4.677,1525,3.68,1526,4.076,1527,4.076,1528,3.385,1529,6.095,1530,4.677,1531,4.677,1532,4.677,1533,4.677,1534,4.677,1535,4.677,1536,4.677,1537,6.095,1538,4.677,1539,4.677,1540,4.076,1541,5.312,1542,4.677,1543,4.677]],["title/modules/MousePositionTrackerModule.html",[0,0.858,1544,3.192]],["body/modules/MousePositionTrackerModule.html",[0,1.14,2,1.913,12,0.014,18,0.171,19,0.21,20,0.152,21,0.133,37,0.421,39,2.549,40,0.379,43,3.038,44,2.752,45,2.628,50,0.26,58,1.38,60,1.781,63,1.142,82,0.115,85,0.011,86,0.011,118,1.307,119,2.224,123,1.913,130,1.719,183,1.781,293,3.038,379,2.224,550,2.224,639,3.208,681,5.242,731,5.242,759,4.49,1039,3.628,1162,3.208,1249,3.628,1275,3.9,1276,3.628,1278,4.21,1279,4.24,1297,3.97,1471,4.24,1544,5.248,1545,4.24,1546,4.24,1547,6.596,1548,5.389,1549,5.389,1550,4.696,1551,4.24,1552,5.389,1553,5.389,1554,6.669,1555,6.669,1556,4.24,1557,6.669,1558,6.669,1559,5.389,1560,5.389,1561,4.696,1562,5.389,1563,5.389,1564,5.389,1565,5.389,1566,5.389,1567,5.389,1568,5.389,1569,5.389,1570,5.389,1571,5.389,1572,4.696,1573,4.696,1574,4.696,1575,4.24,1576,5.389,1577,5.389,1578,5.389]],["title/directives/NumberDirective.html",[520,1.674,552,1.61]],["body/directives/NumberDirective.html",[12,0.014,18,0.159,19,0.196,20,0.142,21,0.183,23,1.493,28,1.383,30,1.699,31,1.156,32,0.502,33,1.243,35,0.711,37,0.271,40,0.352,50,0.196,58,0.889,73,3.108,82,0.107,85,0.01,86,0.01,88,0.438,169,2.033,183,1.656,258,2.068,277,2.049,295,3.148,316,2.315,321,2.105,345,3.418,355,3.254,356,2.974,357,1.963,480,2.242,519,2.927,520,3.211,551,2.339,552,2.53,553,2.974,599,1.599,759,5.545,1081,3.374,1316,3.793,1328,4.717,1556,5.513,1579,5.802,1580,5.802,1581,4.367,1582,6.372,1583,6.372,1584,6.372,1585,6.372,1586,5.011,1587,5.336,1588,5.011,1589,5.011,1590,6.372,1591,7.006,1592,6.106,1593,6.106,1594,6.372,1595,6.372,1596,5.011,1597,6.372,1598,7.006,1599,5.011,1600,5.011,1601,5.011]],["title/modules/NumbersOnlyModule.html",[0,0.858,1602,2.936]],["body/modules/NumbersOnlyModule.html",[0,1.268,2,2.128,3,2.128,4,1.61,5,3.012,6,2.38,7,1.912,8,3.012,12,0.013,15,2.719,16,2.291,17,1.847,18,0.191,19,0.234,20,0.169,21,0.148,37,0.385,39,2.719,40,0.421,50,0.234,82,0.128,85,0.011,86,0.011,552,3.345,1579,4.717,1580,4.717,1593,5.224,1602,5.942,1603,5.224,1604,5.224,1605,5.224,1606,5.994,1607,5.994]],["title/components/OpacitySliderComponent.html",[290,0.773,533,1.674]],["body/components/OpacitySliderComponent.html",[4,0.81,12,0.014,16,2.63,18,0.17,19,0.118,20,0.085,21,0.191,23,1.052,28,1.506,30,0.732,31,1.136,32,0.569,33,0.536,35,0.9,37,0.163,40,0.212,50,0.118,53,0.716,57,1.071,58,0.536,66,1.69,72,1.593,73,2.189,78,2.008,82,0.142,85,0.007,86,0.007,88,0.264,89,0.588,106,1.741,154,1.033,158,1.251,169,1.709,182,1.382,185,1.097,203,1.198,258,1.245,277,1.247,284,1.796,288,2.405,289,1.111,290,1.208,291,3.88,292,1.296,295,2.048,296,3.747,306,1.198,308,1.911,315,1.905,316,0.997,317,1.111,321,2.584,322,1.652,324,1.652,326,1.652,327,1.652,328,1.198,329,2.423,330,1.927,331,2.301,344,4.463,345,2.189,357,0.93,374,1.245,380,1.245,439,1.483,464,1.153,465,2.008,466,1.472,467,1.245,468,1.472,470,1.198,480,1.35,481,1.715,519,1.782,520,1.245,521,2.894,522,1.472,523,1.472,524,1.472,525,1.245,526,1.472,527,1.153,528,1.472,529,1.245,530,1.472,531,1.111,532,1.472,533,2.448,534,3.707,535,1.472,536,1.245,537,1.198,538,1.472,539,1.198,540,1.472,541,1.245,542,1.409,543,1.472,544,1.472,545,1.245,546,1.296,547,1.472,548,1.245,549,1.409,550,1.245,551,1.409,552,1.198,553,1.409,554,1.472,575,2.671,577,3.248,580,2.53,583,2.292,599,1.845,607,1.617,608,2.008,609,2.723,611,3.189,612,3.189,613,3.021,614,1.796,616,1.905,617,3.877,618,4.216,620,2.184,621,4.668,623,3.248,625,4.293,626,4.293,628,3.248,636,3.345,637,2.769,638,4.002,640,3.345,645,2.184,648,2.184,663,2.671,665,2.032,708,2.032,914,2.032,1069,3.021,1296,1.905,1344,2.375,1367,4.216,1373,4.668,1410,2.184,1411,2.184,1414,3.248,1415,3.911,1416,3.531,1418,2.63,1422,2.184,1561,2.63,1608,6.062,1609,6.062,1610,2.63,1611,6.154,1612,4.488,1613,3.911,1614,5.357,1615,4.488,1616,5.357,1617,4.488,1618,5.932,1619,5.932,1620,5.526,1621,6.34,1622,5.357,1623,5.357,1624,5.17,1625,3.018,1626,3.018,1627,4.474,1628,3.018,1629,5.17,1630,3.018,1631,4.488,1632,4.488,1633,3.018,1634,4.488,1635,4.488,1636,3.018,1637,4.488,1638,3.018,1639,3.018,1640,3.018,1641,5.932,1642,3.018,1643,3.911,1644,5.357,1645,3.018,1646,3.018,1647,6.645,1648,5.357,1649,3.018,1650,4.488,1651,4.488,1652,3.018,1653,3.018,1654,3.911,1655,3.607,1656,3.018,1657,2.63,1658,3.018,1659,3.911,1660,2.63,1661,2.63,1662,2.63]],["title/modules/OpacitySliderModule.html",[0,0.858,1663,2.936]],["body/modules/OpacitySliderModule.html",[0,1.212,2,2.035,3,2.035,4,1.539,5,2.955,6,2.275,7,1.828,8,2.955,12,0.013,15,2.647,16,2.19,17,1.766,18,0.182,19,0.224,20,0.162,21,0.142,37,0.436,39,2.647,40,0.403,50,0.224,75,2.365,82,0.122,85,0.011,86,0.011,378,3.099,379,2.365,533,3.459,534,2.564,566,4.123,567,3.412,1608,4.51,1609,4.51,1611,4.51,1663,5.889,1664,4.995,1665,4.995,1666,4.995,1667,5.731,1668,5.731,1669,5.731,1670,6.926,1671,5.731,1672,6.926,1673,5.731]],["title/classes/OpenDialog.html",[82,0.086,694,2.415]],["body/classes/OpenDialog.html",[12,0.013,18,0.191,19,0.234,20,0.17,21,0.176,24,4.093,28,1.185,32,0.598,50,0.296,53,0.725,66,1.36,82,0.162,85,0.011,86,0.011,88,0.525,89,0.933,185,1.323,308,1.726,485,3.385,486,3.385,488,3.385,496,3.261,501,3.79,502,3.385,503,4.794,513,3.385,515,3.324,668,4.015,694,4.239,788,2.929,822,4.345,824,5.974,1674,6.004]],["title/interfaces/OrganInfo.html",[51,0.373,1675,2.936]],["body/interfaces/OrganInfo.html",[12,0.014,18,0.054,19,0.067,20,0.048,21,0.042,24,1.884,31,1.348,32,0.455,33,1.1,35,0.243,37,0.155,40,0.12,50,0.168,51,0.157,53,0.816,57,2.051,58,1.1,62,1.884,63,0.822,66,0.387,72,1.309,78,3.675,80,0.63,82,0.061,85,0.005,86,0.005,87,0.546,88,0.15,89,0.375,106,0.626,149,4.281,150,1.806,151,4.268,152,3.029,158,0.565,166,0.765,169,0.546,176,2.567,182,0.527,184,0.913,185,0.472,277,0.475,278,2.071,283,4.589,284,1.703,288,0.916,289,0.63,290,0.545,291,1.613,292,0.735,295,2.106,296,1.613,315,1.806,321,1.425,322,0.63,324,0.63,326,0.63,327,0.63,329,0.654,330,0.735,331,0.735,337,3.539,344,1.806,345,0.834,348,3.276,357,1.328,439,1.425,475,3.79,482,1.238,489,1.08,519,0.679,536,0.706,537,3.297,583,2.202,599,1.555,601,1.346,609,1.584,614,4.597,616,4.58,637,0.798,639,2.196,657,6.388,706,2.722,718,2.903,758,1.08,828,1.018,838,1.703,908,2.252,914,1.152,923,2.952,933,2.071,973,1.238,974,2.071,982,2.071,991,1.703,992,1.238,1071,1.152,1145,4.546,1240,1.346,1249,2.484,1268,1.238,1275,2.67,1276,2.484,1278,1.08,1296,4.539,1334,1.346,1361,3.121,1489,3.215,1508,2.329,1587,3.121,1627,1.926,1675,3.988,1676,1.238,1677,1.238,1678,1.346,1679,2.861,1680,2.494,1681,7.075,1682,6.002,1683,2.494,1684,2.861,1685,2.494,1686,2.494,1687,4.877,1688,2.494,1689,2.494,1690,2.494,1691,1.491,1692,2.861,1693,1.491,1694,1.346,1695,1.491,1696,1.491,1697,1.346,1698,1.491,1699,2.494,1700,1.491,1701,1.491,1702,2.494,1703,1.491,1704,2.494,1705,2.071,1706,3.758,1707,1.491,1708,1.491,1709,3.215,1710,4.523,1711,6.065,1712,1.491,1713,1.491,1714,1.491,1715,3.215,1716,5.232,1717,4.523,1718,1.491,1719,1.491,1720,1.491,1721,1.491,1722,2.494,1723,1.491,1724,3.215,1725,4.084,1726,1.491,1727,1.491,1728,1.491,1729,3.215,1730,4.523,1731,1.491,1732,1.491,1733,1.491,1734,1.491,1735,2.494,1736,1.491,1737,2.494,1738,2.494,1739,2.494,1740,1.491,1741,1.491,1742,3.215,1743,5.232,1744,4.523,1745,1.491,1746,1.491,1747,1.491,1748,3.215,1749,4.523,1750,1.491,1751,1.491,1752,1.491,1753,1.491,1754,2.494,1755,1.491,1756,1.491,1757,3.215,1758,2.494,1759,1.491,1760,3.215,1761,5.232,1762,4.523,1763,1.491,1764,1.491,1765,1.491,1766,1.491,1767,2.494,1768,1.491,1769,1.491,1770,1.491,1771,2.494,1772,1.491,1773,1.491,1774,2.252,1775,1.491,1776,2.494,1777,3.758,1778,1.491,1779,1.491,1780,1.491,1781,4.523,1782,2.494,1783,1.491,1784,1.491,1785,2.494,1786,1.491,1787,1.491,1788,2.903,1789,2.252,1790,1.491,1791,1.491,1792,2.494,1793,1.491,1794,1.491,1795,2.494,1796,1.491,1797,1.491,1798,2.494,1799,1.491,1800,3.215,1801,4.523,1802,1.491,1803,1.491,1804,1.491,1805,1.491,1806,2.494,1807,2.494,1808,1.491,1809,1.491,1810,2.494,1811,1.491,1812,2.494,1813,2.494,1814,3.758,1815,3.758,1816,1.491,1817,1.491,1818,1.491,1819,1.491,1820,1.491,1821,2.252,1822,1.491,1823,1.491,1824,5.549,1825,1.491,1826,1.71,1827,1.71,1828,1.71,1829,1.71,1830,4.312,1831,1.71,1832,3.689,1833,1.71,1834,4.312,1835,1.71,1836,1.71,1837,1.71,1838,2.861,1839,3.215,1840,1.71,1841,2.494,1842,1.71,1843,2.861,1844,3.689,1845,3.689,1846,4.312,1847,1.71,1848,1.71,1849,1.71,1850,1.71,1851,2.861,1852,2.861,1853,1.71,1854,1.71,1855,3.689,1856,1.71,1857,2.861,1858,1.71,1859,1.71,1860,2.861,1861,1.491,1862,1.71,1863,1.71,1864,2.861,1865,1.71,1866,1.71,1867,1.71,1868,1.71,1869,1.71,1870,1.71,1871,1.71,1872,2.861,1873,1.71,1874,1.71,1875,4.799,1876,2.494,1877,3.689,1878,1.71,1879,5.035,1880,2.861,1881,3.689,1882,3.689,1883,5.51,1884,2.861,1885,2.861,1886,1.71,1887,1.71,1888,3.689,1889,1.71,1890,1.71,1891,1.71,1892,1.71,1893,1.71,1894,1.491,1895,1.71,1896,1.71,1897,1.71,1898,1.71,1899,1.71,1900,1.71,1901,1.71,1902,1.71,1903,1.71,1904,1.71,1905,1.71,1906,1.71,1907,3.689,1908,2.861,1909,1.71,1910,1.71,1911,1.71,1912,1.71,1913,1.491,1914,1.71,1915,1.71,1916,1.71,1917,1.71,1918,1.71,1919,1.71,1920,1.491,1921,2.861,1922,2.861,1923,2.861,1924,2.861,1925,2.861,1926,1.71,1927,1.71,1928,1.71,1929,1.71]],["title/modules/OrganSelectorModule.html",[0,0.858,1930,2.936]],["body/modules/OrganSelectorModule.html",[0,1.227,2,2.059,3,2.059,4,1.558,5,2.97,6,2.303,7,1.851,8,2.97,12,0.013,15,2.666,16,2.217,17,1.787,18,0.184,19,0.226,20,0.164,21,0.144,37,0.43,39,2.666,40,0.408,50,0.226,75,2.394,82,0.124,85,0.011,86,0.011,378,3.122,379,2.394,536,3.464,537,2.303,566,4.153,567,3.453,1676,4.199,1677,4.199,1930,5.903,1931,5.056,1932,5.056,1933,5.056,1934,5.802,1935,5.802,1936,6.977,1937,5.802]],["title/interfaces/PanelData.html",[51,0.373,1077,2.561]],["body/interfaces/PanelData.html",[12,0.014,18,0.215,19,0.182,20,0.203,21,0.116,32,0.533,35,0.663,37,0.367,40,0.328,50,0.264,51,0.56,53,1.001,58,1.355,60,1.543,63,0.8,82,0.1,85,0.01,86,0.01,87,1.49,88,0.408,89,0.798,96,1.081,117,2.503,118,1.133,130,1.943,158,0.922,179,1.785,180,1.658,185,0.771,290,0.89,316,1.543,357,1.439,490,3.503,496,2.616,576,4.695,599,1.172,603,4.034,608,3.6,675,4.1,676,2.948,683,4.168,684,2.633,686,2.385,733,3.145,745,3.145,756,4.496,919,2.385,923,2.503,1022,2.78,1067,2.503,1068,3.38,1069,3.145,1070,3.676,1071,3.145,1072,3.631,1073,4.533,1074,3.38,1075,3.676,1076,5.333,1077,4.278,1078,3.145,1079,3.38,1080,4.792,1081,3.145,1082,3.38,1083,4.792,1084,3.676,1085,3.676,1086,2.948,1087,3.676,1088,3.676,1089,3.676,1090,3.676,1091,3.676,1092,3.676,1093,3.676,1094,3.676,1095,3.676,1096,3.676,1097,3.676,1098,4.792,1099,4.792,1100,3.676,1101,3.676,1102,3.676,1103,3.676,1104,3.676,1105,3.676,1106,3.676,1107,3.676,1108,3.676,1109,3.676,1110,3.676]],["title/interfaces/PluckUniqueOptions.html",[51,0.373,1938,2.731]],["body/interfaces/PluckUniqueOptions.html",[12,0.014,18,0.151,19,0.24,20,0.134,21,0.117,32,0.373,33,1.09,34,4.07,35,0.672,37,0.333,50,0.315,51,0.435,53,0.925,57,1.681,58,1.09,60,2.684,63,0.811,73,2.997,85,0.01,86,0.01,87,1.51,88,0.414,89,0.894,116,1.51,118,1.148,123,1.681,138,2.868,166,2.119,277,1.316,303,3.879,308,1.361,357,1.893,431,3.464,445,2.819,653,2.67,695,4.447,714,3.658,931,2.989,1020,4.592,1137,6.032,1139,6.346,1141,6.225,1169,3.188,1171,5.368,1232,4.835,1234,3.726,1938,5.469,1939,3.427,1940,3.427,1941,4.835,1942,5.945,1943,7.219,1944,6.144,1945,6.144,1946,6.144,1947,7.029,1948,4.735,1949,4.735,1950,4.835,1951,4.127,1952,4.127,1953,4.127,1954,4.127,1955,5.355,1956,6.968,1957,6.681,1958,6.681,1959,6.291,1960,5.355,1961,5.945,1962,4.735,1963,4.735,1964,4.735,1965,4.735,1966,4.735]],["title/interfaces/Segment.html",[51,0.373,954,2.731]],["body/interfaces/Segment.html",[12,0.014,17,1.473,18,0.105,19,0.128,20,0.093,21,0.081,31,0.543,32,0.443,35,0.878,37,0.259,40,0.231,50,0.187,51,0.44,53,0.854,58,1.332,62,3.158,63,1.211,72,1.698,73,2.333,82,0.12,85,0.008,86,0.008,87,1.05,88,0.619,89,0.811,100,1.212,106,1.047,158,1.112,168,3.016,169,1.526,182,1.014,184,1.973,185,0.543,277,0.914,282,4.973,285,2.077,286,3.556,289,1.212,290,0.911,292,1.413,295,2.153,305,4.021,306,2.877,307,1.68,316,2.734,321,1.087,322,1.212,324,1.212,326,1.212,327,1.212,329,1.258,330,1.413,331,1.413,342,1.855,345,3.45,355,2.442,356,1.536,357,1.905,439,1.862,467,3.138,527,1.258,599,0.826,609,2.656,634,3.019,658,2.215,788,3.66,905,1.959,907,2.215,910,4.077,917,2.215,919,3.158,920,3.019,929,2.381,930,2.381,931,3.556,932,5.813,933,3.461,934,2.589,935,2.589,936,5.813,937,2.589,939,2.589,945,5.393,946,2.589,947,2.589,948,3.763,949,2.589,953,3.019,954,4.973,955,2.589,957,2.589,958,6.199,959,4.433,960,3.763,961,4.164,963,2.381,964,2.589,965,2.381,966,2.589,973,2.381,974,3.461,976,2.589,977,2.589,978,2.381,979,2.589,980,5.393,982,2.381,983,4.433,984,2.381,986,2.381,987,2.381,988,2.215,989,2.381,990,3.763,991,3.681,992,2.381,993,2.381,994,3.461,995,3.019,996,3.019,997,2.589,998,2.589,999,3.763,1000,2.589,1001,3.763,1002,2.589,1003,2.589,1004,2.077,1005,3.763,1006,2.589,1007,4.433,1008,2.381,1009,2.589,1010,2.589,1011,3.763,1012,2.589,1013,2.589,1014,3.763,1015,2.589,1016,2.381,1017,3.763,1018,3.763,1019,3.763,1020,2.215,1021,2.589,1022,1.959,1023,2.589,1024,2.589,1025,2.589,1026,2.589,1027,2.589,1028,2.589,1029,2.589,1030,2.589,1031,2.589,1032,2.589,1033,2.589,1034,2.589,1035,2.589,1036,2.589,1037,2.589,1038,2.589,1039,2.215,1040,2.381,1041,2.215,1042,2.589,1043,2.589,1044,2.381,1045,2.381,1046,2.589,1047,2.381,1048,2.589,1049,1.959,1050,2.589,1051,2.589,1052,2.381,1053,2.381,1054,2.589,1055,2.589,1056,4.433,1057,2.589,1058,2.589]],["title/components/SpatialSearchListComponent.html",[290,0.773,539,1.61]],["body/components/SpatialSearchListComponent.html",[4,0.808,12,0.014,18,0.17,19,0.117,20,0.085,21,0.182,23,1.05,28,1.425,30,1.297,31,1.096,32,0.568,33,0.949,35,0.841,37,0.163,40,0.212,50,0.175,51,0.412,53,0.765,57,2.103,58,1.052,63,0.515,66,1.342,72,1.59,82,0.141,85,0.007,86,0.007,88,0.631,89,0.587,106,1.74,138,2.957,154,2.658,158,1.169,169,2.303,185,1.045,203,1.195,258,1.243,277,1.845,283,3.341,284,4.206,287,4.288,288,1.613,289,1.109,290,1.019,291,3.571,292,1.293,295,2.045,296,3.016,306,1.195,308,1.821,316,0.995,317,3.045,321,2.583,322,1.649,324,1.649,326,1.649,327,1.649,328,1.195,329,2.421,330,1.924,331,2.298,344,3.74,345,2.185,348,4.707,357,1.951,374,1.243,380,1.243,439,1.768,464,1.151,465,2.004,466,1.469,467,1.243,468,1.469,470,1.195,476,2.667,480,1.347,481,1.712,519,1.778,520,1.243,521,2.89,522,1.469,523,1.469,524,1.469,525,1.243,526,1.469,527,1.151,528,1.469,529,1.243,530,1.469,531,1.109,532,1.469,533,1.243,534,1.347,535,1.469,536,1.243,537,1.195,538,1.469,539,2.352,540,1.469,541,1.243,542,1.405,543,1.469,544,1.469,545,1.243,546,1.293,547,1.469,548,1.243,549,1.405,550,1.243,551,1.405,552,1.195,553,1.405,554,1.469,575,2.667,577,3.242,580,2.526,583,1.537,599,1.487,607,1.613,608,2.004,609,2.72,610,2.027,611,2.667,612,3.185,613,3.989,629,2.027,636,3.016,637,2.091,638,1.9,640,3.016,643,5.164,663,1.792,664,2.369,679,3.175,714,2.667,995,3.377,996,2.828,1086,2.828,1225,2.828,1246,2.624,1328,3.016,1410,3.242,1411,3.242,1414,2.179,1422,2.179,1423,2.369,1464,3.904,1508,4.966,1620,3.904,1627,5.457,1655,4.947,1661,2.624,1967,5.318,1968,5.318,1969,2.369,1970,3.525,1971,4.663,1972,3.904,1973,4.48,1974,4.48,1975,4.663,1976,4.663,1977,3.011,1978,3.011,1979,3.011,1980,3.011,1981,3.904,1982,4.48,1983,3.904,1984,3.011,1985,3.904,1986,3.525,1987,3.525,1988,3.904,1989,3.011,1990,3.904,1991,3.011,1992,2.369,1993,2.179,1994,4.663,1995,3.904,1996,5.164,1997,3.904,1998,2.624,1999,2.624,2000,2.624,2001,2.624,2002,2.624,2003,2.624,2004,4.48,2005,3.011,2006,4.48,2007,3.011,2008,3.011,2009,3.011,2010,3.011,2011,3.011]],["title/interfaces/SpatialSearchListItem.html",[51,0.373,1993,2.936]],["body/interfaces/SpatialSearchListItem.html",[12,0.014,18,0.144,19,0.177,20,0.128,21,0.112,32,0.47,35,0.643,37,0.245,40,0.318,50,0.233,51,0.614,53,0.857,57,2.519,58,1.26,63,0.776,72,1.608,82,0.127,85,0.009,86,0.009,87,1.445,88,0.645,89,0.783,106,1.307,138,2.787,154,2.644,158,1.318,169,2.13,185,1.102,277,2.145,283,3.366,284,3.554,287,4.321,288,3.199,289,1.668,290,1.138,291,3.764,292,1.946,295,2.552,296,3.764,317,2.886,321,1.497,322,1.668,324,1.668,326,1.668,327,1.668,329,1.732,330,1.946,331,1.946,344,3.769,345,2.21,348,5.092,357,2.272,476,2.697,539,1.799,583,3.049,599,1.498,609,1.946,679,3.199,714,2.697,995,2.86,996,2.86,1086,2.86,1225,2.86,1328,3.051,1508,4.947,1627,5.523,1655,4.966,1967,3.279,1968,3.279,1969,3.566,1970,3.566,1971,3.949,1972,3.949,1975,3.949,1976,3.949,1981,3.949,1983,3.949,1985,3.949,1986,3.566,1987,3.566,1988,3.949,1990,3.949,1992,4.698,1993,4.321,1994,3.949,1995,5.203,1996,6.185,1997,5.203,1998,3.949,1999,3.949,2000,3.949,2001,3.949,2002,3.949,2003,3.949]],["title/modules/SpatialSearchListModule.html",[0,0.858,2012,2.936]],["body/modules/SpatialSearchListModule.html",[0,1.199,2,2.013,3,2.013,4,1.523,5,2.941,6,2.251,7,1.809,8,2.941,12,0.013,15,2.63,16,2.167,17,1.747,18,0.18,19,0.221,20,0.16,21,0.14,37,0.44,39,2.63,40,0.398,50,0.221,75,2.341,82,0.121,85,0.011,86,0.011,154,1.942,317,2.728,378,3.079,379,2.341,539,3.323,566,4.096,567,3.376,1967,4.104,1968,4.104,2012,5.876,2013,4.943,2014,4.943,2015,4.943,2016,5.671,2017,5.997,2018,4.943,2019,6.881,2020,5.671,2021,6.881,2022,5.671,2023,5.671]],["title/interfaces/StackOp.html",[51,0.373,961,2.731]],["body/interfaces/StackOp.html",[12,0.014,17,1.474,18,0.105,19,0.129,20,0.093,21,0.082,31,0.544,32,0.444,35,0.878,37,0.259,40,0.231,50,0.187,51,0.44,53,0.68,58,1.332,62,2.444,63,1.211,72,1.169,73,2.334,82,0.12,85,0.008,86,0.008,87,1.051,88,0.665,89,0.811,100,1.213,106,1.048,158,1.112,168,3.018,169,1.974,182,1.015,184,1.974,185,0.544,277,0.915,282,5.119,285,2.079,286,3.558,289,1.213,290,0.912,292,1.414,295,2.154,305,4.192,306,2.877,307,1.682,316,2.697,321,1.088,322,1.213,324,1.213,326,1.213,327,1.213,329,1.259,330,1.414,331,1.414,342,1.857,345,3.535,355,2.444,356,1.537,357,1.906,439,1.862,467,2.83,527,1.259,599,0.826,609,2.421,634,3.021,658,2.217,788,3.205,905,1.96,907,2.217,910,4.079,917,2.217,919,3.159,920,3.021,929,2.384,930,2.384,931,3.021,932,5.814,933,3.463,934,2.592,935,2.592,936,5.906,937,2.592,939,2.592,945,5.567,946,2.592,947,2.592,948,4.435,949,2.592,953,3.021,954,4.763,955,2.592,957,2.592,958,6.239,959,4.435,960,4.435,961,4.424,963,2.384,964,2.592,965,2.384,966,2.592,973,2.384,974,3.463,976,2.592,977,2.592,978,2.384,979,2.592,980,5.395,982,2.384,983,4.868,984,2.384,986,2.384,987,2.384,988,2.217,989,2.384,990,2.592,991,2.849,992,3.463,993,3.463,994,4.756,995,3.558,996,4.148,997,2.592,998,2.592,999,3.766,1000,2.592,1001,3.766,1002,2.592,1003,2.592,1004,2.079,1005,3.766,1006,2.592,1007,4.435,1008,2.384,1009,2.592,1010,2.592,1011,3.766,1012,2.592,1013,2.592,1014,3.766,1015,2.592,1016,2.384,1017,3.766,1018,3.766,1019,3.766,1020,2.217,1021,2.592,1022,1.96,1023,2.592,1024,2.592,1025,2.592,1026,2.592,1027,2.592,1028,2.592,1029,2.592,1030,2.592,1031,2.592,1032,2.592,1033,2.592,1034,2.592,1035,2.592,1036,2.592,1037,2.592,1038,2.592,1039,2.217,1040,2.384,1041,2.217,1042,2.592,1043,2.592,1044,2.384,1045,2.384,1046,2.592,1047,2.384,1048,2.592,1049,1.96,1050,2.592,1051,2.592,1052,2.384,1053,2.384,1054,2.592,1055,2.592,1056,4.435,1057,2.592,1058,2.592]],["title/components/StoreDebugComponent.html",[290,0.773,541,1.674]],["body/components/StoreDebugComponent.html",[4,0.934,12,0.014,18,0.185,19,0.136,20,0.098,21,0.182,23,1.167,28,1.419,30,0.843,31,1.236,32,0.55,33,0.617,35,0.706,37,0.315,40,0.244,50,0.227,53,0.601,58,1.126,62,2.968,63,0.595,65,3.275,66,1.666,73,3.095,82,0.149,85,0.008,86,0.008,88,0.304,89,0.652,106,1.774,118,0.843,130,2.499,138,1.624,154,1.191,158,0.982,180,2.252,182,1.533,183,1.149,184,2.228,185,0.959,203,1.381,258,1.435,277,1.383,289,1.281,290,1.465,292,1.494,306,1.381,308,1.824,316,1.149,317,1.281,321,2.641,322,1.833,324,1.833,326,1.833,327,1.833,328,1.381,329,2.566,330,2.138,331,2.496,342,2.806,355,2.542,356,2.323,357,1.533,374,1.435,380,1.435,439,1.149,464,1.329,465,2.227,466,1.696,467,1.435,468,1.696,470,1.381,480,1.556,481,1.902,511,1.776,519,1.976,520,1.435,521,3.095,522,1.696,523,1.696,524,1.696,525,1.435,526,1.696,527,1.329,528,1.696,529,1.435,530,1.696,531,1.281,532,1.696,533,1.435,534,1.556,535,1.696,536,1.435,537,1.381,538,1.696,539,1.381,540,1.696,541,2.619,542,3.887,543,1.696,544,1.696,545,1.435,546,1.494,547,1.696,548,1.435,549,1.624,550,1.435,551,1.624,552,1.381,553,1.624,554,1.696,580,2.806,599,1.249,607,1.864,609,1.494,610,2.342,633,2.737,679,2.667,706,3.142,828,3.777,838,3.46,919,1.776,984,3.602,1135,3.142,1198,3.602,1206,3.602,1288,4.842,1297,3.46,1307,2.517,1363,3.142,1508,3.142,2024,5.323,2025,5.323,2026,2.737,2027,4.338,2028,7.355,2029,5.812,2030,4.977,2031,4.977,2032,6.345,2033,6.345,2034,4.977,2035,4.993,2036,4.977,2037,4.977,2038,4.977,2039,3.478,2040,4.977,2041,3.478,2042,4.977,2043,3.478,2044,3.478,2045,5.066,2046,5.851,2047,3.031,2048,4.338,2049,3.478,2050,3.478,2051,3.478,2052,3.478,2053,3.478,2054,4.977,2055,3.478,2056,3.478,2057,3.478,2058,3.478,2059,3.478,2060,3.478,2061,4.977,2062,4.977,2063,4.977,2064,4.338]],["title/modules/StoreDebugModule.html",[0,0.858,2065,2.936]],["body/modules/StoreDebugModule.html",[0,1.254,2,2.105,3,2.105,4,1.592,5,2.998,6,2.354,7,1.891,8,2.998,12,0.013,15,2.701,16,2.266,17,1.826,18,0.188,19,0.231,20,0.167,21,0.147,37,0.409,39,2.701,40,0.417,50,0.231,75,2.447,82,0.126,85,0.011,86,0.011,378,3.162,379,2.447,541,3.473,542,2.768,2024,4.291,2025,4.291,2065,5.929,2066,5.167,2067,5.167,2068,5.167,2069,5.929,2070,5.929]],["title/components/TextSearchComponent.html",[290,0.773,328,1.61]],["body/components/TextSearchComponent.html",[4,0.694,12,0.014,18,0.155,19,0.101,20,0.073,21,0.19,23,0.935,28,1.502,30,1.436,31,1.187,32,0.582,33,1.196,34,3.089,35,0.84,37,0.339,40,0.181,50,0.19,51,0.238,53,0.911,58,0.708,60,1.61,63,0.683,66,1.653,67,1.946,72,0.917,76,3.076,82,0.133,85,0.006,86,0.006,88,0.226,89,0.523,106,1.701,116,1.554,118,0.626,119,1.066,120,1.156,121,1.538,123,0.917,141,1.456,154,0.885,158,1.081,166,1.156,168,1.26,169,2.358,174,1.538,179,0.987,180,0.917,183,1.318,184,1.748,185,1.204,203,1.026,258,1.646,273,4.286,274,5.165,275,5.165,276,1.87,277,1.645,278,1.87,279,2.251,280,4.877,281,5.991,282,1.739,283,2.249,284,2.9,285,1.631,286,1.631,287,2.887,288,2.611,289,0.951,290,1.128,291,2.747,292,1.11,293,1.456,294,2.887,295,2.392,296,2.747,297,4.247,298,1.87,299,4.66,300,1.87,301,2.251,302,2.686,303,3.076,304,4.247,305,1.384,306,1.584,307,1.319,308,1.937,309,4.925,310,5.939,311,2.033,312,2.033,313,1.87,314,1.87,315,1.631,316,2.684,317,2.998,318,5.882,319,3.476,320,3.139,321,2.516,322,1.469,323,3.476,324,1.469,325,4.247,326,1.469,327,1.469,328,2.175,329,2.263,330,1.713,331,2.093,332,3.987,333,2.251,334,2.251,335,2.251,336,2.251,337,1.26,338,3.476,339,5.686,340,3.476,341,3.476,342,3.529,343,5.161,344,3.951,345,1.946,346,4.247,347,5.441,348,3.076,349,4.247,350,5.441,351,5.161,352,4.247,353,3.476,354,3.476,355,2.037,356,1.862,357,1.229,358,4.247,359,2.251,360,2.251,361,3.476,362,2.887,363,3.476,364,3.139,365,2.9,366,3.476,367,2.374,368,2.251,369,2.251,374,1.066,380,1.066,439,1.318,464,0.987,465,1.785,466,1.26,467,1.066,468,1.26,470,1.026,480,1.156,481,1.525,519,1.584,520,1.066,521,2.673,522,1.26,523,1.26,524,1.26,525,1.066,526,1.26,527,0.987,528,1.26,529,1.066,530,1.26,531,0.951,532,1.26,533,1.066,534,1.156,535,1.26,536,1.066,537,1.026,538,1.26,539,1.026,540,1.26,541,1.066,542,1.206,543,1.26,544,1.26,545,1.066,546,1.11,547,1.26,548,1.066,549,1.206,550,1.066,551,1.206,552,1.026,553,1.206,554,1.26,575,2.374,577,2.887,580,2.249,599,0.648,607,1.384,609,1.11,610,1.739,611,1.538,612,1.538,614,1.538,617,2.887,620,1.87,636,1.456,637,1.206,638,1.631,640,1.456,645,1.87,648,4.286,653,2.249,663,2.374,1135,2.518,1206,1.87,1410,1.87,1411,1.87,1417,2.251,1422,1.87,1498,4.53,1655,1.739,1659,3.476,1879,2.251,1986,2.033,1987,2.033,2071,3.989,2072,3.989,2073,3.989,2074,2.583,2075,2.583,2076,2.583,2077,2.583,2078,2.583,2079,3.989,2080,2.583,2081,2.583,2082,3.989,2083,2.583,2084,2.583,2085,2.583,2086,2.583,2087,2.583,2088,2.251,2089,2.583,2090,2.583,2091,2.583,2092,2.583,2093,2.583,2094,2.583,2095,2.583,2096,2.583,2097,2.583]],["title/modules/TextSearchModule.html",[0,0.858,2098,2.936]],["body/modules/TextSearchModule.html",[0,1.13,2,1.897,3,1.897,4,1.435,5,2.865,6,2.121,7,1.704,8,2.865,12,0.014,15,2.536,16,2.042,17,1.646,18,0.17,19,0.209,20,0.151,21,0.132,37,0.439,39,2.536,40,0.375,50,0.209,75,2.738,82,0.114,85,0.01,86,0.01,274,3.597,275,3.597,298,3.867,306,2.121,307,2.728,316,1.766,328,3.298,378,2.969,379,2.205,989,3.867,1060,5.324,1498,3.867,2098,5.985,2099,4.657,2100,5.343,2101,4.657,2102,4.657,2103,6.988,2104,6.988,2105,5.343,2106,6.634,2107,6.634,2108,6.634,2109,5.343,2110,6.634,2111,5.343,2112,6.634,2113,5.343,2114,5.343,2115,5.343,2116,5.343,2117,5.343]],["title/components/TrackingPopupComponent.html",[290,0.773,545,1.674]],["body/components/TrackingPopupComponent.html",[0,0.738,4,0.937,11,3.675,12,0.014,17,2.07,18,0.185,19,0.136,20,0.099,21,0.188,23,1.169,28,1.479,30,1.412,31,1.154,32,0.567,33,1.033,35,0.826,37,0.315,40,0.245,50,0.136,53,0.421,57,2.386,58,0.619,63,0.997,66,1.13,72,2.066,78,1.561,82,0.124,85,0.008,86,0.008,88,0.436,89,0.654,106,1.781,130,2.144,136,2.202,154,1.194,172,3.148,183,1.152,185,1.049,203,1.385,258,2.058,289,1.284,290,1.109,292,1.498,293,1.966,306,1.385,308,1.434,316,1.152,317,1.284,318,2.744,321,2.642,322,1.836,324,1.836,326,1.836,327,1.836,328,1.385,329,1.906,330,2.142,331,2.5,374,1.439,380,1.439,439,2.31,464,1.333,465,2.231,466,1.701,467,1.439,468,1.701,470,1.385,473,3.919,480,1.561,481,2.225,519,1.98,520,1.439,521,3.099,522,1.701,523,1.701,524,1.701,525,1.439,526,1.701,527,1.333,528,1.701,529,1.439,530,1.701,531,1.284,532,1.701,533,1.439,534,1.561,535,1.701,536,1.439,537,1.385,538,1.701,539,1.385,540,1.701,541,1.439,542,1.628,543,1.701,544,1.701,545,2.622,546,3.338,547,1.701,548,1.439,549,1.628,550,1.439,551,1.628,552,1.385,553,1.628,554,1.701,580,2.812,599,1.594,607,1.869,608,1.561,609,2.142,611,2.076,612,2.969,627,3.609,636,2.812,637,2.328,639,2.969,660,3.609,663,2.969,665,2.348,708,2.348,724,5.059,826,3.148,840,3.609,841,3.358,991,3.465,1135,3.148,1249,3.358,1275,3.609,1276,3.358,1278,4.01,1279,4.581,1318,3.924,1370,4.213,1414,2.524,1551,3.924,1572,3.04,1573,3.04,1574,3.04,1575,2.744,1587,4.864,1655,2.348,1920,5.857,2118,5.982,2119,5.982,2120,3.04,2121,5.821,2122,4.987,2123,6.353,2124,4.987,2125,4.987,2126,5.896,2127,4.987,2128,4.987,2129,4.987,2130,3.488,2131,4.987,2132,7.602,2133,3.488,2134,4.987,2135,3.488,2136,3.488,2137,4.987,2138,3.488,2139,3.488,2140,3.488,2141,3.488,2142,3.488,2143,3.488,2144,3.488,2145,3.488,2146,3.488,2147,4.987,2148,3.488,2149,3.488,2150,3.488,2151,3.488,2152,3.488,2153,4.346,2154,3.924,2155,4.346,2156,4.987,2157,3.488,2158,3.488,2159,4.987,2160,3.488,2161,3.488,2162,3.488,2163,3.488,2164,3.488,2165,4.987,2166,5.821,2167,3.488,2168,3.488,2169,3.488,2170,3.488,2171,3.488,2172,3.488,2173,2.744,2174,3.488,2175,3.488,2176,3.488,2177,3.488,2178,3.488]],["title/modules/TrackingPopupModule.html",[0,0.858,2179,2.936]],["body/modules/TrackingPopupModule.html",[0,1.238,2,2.079,3,2.079,4,1.572,5,2.982,6,2.325,7,1.868,8,2.982,12,0.013,15,2.681,16,2.238,17,1.804,18,0.186,19,0.229,20,0.165,21,0.145,37,0.422,39,2.681,40,0.411,50,0.229,75,2.417,82,0.125,85,0.011,86,0.011,378,3.139,379,2.417,545,3.468,546,2.515,2017,6.114,2018,5.103,2118,4.608,2119,4.608,2179,5.914,2180,5.103,2181,5.103,2182,5.103,2183,5.855,2184,5.855]],["title/injectables/TrackingState.html",[96,0.72,2185,2.936]],["body/injectables/TrackingState.html",[12,0.014,18,0.169,19,0.207,20,0.15,21,0.164,23,1.548,28,1.047,30,1.287,31,1.09,32,0.418,33,0.942,35,0.753,37,0.408,40,0.373,44,2.709,45,2.588,50,0.294,51,0.488,57,2.749,58,1.336,60,1.753,63,0.908,66,1.496,67,2.588,78,2.374,80,2.648,82,0.113,85,0.01,86,0.01,88,0.464,96,1.172,243,2.106,258,2.19,337,2.588,385,3.222,511,2.709,546,2.279,599,1.657,679,3.539,707,3.349,1078,3.572,1128,5.66,1162,3.932,1164,5.198,1165,4.175,1166,4.175,1296,3.349,1528,3.84,2126,6.094,2185,4.78,2186,3.572,2187,6.605,2188,5.757,2189,6.269,2190,5.306,2191,3.84,2192,3.84,2193,4.78,2194,4.843,2195,4.624,2196,4.624,2197,5.757,2198,4.624,2199,4.624,2200,4.624,2201,4.624,2202,4.175,2203,4.624,2204,4.624,2205,4.624]],["title/interfaces/TrackingStateModel.html",[51,0.373,2191,2.936]],["body/interfaces/TrackingStateModel.html",[12,0.014,18,0.172,19,0.211,20,0.153,21,0.134,31,0.892,32,0.425,33,1.186,37,0.41,40,0.38,44,2.76,45,2.636,50,0.296,51,0.497,57,2.763,58,1.345,60,1.786,63,0.925,66,1.513,67,2.636,78,2.418,80,2.67,82,0.115,85,0.011,86,0.011,87,1.724,88,0.473,89,0.876,96,1.186,337,2.636,385,2.636,511,2.76,546,2.321,599,1.356,679,3.58,707,3.411,1078,3.638,1128,5.258,1162,3.977,1164,5.258,1165,4.253,1166,4.253,1296,3.411,1528,3.911,2126,6.325,2185,3.911,2186,3.638,2188,4.71,2189,5.823,2191,4.835,2192,3.911,2193,4.835,2194,4.883,2195,4.71,2196,4.71,2197,5.823,2198,4.71,2199,4.71,2200,4.71,2201,4.71,2202,4.253,2203,4.71,2204,4.71,2205,4.71]],["title/injectables/WorkerCCFDatabaseDataSourceService.html",[96,0.72,454,2.561]],["body/injectables/WorkerCCFDatabaseDataSourceService.html",[12,0.014,18,0.108,19,0.245,20,0.096,21,0.121,23,1.148,28,1.6,30,1.907,31,1.263,32,0.619,33,1.358,35,1.142,37,0.387,40,0.239,50,0.191,51,0.313,53,0.591,58,1.019,63,0.982,80,1.252,82,0.122,85,0.008,86,0.008,88,0.297,89,0.642,91,1.872,96,1.114,100,3.015,106,0.744,107,3.271,116,2.596,118,0.824,119,1.403,120,1.521,123,1.207,126,2.286,127,1.822,128,1.822,130,1.085,155,1.658,156,3.381,158,0.671,179,1.299,180,1.207,184,1.831,185,1.144,189,2.679,193,2.679,195,2.679,197,2.679,200,2.679,206,2.679,208,2.679,211,1.587,213,1.587,215,1.587,217,1.587,219,1.587,221,1.587,224,1.587,226,1.587,228,1.587,243,1.35,244,2.624,245,2.624,246,2.624,247,2.624,248,2.624,249,2.624,250,2.624,255,3.334,365,3.416,367,2.915,382,4.509,383,3.297,384,2.289,385,3.246,386,2.931,387,3.236,388,4.153,389,4.05,390,3.714,391,3.853,392,2.915,393,2.289,395,2.675,396,4.701,397,5.598,399,4.544,400,4.544,402,2.146,403,3.236,404,2.915,405,5.44,406,4.243,407,2.289,408,2.289,409,2.289,410,2.289,411,2.289,412,2.289,413,2.289,414,2.289,415,2.289,416,2.289,417,2.289,418,2.289,419,2.289,420,2.289,421,2.289,422,2.675,423,3.544,424,3.544,425,2.461,426,3.544,427,2.461,428,2.289,429,3.544,430,3.091,431,1.917,432,1.822,433,2.289,434,2.289,435,2.461,436,2.289,437,2.461,438,2.461,439,1.123,440,2.461,441,2.461,442,2.461,443,2.461,444,2.461,445,2.024,446,3.544,447,2.461,448,2.289,449,2.289,450,2.461,451,2.146,452,2.461,453,3.297,454,3.091,455,3.544,456,3.864,457,2.461,458,2.461,459,2.461,460,2.461,462,2.963,463,2.963,2206,4.897,2207,3.4,2208,3.4]],["title/components/XYZPositionComponent.html",[290,0.773,548,1.674]],["body/components/XYZPositionComponent.html",[4,1.068,12,0.014,18,0.199,19,0.155,20,0.112,21,0.185,28,1.439,31,1.203,32,0.574,37,0.215,40,0.28,50,0.155,53,0.66,66,1.652,73,2.668,82,0.155,85,0.009,86,0.009,88,0.348,89,0.717,106,1.801,154,1.362,169,2.251,185,1.203,203,1.58,258,1.642,277,1.105,289,1.465,290,1.345,292,1.709,295,2.573,306,1.58,308,2.096,316,1.315,317,1.465,321,2.689,322,2.014,324,2.014,326,2.014,327,2.014,328,1.58,329,2.697,330,2.349,331,2.685,374,1.642,380,1.642,439,2.409,464,1.521,465,2.447,466,1.941,467,1.642,468,1.941,470,1.58,480,1.78,481,2.091,519,2.171,520,1.642,521,3.283,522,1.941,523,1.941,524,1.941,525,1.642,526,1.941,527,1.521,528,1.941,529,1.642,530,1.941,531,1.465,532,1.941,533,1.642,534,1.78,535,1.941,536,1.642,537,1.58,538,1.941,539,1.58,540,1.941,541,1.642,542,1.857,543,1.941,544,1.941,545,1.642,546,1.709,547,1.941,548,2.778,549,3.713,550,3.373,551,1.857,552,1.58,553,1.857,554,1.941,575,3.256,580,3.084,607,2.132,609,1.709,629,3.683,630,2.879,636,3.084,639,2.368,665,2.679,1363,3.453,1423,3.131,1485,6.208,1876,3.468,2173,6.208,2209,5.878,2210,5.878,2211,3.468,2212,6.875,2213,6.251,2214,5.47,2215,6.15,2216,3.979,2217,3.979,2218,3.979,2219,5.47,2220,4.767,2221,4.767,2222,3.979,2223,7.292,2224,3.979,2225,3.979]],["title/modules/XYZPositionModule.html",[0,0.858,2226,2.936]],["body/modules/XYZPositionModule.html",[0,1.254,2,2.105,3,2.105,4,1.592,5,2.998,6,2.354,7,1.891,8,2.998,12,0.013,15,2.701,16,2.266,17,1.826,18,0.188,19,0.231,20,0.167,21,0.147,37,0.409,39,2.701,40,0.417,50,0.231,75,2.447,82,0.126,85,0.011,86,0.011,378,3.162,379,2.447,548,3.473,549,2.768,2209,4.665,2210,4.665,2226,5.929,2227,5.167,2228,5.167,2229,5.167,2230,5.929,2231,5.929]],["title/interfaces/XYZTriplet.html",[51,0.373,2232,3.192]],["body/interfaces/XYZTriplet.html",[12,0.014,15,2.41,18,0.109,19,0.134,20,0.097,21,0.085,31,0.566,32,0.454,37,0.312,40,0.241,50,0.134,51,0.315,53,0.696,57,1.75,58,1.185,63,1.255,66,1.622,72,2.649,78,1.535,82,0.123,85,0.008,86,0.008,87,1.094,88,0.3,89,0.646,104,3.22,106,1.263,118,0.832,138,3.484,158,1.413,166,2.205,169,2.529,182,1.057,184,2.471,185,1.182,283,1.934,289,1.263,290,1.099,291,4.038,292,1.473,295,2.852,296,4.038,321,1.134,322,1.263,324,1.263,326,1.263,327,1.263,329,1.311,330,1.473,331,1.473,356,1.601,365,2.042,367,2.042,374,1.416,375,2.7,376,2.7,380,3.08,430,2.166,439,2.503,449,2.31,599,1.675,637,1.601,640,1.934,663,2.042,758,2.166,828,2.042,838,2.934,1053,2.483,1082,2.483,1264,2.7,1288,2.31,1297,2.934,1316,2.042,1363,2.166,1485,5.255,1587,4.175,1690,4.296,1691,2.99,1705,3.567,1861,2.99,2035,2.7,2173,4.962,2212,5.82,2232,5.471,2233,2.99,2234,7.463,2235,3.431,2236,3.431,2237,5.636,2238,2.99,2239,3.431,2240,2.99,2241,3.431,2242,3.431,2243,5.027,2244,4.929,2245,3.431,2246,3.431,2247,4.929,2248,4.929,2249,3.431,2250,3.431,2251,3.431,2252,4.929,2253,3.431,2254,3.431,2255,4.929,2256,3.431,2257,3.431,2258,4.929,2259,4.929,2260,3.431,2261,3.431,2262,4.929,2263,3.431,2264,3.431,2265,4.929,2266,4.929,2267,3.431,2268,3.431,2269,3.431,2270,3.431,2271,3.431,2272,3.431,2273,3.431,2274,4.929,2275,4.929,2276,3.431,2277,4.929,2278,3.431,2279,3.431,2280,3.431,2281,3.431,2282,3.431,2283,3.431,2284,3.431,2285,3.431,2286,3.431,2287,3.431,2288,3.431,2289,3.431,2290,3.431,2291,3.431,2292,3.431,2293,3.431,2294,3.431,2295,2.99,2296,4.296,2297,3.431,2298,4.929,2299,3.431,2300,4.929,2301,3.431,2302,4.929,2303,5.768,2304,3.431,2305,3.431,2306,3.431,2307,3.431,2308,3.431,2309,3.431,2310,3.431,2311,3.431,2312,4.929,2313,3.431,2314,3.431,2315,4.929,2316,3.431,2317,4.929,2318,3.431,2319,3.431,2320,3.431,2321,3.431,2322,3.431,2323,3.431,2324,3.431,2325,3.431,2326,3.431,2327,3.431,2328,3.431,2329,3.431,2330,3.431,2331,4.929,2332,3.431,2333,3.431,2334,3.431,2335,3.431,2336,3.431,2337,3.431,2338,3.431,2339,3.431,2340,3.431,2341,3.431,2342,3.431,2343,3.431,2344,4.929,2345,3.431,2346,3.431,2347,3.431,2348,3.431]],["title/changelog.html",[2349,2.663,2350,2.449,2351,2.663]],["body/changelog.html",[3,1.489,7,0.522,12,0.01,18,0.172,20,0.046,28,0.323,32,0.129,33,0.291,34,1.555,44,0.836,45,0.799,51,0.521,72,1.489,85,0.01,86,0.004,87,0.522,89,0.215,100,1.544,106,1.704,107,2.095,114,1.033,121,0.975,130,2.363,136,1.033,143,1.857,145,1.102,149,1.642,150,1.741,153,1.102,154,1.436,155,0.799,156,0.799,158,1.238,163,1.033,169,0.522,180,0.581,186,3.764,187,0.923,203,0.65,280,1.996,283,0.923,286,3.203,288,1.478,290,0.799,308,0.471,315,3.408,317,2.534,321,0.911,332,1.102,342,2.639,345,2.046,347,2.171,348,1.741,350,1.288,362,1.185,380,2.435,430,2.648,448,1.857,465,1.234,467,0.676,473,1.857,474,1.642,475,1.033,477,2.127,478,1.185,480,1.877,496,1.535,502,2.861,510,1.427,519,0.65,534,0.733,537,2.976,550,0.676,584,5.725,585,5.481,589,4.942,593,1.427,598,1.102,607,0.877,609,2.011,610,2.406,614,0.975,616,1.741,627,3.035,634,1.033,637,0.764,649,2.404,654,3.115,656,1.427,660,1.185,697,2.587,703,1.185,708,1.857,710,4.27,714,1.642,715,4.462,722,5.254,724,1.185,753,1.033,907,1.102,923,1.478,931,1.033,953,1.033,963,1.185,972,1.288,978,2.587,987,1.996,991,0.975,993,1.185,994,6.03,996,1.741,1004,2.256,1008,1.185,1022,0.975,1039,2.406,1040,1.996,1041,1.102,1047,1.185,1049,1.642,1069,1.857,1072,2.719,1073,1.033,1074,1.185,1079,1.996,1086,2.256,1162,2.787,1196,2.404,1198,1.185,1201,2.404,1202,4.08,1218,1.427,1220,1.288,1225,1.033,1249,3.635,1252,1.288,1256,1.427,1261,1.288,1265,1.996,1266,4.423,1267,1.996,1268,1.185,1269,1.427,1270,1.427,1278,1.741,1316,4.148,1328,3.417,1333,1.427,1363,1.033,1370,1.185,1379,1.288,1383,3.3,1384,1.288,1393,1.288,1416,1.288,1471,1.288,1480,1.427,1496,1.427,1498,1.185,1499,4.423,1508,1.741,1540,1.427,1575,1.288,1592,1.427,1613,3.115,1627,1.102,1629,6.413,1643,2.404,1654,3.655,1660,1.427,1662,1.427,1682,2.171,1683,1.427,1685,1.427,1686,2.404,1687,5.338,1688,1.427,1694,1.288,1725,2.812,1774,1.288,1788,1.288,1789,1.288,1824,2.404,1825,2.404,1839,3.115,1841,3.115,1894,4.705,1913,1.427,1970,1.288,1992,2.171,2027,1.427,2035,3.993,2064,1.427,2154,1.288,2155,1.427,2202,1.288,2215,1.427,2220,4.942,2221,3.655,2237,4.935,2238,5.997,2240,3.655,2243,5.143,2295,3.115,2296,1.427,2350,2.587,2351,2.171,2352,3.115,2353,3.115,2354,3.655,2355,2.404,2356,2.758,2357,5.075,2358,4.942,2359,1.637,2360,4.682,2361,6.557,2362,1.637,2363,2.758,2364,4.194,2365,2.404,2366,3.574,2367,1.637,2368,2.758,2369,1.637,2370,6.557,2371,1.637,2372,2.812,2373,2.758,2374,1.637,2375,2.404,2376,2.404,2377,2.758,2378,1.637,2379,1.637,2380,1.637,2381,2.758,2382,6.272,2383,1.637,2384,2.404,2385,1.637,2386,1.637,2387,5.143,2388,2.758,2389,4.682,2390,3.574,2391,1.637,2392,2.758,2393,2.758,2394,4.8,2395,1.637,2396,1.637,2397,1.637,2398,3.574,2399,2.758,2400,3.574,2401,3.574,2402,2.758,2403,1.637,2404,2.758,2405,2.758,2406,5.399,2407,5.075,2408,2.758,2409,1.637,2410,1.637,2411,4.194,2412,1.637,2413,1.637,2414,2.758,2415,3.574,2416,1.637,2417,2.758,2418,2.758,2419,1.637,2420,1.637,2421,1.637,2422,3.574,2423,3.115,2424,1.637,2425,1.637,2426,1.637,2427,6.272,2428,2.758,2429,4.682,2430,1.427,2431,2.758,2432,5.075,2433,2.758,2434,1.637,2435,1.637,2436,1.637,2437,2.758,2438,1.637,2439,5.399,2440,1.637,2441,2.758,2442,1.637,2443,4.194,2444,6.677,2445,2.758,2446,3.574,2447,1.637,2448,1.637,2449,1.637,2450,1.637,2451,1.637,2452,1.427,2453,1.637,2454,2.758,2455,1.288,2456,1.637,2457,2.758,2458,4.194,2459,4.194,2460,1.637,2461,3.574,2462,1.637,2463,1.637,2464,2.758,2465,1.637,2466,1.637,2467,4.08,2468,3.115,2469,1.637,2470,4.08,2471,1.637,2472,3.574,2473,4.942,2474,6.557,2475,1.637,2476,1.637,2477,2.758,2478,3.115,2479,1.637,2480,1.637,2481,1.637,2482,4.682,2483,1.637,2484,1.637,2485,1.637,2486,3.574,2487,1.637,2488,2.758,2489,2.404,2490,5.399,2491,1.637,2492,4.462,2493,1.637,2494,1.637,2495,1.637,2496,1.637,2497,1.637,2498,1.637,2499,4.08,2500,4.08,2501,1.637,2502,2.758,2503,2.758,2504,2.758,2505,2.758,2506,2.758,2507,1.637,2508,1.637,2509,1.637,2510,1.637,2511,3.115,2512,2.758,2513,2.758,2514,2.758,2515,2.758,2516,2.758,2517,2.404,2518,1.637,2519,1.637,2520,1.637,2521,2.758,2522,1.637,2523,1.637,2524,2.758,2525,1.637,2526,3.574,2527,2.758,2528,5.075,2529,2.758,2530,4.194,2531,1.637,2532,1.637,2533,1.637,2534,1.637,2535,2.758,2536,1.637,2537,1.637,2538,2.758,2539,1.637,2540,2.758,2541,1.637,2542,1.427,2543,1.637,2544,1.637,2545,1.637,2546,1.637,2547,1.637,2548,1.637,2549,1.637,2550,1.637,2551,1.637,2552,1.637,2553,1.637,2554,1.637,2555,1.637,2556,2.758,2557,1.637,2558,5.075,2559,1.637,2560,1.637,2561,3.574,2562,3.574,2563,2.404,2564,1.427,2565,1.637,2566,1.637,2567,2.758,2568,1.637,2569,1.637,2570,1.637,2571,2.758,2572,2.758,2573,3.574,2574,1.637,2575,1.637,2576,1.637,2577,1.637,2578,2.758,2579,1.637,2580,2.758,2581,4.194,2582,1.637,2583,1.637,2584,1.637,2585,5.075,2586,2.758,2587,1.637,2588,1.637,2589,3.574,2590,2.758,2591,2.758,2592,4.194,2593,1.637,2594,1.637,2595,1.637,2596,2.758,2597,1.637,2598,1.637,2599,1.637,2600,1.637,2601,1.637,2602,4.194,2603,1.637,2604,3.574,2605,4.194,2606,1.637,2607,3.574,2608,4.682,2609,2.758,2610,2.758,2611,2.758,2612,3.574,2613,4.194,2614,4.682,2615,3.574,2616,1.637,2617,1.637,2618,5.399,2619,1.637,2620,4.194,2621,4.194,2622,5.901,2623,1.637,2624,1.637,2625,1.637,2626,1.637,2627,1.637,2628,1.637,2629,2.758,2630,1.637,2631,1.637,2632,1.637,2633,1.637,2634,2.758,2635,1.637,2636,1.637,2637,2.758,2638,3.115,2639,2.758,2640,3.574,2641,1.637,2642,1.637,2643,1.637,2644,1.637,2645,1.637,2646,1.637,2647,1.637,2648,1.637,2649,5.075,2650,2.758,2651,3.574,2652,2.758,2653,1.637,2654,1.637,2655,1.637,2656,1.637,2657,3.574,2658,1.637,2659,1.637,2660,1.637,2661,2.758,2662,2.758,2663,2.758,2664,3.574,2665,1.637,2666,1.637,2667,1.637,2668,1.637,2669,1.637,2670,1.427,2671,1.637,2672,1.637,2673,1.637,2674,2.758,2675,1.637,2676,1.637,2677,2.758,2678,1.637,2679,1.637,2680,1.637,2681,1.637,2682,1.637,2683,1.637,2684,1.637,2685,1.637,2686,1.637,2687,1.637,2688,1.637,2689,3.574,2690,3.574,2691,4.194,2692,2.758,2693,3.574,2694,1.637,2695,2.758,2696,1.637,2697,2.758,2698,2.758,2699,1.637,2700,1.637,2701,2.758,2702,1.637,2703,1.637,2704,1.637,2705,1.637,2706,1.637,2707,1.637,2708,1.637,2709,1.637,2710,1.637,2711,1.637,2712,1.637,2713,1.637,2714,1.637,2715,1.637,2716,1.637,2717,1.637,2718,1.637,2719,1.637,2720,1.637,2721,1.637,2722,1.637,2723,1.637,2724,2.758,2725,1.637,2726,2.758,2727,1.637,2728,2.758,2729,2.758,2730,4.194,2731,4.194,2732,2.758,2733,2.758,2734,1.637,2735,1.637,2736,1.637,2737,1.637,2738,1.427,2739,1.637,2740,1.637,2741,1.637,2742,1.637,2743,1.637,2744,1.637,2745,2.758,2746,6.099,2747,3.574,2748,2.758,2749,1.637,2750,1.637,2751,1.637,2752,1.637,2753,1.637,2754,1.637,2755,1.637,2756,2.758,2757,4.705,2758,2.758,2759,1.637,2760,1.637,2761,1.637,2762,1.637,2763,1.637,2764,3.3,2765,1.637,2766,2.758,2767,1.637,2768,1.637,2769,1.637,2770,2.758,2771,1.637,2772,1.637,2773,1.637,2774,2.758,2775,2.404,2776,1.637,2777,1.637,2778,1.637,2779,1.637,2780,1.637,2781,1.637,2782,1.637,2783,1.637,2784,1.637,2785,1.427,2786,1.637,2787,2.404,2788,1.637,2789,1.637,2790,1.637,2791,1.637,2792,1.637,2793,1.637,2794,2.758,2795,1.637,2796,2.758,2797,1.637,2798,1.637,2799,1.637,2800,1.637,2801,1.637,2802,1.637,2803,1.637,2804,1.637,2805,1.637,2806,1.427,2807,2.758,2808,1.637,2809,1.637,2810,1.637,2811,1.637,2812,2.758,2813,1.427,2814,1.637,2815,1.637,2816,1.637,2817,1.637,2818,1.637,2819,1.637]],["title/coverage.html",[2764,4.362]],["body/coverage.html",[11,1.404,12,0.013,13,1.637,14,1.637,20,0.078,21,0.211,22,3.812,27,1.852,32,0.216,45,1.342,49,2.359,51,0.722,59,1.991,60,2.63,74,1.991,82,0.137,85,0.007,86,0.007,90,1.736,91,3.015,92,4.116,93,4.116,96,1.356,126,1.284,129,1.404,140,1.736,142,1.637,157,1.736,158,0.543,159,1.736,161,1.736,165,1.736,167,1.736,181,1.736,223,1.736,273,1.991,274,3.411,275,3.411,276,3.666,290,1.427,305,1.474,307,3.277,313,1.991,317,2.085,328,1.092,332,1.852,374,1.135,375,3.293,376,3.293,382,1.736,383,3.812,384,3.812,386,1.404,396,1.736,406,1.474,439,2.772,451,1.736,454,1.736,464,1.051,469,2.818,470,1.661,471,1.852,472,2.397,488,1.551,513,1.551,515,3.287,517,1.991,520,1.135,525,1.135,527,1.051,529,1.135,531,1.013,533,1.135,536,1.135,539,1.092,541,1.135,545,1.135,548,1.135,550,1.135,552,1.092,571,2.397,638,5.123,667,1.852,668,3.876,669,4.097,683,1.474,684,1.551,686,2.891,688,2.359,690,1.852,692,1.991,694,1.637,698,1.991,704,1.991,717,1.852,789,2.397,822,3.666,825,2.164,847,3.574,848,3.411,889,2.164,890,2.397,905,3.819,906,3.986,930,3.666,954,1.852,961,1.852,988,1.852,1067,3.438,1068,3.666,1072,1.474,1077,1.736,1126,2.397,1127,2.397,1168,2.164,1169,5.142,1184,2.164,1185,3.029,1187,1.991,1286,2.397,1287,3.666,1310,2.397,1362,3.293,1376,1.991,1428,6.657,1433,2.397,1445,2.164,1446,2.397,1447,2.397,1461,2.397,1462,2.397,1516,3.293,1525,2.164,1545,2.164,1546,2.164,1579,2.164,1580,2.164,1581,2.397,1608,2.164,1609,2.164,1610,2.397,1624,2.397,1657,2.397,1675,1.991,1676,4.097,1677,4.097,1678,4.455,1697,2.164,1821,2.164,1938,1.852,1939,5.284,1940,5.284,1941,5.542,1950,2.164,1967,3.029,1968,3.029,1969,3.293,1993,1.991,2024,1.991,2025,1.991,2026,2.164,2088,2.397,2118,2.164,2119,2.164,2120,2.397,2185,1.991,2186,4.101,2191,1.991,2192,1.991,2193,1.991,2194,1.852,2209,2.164,2210,2.164,2211,2.397,2232,2.164,2233,3.647,2430,2.397,2764,2.164,2806,2.397,2820,2.75,2821,2.75,2822,2.397,2823,8.047,2824,5.066,2825,2.75,2826,2.397,2827,2.397,2828,7.403,2829,2.397,2830,2.397,2831,2.397,2832,2.397,2833,2.397,2834,2.75,2835,2.397,2836,2.397,2837,2.397,2838,6.67,2839,2.75,2840,4.185,2841,2.75,2842,2.75,2843,2.75,2844,2.75,2845,2.397,2846,2.75,2847,5.662,2848,4.185,2849,4.185,2850,2.75,2851,4.185,2852,4.185,2853,2.75,2854,2.75,2855,2.75,2856,2.75,2857,2.75,2858,2.75,2859,2.75,2860,4.185,2861,2.75,2862,2.75,2863,4.185,2864,2.75,2865,2.75,2866,2.75,2867,2.397,2868,4.185,2869,2.75,2870,4.185,2871,2.75,2872,2.75,2873,2.75,2874,2.75,2875,2.75,2876,2.75,2877,2.75,2878,2.75]],["title/dependencies.html",[3,1.733,2455,2.663]],["body/dependencies.html",[3,1.63,12,0.014,20,0.13,40,0.323,43,3.789,44,2.345,45,2.24,85,0.009,86,0.009,98,3.091,118,1.113,124,3.091,125,3.091,155,2.24,176,2.733,204,2.733,298,3.323,299,3.613,300,4.358,379,1.895,380,1.895,428,3.091,508,4.002,509,4.002,511,2.345,519,2.391,603,2.733,653,2.589,700,3.091,1045,3.323,1162,4.246,1265,4.358,1385,3.323,1443,4.002,1547,4.002,1611,4.739,1689,4.002,1693,4.002,1694,3.613,2384,4.002,2470,5.249,2638,4.002,2879,4.591,2880,4.591,2881,4.591,2882,4.591,2883,4.591,2884,4.591,2885,4.591,2886,4.591,2887,4.591,2888,8.022,2889,4.591,2890,4.591,2891,6.022,2892,4.591,2893,4.591,2894,6.022,2895,4.591,2896,4.591,2897,4.591,2898,4.591,2899,4.591,2900,4.591,2901,7.134,2902,4.591,2903,6.022,2904,4.591,2905,4.591,2906,4.591,2907,6.72,2908,4.591,2909,4.591,2910,4.591,2911,4.591,2912,4.591,2913,4.591,2914,4.591,2915,6.022,2916,4.591,2917,6.022,2918,6.72,2919,4.591,2920,4.591,2921,4.591,2922,4.591,2923,4.591,2924,4.591,2925,6.022,2926,4.591,2927,4.591,2928,4.591,2929,6.022,2930,4.591,2931,4.591,2932,4.591,2933,4.591,2934,4.591,2935,4.591,2936,4.591,2937,4.591,2938,4.591,2939,4.002,2940,4.591,2941,4.591,2942,4.591,2943,4.591,2944,4.591,2945,4.591,2946,6.022,2947,4.591,2948,4.591,2949,4.591,2950,4.591,2951,4.591,2952,4.591,2953,4.591,2954,4.591,2955,4.591,2956,4.591,2957,4.591,2958,4.591,2959,4.591,2960,4.591,2961,4.591,2962,4.591,2963,4.591,2964,4.591,2965,4.591,2966,4.591,2967,4.591,2968,4.591,2969,4.591,2970,4.591,2971,4.591,2972,4.591,2973,4.591,2974,4.591,2975,4.591,2976,4.591,2977,4.591,2978,5.249,2979,4.591,2980,4.591,2981,4.591,2982,4.591,2983,4.591,2984,4.591,2985,4.591,2986,4.591,2987,4.591,2988,4.591,2989,4.591,2990,4.591]],["title/miscellaneous/functions.html",[2991,2.136,2992,4.254]],["body/miscellaneous/functions.html",[12,0.013,21,0.185,22,2.299,27,3.308,30,1.952,31,1.329,32,0.615,33,1.429,34,2.77,35,1.159,41,2.688,57,1.212,61,2.688,62,2.938,66,0.774,67,1.666,70,2.688,73,2.806,74,3.555,80,2.634,85,0.008,86,0.008,88,0.626,89,0.448,91,1.305,92,1.925,93,3.758,100,2.119,104,1.744,110,2.299,116,2.007,138,1.594,142,2.033,158,0.969,165,3.632,167,3.101,168,3.252,169,2.444,170,3.308,171,3.308,174,2.033,223,3.101,231,2.299,255,3.339,277,1.748,278,2.472,285,3.101,295,1.305,303,2.156,305,1.83,307,1.744,431,1.925,439,1.623,477,2.033,519,1.356,550,2.028,653,3.547,681,3.555,707,2.156,731,3.555,905,2.033,906,4.528,908,2.688,912,2.977,916,2.977,917,2.299,918,2.977,919,2.509,920,4.777,921,2.977,922,2.977,923,1.83,924,2.977,925,2.977,931,2.156,953,2.156,965,2.472,988,3.874,1052,2.472,1071,3.308,1137,6.335,1139,6.386,1141,6.272,1168,4.528,1169,4.236,1171,2.688,1189,2.977,1225,2.156,1297,2.033,1545,2.688,1546,3.866,1550,2.977,1551,3.866,1556,2.688,1705,2.472,1938,5.212,1939,2.472,1940,5.476,1941,6.335,1942,5.484,1947,6.747,1951,2.977,1952,2.977,1953,2.977,1954,2.977,1955,5.014,1956,6.747,1957,6.05,1958,6.747,1959,6.379,1960,5.484,1961,5.014,2186,2.299,2194,3.874,2542,2.977,2787,2.977,2822,4.282,2826,2.977,2827,4.282,2829,2.977,2830,5.014,2831,2.977,2832,4.282,2833,4.282,2837,4.282,2845,4.282,2867,4.282,2978,2.977,2991,2.156,2992,2.977,2993,4.951,2994,3.415,2995,3.415,2996,2.977,2997,4.282,2998,3.415,2999,4.913,3000,6.497,3001,3.415,3002,3.415,3003,3.415,3004,3.415,3005,3.415,3006,3.415,3007,3.415,3008,3.415,3009,3.415,3010,3.415,3011,3.415,3012,3.415,3013,4.913,3014,3.415,3015,3.415]],["title/index.html",[88,0.296,2349,2.663,2350,2.449]],["body/index.html",[12,0.01,18,0.241,51,0.58,85,0.01,86,0.01,87,1.571,106,1.862,114,4.625,186,4.496,290,0.939,342,2.777,474,3.752,502,3.554,537,2.759,584,4.562,585,5.03,612,2.932,660,3.565,709,3.876,710,5.03,1016,3.565,1072,2.639,1162,2.932,1198,3.565,1261,4.96,1268,3.565,1278,3.11,1316,3.752,1334,3.876,1541,5.493,2153,4.293,2154,4.96,2237,3.876,2351,3.876,2352,5.493,2353,5.493,2354,6.058,2358,4.293,2372,4.96,2375,5.493,2376,6.386,2394,5.766,2423,5.493,2452,4.293,2467,6.6,2468,6.386,2473,5.493,2478,4.293,2489,5.493,2492,3.876,2500,4.293,2511,4.293,2564,5.493,2775,4.293,2785,4.293,2813,4.293,3016,6.303,3017,6.303,3018,6.303,3019,4.926,3020,4.926,3021,4.926,3022,5.493,3023,4.926,3024,6.303,3025,6.303,3026,6.303,3027,6.951,3028,4.926,3029,4.926,3030,6.951,3031,6.951,3032,4.926,3033,4.926,3034,6.303,3035,4.926,3036,4.926,3037,4.926,3038,4.926,3039,4.926,3040,4.926,3041,4.926,3042,4.926,3043,4.926,3044,4.926,3045,4.926,3046,4.926,3047,4.926,3048,6.303,3049,4.926,3050,4.926,3051,6.303,3052,4.926,3053,6.303,3054,6.303,3055,4.926,3056,4.926,3057,4.926,3058,4.926,3059,4.926,3060,4.926,3061,4.926,3062,4.926,3063,4.926,3064,4.926,3065,4.926,3066,4.926,3067,4.926]],["title/license.html",[2349,2.663,2350,2.449,3068,2.95]],["body/license.html",[12,0.011,17,1.763,85,0.011,86,0.011,117,3.066,362,4.142,470,2.272,583,2.922,759,3.853,972,5.853,1041,3.853,1044,4.142,1072,3.066,1220,4.503,1240,4.503,1280,4.987,1452,4.987,2372,5.445,2394,4.503,2499,6.03,2670,6.03,2738,4.987,2757,4.987,2939,4.987,3022,7.202,3068,4.987,3069,5.723,3070,7.438,3071,5.723,3072,6.919,3073,5.723,3074,5.723,3075,5.723,3076,5.723,3077,5.723,3078,5.723,3079,6.919,3080,5.723,3081,5.723,3082,5.723,3083,5.723,3084,5.723,3085,5.723,3086,5.723,3087,5.723,3088,5.723,3089,5.723,3090,5.723,3091,6.919,3092,5.723,3093,5.723,3094,5.723,3095,5.723,3096,5.723,3097,6.919,3098,5.723,3099,5.723,3100,5.723,3101,5.723,3102,5.723,3103,5.723,3104,5.723,3105,5.723,3106,5.723,3107,5.723,3108,5.723,3109,5.723,3110,5.723,3111,5.723,3112,5.723,3113,5.723,3114,5.723,3115,5.723,3116,5.723,3117,5.723,3118,5.723,3119,5.723]],["title/modules.html",[2,1.968]],["body/modules.html",[1,3.93,2,2.072,12,0.011,85,0.011,86,0.011,370,4.225,555,4.225,560,3.93,1004,3.685,1060,3.93,1265,6.128,1345,4.225,1350,3.93,1544,4.594,1602,4.225,1663,4.225,1680,7.379,1930,4.225,2012,4.225,2065,4.225,2098,4.225,2179,4.225,2226,4.225,2387,7.379,3120,8.484,3121,5.837]],["title/overview.html",[3122,4.831]],["body/overview.html",[0,0.911,1,5.218,2,1.53,3,1.53,4,1.157,5,1.711,6,1.711,7,1.375,8,1.711,9,3.756,10,3.756,11,3.326,12,0.013,13,3.877,14,3.877,15,2.207,16,1.647,17,1.328,85,0.009,86,0.009,87,1.375,243,1.711,328,3.028,370,5.25,371,3.756,372,3.756,373,3.756,374,3.147,464,2.915,465,1.928,520,1.778,525,3.147,527,2.915,529,3.147,531,2.808,533,3.147,536,3.147,539,3.028,541,3.147,545,3.147,548,3.147,552,3.028,555,5.519,556,3.756,557,3.756,558,3.756,559,3.756,560,5.027,714,2.565,783,3.756,784,3.756,785,3.756,788,2.102,1060,5.027,1061,3.756,1062,3.756,1063,3.756,1345,5.519,1346,3.756,1347,3.756,1348,3.756,1349,3.756,1350,5.027,1435,3.756,1436,3.756,1437,3.756,1602,5.25,1603,3.756,1604,3.756,1605,3.756,1663,5.25,1664,3.756,1665,3.756,1666,3.756,1930,5.25,1931,3.756,1932,3.756,1933,3.756,2012,5.25,2013,3.756,2014,3.756,2015,3.756,2065,5.25,2066,3.756,2067,3.756,2068,3.756,2098,5.681,2099,3.756,2101,3.756,2102,3.756,2103,6.063,2104,6.063,2179,5.25,2180,3.756,2181,3.756,2182,3.756,2226,5.25,2227,3.756,2228,3.756,2229,3.756,2365,3.756,2517,3.756,2563,3.756,3122,3.756,3123,4.309,3124,4.309]],["title/properties.html",[89,0.64,2455,2.663]],["body/properties.html",[12,0.012,85,0.012,86,0.012,89,0.867,2355,5.763,2492,5.203]],["title/miscellaneous/typealiases.html",[2991,2.136,3125,4.881]],["body/miscellaneous/typealiases.html",[12,0.012,21,0.196,32,0.584,53,0.833,60,2.453,65,3.366,66,1.563,72,2.022,85,0.011,86,0.011,88,0.498,91,2.637,92,3.212,93,4.35,132,4.356,134,4.646,137,4.646,138,2.659,432,3.697,653,3.89,825,4.483,826,4.356,840,4.123,841,3.835,847,3.596,848,5.32,863,4.123,865,4.994,866,4.994,868,4.994,914,3.835,919,2.909,1185,4.123,1187,4.994,1203,5.43,1210,4.965,1211,6.014,1232,4.483,1233,4.965,2024,4.123,2025,4.123,2026,5.841,2045,4.965,2046,6.014,2047,4.965,2048,6.469,2991,3.596,2993,5.841,3126,5.697,3127,5.697,3128,7.715,3129,6.014,3130,6.9]],["title/miscellaneous/variables.html",[2991,2.136,3131,4.254]],["body/miscellaneous/variables.html",[11,1.211,12,0.014,13,1.412,14,1.412,21,0.171,22,1.597,31,1.369,32,0.515,34,2.104,49,2.104,53,0.557,57,0.842,59,2.7,63,0.406,65,1.157,66,1.662,76,1.497,78,3.711,80,0.873,85,0.006,86,0.006,88,0.207,91,0.906,92,1.337,93,2.949,117,1.271,132,2.355,141,1.337,149,4.315,151,4.438,152,2.355,157,3.302,158,0.91,159,2.355,160,2.512,161,2.355,162,1.597,163,1.497,169,1.472,176,3.114,179,1.426,180,1.325,274,1.597,275,1.597,276,2.7,280,1.716,281,2.936,283,4.676,288,1.999,294,1.716,308,2.153,309,2.936,310,1.866,311,1.866,312,1.866,313,2.7,314,2.7,315,1.497,332,2.512,337,3.536,515,1.107,537,3.292,588,1.866,614,4.683,616,4.511,657,6.526,668,1.337,669,3.339,695,1.716,696,1.866,697,1.716,698,2.7,699,1.866,700,1.597,701,1.866,702,1.866,703,1.716,704,2.7,705,1.866,826,1.497,1145,5.152,1169,2.512,1185,1.716,1187,2.7,1203,1.866,1287,2.7,1296,4.576,1516,1.866,1525,2.936,1526,2.067,1527,2.067,1528,2.7,1675,1.716,1676,1.716,1677,1.716,1678,3.63,1681,7.228,1682,6.191,1687,2.936,1695,2.067,1696,2.067,1697,2.936,1698,2.067,1699,3.252,1700,2.067,1701,2.067,1702,3.252,1703,2.067,1704,3.252,1705,2.7,1706,4.559,1707,2.067,1708,2.067,1709,4.021,1710,5.265,1711,6.528,1712,2.067,1713,2.067,1714,2.067,1715,4.021,1716,5.871,1717,5.265,1718,2.067,1719,2.067,1720,2.067,1721,2.067,1722,3.252,1723,2.067,1724,4.021,1725,4.754,1726,2.067,1727,2.067,1728,2.067,1729,4.021,1730,5.265,1731,2.067,1732,2.067,1733,2.067,1734,2.067,1735,3.252,1736,2.067,1737,3.252,1738,3.252,1739,3.252,1740,2.067,1741,2.067,1742,4.021,1743,5.871,1744,5.265,1745,2.067,1746,2.067,1747,2.067,1748,4.021,1749,5.265,1750,2.067,1751,2.067,1752,2.067,1753,2.067,1754,3.252,1755,2.067,1756,2.067,1757,4.021,1758,3.252,1759,2.067,1760,4.021,1761,5.871,1762,5.265,1763,2.067,1764,2.067,1765,2.067,1766,2.067,1767,3.252,1768,2.067,1769,2.067,1770,2.067,1771,3.252,1772,2.067,1773,2.067,1774,2.936,1775,2.067,1776,3.252,1777,4.559,1778,2.067,1779,2.067,1780,2.067,1781,5.265,1782,3.252,1783,2.067,1784,2.067,1785,3.252,1786,2.067,1787,2.067,1788,3.63,1789,2.936,1790,2.067,1791,2.067,1792,3.252,1793,2.067,1794,2.067,1795,3.252,1796,2.067,1797,2.067,1798,3.252,1799,2.067,1800,4.021,1801,5.265,1802,2.067,1803,2.067,1804,2.067,1805,2.067,1806,3.252,1807,3.252,1808,2.067,1809,2.067,1810,3.252,1811,2.067,1812,3.252,1813,3.252,1814,4.559,1815,4.559,1816,2.067,1817,2.067,1818,2.067,1819,2.067,1820,2.067,1821,2.936,1822,2.067,1823,2.067,1938,1.597,1939,1.716,1940,2.7,1950,2.936,2186,1.597,2192,2.7,2193,2.7,2194,1.597,2835,2.067,2836,3.252,2991,1.497,2993,3.63,2996,3.252,2997,2.067,3000,2.067,3129,2.067,3131,2.067,3132,3.731,3133,2.371,3134,2.371,3135,2.371,3136,3.731]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":439,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocalStorageService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1.0",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["0.12",{"_index":2172,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.13.1",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["0.14",{"_index":2170,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.1875rem",{"_index":1656,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["0.2",{"_index":2167,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.2.0",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":621,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["0.5.0",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":1422,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["0.6.0",{"_index":2775,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.60rem",{"_index":622,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["0.65rem",{"_index":1343,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["0.6s",{"_index":624,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{}}}],["0.7",{"_index":2160,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.875rem",{"_index":1419,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["0/1",{"_index":2823,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2863,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2870,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2872,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2871,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2873,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2838,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2869,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2868,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2866,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2821,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2825,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2824,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2862,"title":{},"body":{"coverage.html":{}}}],["007cbe",{"_index":2177,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["01",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2389,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1920,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["1",{"_index":714,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{},"overview.html":{}}}],["1.0",{"_index":2220,"title":{},"body":{"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["1.0.0",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["1.125rem",{"_index":1658,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["1.14.10",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":2926,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":631,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["1.3.1",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":2638,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["1.5rem",{"_index":1344,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["1.6.0",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["1.6rem",{"_index":615,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["1.7.0",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":2828,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":2865,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2854,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2876,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":315,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":638,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["1014",{"_index":1497,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["10px",{"_index":2169,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["10rem",{"_index":1427,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["10x",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":2843,"title":{},"body":{"coverage.html":{}}}],["11/14",{"_index":2856,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2358,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["13",{"_index":2517,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["13/13",{"_index":2846,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2430,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["14.0.1",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["14.1.4",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["14.10.1",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":2365,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["15.313.0",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2861,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2563,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["16.0.0",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["16.1.6",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["18px",{"_index":2171,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["19",{"_index":3124,"title":{},"body":{"overview.html":{}}}],["1px",{"_index":2165,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["1rem",{"_index":665,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["2",{"_index":2221,"title":{},"body":{"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["2.0.0",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":2921,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["2.25rem",{"_index":1418,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["2.3.0",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["2.6.1",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["2.awsapprunner.com",{"_index":3042,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":2834,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1624,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["200",{"_index":1891,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["2019",{"_index":2757,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":715,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"changelog.html":{}}}],["2023",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1496,"title":{},"body":{"injectables/LocalStorageService.html":{},"changelog.html":{}}}],["23/30",{"_index":2858,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":2175,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["25",{"_index":2853,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":1408,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["255",{"_index":2159,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["25rem",{"_index":619,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["26",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["2rem",{"_index":643,"title":{},"body":{"components/CallToActionComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["3",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":2470,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["3.3.0",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["3.4.8",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["3.4rem",{"_index":650,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["3.5.0",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["3.5.7",{"_index":2914,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":3048,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["3.6.3",{"_index":2912,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["3.7.2",{"_index":2355,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["3.8.1",{"_index":2918,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2851,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2850,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":649,"title":{},"body":{"components/CallToActionComponent.html":{},"changelog.html":{}}}],["30.75rem",{"_index":773,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["300",{"_index":1424,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["31",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["323232",{"_index":2161,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["36.688rem",{"_index":774,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["3d",{"_index":2238,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["3px",{"_index":2163,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["3rem",{"_index":1417,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/TextSearchComponent.html":{}}}],["4",{"_index":163,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["4.0",{"_index":3025,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2847,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":2225,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["400px",{"_index":2157,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["42",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["444a65",{"_index":661,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["48",{"_index":2300,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["4th",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2864,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":2915,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2844,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1433,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["50rem",{"_index":1426,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["5px",{"_index":2164,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["5rem",{"_index":651,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["5th",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":3123,"title":{},"body":{"overview.html":{}}}],["6.11.2",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":2955,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2874,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2875,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1657,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["64",{"_index":1923,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["6px",{"_index":2168,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6rem",{"_index":2176,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6s",{"_index":628,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["7.0.0",{"_index":2950,"title":{},"body":{"dependencies.html":{}}}],["7.0rem",{"_index":642,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["7.8.1",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["7/34",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2860,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2849,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1853,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["72rem",{"_index":755,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["73",{"_index":1430,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["75",{"_index":2317,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["75rem",{"_index":646,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["76",{"_index":2857,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2848,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":2855,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["8.0.6",{"_index":2983,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":2957,"title":{},"body":{"dependencies.html":{}}}],["8.5.21",{"_index":2911,"title":{},"body":{"dependencies.html":{}}}],["8.9.22",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":2806,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["875rem",{"_index":644,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["9.0.0",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["9.5",{"_index":2283,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["9/9",{"_index":2852,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["9999",{"_index":2174,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["9]*/g",{"_index":1600,"title":{},"body":{"directives/NumberDirective.html":{}}}],["9rem",{"_index":641,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["9th",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["__storage_test__",{"_index":1486,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["_bounds",{"_index":2285,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_camera",{"_index":2287,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_ctx",{"_index":760,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["_ctxs",{"_index":779,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["_error",{"_index":1513,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["_ignored",{"_index":1284,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["_index",{"_index":1986,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["_interactive",{"_index":2279,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_occurencedata",{"_index":1859,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["_rotation",{"_index":2280,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_rotationx",{"_index":2281,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_scene",{"_index":2286,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_target",{"_index":2284,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_wont_",{"_index":2203,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["_zoom",{"_index":2282,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["a.name.localecompare(b.name",{"_index":1820,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["about.wrapper",{"_index":1412,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["above",{"_index":1041,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"license.html":{}}}],["abstract",{"_index":390,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["access",{"_index":2149,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["accessors",{"_index":1135,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["according",{"_index":1928,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["accurate",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":470,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"license.html":{}}}],["action'},{'name",{"_index":526,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["action(closedialog",{"_index":780,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["action(learnmore",{"_index":761,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["action(opendialog",{"_index":770,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["action.actions",{"_index":516,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["action.actions.ts",{"_index":822,"title":{},"body":{"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{}}}],["action.actions.ts:10",{"_index":823,"title":{},"body":{"classes/CloseDialog.html":{}}}],["action.actions.ts:2",{"_index":1460,"title":{},"body":{"classes/LearnMore.html":{}}}],["action.actions.ts:6",{"_index":1674,"title":{},"body":{"classes/OpenDialog.html":{}}}],["action.component",{"_index":787,"title":{},"body":{"modules/CallToActionModule.html":{}}}],["action.component.html",{"_index":573,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.scss",{"_index":572,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts",{"_index":571,"title":{},"body":{"components/CallToActionComponent.html":{},"coverage.html":{}}}],["action.component.ts:14",{"_index":595,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:18",{"_index":586,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:23",{"_index":582,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:28",{"_index":587,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:33",{"_index":581,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:39",{"_index":590,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:45",{"_index":594,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:53",{"_index":596,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:61",{"_index":600,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.module",{"_index":569,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{}}}],["action.module.ts",{"_index":786,"title":{},"body":{"modules/CallToActionModule.html":{}}}],["action.selectors",{"_index":518,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["action.selectors.ts",{"_index":789,"title":{},"body":{"classes/CallToActionSelectors.html":{},"coverage.html":{}}}],["action.selectors.ts:12",{"_index":798,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.selectors.ts:17",{"_index":792,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.selectors.ts:22",{"_index":796,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.selectors.ts:27",{"_index":794,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.selectors.ts:32",{"_index":800,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.selectors.ts:7",{"_index":802,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.state",{"_index":803,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.state.ts",{"_index":669,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["action.state.ts:103",{"_index":818,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:121",{"_index":819,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:135",{"_index":821,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:153",{"_index":815,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:65",{"_index":816,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:70",{"_index":814,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:81",{"_index":820,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:94",{"_index":817,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action/call",{"_index":515,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":554,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["add",{"_index":910,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["added",{"_index":994,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["adding",{"_index":1954,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["additional",{"_index":931,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["addressed",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":1690,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["again",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":143,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["agerange",{"_index":144,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["aggregateresult",{"_index":99,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["ala",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":3126,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":611,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["all_organs",{"_index":1821,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs",{"_index":1697,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs.filter(organ",{"_index":1822,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["allow_telemetry",{"_index":1528,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":914,"title":{},"body":{"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["allowtelemetry",{"_index":2126,"title":{},"body":{"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["allowtelemetry.tostring",{"_index":2199,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["alpha",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":1021,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["alt",{"_index":3029,"title":{},"body":{"index.html":{}}}],["always",{"_index":1257,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["analytics",{"_index":45,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules.html":{},"overview.html":{}}}],["analyticsoptions",{"_index":27,"title":{"interfaces/AnalyticsOptions.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["anatomical",{"_index":1613,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["and/or",{"_index":3089,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1162,"title":{},"body":{"injectables/GlobalConfigState.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":379,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":676,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["angular/compiler",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":298,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2109,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/button",{"_index":2018,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"modules/TrackingPopupModule.html":{}}}],["angular/material/card",{"_index":563,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{}}}],["angular/material/checkbox",{"_index":2020,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["angular/material/core",{"_index":1673,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/dialog",{"_index":565,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":1440,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["angular/material/form",{"_index":2111,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/icon",{"_index":567,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{}}}],["angular/material/input",{"_index":2113,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/legacy",{"_index":1671,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/list",{"_index":2022,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["angular/material/snack",{"_index":2142,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["angular/material/tooltip",{"_index":1937,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["angular/platform",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1443,"title":{},"body":{"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1404,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["animated",{"_index":754,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":1403,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["anyfunction",{"_index":883,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anyfunction)(...args",{"_index":888,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anything",{"_index":2204,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["api",{"_index":186,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["api.configuration.basepath",{"_index":237,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["api.hubmapconsortium.org",{"_index":3039,"title":{},"body":{"index.html":{}}}],["api.ts",{"_index":2836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiendpointdatasourceoptions",{"_index":90,"title":{"interfaces/ApiEndpointDataSourceOptions.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["apiendpointdatasourceservice",{"_index":181,"title":{"injectables/ApiEndpointDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["app",{"_index":1696,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:bladder",{"_index":1805,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:brain",{"_index":1701,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:eye",{"_index":1709,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:fallopian",{"_index":1715,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:heart",{"_index":1721,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:kidney",{"_index":1724,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:knee",{"_index":1729,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:large",{"_index":1784,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:larynx",{"_index":1753,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:liver",{"_index":1734,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lung",{"_index":1737,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lymph",{"_index":1704,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:main",{"_index":1756,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:mammary",{"_index":1742,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ovary",{"_index":1748,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:palatine",{"_index":1760,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pancreas",{"_index":1766,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pelvis",{"_index":1769,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:placenta",{"_index":1773,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:prostate",{"_index":1776,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:skin",{"_index":1698,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:small",{"_index":1780,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:spinal",{"_index":1787,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:spleen",{"_index":1791,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:thymus",{"_index":1794,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:trachea",{"_index":1797,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ureter",{"_index":1800,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:uterus",{"_index":1809,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:vasculature",{"_index":1812,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app_initializer",{"_index":38,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appear",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":2094,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["application",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":907,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["applies",{"_index":982,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["apply",{"_index":945,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["appname",{"_index":54,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appropriate",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["args",{"_index":404,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["arguments",{"_index":1589,"title":{},"body":{"directives/NumberDirective.html":{}}}],["arising",{"_index":3117,"title":{},"body":{"license.html":{}}}],["array",{"_index":919,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["array.length",{"_index":369,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["arrays",{"_index":3006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arrived",{"_index":711,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["asct+b",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["assets/docs/spatial_search_readme.md",{"_index":705,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"miscellaneous/variables.html":{}}}],["assets/images/spatial_search.gif",{"_index":712,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["assignment/selection",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1220,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"license.html":{}}}],["async",{"_index":365,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["atlas",{"_index":2353,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attempt",{"_index":1191,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["attempts",{"_index":2508,"title":{},"body":{"changelog.html":{}}}],["attrs",{"_index":69,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["attrs[key",{"_index":68,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["authors",{"_index":3109,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1420,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["autocomplete",{"_index":281,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["autocompleteoption",{"_index":273,"title":{"interfaces/AutoCompleteOption.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["autocompleter",{"_index":343,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autocompletion",{"_index":319,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autofocus",{"_index":751,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["automatic",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1004,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":449,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["award",{"_index":3066,"title":{},"body":{"index.html":{}}}],["b",{"_index":1819,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":660,"title":{},"body":{"components/CallToActionComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["bar",{"_index":318,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["base",{"_index":1992,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["based",{"_index":953,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["basic",{"_index":2564,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["before",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["beginning",{"_index":1843,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["behavior",{"_index":482,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/OrganInfo.html":{}}}],["behavior'},{'name",{"_index":524,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["behavior.component",{"_index":570,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["behavior.component.html",{"_index":484,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.scss",{"_index":483,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts",{"_index":472,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"coverage.html":{}}}],["behavior.component.ts:20",{"_index":507,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts:23",{"_index":505,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts:26",{"_index":492,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts:29",{"_index":498,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts:37",{"_index":494,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts:44",{"_index":499,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.module.ts",{"_index":561,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{}}}],["behavior/call",{"_index":471,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"coverage.html":{}}}],["behaviorsubject",{"_index":1076,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["being",{"_index":1379,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["below",{"_index":659,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["beta",{"_index":2473,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1416,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["bind",{"_index":299,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["binding",{"_index":1429,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["biomarker",{"_index":202,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["bladder",{"_index":1807,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":610,"title":{},"body":{"components/CallToActionComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["blocks",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["blood",{"_index":1814,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":145,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["bmirange",{"_index":146,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["board",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":380,"title":{},"body":{"modules/BodyUiModule.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodycanvas",{"_index":2293,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui",{"_index":2234,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui.initialize",{"_index":2324,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyuicomponent",{"_index":374,"title":{},"body":{"modules/BodyUiModule.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"overview.html":{}}}],["bodyuimodule",{"_index":370,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["bold",{"_index":2005,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["boolean",{"_index":57,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"overview.html":{}}}],["border",{"_index":617,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["both",{"_index":150,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["bottom",{"_index":664,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["boundary",{"_index":1574,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["bounds",{"_index":1053,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/XYZTriplet.html":{}}}],["bounds(value",{"_index":2263,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.x",{"_index":2308,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.y",{"_index":2311,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["box",{"_index":708,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["boxes",{"_index":778,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["brain",{"_index":1702,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["breaking",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["bronchus",{"_index":1757,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":3120,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1265,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1016,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"index.html":{}}}],["building",{"_index":960,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["builds",{"_index":2469,"title":{},"body":{"changelog.html":{}}}],["buster",{"_index":157,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":473,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":530,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["button.component",{"_index":1352,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":1312,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.scss",{"_index":1311,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts",{"_index":1310,"title":{},"body":{"components/InfoButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:23",{"_index":1320,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:28",{"_index":1321,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:30",{"_index":1319,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:32",{"_index":1315,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:52",{"_index":1325,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:59",{"_index":1323,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:77",{"_index":1327,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.module.ts",{"_index":1351,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.service",{"_index":687,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["button.service.ts",{"_index":1068,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["button.service.ts:31",{"_index":1358,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:38",{"_index":1360,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:52",{"_index":1359,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button/info",{"_index":686,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["c",{"_index":1452,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"license.html":{}}}],["cache",{"_index":155,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"dependencies.html":{}}}],["cache_config_no_params",{"_index":159,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_config_params",{"_index":161,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":124,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["cacheable(cache_config_no_params",{"_index":192,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cacheable(cache_config_params",{"_index":210,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cachebusterobserver",{"_index":160,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":977,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["cacheresults",{"_index":446,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["call",{"_index":481,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["call_to_action",{"_index":765,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["callback",{"_index":2542,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["calltoaction",{"_index":485,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}}}],["calltoaction(state",{"_index":790,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["calltoactionbehaviorcomponent",{"_index":464,"title":{"components/CallToActionBehaviorComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calltoactionbehaviormodule",{"_index":555,"title":{"modules/CallToActionBehaviorModule.html":{}},"body":{"modules/CallToActionBehaviorModule.html":{},"modules.html":{},"overview.html":{}}}],["calltoactionclicked",{"_index":578,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["calltoactioncomponent",{"_index":525,"title":{"components/CallToActionComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"modules/CallToActionModule.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calltoactionmodel",{"_index":667,"title":{"interfaces/CallToActionModel.html":{}},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"coverage.html":{}}}],["calltoactionmodule",{"_index":560,"title":{"modules/CallToActionModule.html":{}},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules.html":{},"overview.html":{}}}],["calltoactionpopupshown",{"_index":699,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"miscellaneous/variables.html":{}}}],["calltoactionselectors",{"_index":517,"title":{"classes/CallToActionSelectors.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"classes/CallToActionSelectors.html":{},"coverage.html":{}}}],["calltoactionstate",{"_index":717,"title":{"injectables/CallToActionState.html":{}},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"coverage.html":{}}}],["calltoactionstate.ctadatepassed(expirationdate",{"_index":739,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["camera",{"_index":2265,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["camera(value",{"_index":2267,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["cancelregistration",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["canvas",{"_index":2315,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":2321,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["card",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":1824,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["carouselcontainer",{"_index":1830,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["case",{"_index":1541,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"index.html":{}}}],["cases",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["cast",{"_index":165,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["catch",{"_index":1283,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["ccf",{"_index":106,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":424,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabase(config",{"_index":452,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice",{"_index":382,"title":{"injectables/CCFDatabaseDataSourceBaseService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasedatasourcebaseservice:20",{"_index":463,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:39",{"_index":462,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:53",{"_index":461,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:65",{"_index":2207,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourceservice",{"_index":451,"title":{"injectables/CCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasemanager",{"_index":396,"title":{"interfaces/CCFDatabaseManager.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabaseoptions",{"_index":397,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["cdr",{"_index":2032,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cdr.markforcheck",{"_index":2059,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cell",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["celltypeterms",{"_index":148,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["center",{"_index":612,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"index.html":{}}}],["change",{"_index":1198,"title":{},"body":{"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":978,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["changedetection",{"_index":326,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["changedetectionstrategy",{"_index":289,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["changedetectionstrategy.onpush",{"_index":327,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["changedetectorref",{"_index":2033,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["changelog",{"_index":2351,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changeopacity",{"_index":1617,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changeopacity(newopacity",{"_index":1635,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changes",{"_index":345,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["charge",{"_index":3076,"title":{},"body":{"license.html":{}}}],["check",{"_index":1195,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["choose",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":3112,"title":{},"body":{"license.html":{}}}],["class",{"_index":82,"title":{"classes/CallToActionSelectors.html":{},"classes/CloseDialog.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["classes",{"_index":788,"title":{},"body":{"classes/CallToActionSelectors.html":{},"classes/CloseDialog.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"overview.html":{}}}],["clean",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["cleans",{"_index":2040,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cleanup",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":606,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocalStorageService.html":{}}}],["clearinterval(this.timeouthandler",{"_index":1902,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["clears",{"_index":1467,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearsubscriptions",{"_index":2346,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["click",{"_index":598,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["clicked",{"_index":479,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{}}}],["clicking",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":114,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{},"index.html":{}}}],["clientheight",{"_index":1555,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientwidth",{"_index":1554,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientx",{"_index":1557,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clienty",{"_index":1558,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["close",{"_index":486,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}}}],["close(_ctx",{"_index":781,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["closeclicked",{"_index":579,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["closedialog",{"_index":513,"title":{"classes/CloseDialog.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{}}}],["closes",{"_index":495,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["clsname",{"_index":331,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["cluster_analyticsmodule",{"_index":9,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_providers",{"_index":10,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":371,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":372,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":373,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_calltoactionbehaviormodule",{"_index":556,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"overview.html":{}}}],["cluster_calltoactionbehaviormodule_declarations",{"_index":559,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"overview.html":{}}}],["cluster_calltoactionbehaviormodule_exports",{"_index":558,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"overview.html":{}}}],["cluster_calltoactionbehaviormodule_imports",{"_index":557,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"overview.html":{}}}],["cluster_calltoactionmodule",{"_index":783,"title":{},"body":{"modules/CallToActionModule.html":{},"overview.html":{}}}],["cluster_calltoactionmodule_declarations",{"_index":785,"title":{},"body":{"modules/CallToActionModule.html":{},"overview.html":{}}}],["cluster_calltoactionmodule_exports",{"_index":784,"title":{},"body":{"modules/CallToActionModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule",{"_index":1061,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_declarations",{"_index":1062,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_exports",{"_index":1063,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule",{"_index":1346,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":1348,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":1347,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":1349,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule",{"_index":1435,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":1437,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":1436,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule",{"_index":1603,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_declarations",{"_index":1604,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_exports",{"_index":1605,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule",{"_index":1664,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_declarations",{"_index":1665,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_exports",{"_index":1666,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_organselectormodule",{"_index":1931,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_declarations",{"_index":1933,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_exports",{"_index":1932,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchlistmodule",{"_index":2013,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"overview.html":{}}}],["cluster_spatialsearchlistmodule_declarations",{"_index":2015,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"overview.html":{}}}],["cluster_spatialsearchlistmodule_exports",{"_index":2014,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule",{"_index":2066,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_declarations",{"_index":2068,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_exports",{"_index":2067,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule",{"_index":2099,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_declarations",{"_index":2102,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_exports",{"_index":2101,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_imports",{"_index":2100,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["cluster_trackingpopupmodule",{"_index":2180,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_declarations",{"_index":2181,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_exports",{"_index":2182,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_xyzpositionmodule",{"_index":2227,"title":{},"body":{"modules/XYZPositionModule.html":{},"overview.html":{}}}],["cluster_xyzpositionmodule_declarations",{"_index":2228,"title":{},"body":{"modules/XYZPositionModule.html":{},"overview.html":{}}}],["cluster_xyzpositionmodule_exports",{"_index":2229,"title":{},"body":{"modules/XYZPositionModule.html":{},"overview.html":{}}}],["code",{"_index":1499,"title":{},"body":{"injectables/LocalStorageService.html":{},"changelog.html":{}}}],["codebase",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":627,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["colorizing",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":2224,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["combination",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":115,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["combines",{"_index":1951,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["come",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":428,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["command",{"_index":71,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["common",{"_index":1261,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":378,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{}}}],["compare",{"_index":1943,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["comparison",{"_index":1945,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["compiler",{"_index":1569,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["completely",{"_index":1197,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["complexity",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":290,"title":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":522,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["components",{"_index":465,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"overview.html":{}}}],["components/call",{"_index":682,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["components/info/info",{"_index":685,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["computed",{"_index":986,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["computes",{"_index":1985,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["comunica/query",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1045,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"dependencies.html":{}}}],["concat(op.added",{"_index":1046,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["conditions",{"_index":3096,"title":{},"body":{"license.html":{}}}],["config",{"_index":156,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["config.state",{"_index":128,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["config.state.ts",{"_index":1127,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["config.state.ts:19",{"_index":1158,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:22",{"_index":1160,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:26",{"_index":1157,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:30",{"_index":1154,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:34",{"_index":1151,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:42",{"_index":1138,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:43",{"_index":1140,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:44",{"_index":1142,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:45",{"_index":1144,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:46",{"_index":1146,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:62",{"_index":1148,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config/global",{"_index":127,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["configurable",{"_index":1238,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["configuration",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":2507,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["connectdatabase",{"_index":388,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connectdatabase(manager",{"_index":395,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connection",{"_index":3118,"title":{},"body":{"license.html":{}}}],["consent",{"_index":826,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consent.service",{"_index":46,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["consentchange",{"_index":827,"title":{},"body":{"injectables/ConsentService.html":{}}}],["consentservice",{"_index":11,"title":{"injectables/ConsentService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["consentservice.consentchange.subscribe(consent",{"_index":1535,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consentservice.setconsent(this.loadconsent",{"_index":1533,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consortium",{"_index":3071,"title":{},"body":{"license.html":{}}}],["const",{"_index":58,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["constrained",{"_index":3015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructor",{"_index":183,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["constructor(api",{"_index":251,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["constructor(consentservice",{"_index":1290,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["constructor(defaultmaxoptions",{"_index":2074,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["constructor(dialog",{"_index":813,"title":{},"body":{"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["constructor(dialogref",{"_index":1374,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(el",{"_index":1586,"title":{},"body":{"directives/NumberDirective.html":{}}}],["constructor(elementref",{"_index":2127,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["constructor(globalconfig",{"_index":393,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["constructor(http",{"_index":1357,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["constructor(private",{"_index":1081,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"directives/NumberDirective.html":{},"interfaces/PanelData.html":{}}}],["constructor(store",{"_index":2031,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["container",{"_index":991,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["containers",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3021,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1679,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["containting",{"_index":742,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["content",{"_index":608,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PanelData.html":{},"components/SpatialSearchListComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["content.title",{"_index":1409,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contents",{"_index":1391,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["continuously",{"_index":1886,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["contract",{"_index":3115,"title":{},"body":{"license.html":{}}}],["control",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":351,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["controls",{"_index":716,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["convert",{"_index":1093,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["coordinate",{"_index":3016,"title":{},"body":{"index.html":{}}}],["copies",{"_index":3091,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3079,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3070,"title":{},"body":{"license.html":{}}}],["cord",{"_index":1788,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["cors",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":655,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["coverage",{"_index":2764,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":1040,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["createdatabase",{"_index":391,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createdatabase(config",{"_index":400,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creates",{"_index":355,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["createsegments",{"_index":937,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createstackops",{"_index":938,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["createstackops(ranges",{"_index":955,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createworker",{"_index":2206,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createworker(config",{"_index":455,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creation",{"_index":1317,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["credits",{"_index":3057,"title":{},"body":{"index.html":{}}}],["csp",{"_index":1273,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["css",{"_index":1693,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["cta",{"_index":647,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ctadatepassed",{"_index":811,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["ctadatepassed(expirationdate",{"_index":726,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ctx",{"_index":769,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ctx.dispatch(new",{"_index":741,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ctx.getstate",{"_index":735,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ctx.patchstate",{"_index":777,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["cuboid",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":984,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{}}}],["currently",{"_index":1839,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["cursor",{"_index":625,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["custom",{"_index":1944,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["cyberinfrastructure",{"_index":3059,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1208,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{}}}],["damages",{"_index":3113,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":130,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PanelData.html":{},"components/StoreDebugComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["data.content",{"_index":1338,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.content.length",{"_index":1330,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["data.infotitle",{"_index":1337,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["data.split",{"_index":1100,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["data.title",{"_index":1396,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.videoid",{"_index":1339,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dataaction",{"_index":2189,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["database",{"_index":107,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["database.service.ts",{"_index":384,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["database.service.ts:20",{"_index":394,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:37",{"_index":401,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:39",{"_index":398,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:63",{"_index":2208,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["database[releaseproxy",{"_index":459,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["databasestatus",{"_index":108,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["datareviver",{"_index":137,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["datasets",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":129,"title":{"interfaces/DataSource.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{}}}],["datasource[k",{"_index":867,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["datasourcedatatype",{"_index":868,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelike",{"_index":432,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelikemethod",{"_index":865,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcemethod",{"_index":866,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourceservice",{"_index":889,"title":{"injectables/DataSourceService.html":{}},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["date",{"_index":720,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["date(expirationdate",{"_index":730,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["date.now",{"_index":727,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["deal",{"_index":3081,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3119,"title":{},"body":{"license.html":{}}}],["debug",{"_index":2028,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug'},{'name",{"_index":543,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["debug.component",{"_index":2070,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug.component.html",{"_index":2030,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.scss",{"_index":2029,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts",{"_index":2026,"title":{},"body":{"components/StoreDebugComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["debug.component.ts:21",{"_index":2038,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:26",{"_index":2044,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:34",{"_index":2041,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:37",{"_index":2034,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:58",{"_index":2039,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.module.ts",{"_index":2069,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug/store",{"_index":2025,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dec",{"_index":713,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["december",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":1867,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["deck.gl/core",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":2905,"title":{},"body":{"dependencies.html":{}}}],["deckgl",{"_index":2289,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"overview.html":{}}}],["declare",{"_index":1235,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["decorated",{"_index":306,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["decoratedrange",{"_index":305,"title":{"interfaces/DecoratedRange.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["decoratedtextcomponent",{"_index":527,"title":{"components/DecoratedTextComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["decoratedtextmodule",{"_index":1060,"title":{"modules/DecoratedTextModule.html":{}},"body":{"modules/DecoratedTextModule.html":{},"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["decoration",{"_index":969,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["decorations",{"_index":282,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["decorations.length",{"_index":1003,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorations.reduce",{"_index":1058,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorator",{"_index":300,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["decorators",{"_index":258,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"components/XYZPositionComponent.html":{}}}],["deep",{"_index":1411,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["deeply",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["def",{"_index":1207,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["default",{"_index":308,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_max_options",{"_index":313,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_options",{"_index":1950,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultmaxoptions",{"_index":358,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["defaultparams",{"_index":140,"title":{"interfaces/DefaultParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["defaults",{"_index":707,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["defaultservice",{"_index":109,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["defaultvalue",{"_index":1469,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["define",{"_index":1070,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["defined",{"_index":28,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["defining",{"_index":723,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["delegate.service.ts",{"_index":1447,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["delegate.service.ts:11",{"_index":1450,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegate.service.ts:28",{"_index":1453,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource",{"_index":386,"title":{"classes/DelegateDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["delegatedatasource:11",{"_index":1455,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource:19",{"_index":422,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["delete",{"_index":1246,"title":{},"body":{"injectables/GlobalsService.html":{},"components/SpatialSearchListComponent.html":{}}}],["delete_outlined",{"_index":2004,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["demo",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1270,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["depends",{"_index":1253,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["deps",{"_index":81,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["descrepancies",{"_index":2409,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":277,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/XYZPositionComponent.html":{},"miscellaneous/functions.html":{}}}],["destroyed",{"_index":1326,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["detaches",{"_index":1865,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["details",{"_index":478,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["detection",{"_index":2037,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["detects",{"_index":601,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{}}}],["determines",{"_index":718,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/OrganInfo.html":{}}}],["determining",{"_index":695,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":447,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["developed",{"_index":3058,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":56,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["developments",{"_index":2785,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":496,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["dialog's",{"_index":1378,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog'},{'name",{"_index":532,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["dialog.component",{"_index":689,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":1369,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.scss",{"_index":1368,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.ts",{"_index":1362,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["dialog.component.ts:27",{"_index":1390,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1392,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":1377,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1389,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":1388,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:54",{"_index":1382,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:63",{"_index":1381,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.module",{"_index":1354,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":1438,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":688,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1371,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialogs",{"_index":1335,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["dialogue",{"_index":1324,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["different",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1875,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["direct",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":1876,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/XYZPositionComponent.html":{}}}],["directive",{"_index":520,"title":{"directives/NumberDirective.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":551,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["directly",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":1276,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["disabled",{"_index":1296,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["disables",{"_index":1915,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["dismiss",{"_index":2123,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["dispatch",{"_index":493,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["display",{"_index":609,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":288,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":1837,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["displaying",{"_index":1363,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/StoreDebugComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displays",{"_index":476,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["distance",{"_index":1848,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["distinct",{"_index":1946,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distinctuntilchanged",{"_index":303,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["distinctuntilchanged(opts.compare",{"_index":1966,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distribute",{"_index":3087,"title":{},"body":{"license.html":{}}}],["div",{"_index":2290,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["doc",{"_index":703,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["docs",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1547,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["document).body",{"_index":1578,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["document.body.appendchild(tag",{"_index":1401,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.createelement('script",{"_index":1398,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.getelementsbyclassname('modal",{"_index":1402,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentation",{"_index":1072,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["documentationcontent",{"_index":683,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["documentationcontents",{"_index":1372,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentationurl",{"_index":1314,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["dom",{"_index":468,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["domexception",{"_index":1491,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["don't",{"_index":1010,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["done",{"_index":1022,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["donor",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["dorequest",{"_index":227,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["dorequest(method",{"_index":253,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["dotenv",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":1201,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["dynamic",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":1071,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"miscellaneous/functions.html":{}}}],["eagerly_loaded_services",{"_index":59,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":3041,"title":{},"body":{"index.html":{}}}],["effect",{"_index":993,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["efficiency",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":1556,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":519,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":1587,"title":{},"body":{"directives/NumberDirective.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["elementref.nativeelement",{"_index":2146,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["embedded",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["emitevent",{"_index":336,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["emits",{"_index":344,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["emitted",{"_index":3009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emitter",{"_index":1631,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["emitting",{"_index":205,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["emmitter",{"_index":591,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["empty",{"_index":999,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["end",{"_index":908,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/functions.html":{}}}],["endpoint",{"_index":238,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["endpoint.service.ts",{"_index":93,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["endpoint.service.ts:104",{"_index":264,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:109",{"_index":268,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:114",{"_index":265,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:119",{"_index":267,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:127",{"_index":263,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:140",{"_index":261,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:148",{"_index":269,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:156",{"_index":272,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:164",{"_index":259,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:172",{"_index":266,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:180",{"_index":262,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:188",{"_index":260,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:196",{"_index":271,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:204",{"_index":270,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:211",{"_index":254,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:216",{"_index":256,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:222",{"_index":257,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:96",{"_index":252,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["ensures",{"_index":2201,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["entry",{"_index":2136,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["entry[1",{"_index":1036,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["environment",{"_index":1254,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["error",{"_index":1489,"title":{},"body":{"injectables/LocalStorageService.html":{},"interfaces/OrganInfo.html":{}}}],["error.code",{"_index":1495,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["error.name",{"_index":1501,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["errors",{"_index":1285,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["es",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":1275,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/explicit",{"_index":1573,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/no",{"_index":1279,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["especially",{"_index":1199,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["etc",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":585,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["eval",{"_index":1281,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["even",{"_index":1219,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["event",{"_index":759,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"license.html":{}}}],["event.stoppropagation",{"_index":1601,"title":{},"body":{"directives/NumberDirective.html":{}}}],["eventemitter",{"_index":291,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["events",{"_index":1561,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/OpacitySliderComponent.html":{}}}],["events.subscribe(data",{"_index":1566,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["eventually",{"_index":1695,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["everything",{"_index":1492,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["evt",{"_index":2322,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["evt.preventdefault",{"_index":2323,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["except",{"_index":1493,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["exclusive",{"_index":911,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["exists",{"_index":1222,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["expanded",{"_index":1841,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["expiered",{"_index":725,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["expiration",{"_index":719,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["expirationdate",{"_index":673,"title":{},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{}}}],["expirationdate(state",{"_index":793,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["expire",{"_index":729,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["explicit",{"_index":1572,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["exploration",{"_index":709,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"index.html":{}}}],["export",{"_index":50,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{}}}],["exported",{"_index":131,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"overview.html":{}}}],["express",{"_index":2939,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["ext/operators",{"_index":1170,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["ext/operators/src/lib/filter",{"_index":2826,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/flatten.ts",{"_index":2829,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/inner",{"_index":2831,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/pluck",{"_index":1939,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ext/src/public",{"_index":2835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":385,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["external",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["eye",{"_index":1710,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1770,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":314,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1405,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["fail",{"_index":1269,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["fails",{"_index":1471,"title":{},"body":{"injectables/LocalStorageService.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{}}}],["fallopian",{"_index":1717,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fallthrough",{"_index":1542,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["false",{"_index":337,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":151,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1689,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["fetches",{"_index":361,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["field",{"_index":1498,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"changelog.html":{}}}],["fields",{"_index":1000,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["file",{"_index":20,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":3080,"title":{},"body":{"license.html":{}}}],["filled",{"_index":966,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filler",{"_index":2009,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["filter",{"_index":100,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["filter(config",{"_index":437,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["filter(item",{"_index":1037,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filter(range",{"_index":1054,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filternulls",{"_index":1168,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterparams",{"_index":142,"title":{"interfaces/FilterParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filters",{"_index":963,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["filtertoparams",{"_index":2867,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filtertoparams(filter",{"_index":231,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["final",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["find",{"_index":363,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["findglobalobject",{"_index":1188,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["finishing",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["firefox",{"_index":1494,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["first",{"_index":634,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fit",{"_index":654,"title":{},"body":{"components/CallToActionComponent.html":{},"changelog.html":{}}}],["fitness",{"_index":3105,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["flatten",{"_index":2830,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["flattens",{"_index":3004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flex",{"_index":636,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["flexible",{"_index":2420,"title":{},"body":{"changelog.html":{}}}],["float",{"_index":1432,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["fly",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":3095,"title":{},"body":{"license.html":{}}}],["font",{"_index":629,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/XYZPositionComponent.html":{}}}],["form",{"_index":350,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["format",{"_index":2215,"title":{},"body":{"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["formatdata",{"_index":1552,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["formsmodule",{"_index":2106,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["forroot",{"_index":25,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["forroot(options",{"_index":26,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["forwardcall",{"_index":392,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardcall(method",{"_index":402,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource",{"_index":406,"title":{"classes/ForwardingDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["forwardingdatasource:103",{"_index":407,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:38",{"_index":413,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:42",{"_index":417,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:46",{"_index":414,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:50",{"_index":416,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:54",{"_index":412,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:58",{"_index":410,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:62",{"_index":418,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:66",{"_index":421,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:70",{"_index":408,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:74",{"_index":415,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:78",{"_index":411,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:82",{"_index":409,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:86",{"_index":420,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:90",{"_index":419,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["found",{"_index":364,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["frame",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":3017,"title":{},"body":{"index.html":{}}}],["free",{"_index":3075,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":1548,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fromevent(el",{"_index":1562,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fs",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":1049,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fullscreen",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["func",{"_index":1277,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["function",{"_index":60,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/InfoButtonService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["function('return",{"_index":1282,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["functionality",{"_index":320,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["functionaliy",{"_index":1952,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":2992,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":3064,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":3094,"title":{},"body":{"license.html":{}}}],["further",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":731,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["ga.event('webpage",{"_index":1567,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["gatoken",{"_index":52,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["generate",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":2405,"title":{},"body":{"changelog.html":{}}}],["get(key",{"_index":1204,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getaggregateresults",{"_index":244,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":213,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getallowtelemetry",{"_index":2139,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["getbiomarkertermoccurences",{"_index":245,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getbiomarkertermoccurences(filter",{"_index":219,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getbiomarkertreemodel",{"_index":206,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetermoccurences",{"_index":246,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetermoccurences(filter",{"_index":217,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetreemodel",{"_index":200,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getconfig",{"_index":1159,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getdata",{"_index":2043,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["getdatabasestatus",{"_index":189,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getdatasettechnologynames",{"_index":195,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getdialogdata",{"_index":743,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["getitem",{"_index":1463,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":1468,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getlength",{"_index":1506,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getnormalizeddecorations",{"_index":939,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getobj",{"_index":1230,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getontologytermoccurences",{"_index":247,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":215,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytreemodel",{"_index":197,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getop",{"_index":1025,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.end).removed.push(range",{"_index":1028,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.start).added.push(range",{"_index":1027,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getoption",{"_index":1130,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(...path",{"_index":1143,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(k1",{"_index":1136,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoptions",{"_index":2071,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["getoptions(search",{"_index":366,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["getpathkey",{"_index":1131,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getpathkey(path",{"_index":1147,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty",{"_index":1132,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty(path",{"_index":1149,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getprovidernames",{"_index":193,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorgans",{"_index":208,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene",{"_index":248,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene(organiri",{"_index":224,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gets",{"_index":1206,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["getscene",{"_index":249,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getscene(filter",{"_index":221,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettelemetrystoragesetting",{"_index":2194,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":2349,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockresults",{"_index":250,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettissueblockresults(filter",{"_index":211,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getvalue",{"_index":2091,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["github",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":840,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["gizmo",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["gland",{"_index":1743,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":1187,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":187,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"changelog.html":{}}}],["globalconfig.config$.pipe",{"_index":436,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["globalconfig.getoption('hubmaptoken",{"_index":233,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('hubmaptoken').subscribe(buster",{"_index":188,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('remoteapiendpoint",{"_index":232,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfigstate",{"_index":126,"title":{"injectables/GlobalConfigState.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["globalkey",{"_index":1211,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["globalsservice",{"_index":1184,"title":{"injectables/GlobalsService.html":{}},"body":{"injectables/GlobalsService.html":{},"coverage.html":{}}}],["globalthis",{"_index":1203,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalthis[k",{"_index":1241,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["good",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":44,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":681,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["googleanalyticssyncservice",{"_index":13,"title":{"injectables/GoogleAnalyticsSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":3074,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3121,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["grow",{"_index":2010,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["gtex",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["h1",{"_index":1084,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["hack",{"_index":1895,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hand",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":597,"title":{},"body":{"components/CallToActionComponent.html":{},"injectables/LocalStorageService.html":{}}}],["handles",{"_index":758,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["happen",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":1897,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hard",{"_index":1251,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["has(key",{"_index":1215,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["hash",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["hassex",{"_index":1681,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1413,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["headerandcontent",{"_index":1106,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["headerandcontent.splice(1).join(newline",{"_index":1110,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["headerandcontent[0",{"_index":1109,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["heart",{"_index":1722,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":640,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["helmet",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1685,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["here",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":3073,"title":{},"body":{"license.html":{}}}],["hex",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1662,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["hide",{"_index":1869,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hiding",{"_index":1364,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["high",{"_index":171,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["highlight",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["hold",{"_index":670,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["holders",{"_index":3110,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":607,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["hostbinding",{"_index":292,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbinding('class",{"_index":330,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbindings",{"_index":580,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["hostlistener",{"_index":1596,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlistener('input",{"_index":1595,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlisteners",{"_index":1585,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hovering",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":2354,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["html",{"_index":329,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["htmlelement",{"_index":1551,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/functions.html":{}}}],["http",{"_index":733,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000029",{"_index":1707,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000056",{"_index":1802,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000059",{"_index":1786,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000079",{"_index":1779,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000948",{"_index":1723,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000955",{"_index":1703,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000970",{"_index":1712,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000992",{"_index":1750,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000995",{"_index":1811,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001004",{"_index":1741,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001222",{"_index":1804,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001223",{"_index":1803,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001255",{"_index":1808,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001264",{"_index":1768,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001270",{"_index":1772,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001302",{"_index":1720,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001303",{"_index":1719,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001465",{"_index":1731,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001737",{"_index":1755,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001911",{"_index":1745,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001987",{"_index":1775,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002048",{"_index":1740,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002049",{"_index":1817,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002097",{"_index":1700,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":1793,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002107",{"_index":1736,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002108",{"_index":1783,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002113",{"_index":1726,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002182",{"_index":1759,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002240",{"_index":1790,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002367",{"_index":1778,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002370",{"_index":1796,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002373",{"_index":1763,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002509",{"_index":1708,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0003126",{"_index":1799,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0003889",{"_index":1718,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004537",{"_index":1816,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":1727,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":1728,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004548",{"_index":1713,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004549",{"_index":1714,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma24977",{"_index":1733,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma24978",{"_index":1732,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma54973",{"_index":1765,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma54974",{"_index":1764,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma57987",{"_index":1747,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma57991",{"_index":1746,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma7213",{"_index":1752,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma7214",{"_index":1751,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":675,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["httpclientmodule",{"_index":1353,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["https://beta",{"_index":3026,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":3038,"title":{},"body":{"index.html":{}}}],["https://developer.mozilla.org/en",{"_index":1482,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["https://hubmap",{"_index":3031,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":3030,"title":{},"body":{"index.html":{}}}],["https://humanatlas.io",{"_index":3056,"title":{},"body":{"index.html":{}}}],["https://observablehq.com/@cns",{"_index":3053,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":3033,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":3028,"title":{},"body":{"index.html":{}}}],["https://r5i95k35v5.us",{"_index":3040,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":1400,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["hubmap",{"_index":2394,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmaptoken",{"_index":94,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["human",{"_index":2352,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["i1[0",{"_index":1032,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2",{"_index":1031,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2[0",{"_index":1033,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["icon",{"_index":475,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["icons",{"_index":1660,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["id",{"_index":283,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["idb",{"_index":2953,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":2088,"title":{},"body":{"components/TextSearchComponent.html":{},"coverage.html":{}}}],["iec",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":1434,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ignore",{"_index":1248,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["ignored",{"_index":1532,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["igoogleanalyticscommand",{"_index":41,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["igoogleanalyticssettings",{"_index":1291,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["image",{"_index":589,"title":{},"body":{"components/CallToActionComponent.html":{},"changelog.html":{}}}],["images",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["imageurl",{"_index":487,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{}}}],["imageurl(state",{"_index":795,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["img",{"_index":1431,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["immutable",{"_index":1161,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablepatchvalue",{"_index":1153,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablestatevalue",{"_index":1156,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["impl",{"_index":387,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["impl[method",{"_index":887,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["implementation",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":182,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["implied",{"_index":1280,"title":{},"body":{"injectables/GlobalsService.html":{},"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":1661,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["imports",{"_index":75,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{}}}],["improve",{"_index":2155,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["improved",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["in\\'}}opt",{"_index":2178,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["include",{"_index":1592,"title":{},"body":{"directives/NumberDirective.html":{},"changelog.html":{}}}],["included",{"_index":3098,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":2499,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["inclusive",{"_index":915,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["increase",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":88,"title":{"index.html":{}},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["indexing",{"_index":918,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indiana",{"_index":3062,"title":{},"body":{"index.html":{}}}],["indicating",{"_index":922,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indices",{"_index":3013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicies",{"_index":913,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["individual",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["infix",{"_index":2096,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["info",{"_index":18,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["infobuttoncomponent",{"_index":529,"title":{"components/InfoButtonComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":1345,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infobuttonservice",{"_index":684,"title":{"injectables/InfoButtonService.html":{}},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["infodialogcomponent",{"_index":531,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infodialogdata",{"_index":1376,"title":{"interfaces/InfoDialogData.html":{}},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["infodialogmodule",{"_index":1350,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":474,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["infoservice",{"_index":732,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["infotitle",{"_index":576,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{}}}],["infrastructure",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":405,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["init",{"_index":1386,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["initalvalue",{"_index":1597,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initalvalue.replace(/[^0",{"_index":1599,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initcommands",{"_index":2822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initcommands(options",{"_index":70,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["initial",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["initial_telemetry_setting",{"_index":2193,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization",{"_index":2297,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["initialized",{"_index":2273,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["inject",{"_index":293,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inject(default_max_options",{"_index":359,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["inject(document",{"_index":1576,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["inject(local_storage_consent_key",{"_index":1530,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["inject(mat_dialog_data",{"_index":1387,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["inject(mat_snack_bar_data",{"_index":2137,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["inject(ngx_google_analytics_settings_token",{"_index":1302,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["inject(ngx_window",{"_index":1301,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["injectable",{"_index":96,"title":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PanelData.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["injectables",{"_index":243,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"overview.html":{}}}],["injected",{"_index":1380,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["injectiontoken",{"_index":294,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('key",{"_index":1526,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1449,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injector.get(token",{"_index":1459,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injectordelegatedatasourceservice",{"_index":1445,"title":{"injectables/InjectorDelegateDataSourceService.html":{}},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["innermap",{"_index":2833,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["innermap(project",{"_index":3007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["input",{"_index":295,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["input[ccfnumbersonly",{"_index":553,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["inputs",{"_index":575,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/XYZPositionComponent.html":{}}}],["inside",{"_index":1075,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["instance",{"_index":356,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instanceof",{"_index":1490,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["instead",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["integer",{"_index":1583,"title":{},"body":{"directives/NumberDirective.html":{}}}],["integrated",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["interacting",{"_index":1186,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["interactions",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["interactive",{"_index":2274,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interactive(value",{"_index":2276,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interest",{"_index":1913,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["interface",{"_index":51,"title":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":87,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1781,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["invoked",{"_index":3011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iobservablecacheconfig",{"_index":132,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["isdevmode",{"_index":423,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["isselected(organ",{"_index":1914,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["issue",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["istanbul",{"_index":1247,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["it's",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1627,"title":{},"body":{"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["item.description",{"_index":1994,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["item.selected",{"_index":2000,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["item__content",{"_index":2008,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["itemcontainer",{"_index":1834,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemcontainer.nativeelement.style.width",{"_index":1924,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemid",{"_index":1973,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["itemid(_index",{"_index":1983,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["itemlist",{"_index":1832,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.offsetwidth",{"_index":1918,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.style.left",{"_index":1884,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemremoved",{"_index":1975,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["items",{"_index":1655,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["iu",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["iu/ccf",{"_index":3054,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":2376,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":2064,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["jsonld",{"_index":2956,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":1414,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["k",{"_index":403,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["k1",{"_index":1137,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k2",{"_index":1139,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k3",{"_index":1141,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k4",{"_index":1958,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k5",{"_index":1959,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k6",{"_index":1960,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["key",{"_index":65,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["key(index",{"_index":1472,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["keyboard",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["keyof",{"_index":864,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["keys",{"_index":1232,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/typealiases.html":{}}}],["keys.slice(0",{"_index":1963,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["keyval",{"_index":2954,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":1725,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":3102,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1730,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["kv[0",{"_index":2062,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kv[1",{"_index":2063,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kvlist",{"_index":2046,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kvpair",{"_index":2048,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["l",{"_index":1711,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":284,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["labs/dispatch",{"_index":509,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"dependencies.html":{}}}],["landmarks",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":1785,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["larynx",{"_index":1754,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":1020,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["lastindex",{"_index":1007,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["lastvaluefrom",{"_index":301,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["later",{"_index":947,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["latest",{"_index":342,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["launchinfodialog",{"_index":1313,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["launchinfodialog(data",{"_index":1322,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["launchlearnmore",{"_index":812,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["launchlearnmore(content",{"_index":749,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["layers",{"_index":2903,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["learn",{"_index":501,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}}}],["learnmore",{"_index":488,"title":{"classes/LearnMore.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{}}}],["learnmore(_ctx",{"_index":762,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["leave",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":614,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"modules/CallToActionModule.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"components/SpatialSearchListComponent.html":{},"modules/SpatialSearchListModule.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"overview.html":{}}}],["length",{"_index":920,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["level",{"_index":2787,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["lhs",{"_index":1948,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["liability",{"_index":3114,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3111,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":2452,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":3068,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":3083,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2738,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":639,"title":{},"body":{"components/CallToActionComponent.html":{},"injectables/GlobalsService.html":{},"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["link",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":2478,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":1508,"title":{},"body":{"injectables/LocalStorageService.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["list'},{'name",{"_index":540,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["list.component",{"_index":2023,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["list.component.html",{"_index":1972,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["list.component.scss",{"_index":1971,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["list.component.ts",{"_index":1969,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"coverage.html":{}}}],["list.component.ts:27",{"_index":1982,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:30",{"_index":1978,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:33",{"_index":1977,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:36",{"_index":1980,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:39",{"_index":1979,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:48",{"_index":1984,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:58",{"_index":1991,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:71",{"_index":1989,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.module.ts",{"_index":2016,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["list/spatial",{"_index":1968,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"coverage.html":{}}}],["listeners",{"_index":2036,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["listens",{"_index":1591,"title":{},"body":{"directives/NumberDirective.html":{}}}],["listlength",{"_index":1921,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["listlength}px",{"_index":1925,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["literal",{"_index":2973,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1735,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1383,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["loadconsent",{"_index":1517,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["loaded",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":2906,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":2908,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":2909,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":2397,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":48,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageService.html":{}}}],["local_storage_allow_telemetry_key",{"_index":2192,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local_storage_consent_key",{"_index":1525,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":1529,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["localstorage.getitem(local_storage_allow_telemetry_key",{"_index":2195,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstorage.setitem(local_storage_allow_telemetry_key",{"_index":2198,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstorageservice",{"_index":690,"title":{"injectables/LocalStorageService.html":{}},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["localstorageservice.storage?.clear",{"_index":1515,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice.storage?.getitem(key",{"_index":1511,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice.storage?.key(index",{"_index":1510,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice.storage?.length",{"_index":1509,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice.storage?.removeitem(key",{"_index":1514,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice.storage?.setitem(key",{"_index":1512,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstoragesyncservice",{"_index":14,"title":{"injectables/LocalStorageSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locate",{"_index":1192,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["location",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["location.reload",{"_index":2205,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["locations",{"_index":1196,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["lodash",{"_index":2958,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":2153,"title":{},"body":{"components/TrackingPopupComponent.html":{},"index.html":{}}}],["logging",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":1221,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["longer",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1074,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["low",{"_index":170,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["lru",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":2910,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1738,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lungs",{"_index":1739,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1706,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":1758,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["major",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1896,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["makedecoratedsegment",{"_index":940,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makedecoratedsegment(text",{"_index":967,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makes",{"_index":656,"title":{},"body":{"components/CallToActionComponent.html":{},"changelog.html":{}}}],["makeundecoratedsegment",{"_index":941,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makeundecoratedsegment(text",{"_index":970,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["making",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":152,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["mammary",{"_index":1744,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":2042,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["manager",{"_index":399,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database",{"_index":444,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database.connect(config",{"_index":450,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["managers",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":119,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(config",{"_index":1456,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map(data",{"_index":241,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["map(entry",{"_index":1035,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(formatdata",{"_index":1565,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["map(manager",{"_index":443,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(range",{"_index":1051,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(token",{"_index":1458,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map.ts",{"_index":2832,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapping",{"_index":3010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maps",{"_index":3008,"title":{},"body":{"miscellaneous/functions.html":{}}}],["march",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":663,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["margin.x",{"_index":2307,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["margin.y",{"_index":2310,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["markdown",{"_index":603,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"interfaces/PanelData.html":{},"dependencies.html":{}}}],["markdowncontent",{"_index":1098,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["markdowncontent.push",{"_index":1108,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["markdownmodule",{"_index":1441,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markdownmodule.forroot",{"_index":1444,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markers",{"_index":2117,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["markup",{"_index":702,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":648,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["mat_dialog_data",{"_index":1394,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["mat_snack_bar_data",{"_index":2141,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["matautocompletemodule",{"_index":2108,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matbuttonmodule",{"_index":2017,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"modules/TrackingPopupModule.html":{}}}],["matcardmodule",{"_index":562,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{}}}],["match",{"_index":1686,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["matcheckboxmodule",{"_index":2019,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["matching",{"_index":86,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":677,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["matdialogmodule",{"_index":564,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":1375,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["material",{"_index":2011,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["matexpansionmodule",{"_index":1439,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matformfieldmodule",{"_index":2110,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["math.floor(carouselcontainer.nativeelement.offsetwidth",{"_index":1922,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["math.gl/core",{"_index":98,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":2913,"title":{},"body":{"dependencies.html":{}}}],["math.log2((height",{"_index":2309,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.log2((width",{"_index":2306,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.min",{"_index":2305,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["maticonmodule",{"_index":566,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{}}}],["matinputmodule",{"_index":2112,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matlegacyslidermodule",{"_index":1669,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matlistmodule",{"_index":2021,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["matprefix",{"_index":2103,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["matripplemodule",{"_index":1672,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matrix4",{"_index":97,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matrix4(node.transformmatrix",{"_index":178,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matslidermodule",{"_index":1670,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matsuffix",{"_index":2104,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["mattooltipmodule",{"_index":1936,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["max",{"_index":174,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["maxcachecount",{"_index":162,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":309,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["maxoptions",{"_index":339,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["maxrotationx",{"_index":2318,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mc",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["mdc",{"_index":2007,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["member",{"_index":2148,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["memory",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":3104,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3085,"title":{},"body":{"license.html":{}}}],["message",{"_index":489,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"interfaces/OrganInfo.html":{}}}],["message(state",{"_index":797,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["metadata",{"_index":480,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["method",{"_index":228,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["method(requestparams",{"_index":240,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["methods",{"_index":23,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"components/CallToActionComponent.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["min",{"_index":172,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["minmax",{"_index":110,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["minor",{"_index":1894,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["minrotationx",{"_index":2316,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["miscellaneous",{"_index":2991,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3069,"title":{},"body":{"license.html":{}}}],["mixed",{"_index":1898,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["mock",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":753,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["mode",{"_index":448,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["model",{"_index":204,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"dependencies.html":{}}}],["models",{"_index":2239,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["modified",{"_index":1481,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["modify",{"_index":1044,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"license.html":{}}}],["module",{"_index":0,"title":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":36,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["monorepo",{"_index":3019,"title":{},"body":{"index.html":{}}}],["more",{"_index":502,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"changelog.html":{},"index.html":{}}}],["mount",{"_index":2291,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mouseevent",{"_index":1553,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove",{"_index":1568,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove').pipe",{"_index":1563,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousepositiontrackermodule",{"_index":1544,"title":{"modules/MousePositionTrackerModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"modules.html":{}}}],["moved",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["moves",{"_index":1849,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["much",{"_index":1256,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["multi",{"_index":77,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["multiple",{"_index":1334,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{},"index.html":{}}}],["multiselect",{"_index":1836,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["n3",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["n\\n",{"_index":1104,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["name",{"_index":31,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":671,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["need",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["negative",{"_index":912,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["nested",{"_index":3005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["network",{"_index":3060,"title":{},"body":{"index.html":{}}}],["never",{"_index":1903,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["new",{"_index":158,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newitems",{"_index":1995,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newitems.filter(item",{"_index":1999,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newitems.splice(index",{"_index":2002,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newitems[index",{"_index":1997,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newline",{"_index":1102,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["newopacity",{"_index":1637,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["next",{"_index":1249,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["ng",{"_index":1410,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["ngafterviewinit",{"_index":1861,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["ngmodule",{"_index":39,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{}}}],["ngonchanges",{"_index":942,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["ngonchanges(changes",{"_index":973,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ngondestroy",{"_index":828,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ngoninit",{"_index":1373,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["ngx",{"_index":43,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["ngx_google_analytics_settings_token",{"_index":1299,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngx_window",{"_index":1300,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":42,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxgoogleanalyticsmodule.forroot",{"_index":83,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxs",{"_index":508,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":2916,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":2919,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":511,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalConfigState.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxsimmutabledatarepository",{"_index":1128,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["ngxsmodule",{"_index":568,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{}}}],["ngxsoninit",{"_index":678,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ngxsoninit(ctx",{"_index":734,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["nih",{"_index":3065,"title":{},"body":{"index.html":{}}}],["node",{"_index":176,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":1263,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["nodeclick",{"_index":2270,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodeclickevent",{"_index":2235,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedrag",{"_index":2269,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedragevent",{"_index":2236,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstart",{"_index":2271,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstop",{"_index":2272,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodejs",{"_index":1899,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["nodes",{"_index":1705,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":1659,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["noninfringement",{"_index":3108,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":1210,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["nonnullable[0",{"_index":133,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["normal",{"_index":1917,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["normalize",{"_index":988,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(range",{"_index":1052,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalized",{"_index":965,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalizes",{"_index":917,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["note",{"_index":1039,"title":{},"body":{"components/DecoratedTextComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["notebooks",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["notebooks/vignettes",{"_index":3049,"title":{},"body":{"index.html":{}}}],["notice",{"_index":2670,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":722,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"changelog.html":{}}}],["ns_error_dom_quota_reached",{"_index":1503,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["null",{"_index":67,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["nulls.ts",{"_index":2827,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":169,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/LocalStorageService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number:format",{"_index":2223,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["numberdirective",{"_index":552,"title":{"directives/NumberDirective.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["numbers",{"_index":1593,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{}}}],["numbersonlymodule",{"_index":1602,"title":{"modules/NumbersOnlyModule.html":{}},"body":{"modules/NumbersOnlyModule.html":{},"modules.html":{},"overview.html":{}}}],["numeric",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["obj",{"_index":1189,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/functions.html":{}}}],["obj[key",{"_index":1242,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object",{"_index":653,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["object.defineproperties(this",{"_index":1237,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object.entries(obj).reduce>((attrs",{"_index":64,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["object.entries(ops",{"_index":1029,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["object.entries(this.root",{"_index":2050,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.entries(values",{"_index":2053,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.keys(config).length",{"_index":438,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["objects",{"_index":1050,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["obs",{"_index":1180,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["observable",{"_index":116,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["observable).pipe",{"_index":353,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["observableinput",{"_index":302,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{}}}],["observedvalueof",{"_index":863,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["obtaining",{"_index":3078,"title":{},"body":{"license.html":{}}}],["occured",{"_index":1868,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata",{"_index":1858,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata(value",{"_index":1856,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["off/on",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":3032,"title":{},"body":{"index.html":{}}}],["oldvalue",{"_index":2197,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["onchanges",{"_index":933,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ondestroy",{"_index":838,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ondialogbuttonclick",{"_index":574,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{}}}],["one",{"_index":1268,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":1367,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["oninputchange",{"_index":1584,"title":{},"body":{"directives/NumberDirective.html":{}}}],["oninputchange(event",{"_index":1594,"title":{},"body":{"directives/NumberDirective.html":{}}}],["onleft",{"_index":1844,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["online",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["only.directive",{"_index":1607,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only.directive.ts",{"_index":1581,"title":{},"body":{"directives/NumberDirective.html":{},"coverage.html":{}}}],["only.directive.ts:23",{"_index":1590,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.directive.ts:9",{"_index":1588,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.module.ts",{"_index":1606,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only/numbers",{"_index":1580,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["onright",{"_index":1845,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ontological",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["ontologyterms",{"_index":147,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ontologytreemodel",{"_index":101,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["ontologytreenode",{"_index":102,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["op",{"_index":980,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.index",{"_index":1019,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.removed.includes(item",{"_index":1038,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opacities",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":534,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["opacitychange",{"_index":1621,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityreset",{"_index":1622,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityslidercomponent",{"_index":533,"title":{"components/OpacitySliderComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["opacityslidermodule",{"_index":1663,"title":{"modules/OpacitySliderModule.html":{}},"body":{"modules/OpacitySliderModule.html":{},"modules.html":{},"overview.html":{}}}],["open",{"_index":503,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}}}],["open(ctx",{"_index":771,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["openapi",{"_index":2489,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/angular",{"_index":113,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["openapi/js",{"_index":3045,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":3047,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":3046,"title":{},"body":{"index.html":{}}}],["opendialog",{"_index":694,"title":{"classes/OpenDialog.html":{}},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{}}}],["opening",{"_index":1336,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["opens",{"_index":748,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["operation",{"_index":983,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operations",{"_index":959,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operator",{"_index":1942,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":1947,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ops",{"_index":1024,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ops[index",{"_index":1026,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opt",{"_index":2132,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["optimization",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":347,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["optional",{"_index":33,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optioncache",{"_index":1129,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["optiondisplay",{"_index":2072,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optiondisplay(option",{"_index":2084,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid",{"_index":2073,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid(_index",{"_index":2086,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["options",{"_index":34,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.gatoken",{"_index":84,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["optionselected",{"_index":349,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["opts",{"_index":1956,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ordered",{"_index":957,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["organ",{"_index":537,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organ(s",{"_index":1904,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organ.disabled",{"_index":1823,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["organinfo",{"_index":1675,"title":{"interfaces/OrganInfo.html":{}},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organiri",{"_index":226,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["organlist",{"_index":1838,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organs",{"_index":1687,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["organschanged",{"_index":1842,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organselectorcomponent",{"_index":536,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organselectormodule",{"_index":1930,"title":{"modules/OrganSelectorModule.html":{}},"body":{"modules/OrganSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["orthographic",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":3067,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1240,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"license.html":{}}}],["out",{"_index":17,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"license.html":{},"overview.html":{}}}],["outdated",{"_index":1260,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["outline",{"_index":2095,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["output",{"_index":296,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["outputs",{"_index":577,"title":{},"body":{"components/CallToActionComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["ovary",{"_index":1749,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["overflow",{"_index":2006,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["overlapping",{"_index":946,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["overlay",{"_index":1366,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["overlays",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["overridden",{"_index":1193,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["overview",{"_index":3122,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":136,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["package",{"_index":2455,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":613,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["pages",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["pair",{"_index":2047,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["paired",{"_index":1688,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["pairin",{"_index":1478,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["pairs",{"_index":2045,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["palatine",{"_index":1762,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["pancreas",{"_index":1767,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":1073,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["panelclass",{"_index":752,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["panelcontent",{"_index":1080,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["paneldata",{"_index":1077,"title":{"interfaces/PanelData.html":{}},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["panels",{"_index":1094,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["param",{"_index":357,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":135,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["parent",{"_index":593,"title":{},"body":{"components/CallToActionComponent.html":{},"changelog.html":{}}}],["parse",{"_index":1092,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["parseint(itemlist.nativeelement.style.left",{"_index":1880,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["parseint(newopacity",{"_index":1649,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["parsemarkdown",{"_index":1355,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["parsemarkdown(data",{"_index":1097,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["parser",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":285,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["partials",{"_index":1048,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["particular",{"_index":3106,"title":{},"body":{"license.html":{}}}],["partly",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":672,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["pass",{"_index":592,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["passed",{"_index":721,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["past",{"_index":1874,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["pastexpiration",{"_index":738,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["patchconfig",{"_index":1133,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["patchconfig(config",{"_index":1152,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["path",{"_index":700,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalConfigState.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["path.length}:${path.join",{"_index":1183,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pelvis",{"_index":1771,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["performs",{"_index":2294,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["permission",{"_index":3072,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3092,"title":{},"body":{"license.html":{}}}],["person",{"_index":3077,"title":{},"body":{"license.html":{}}}],["persons",{"_index":3093,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["piece",{"_index":990,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pipe",{"_index":234,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["pipe(map(data",{"_index":746,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["placeholder",{"_index":332,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["placement",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["placenta",{"_index":1774,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":1262,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["player",{"_index":1385,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["pluck",{"_index":1171,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluck(...(path",{"_index":1181,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluck(...keys",{"_index":1965,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["pluck(...path",{"_index":1176,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluckunique",{"_index":1941,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(...props",{"_index":1961,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(k1",{"_index":1957,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckuniqueoptions",{"_index":1938,"title":{"interfaces/PluckUniqueOptions.html":{}},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":2917,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":626,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["points",{"_index":1559,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["points.join('_",{"_index":1560,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["policy",{"_index":1272,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["popup",{"_index":724,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["popup'},{'name",{"_index":547,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["popup.component",{"_index":2184,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup.component.html",{"_index":2122,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.scss",{"_index":2121,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts",{"_index":2120,"title":{},"body":{"components/TrackingPopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:13",{"_index":2129,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:15",{"_index":2140,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:19",{"_index":2128,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:22",{"_index":2138,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:26",{"_index":2130,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:31",{"_index":2135,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:36",{"_index":2133,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.module.ts",{"_index":2183,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup/tracking",{"_index":2119,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["popup_shown_storage_key",{"_index":698,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["popupshown",{"_index":674,"title":{},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{}}}],["popupshown(state",{"_index":799,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["popupshownstr",{"_index":736,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["portal",{"_index":2500,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":3100,"title":{},"body":{"license.html":{}}}],["position",{"_index":550,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["position.component",{"_index":2231,"title":{},"body":{"modules/XYZPositionModule.html":{}}}],["position.component.html",{"_index":2214,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.scss",{"_index":2213,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.ts",{"_index":2211,"title":{},"body":{"components/XYZPositionComponent.html":{},"coverage.html":{}}}],["position.component.ts:15",{"_index":2219,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.ts:18",{"_index":2216,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.ts:21",{"_index":2217,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.ts:24",{"_index":2218,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.ts:27",{"_index":2222,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.module.ts",{"_index":2230,"title":{},"body":{"modules/XYZPositionModule.html":{}}}],["position/xyz",{"_index":2210,"title":{},"body":{"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"coverage.html":{}}}],["positive",{"_index":924,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["possible",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["poup",{"_index":696,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"miscellaneous/variables.html":{}}}],["precedence",{"_index":949,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["preferences",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["prefix/suffix",{"_index":2116,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["preparation",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":1500,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["presented",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["pretty",{"_index":1255,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["prevent",{"_index":1333,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["prevents",{"_index":1873,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["preview",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["prevopacity",{"_index":1616,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["private",{"_index":184,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["processed",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":1079,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["produces",{"_index":3012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":2467,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":477,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["projectname",{"_index":55,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["projects",{"_index":3020,"title":{},"body":{"index.html":{}}}],["projects/.../analytics.module.ts",{"_index":2997,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../api",{"_index":2993,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../call",{"_index":3136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../consent.service.ts",{"_index":3127,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../data",{"_index":3128,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../decorated",{"_index":2999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../filter",{"_index":2994,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../flatten.ts",{"_index":2995,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../globals.service.ts",{"_index":3129,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../inner",{"_index":2998,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../local",{"_index":3134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../mouse",{"_index":3001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../organ",{"_index":3132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pluck",{"_index":3000,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../public",{"_index":3135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../store",{"_index":3130,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../text",{"_index":3133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tracking.state.ts",{"_index":2996,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":21,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":367,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["properly",{"_index":1571,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["properties",{"_index":89,"title":{"properties.html":{}},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"properties.html":{}}}],["propertykey",{"_index":1150,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["props",{"_index":1955,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["props[props.length",{"_index":1962,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["prostate",{"_index":1777,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":389,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["provide",{"_index":76,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":362,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":179,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PanelData.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"changelog.html":{},"overview.html":{}}}],["providertoken",{"_index":1454,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["providing",{"_index":340,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["public",{"_index":1370,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["publish",{"_index":3086,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":3107,"title":{},"body":{"license.html":{}}}],["push",{"_index":1011,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pushed",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":1851,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["pxratio",{"_index":2303,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["python",{"_index":2375,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1694,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["quotaexceedederror",{"_index":1502,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["r",{"_index":1145,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["r\\n\\r\\n",{"_index":1105,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["radius",{"_index":618,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["range",{"_index":168,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["range.classes",{"_index":928,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["range.start",{"_index":1055,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.styles",{"_index":929,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.ts",{"_index":906,"title":{},"body":{"interfaces/DecoratedRange.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["range[0",{"_index":173,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["range[1",{"_index":175,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ranges",{"_index":932,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["rangetominmax",{"_index":167,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rangetominmax(range",{"_index":3002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawspatialscenenode",{"_index":112,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rawvalue",{"_index":1537,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rawvalue.trim().tolowercase",{"_index":1539,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rc.1",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":2972,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":2920,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":2107,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["read",{"_index":1082,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"interfaces/XYZTriplet.html":{}}}],["readable",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["reading",{"_index":1096,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["readme",{"_index":701,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":185,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["reads",{"_index":602,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["real",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["really",{"_index":1250,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["recalculate",{"_index":976,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["receives",{"_index":341,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["record",{"_index":62,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{}}}],["recreatebodyui",{"_index":2343,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rectify",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":2434,"title":{},"body":{"changelog.html":{}}}],["reexport",{"_index":989,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"modules/TextSearchModule.html":{}}}],["reference",{"_index":1316,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["refernced",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":1654,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["regions",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2935,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":2511,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["registrations#1",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["regular",{"_index":1900,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["related",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":662,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{}}}],["release",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["releaseproxy",{"_index":425,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["reliability",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":426,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["remoteapiendpoint",{"_index":95,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["removable",{"_index":1245,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["remove",{"_index":995,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{}}}],["remove(key",{"_index":1223,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["removed",{"_index":996,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["removeitem",{"_index":1464,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SpatialSearchListComponent.html":{}}}],["removeitem(index",{"_index":1988,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["removeitem(key",{"_index":1474,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removes",{"_index":1225,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["render",{"_index":2313,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rendering",{"_index":2288,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["replaced",{"_index":3014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":839,"title":{},"body":{"injectables/ConsentService.html":{}}}],["replaysubject(1",{"_index":837,"title":{},"body":{"injectables/ConsentService.html":{}}}],["repository",{"_index":3018,"title":{},"body":{"index.html":{}}}],["represents",{"_index":992,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["requestmethod",{"_index":134,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["requestparams",{"_index":230,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["requestparams['token",{"_index":239,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["required",{"_index":2296,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["rescinded",{"_index":841,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":16,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"overview.html":{}}}],["resetopacity",{"_index":1618,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resets",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["resetting",{"_index":1632,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resize",{"_index":1860,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor",{"_index":1692,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor(carouselcontainer.nativeelement",{"_index":1863,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizing",{"_index":1854,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resolve",{"_index":921,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolved",{"_index":987,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["resolveindex",{"_index":2845,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(index",{"_index":925,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(range.end",{"_index":927,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolveindex(range.start",{"_index":926,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolves",{"_index":916,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["respond",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["responsetype",{"_index":745,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["responsively",{"_index":1926,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["rest",{"_index":884,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["restricting",{"_index":1582,"title":{},"body":{"directives/NumberDirective.html":{}}}],["restriction",{"_index":3082,"title":{},"body":{"license.html":{}}}],["result",{"_index":1056,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["result.concat(range.classes",{"_index":1057,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["results",{"_index":85,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":63,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":35,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["reviver",{"_index":229,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["reviver(data",{"_index":242,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rgb",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["rgba(0",{"_index":2166,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rgba(255",{"_index":2158,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rhs",{"_index":1949,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["right",{"_index":616,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":3084,"title":{},"body":{"license.html":{}}}],["root",{"_index":180,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PanelData.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rotates",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":2247,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotation(value",{"_index":2249,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationchange",{"_index":2268,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx",{"_index":2251,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx(value",{"_index":2253,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["round",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["row",{"_index":635,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["ru/cdk",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["ru/common",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":1163,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["ru/ngxs",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["ru/ngxs/decorators",{"_index":1165,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["ru/ngxs/repositories",{"_index":1166,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["ru/ngxs/typings",{"_index":1167,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["rui",{"_index":584,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":1259,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["rxjs",{"_index":118,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":512,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["rxjs/operators",{"_index":123,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["s.unsubscribe",{"_index":2348,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["safe",{"_index":1043,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["same",{"_index":311,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["sample",{"_index":2813,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["samples",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["saveconsent",{"_index":1518,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saveconsent(value",{"_index":1522,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saver",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":2243,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["scene(nodes",{"_index":2245,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["scheduled",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":3061,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1365,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["scroll(dir",{"_index":1887,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolled",{"_index":1877,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolling",{"_index":1846,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolls",{"_index":1872,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["search",{"_index":317,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["search'},{'name",{"_index":544,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["search.component",{"_index":2115,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search.component.html",{"_index":323,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.scss",{"_index":325,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.ts",{"_index":276,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.component.ts:100",{"_index":2075,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:120",{"_index":2083,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:139",{"_index":2085,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:150",{"_index":2087,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:48",{"_index":2082,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:53",{"_index":2078,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:59",{"_index":2079,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:63",{"_index":2093,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:70",{"_index":2077,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:76",{"_index":2076,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:81",{"_index":2081,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:86",{"_index":2080,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:91",{"_index":2089,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:96",{"_index":2090,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.module.ts",{"_index":2105,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search/text",{"_index":275,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searches",{"_index":1970,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["section",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1271,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["see",{"_index":2423,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["segment",{"_index":954,"title":{"interfaces/Segment.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["segment.text",{"_index":1059,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["segments",{"_index":936,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["segments.push(this.makedecoratedsegment",{"_index":1017,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["select",{"_index":510,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"changelog.html":{}}}],["select(calltoactionselectors.calltoaction",{"_index":491,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["select(calltoactionselectors.imageurl",{"_index":497,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["select(calltoactionselectors.message",{"_index":504,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["select(calltoactionselectors.title",{"_index":506,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["selected",{"_index":348,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["selecteditems",{"_index":1998,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["selectedorgan",{"_index":1910,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selectedorgans",{"_index":1840,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selecting",{"_index":1825,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["selection",{"_index":1981,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["selectionchanged",{"_index":1976,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["selections",{"_index":1835,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector",{"_index":321,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"classes/CallToActionSelectors.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["selector'},{'name",{"_index":538,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["selector(['calltoactionstate",{"_index":791,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["selector([calltoactionstate",{"_index":804,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["selector.component",{"_index":1935,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector.component.html",{"_index":1827,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.scss",{"_index":1828,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.ts",{"_index":1678,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector.module.ts",{"_index":1934,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector/organ",{"_index":1677,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectorgan(organ",{"_index":1905,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selects",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["selecttoken",{"_index":1448,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["selecttoken(config",{"_index":1451,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["self",{"_index":652,"title":{},"body":{"components/CallToActionComponent.html":{},"injectables/GlobalsService.html":{},"components/InfoDialogComponent.html":{}}}],["sell",{"_index":3090,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":1078,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["sends",{"_index":500,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["sennet",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["sensitive",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["sensor",{"_index":1855,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sent",{"_index":1095,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["server",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":1318,"title":{},"body":{"components/InfoButtonComponent.html":{},"injectables/LocalStorageService.html":{},"components/TrackingPopupComponent.html":{}}}],["services/local",{"_index":691,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["set",{"_index":72,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["set(key",{"_index":1226,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setallowtelemetry",{"_index":2187,"title":{},"body":{"injectables/TrackingState.html":{}}}],["setallowtelemetry(allowtelemetry",{"_index":2188,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["setconfig",{"_index":1134,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconfig(config",{"_index":1155,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconsent",{"_index":829,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setconsent(value",{"_index":833,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setinterval",{"_index":1889,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["setitem",{"_index":1465,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":1476,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setleftright(val",{"_index":1929,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sets",{"_index":706,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{}}}],["settimeout",{"_index":1406,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["setting",{"_index":1612,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["settings",{"_index":1274,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setup",{"_index":2295,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["setupbodyui",{"_index":2314,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["setvalue(val",{"_index":2092,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["setwidth",{"_index":1927,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sex",{"_index":149,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sexes",{"_index":1683,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["shadow",{"_index":2162,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shall",{"_index":3097,"title":{},"body":{"license.html":{}}}],["shared",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["shared/analytics",{"_index":2143,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shared/analytics/src/lib/analytics.module.ts",{"_index":22,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics/src/lib/analytics.module.ts:68",{"_index":29,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["shared/analytics/src/lib/consent.service.ts",{"_index":825,"title":{},"body":{"injectables/ConsentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/analytics/src/lib/consent.service.ts:10",{"_index":836,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:12",{"_index":831,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:18",{"_index":832,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:22",{"_index":834,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:29",{"_index":835,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/google",{"_index":1286,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{}}}],["shared/analytics/src/lib/local",{"_index":1516,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/rxjs",{"_index":1169,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/mouse",{"_index":1545,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/analytics/tracking.state.ts",{"_index":2186,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/tracking.state.ts:29",{"_index":2190,"title":{},"body":{"injectables/TrackingState.html":{}}}],["shared/src/lib/components/body",{"_index":375,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["shared/src/lib/components/call",{"_index":469,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"modules/CallToActionModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/decorated",{"_index":905,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/components/info/info",{"_index":1067,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["shared/src/lib/components/opacity",{"_index":1608,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/organ",{"_index":1676,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/spatial",{"_index":1967,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/store",{"_index":2024,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/src/lib/components/text",{"_index":274,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/tracking",{"_index":2118,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/xyz",{"_index":2209,"title":{},"body":{"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"coverage.html":{}}}],["shared/src/lib/config/global",{"_index":1126,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["shared/src/lib/directives/numbers",{"_index":1579,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["shared/src/lib/services/data",{"_index":91,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts",{"_index":1185,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:109",{"_index":1190,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:22",{"_index":1231,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:45",{"_index":1216,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:58",{"_index":1205,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:59",{"_index":1209,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:60",{"_index":1212,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:61",{"_index":1213,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:63",{"_index":1214,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:76",{"_index":1227,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:77",{"_index":1228,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:79",{"_index":1229,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:93",{"_index":1224,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/local",{"_index":1461,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["shared/src/lib/states/call",{"_index":668,"title":{},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharereplay",{"_index":431,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["sharereplay(1",{"_index":445,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["shifing",{"_index":1012,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["shift",{"_index":1850,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shift(dir",{"_index":1878,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shortest",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":280,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["showbutton",{"_index":2124,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showbutton(button",{"_index":2131,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showing",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":697,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["showpopup",{"_index":740,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["shows",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":1682,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sides",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":1641,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["significant",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":2027,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["simplechanges",{"_index":974,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["simplifies",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["simultaneously",{"_index":338,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["single",{"_index":278,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["sites",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":630,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/XYZPositionComponent.html":{}}}],["skin",{"_index":1699,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["slider",{"_index":1611,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":535,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["slider.component",{"_index":1668,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider.component.html",{"_index":1615,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.scss",{"_index":1614,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts",{"_index":1610,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:17",{"_index":1634,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:22",{"_index":1625,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:27",{"_index":1626,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:32",{"_index":1628,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:37",{"_index":1633,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:42",{"_index":1630,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:44",{"_index":1645,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:46",{"_index":1638,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:54",{"_index":1639,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:63",{"_index":1636,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:71",{"_index":1642,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:82",{"_index":1640,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.module.ts",{"_index":1667,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider/ngx",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["slider/opacity",{"_index":1609,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["slightly",{"_index":1480,"title":{},"body":{"injectables/LocalStorageService.html":{},"changelog.html":{}}}],["slow",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1782,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["smaller",{"_index":1916,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["software",{"_index":3022,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["sort",{"_index":1034,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["sort((a",{"_index":1818,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["sort((i1",{"_index":1030,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["source",{"_index":19,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{}}}],["source.pipe",{"_index":1964,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["source.service.ts",{"_index":890,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["source.service.ts:12",{"_index":896,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:13",{"_index":900,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:14",{"_index":897,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:15",{"_index":899,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:16",{"_index":895,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":893,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:18",{"_index":901,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:20",{"_index":904,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":891,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:22",{"_index":898,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:23",{"_index":894,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:24",{"_index":892,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:25",{"_index":903,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:26",{"_index":902,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.ts",{"_index":848,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source.ts:10",{"_index":858,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:101",{"_index":1066,"title":{},"body":{"classes/DelegateDataSource.html":{}}}],["source.ts:11",{"_index":855,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:12",{"_index":857,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:13",{"_index":853,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:14",{"_index":851,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:15",{"_index":859,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:17",{"_index":862,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:18",{"_index":849,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:19",{"_index":856,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:20",{"_index":852,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:21",{"_index":850,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:22",{"_index":861,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:23",{"_index":860,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:38",{"_index":1117,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:42",{"_index":1121,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:46",{"_index":1118,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:50",{"_index":1120,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:54",{"_index":1116,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:58",{"_index":1114,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:62",{"_index":1122,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:66",{"_index":1125,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:70",{"_index":1112,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:74",{"_index":1119,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:78",{"_index":1115,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:82",{"_index":1113,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:86",{"_index":1124,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:9",{"_index":854,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:90",{"_index":1123,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:94",{"_index":1111,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source/api",{"_index":92,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["source/ccf",{"_index":383,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["source/data",{"_index":847,"title":{},"body":{"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source/injector",{"_index":1446,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["sources",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["space",{"_index":1415,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["sparc",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":2384,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":154,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["spatial_search_readme",{"_index":704,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spatialentity",{"_index":103,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["spatialscenenode",{"_index":104,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver",{"_index":223,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver(nodes",{"_index":3003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spatialsearch",{"_index":111,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["spatialsearchlistcomponent",{"_index":539,"title":{"components/SpatialSearchListComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchlistitem",{"_index":1993,"title":{"interfaces/SpatialSearchListItem.html":{}},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"coverage.html":{}}}],["spatialsearchlistmodule",{"_index":2012,"title":{"modules/SpatialSearchListModule.html":{}},"body":{"modules/SpatialSearchListModule.html":{},"modules.html":{},"overview.html":{}}}],["spec",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":3044,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1218,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["specification",{"_index":3043,"title":{},"body":{"index.html":{}}}],["specified",{"_index":658,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["speed",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":1789,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["spinning",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1792,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":1083,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["split.includes('\\n\\n",{"_index":1103,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["split.length",{"_index":1101,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["split.split(newline",{"_index":1107,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["splitbyheadertag",{"_index":1099,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["sprint",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":657,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":958,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackop",{"_index":961,"title":{"interfaces/StackOp.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["stackops",{"_index":1005,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops.shift",{"_index":1015,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops[0].index",{"_index":1013,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stage",{"_index":2240,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["staging",{"_index":2468,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":3024,"title":{},"body":{"index.html":{}}}],["start",{"_index":909,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["started",{"_index":2350,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1008,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["startup",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["startwith",{"_index":304,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["state",{"_index":679,"title":{},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalConfigState.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["state.calltoaction",{"_index":807,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state.expirationdate",{"_index":809,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state.imageurl",{"_index":808,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state.message",{"_index":806,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state.popupshown",{"_index":810,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state.title",{"_index":805,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state[0",{"_index":2061,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statecontext",{"_index":680,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["statement",{"_index":1042,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["statements",{"_index":2820,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":1164,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["states",{"_index":2049,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["states.map(([key",{"_index":2052,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["states/call",{"_index":514,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["stateswithdata",{"_index":2054,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues",{"_index":2051,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues.filter(([_key",{"_index":2055,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["static",{"_index":24,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{}}}],["stay",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1852,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["still",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["stops",{"_index":1892,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["stopscroll",{"_index":1893,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["storage",{"_index":49,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.length",{"_index":1504,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.removeitem(x",{"_index":1488,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service",{"_index":693,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["storage.service.ts",{"_index":1462,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1505,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:41",{"_index":1507,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:50",{"_index":1473,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:60",{"_index":1470,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:70",{"_index":1477,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:83",{"_index":1475,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:90",{"_index":1466,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.setitem(x",{"_index":1487,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/local",{"_index":692,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["store",{"_index":542,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["store.subscribe(root",{"_index":2057,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["stored",{"_index":1527,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["storedebugcomponent",{"_index":541,"title":{"components/StoreDebugComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storedebugmodule",{"_index":2065,"title":{"modules/StoreDebugModule.html":{}},"body":{"modules/StoreDebugModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":2978,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["streaming",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":53,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1069,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["structures",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":467,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":324,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["styling",{"_index":286,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["sub",{"_index":633,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/StoreDebugComponent.html":{}}}],["subclass",{"_index":1194,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["subject",{"_index":117,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicense",{"_index":3088,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2125,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["submit(entry",{"_index":2134,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["subscribe((data",{"_index":1089,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["subscription",{"_index":1297,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":1288,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["substantial",{"_index":3099,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":1421,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["success/failure",{"_index":1479,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["such",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["suffix",{"_index":2097,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["suggestion",{"_index":279,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["suggestions",{"_index":310,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":433,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["support",{"_index":2387,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1680,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules.html":{}}}],["swiper",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":1540,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"changelog.html":{}}}],["switched",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":120,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(config",{"_index":440,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(impl",{"_index":886,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["switchmap(this.getoptions",{"_index":354,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["symbol",{"_index":1233,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["sync",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["sync.service",{"_index":47,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["sync.service.ts",{"_index":1287,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:10",{"_index":1298,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:11",{"_index":1292,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:15",{"_index":1524,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:16",{"_index":1519,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:25",{"_index":1293,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:29",{"_index":1295,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:32",{"_index":1521,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:36",{"_index":1520,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:52",{"_index":1523,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["t",{"_index":138,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":2878,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2877,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1397,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tag.src",{"_index":1399,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tagging",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1085,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["take",{"_index":121,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["take(1",{"_index":235,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["takes",{"_index":948,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["tap",{"_index":122,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["tap(([endpoint",{"_index":236,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["tap(data",{"_index":767,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["target",{"_index":2258,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["target(value",{"_index":2260,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["technologies",{"_index":153,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["technology",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":2202,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{}}}],["temp",{"_index":1651,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["template",{"_index":466,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["templateurl",{"_index":322,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["terms",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":1252,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"changelog.html":{}}}],["testing",{"_index":1202,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["tests",{"_index":1217,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["text",{"_index":316,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["text'},{'name",{"_index":528,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["text.component",{"_index":1065,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.component.html",{"_index":935,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.scss",{"_index":934,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.ts",{"_index":930,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["text.component.ts:124",{"_index":956,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:145",{"_index":981,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:158",{"_index":962,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:173",{"_index":971,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:184",{"_index":968,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:41",{"_index":951,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:46",{"_index":950,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:52",{"_index":944,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:57",{"_index":985,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:64",{"_index":975,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:76",{"_index":952,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.length",{"_index":1023,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.module",{"_index":2114,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["text.module.ts",{"_index":1064,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.slice(lastindex",{"_index":1018,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text/decorated",{"_index":307,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textsearchcomponent",{"_index":328,"title":{"components/TextSearchComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textsearchmodule",{"_index":2098,"title":{"modules/TextSearchModule.html":{}},"body":{"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["theme",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["thick",{"_index":1813,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["this._bounds",{"_index":2262,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._camera",{"_index":2266,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._interactive",{"_index":2275,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._occurencedata",{"_index":1857,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this._rotation",{"_index":2248,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._rotationx",{"_index":2252,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._scene",{"_index":2244,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._target",{"_index":2259,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._zoom",{"_index":2255,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.api.aggregateresults(params",{"_index":214,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.biomarkertermoccurences(params",{"_index":220,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.biomarkertreemodel(params",{"_index":207,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetermoccurences(params",{"_index":218,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetreemodel(params",{"_index":201,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.dbstatus(params",{"_index":191,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytermoccurences(params",{"_index":216,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytreemodel(params",{"_index":199,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.providernames(params",{"_index":194,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorgans(params",{"_index":209,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorganscene(params",{"_index":225,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.scene(params",{"_index":222,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.technologynames(params",{"_index":196,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.tissueblocks(params",{"_index":212,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.bodycanvas",{"_index":2301,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodycanvas.nativeelement",{"_index":2302,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui",{"_index":2277,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.finalize",{"_index":2345,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodeclick$.subscribe((event",{"_index":2336,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodedrag$.subscribe((event",{"_index":2334,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstart$.subscribe((event",{"_index":2338,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstop$.subscribe((event",{"_index":2340,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.scenerotation$.subscribe((rotation",{"_index":2332,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.setscene(this.scene",{"_index":2326,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.settarget(this.target",{"_index":2330,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotation(value",{"_index":2250,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotationx(value",{"_index":2254,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setscene(nodes",{"_index":2246,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.settarget(value",{"_index":2261,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setzoom(value",{"_index":2257,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bounds",{"_index":2327,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.calltoactionclicked.emit",{"_index":605,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["this.camera",{"_index":2320,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.clearsubscriptions",{"_index":2344,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.closeclicked.emit",{"_index":604,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["this.config$.pipe",{"_index":1175,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.connectdatabase(manager",{"_index":442,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.consent",{"_index":844,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.complete",{"_index":843,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(this.consent",{"_index":842,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(value",{"_index":845,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentservice.consent",{"_index":2144,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.consentservice.setconsent(entry",{"_index":2151,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.container",{"_index":2145,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.controller.setvalue(val",{"_index":335,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.value",{"_index":333,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.valuechanges",{"_index":352,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.createdatabase(config",{"_index":441,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.createsegments",{"_index":998,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createstackops(decorations",{"_index":1006,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createworker(config",{"_index":457,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.ctx.patchstate",{"_index":2200,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["this.data.preclose",{"_index":2150,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.database",{"_index":435,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.defaultmaxoptions",{"_index":368,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.dialog.closeall",{"_index":763,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.dialog.open(calltoactionbehaviorcomponent",{"_index":772,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":750,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["this.dialog.opendialogs.length",{"_index":1332,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialogref.close",{"_index":1407,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dismiss",{"_index":2152,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.displayerrors",{"_index":1870,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.documentationcontents",{"_index":1395,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dorequest",{"_index":198,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.dorequest(params",{"_index":190,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.el.nativeelement.value",{"_index":1598,"title":{},"body":{"directives/NumberDirective.html":{}}}],["this.findglobalobject",{"_index":1236,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["this.forwardcall('getaggregateresults",{"_index":877,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getbiomarkertermoccurences",{"_index":880,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getbiomarkertreemodel",{"_index":874,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetermoccurences",{"_index":879,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetreemodel",{"_index":873,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatabasestatus",{"_index":869,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatasettechnologynames",{"_index":871,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytermoccurences",{"_index":878,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytreemodel",{"_index":872,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getprovidernames",{"_index":870,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorgans",{"_index":875,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorganscene",{"_index":882,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getscene",{"_index":881,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('gettissueblockresults",{"_index":876,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.ga.event('close",{"_index":782,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.ga.event('open",{"_index":775,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.ga.event('open_learn_more",{"_index":764,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.getdialogdata().pipe",{"_index":766,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.getnormalizeddecorations",{"_index":1002,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.getpathkey(path",{"_index":1177,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.http.get(spatial_search_readme",{"_index":744,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.http.get(url",{"_index":1088,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["this.impl",{"_index":434,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.impl$.pipe",{"_index":885,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.infobuttonservice.updatedata(this.documentationurl",{"_index":1340,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.infoservice.parsemarkdown(data",{"_index":747,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.infotitle",{"_index":1342,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.initialized.emit",{"_index":2342,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.interactive",{"_index":2319,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.itemremoved.emit(item",{"_index":2003,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["this.items",{"_index":1996,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["this.launchinfodialog(data",{"_index":1331,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.launchlearnmore(data",{"_index":768,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.makeundecoratedsegment(text",{"_index":1001,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.multiselect",{"_index":1906,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.nodeclick.emit(event",{"_index":2337,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodedrag.emit(event",{"_index":2335,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstart.emit(event",{"_index":2339,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstop.emit(event",{"_index":2341,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.onleft",{"_index":1881,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.onright",{"_index":1882,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.opacity",{"_index":1648,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacitychange.emit(this.opacity",{"_index":1650,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacityreset.emit",{"_index":1653,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.optioncache.get(key",{"_index":1179,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.has(key",{"_index":1178,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.set(key",{"_index":1182,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.organlist.length",{"_index":1919,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.organschanged.emit(this.selectedorgans",{"_index":1912,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.panelcontent.next(panelcontent",{"_index":1091,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["this.parsemarkdown(data",{"_index":1090,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["this.patchstate(config",{"_index":1174,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.prevopacity",{"_index":1647,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.recreatebodyui",{"_index":2278,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.root",{"_index":2058,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.rotationchange.next(rotation",{"_index":2333,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.saveconsent(consent",{"_index":1536,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.scene?.length",{"_index":2325,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.segments",{"_index":997,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.selectedorgans",{"_index":1907,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.concat([organ",{"_index":1911,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.filter((selectedorgan",{"_index":1909,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.includes(organ",{"_index":1908,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.length",{"_index":1871,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectionchanged.emit(selecteditems",{"_index":2001,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["this.selecttoken(config",{"_index":1457,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["this.sensor",{"_index":1862,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.sensor.detach",{"_index":1866,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.set",{"_index":1864,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setconsent('not",{"_index":846,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.setleftright(val",{"_index":1885,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setstate(config",{"_index":1173,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.setupbodyui",{"_index":2298,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.shift(dir",{"_index":1890,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.state$.pipe(filternulls",{"_index":1172,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.step",{"_index":1883,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.storage",{"_index":1531,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage.getitem(popup_shown_storage_key",{"_index":737,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.storage.setitem(popup_shown_storage_key",{"_index":776,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.storage?.getitem?.(this.key",{"_index":1538,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.setitem?.(this.key",{"_index":1543,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions",{"_index":2331,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.add",{"_index":1534,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions.add(consentservice.consentchange.subscribe",{"_index":1305,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.subscriptions.add(infobuttonservice.panelcontent.subscribe(data",{"_index":1329,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.subscriptions.add(sub",{"_index":2060,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":2347,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.unsubscribe",{"_index":1307,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{}}}],["this.target",{"_index":2329,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.timeouthandler",{"_index":1888,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.togglegoogleanalytics(consent",{"_index":1306,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.token",{"_index":1304,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.updatestack(stack",{"_index":1014,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.valuechange",{"_index":360,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.videoid",{"_index":1341,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.visibilitytoggle.emit",{"_index":1652,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.visible",{"_index":1646,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.window",{"_index":1308,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.window[`ga",{"_index":1309,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.zoom",{"_index":2312,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(this.bounds",{"_index":2328,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(value",{"_index":2264,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["throttletime",{"_index":1549,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["throttletime(1000",{"_index":1564,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["through",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":1243,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["thumbnails",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["thymus",{"_index":1795,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tied",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":312,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["timeouthandler",{"_index":1847,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["timeouts",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["tissueblockresult",{"_index":105,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["tissues",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["title",{"_index":490,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{}}}],["title(state",{"_index":801,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["tmc",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["toattributes",{"_index":74,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["toattributes(obj",{"_index":61,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["today",{"_index":728,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["toggle",{"_index":1643,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["togglegoogleanalytics",{"_index":1289,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglegoogleanalytics(disabled",{"_index":1294,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglevisibility",{"_index":1619,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["token",{"_index":141,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["tonsil",{"_index":1761,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":645,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["tort",{"_index":3116,"title":{},"body":{"license.html":{}}}],["trachea",{"_index":1798,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tracker.module.ts",{"_index":1546,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tracking",{"_index":546,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"components/XYZPositionComponent.html":{}}}],["tracking/telemetry",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["trackingcode",{"_index":1303,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["trackingpopupcomponent",{"_index":545,"title":{"components/TrackingPopupComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trackingpopupmodule",{"_index":2179,"title":{"modules/TrackingPopupModule.html":{}},"body":{"modules/TrackingPopupModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingstate",{"_index":2185,"title":{"injectables/TrackingState.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackingstatemodel",{"_index":2191,"title":{"interfaces/TrackingStateModel.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackmouseposition",{"_index":2837,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["trackmouseposition((document",{"_index":1577,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["trackmouseposition(el",{"_index":1550,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["transformmatrix",{"_index":177,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["transition",{"_index":623,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["transparency",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":203,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["true",{"_index":78,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1267,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"changelog.html":{}}}],["ts",{"_index":125,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["tslib",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1716,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":1047,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["turned",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":32,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type='[calltoaction",{"_index":824,"title":{},"body":{"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}}}],["typealiases",{"_index":3125,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1570,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["typeerror",{"_index":1244,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["typeof",{"_index":1234,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PluckUniqueOptions.html":{}}}],["types",{"_index":1575,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["typescript",{"_index":1278,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":1901,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["u",{"_index":139,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uberon",{"_index":1684,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ufl",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["ufxmpzatowe",{"_index":757,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ui",{"_index":2237,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ui'},{'name",{"_index":523,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["ui.component",{"_index":381,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":2241,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.scss",{"_index":2242,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.ts",{"_index":2233,"title":{},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui.module.ts",{"_index":377,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.netlify.app",{"_index":3027,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":3037,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":3034,"title":{},"body":{"index.html":{}}}],["ui/body",{"_index":376,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui/organ",{"_index":3036,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":3035,"title":{},"body":{"index.html":{}}}],["uis",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["ul",{"_index":1425,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["undefined",{"_index":80,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageService.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":588,"title":{},"body":{"components/CallToActionComponent.html":{},"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":2156,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unique",{"_index":287,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["unique.ts",{"_index":1940,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["university",{"_index":3063,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":166,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["unless",{"_index":1258,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["unnecessary",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":2147,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unselect",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["unsetconsent",{"_index":830,"title":{},"body":{"injectables/ConsentService.html":{}}}],["unsubscribable",{"_index":429,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["unsubscribe",{"_index":453,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/InfoButtonComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["until",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["untypedformcontrol",{"_index":297,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["unused",{"_index":1987,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["up",{"_index":2035,"title":{},"body":{"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["update",{"_index":1086,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["updated",{"_index":1629,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["updatedata",{"_index":1356,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["updatedata(url",{"_index":1087,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["updateitemselection",{"_index":1974,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["updateitemselection(index",{"_index":1990,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["updates",{"_index":1328,"title":{},"body":{"components/InfoButtonComponent.html":{},"directives/NumberDirective.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["updatestack",{"_index":943,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["updatestack(stack",{"_index":979,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["upgraded",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["ureter",{"_index":1801,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["urinary",{"_index":1806,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1361,"title":{},"body":{"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{}}}],["us/docs/web/api/web_storage_api/using_the_web_storage_api",{"_index":1483,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["usage",{"_index":2154,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["usage.ipynb",{"_index":3050,"title":{},"body":{"index.html":{}}}],["use",{"_index":2372,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usecase",{"_index":3055,"title":{},"body":{"index.html":{}}}],["usecase.ipynb",{"_index":3052,"title":{},"body":{"index.html":{}}}],["used",{"_index":923,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":79,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["useful",{"_index":1200,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["user",{"_index":710,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"changelog.html":{},"index.html":{}}}],["user/os",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":430,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["uterus",{"_index":1810,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["utility",{"_index":164,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uuid",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":2471,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["v2",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["v2.1.0",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1879,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["valid",{"_index":964,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["value",{"_index":66,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":334,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["value.tolowercase",{"_index":2196,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["valuechange",{"_index":346,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["values",{"_index":73,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/XYZPositionComponent.html":{},"miscellaneous/functions.html":{}}}],["values.length",{"_index":2056,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["var",{"_index":521,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["variable",{"_index":1428,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3131,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1815,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2492,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["vertical",{"_index":632,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{}}}],["very",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":1393,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["videoid",{"_index":756,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{}}}],["view",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":1691,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["viewchild('bodycanvas",{"_index":2292,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["viewchild('carouselcontainer",{"_index":1829,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemcontainer",{"_index":1833,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemlist",{"_index":1831,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewed",{"_index":1826,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewer",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":1644,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visibilitytoggle",{"_index":1623,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visible",{"_index":1620,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["visual",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":599,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["vs",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["walkthrough",{"_index":3051,"title":{},"body":{"index.html":{}}}],["warming",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":3103,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3101,"title":{},"body":{"license.html":{}}}],["web",{"_index":1266,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["webcomponent",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":3023,"title":{},"body":{"index.html":{}}}],["week",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":1423,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/XYZPositionComponent.html":{}}}],["well",{"_index":1953,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":583,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"license.html":{}}}],["white",{"_index":666,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["whole",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":637,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["window",{"_index":1264,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/XYZTriplet.html":{}}}],["window.devicepixelratio",{"_index":2304,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["window.localstorage",{"_index":1484,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["within",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":972,"title":{},"body":{"components/DecoratedTextComponent.html":{},"changelog.html":{},"license.html":{}}}],["worker",{"_index":456,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["worker.terminate",{"_index":460,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["workerccfdatabasedatasourceservice",{"_index":454,"title":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["workflows",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":427,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrap(worker",{"_index":458,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrapper",{"_index":620,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["writable",{"_index":1239,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["x",{"_index":1485,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["xyz",{"_index":549,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{}}}],["xyzpositioncomponent",{"_index":548,"title":{"components/XYZPositionComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"coverage.html":{},"overview.html":{}}}],["xyzpositionmodule",{"_index":2226,"title":{"modules/XYZPositionModule.html":{}},"body":{"modules/XYZPositionModule.html":{},"modules.html":{},"overview.html":{}}}],["xyztriplet",{"_index":2232,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["y",{"_index":2212,"title":{},"body":{"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["yes",{"_index":255,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":1384,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["youtubeplayermodule",{"_index":1442,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["z",{"_index":2173,"title":{},"body":{"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["zero",{"_index":1009,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["zone.js",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":15,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"overview.html":{}}}],["zoom(value",{"_index":2256,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["zoomtobounds(bounds",{"_index":2299,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsentService\n                        \n                        \n                            GoogleAnalyticsSyncService\n                        \n                        \n                            LocalStorageSyncService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: AnalyticsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/analytics.module.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AnalyticsOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyticsOptions.html":{"url":"interfaces/AnalyticsOptions.html","title":"interface - AnalyticsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyticsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            appName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            developmentMode\n                                        \n                                \n                                \n                                        \n                                            gaToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        developmentMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        developmentMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gaToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gaToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiEndpointDataSourceOptions.html":{"url":"interfaces/ApiEndpointDataSourceOptions.html","title":"interface - ApiEndpointDataSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiEndpointDataSourceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hubmapToken\n                                        \n                                \n                                \n                                        \n                                            remoteApiEndpoint\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remoteApiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteApiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, OntologyTreeNode, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, of, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  /**\n   * Get the biomarker type tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getBiomarkerTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.biomarkerTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getBiomarkerTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.biomarkerTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiEndpointDataSourceService.html":{"url":"injectables/ApiEndpointDataSourceService.html","title":"injectable - ApiEndpointDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiEndpointDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    \n                                getAggregateResults\n                            \n                            \n                                    \n                                getBiomarkerTermOccurences\n                            \n                            \n                                    \n                                getBiomarkerTreeModel\n                            \n                            \n                                    \n                                getCellTypeTermOccurences\n                            \n                            \n                                    \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                    \n                                getDatasetTechnologyNames\n                            \n                            \n                                    \n                                getOntologyTermOccurences\n                            \n                            \n                                    \n                                getOntologyTreeModel\n                            \n                            \n                                    \n                                getProviderNames\n                            \n                            \n                                    \n                                getReferenceOrgans\n                            \n                            \n                                    \n                                getReferenceOrganScene\n                            \n                            \n                                    \n                                getScene\n                            \n                            \n                                    \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DefaultService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DefaultService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter?: Filter | undefined, params?: P)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:211\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params: P | undefined, reviver: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:216\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                        U\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params?: P, reviver?: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:222\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getBiomarkerTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBiomarkerTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getBiomarkerTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBiomarkerTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:140\n                \n            \n\n\n            \n                \n                    Get the biomarker type tree model.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        An observable emitting the results.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatasetTechnologyNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProviderNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueBlockResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, OntologyTreeNode, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, of, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  /**\n   * Get the biomarker type tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getBiomarkerTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.biomarkerTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getBiomarkerTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.biomarkerTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoCompleteOption.html":{"url":"interfaces/AutoCompleteOption.html","title":"interface - AutoCompleteOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoCompleteOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A single suggestion to show in autocomplete\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            decorations\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decorations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decorations:         Partial[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional styling of the label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A unique id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The displayed label\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { lastValueFrom, from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new UntypedFormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceBaseService.html":{"url":"injectables/CCFDatabaseDataSourceBaseService.html","title":"injectable - CCFDatabaseDataSourceBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getBiomarkerTermOccurences\n                            \n                            \n                                getBiomarkerTreeModel\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:103\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTreeModel\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceService.html":{"url":"injectables/CCFDatabaseDataSourceService.html","title":"injectable - CCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getBiomarkerTermOccurences\n                            \n                            \n                                getBiomarkerTreeModel\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:103\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTreeModel\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseManager.html":{"url":"interfaces/CCFDatabaseManager.html","title":"interface - CCFDatabaseManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CCFDatabaseManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Unsubscribable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     CCFDatabase | Remote\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CCFDatabase | Remote\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CallToActionBehaviorComponent.html":{"url":"components/CallToActionBehaviorComponent.html","title":"component - CallToActionBehaviorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CallToActionBehaviorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts\n\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-call-to-action-behavior\n            \n\n\n\n            \n                styleUrls\n                ./call-to-action-behavior.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./call-to-action-behavior.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                callToAction$\n                            \n                            \n                                    \n                                    Readonly\n                                close\n                            \n                            \n                                    \n                                    Readonly\n                                imageUrl$\n                            \n                            \n                                    \n                                    Readonly\n                                learnMore\n                            \n                            \n                                    \n                                    Readonly\n                                message$\n                            \n                            \n                                    \n                                    Readonly\n                                title$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        callToAction$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(CallToActionSelectors.callToAction)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        close\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Dispatch()\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:37\n                        \n                    \n\n            \n                \n                    Closes dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        imageUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(CallToActionSelectors.imageUrl)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        learnMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Dispatch()\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:44\n                        \n                    \n\n            \n                \n                    Sends learn more open action\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        message$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(CallToActionSelectors.message)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        title$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(CallToActionSelectors.title)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs/internal/Observable';\n\nimport { CloseDialog, LearnMore } from '../../states/call-to-action/call-to-action.actions';\nimport { CallToActionSelectors } from '../../states/call-to-action/call-to-action.selectors';\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-call-to-action-behavior',\n  templateUrl: './call-to-action-behavior.component.html',\n  styleUrls: ['./call-to-action-behavior.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CallToActionBehaviorComponent {\n  @Select(CallToActionSelectors.title)\n  readonly title$: Observable;\n\n  @Select(CallToActionSelectors.message)\n  readonly message$: Observable;\n\n  @Select(CallToActionSelectors.callToAction)\n  readonly callToAction$: Observable;\n\n  @Select(CallToActionSelectors.imageUrl)\n  readonly imageUrl$: Observable;\n\n\n\n  /**\n   * Closes dialog\n   */\n  @Dispatch()\n  readonly close = (): CloseDialog => new CloseDialog();\n\n  /**\n   * Sends learn more open action\n   * @returns LearnMore action\n   */\n  @Dispatch()\n  readonly learnMore = (): LearnMore => new LearnMore();\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./call-to-action-behavior.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'CallToActionBehaviorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CallToActionBehaviorModule.html":{"url":"modules/CallToActionBehaviorModule.html","title":"module - CallToActionBehaviorModule","body":"\n                   \n\n\n\n\n    Modules\n    CallToActionBehaviorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CallToActionBehaviorModule\n\n\n\ncluster_CallToActionBehaviorModule_imports\n\n\n\ncluster_CallToActionBehaviorModule_exports\n\n\n\ncluster_CallToActionBehaviorModule_declarations\n\n\n\n\nCallToActionBehaviorComponent\n\nCallToActionBehaviorComponent\n\n\n\nCallToActionBehaviorModule\n\nCallToActionBehaviorModule\n\nCallToActionBehaviorModule -->\n\nCallToActionBehaviorComponent->CallToActionBehaviorModule\n\n\n\n\n\nCallToActionBehaviorComponent \n\nCallToActionBehaviorComponent \n\nCallToActionBehaviorComponent  -->\n\nCallToActionBehaviorModule->CallToActionBehaviorComponent \n\n\n\n\n\nCallToActionModule\n\nCallToActionModule\n\nCallToActionBehaviorModule -->\n\nCallToActionModule->CallToActionBehaviorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CallToActionBehaviorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CallToActionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CallToActionBehaviorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { CallToActionModule } from '../call-to-action/call-to-action.module';\nimport { CallToActionBehaviorComponent } from './call-to-action-behavior.component';\n\n@NgModule({\n  declarations: [CallToActionBehaviorComponent],\n  imports: [CommonModule, NgxsModule, MatIconModule, MatDialogModule, MatCardModule, CallToActionModule],\n  exports: [CallToActionBehaviorComponent]\n})\nexport class CallToActionBehaviorModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CallToActionComponent.html":{"url":"components/CallToActionComponent.html","title":"component - CallToActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CallToActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts\n\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-call-to-action\n            \n\n\n\n            \n                styleUrls\n                ./call-to-action.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./call-to-action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callToAction\n                            \n                            \n                                imageUrl\n                            \n                            \n                                infoTitle\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                callToActionClicked\n                            \n                            \n                                closeClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callToAction\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:33\n                            \n                        \n                \n                    \n                        Label for the button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        imageUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:23\n                            \n                        \n                \n                    \n                        Whether the information is for the RUI or EUI\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        infoTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:18\n                            \n                        \n                \n                    \n                        Title of the info dialog\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:28\n                            \n                        \n                \n                    \n                        Message to be displayed under image\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        callToActionClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:39\n                            \n                        \n                \n                    \n                         Emmitter for component to pass info to parent\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        closeClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:45\n                            \n                        \n                \n                    \n                         Emmitter for component to pass info to parent\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-call-to-action\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-call-to-action'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:14\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:53\n                \n            \n\n\n            \n                \n                    Function to handle the close button click action\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDialogButtonClick\n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:61\n                \n            \n\n\n            \n                \n                    Detects button click and reads markdown function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-call-to-action'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:14\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-call-to-action',\n  templateUrl: './call-to-action.component.html',\n  styleUrls: ['./call-to-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CallToActionComponent {\n  /**HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-call-to-action';\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle: string;\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() imageUrl: string;\n\n  /**\n   * Message to be displayed under image\n   */\n  @Input() message: string;\n\n  /**\n   * Label for the button\n   */\n  @Input() callToAction: string;\n\n\n  /**\n  *  Emmitter for component to pass info to parent\n  * */\n  @Output() readonly callToActionClicked = new EventEmitter();\n\n\n  /**\n  *  Emmitter for component to pass info to parent\n  * */\n  @Output() readonly closeClicked = new EventEmitter();\n\n\n\n\n  /**\n   * Function to handle the close button click action\n   */\n  close(): void {\n    this.closeClicked.emit();\n  }\n\n\n  /**\n   * Detects button click and reads markdown function\n   */\n  onDialogButtonClick(): void {\n    this.callToActionClicked.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{infoTitle}}\n        clear\n      \n      \n\n      \n         {{message}}\n         \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./call-to-action.component.scss\n                \n                :host{\n  .content{\n    display: block;\n    align-content: center;\n    padding-left: 1.6rem;\n    padding-right: 1.6rem;\n    border-radius: .25rem;\n  }\n\n  .info-button-wrapper {\n    border-radius: 0.25rem;\n    padding: 0.60rem;\n    transition: 0.6s;\n\n    .ccf-info-button {\n      cursor: pointer;\n      transition: color .6s;\n      font-size: 1.2rem;\n      vertical-align: sub;\n    }\n  }\n\n  .first-row {\n    display: flex;\n    width: 100%;\n    line-height: .9rem;\n    .title {\n      padding-right: 7.0rem;\n      padding-left: .2rem;\n      font-size: .875rem;\n      padding-top: .75rem;\n    }\n\n    .cta-mat-icon {\n      height: 30%;\n      line-height: 3.4rem;\n    }\n\n  }\n\n  .message{\n    padding: .5rem;\n  }\n\n  .cta-image {\n    align-self: center;\n    object-fit: cover; /*this makes the image in src fit to the size specified below*/\n    width: 100%;\n    border-radius: .25rem;\n  }\n\n  .mat-button {\n    background-color: #444A65;\n    font-size: .75rem;\n    position: relative;\n    margin-bottom: 1rem;\n    width: 100%;\n    height: 2rem;\n  \n    color: white;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{infoTitle}}        clear                           {{message}}                     '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'CallToActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CallToActionModel.html":{"url":"interfaces/CallToActionModel.html","title":"interface - CallToActionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CallToActionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to hold the necessary parts of the CTA dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callToAction\n                                        \n                                \n                                \n                                        \n                                            expirationDate\n                                        \n                                \n                                \n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            popupShown\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callToAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callToAction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expirationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popupShown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        popupShown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Action, NgxsOnInit, State, StateContext } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { CallToActionBehaviorComponent } from '../../components/call-to-action-behavior/call-to-action-behavior.component';\nimport { DocumentationContent, InfoButtonService } from '../../components/info/info-button/info-button.service';\nimport { InfoDialogComponent } from '../../components/info/info-dialog/info-dialog.component';\nimport { LocalStorageService } from '../../services/local-storage/local-storage.service';\nimport { CloseDialog, LearnMore, OpenDialog } from './call-to-action.actions';\n\n/**\n * Interface to hold the necessary parts of the CTA dialog\n */\nexport interface CallToActionModel {\n  title: string;\n  message: string;\n  callToAction: string;\n  imageUrl: string;\n  expirationDate: string;\n  popupShown: boolean;\n\n}\n\n/**\n * Key for boolean determining if poup has been shown\n */\nconst POPUP_SHOWN_STORAGE_KEY = 'callToActionPopupShown';\n\n/**\n * Path to readme markup doc\n */\nconst SPATIAL_SEARCH_README = 'assets/docs/SPATIAL_SEARCH_README.md';\n\n/**\n * Sets the necessary defaults for the dialog box\n */\n@State({\n  name: 'callToAction',\n  defaults: {\n    title: 'New to the Exploration User Interface',\n    message: 'Spatial Search has arrived!',\n    callToAction: 'Learn More',\n    imageUrl: 'assets/images/spatial_search.gif',\n    expirationDate: 'Dec 1, 2022',\n    popupShown: false\n  }\n})\n\n\n/**\n * State that controls the data and behavior for the CallToAction Component\n */\n@Injectable()\nexport class CallToActionState implements NgxsOnInit {\n  /**\n   * Function that determines if expiration date has passed\n   * @param expirationDate\n   * @param now\n   * @returns boolean defining whether or not info popup has expiered\n   */\n  static ctaDatePassed(expirationDate: string, now = Date.now): boolean {\n    const today = now();\n    const expire = new Date(expirationDate);\n\n    return +today > +expire;\n  }\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly ga: GoogleAnalyticsService,\n    private readonly storage: LocalStorageService,\n    private readonly infoService: InfoButtonService,\n    private readonly http: HttpClient\n  ) { }\n\n\n  ngxsOnInit(ctx: StateContext): void {\n    const { expirationDate, popupShown } = ctx.getState();\n    const popupShownStr = this.storage.getItem(POPUP_SHOWN_STORAGE_KEY, `${popupShown}`);\n    const pastExpiration = CallToActionState.ctaDatePassed(expirationDate);\n    const showPopup = popupShownStr !== 'true' && !pastExpiration;\n    if (showPopup) {\n      ctx.dispatch(new OpenDialog());\n    }\n  }\n\n  /**\n   * Returns observable containting info from the markup\n   */\n  private getDialogData(): Observable{\n    return this.http.get(SPATIAL_SEARCH_README, { responseType: 'text' }).pipe(map(data =>\n      this.infoService.parseMarkdown(data)\n    ));\n  }\n\n  /**\n   * Opens Learn more dialog\n   */\n  launchLearnMore(content: DocumentationContent[]): void{\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '72rem',\n      data: {\n        title: 'Spatial Search',\n        content: content,\n        videoID: 'UfxMpzatowE'\n      }\n    });\n  }\n\n  /**\n   * Handles click event box\n   * @param _ctx\n   */\n  @Action(LearnMore)\n  learnMore(_ctx: StateContext): Observable {\n    this.dialog.closeAll();\n    this.ga.event('open_learn_more', 'call_to_action');\n\n    return this.getDialogData().pipe(\n      tap(data => this.launchLearnMore(data))\n    );\n  }\n\n  /**\n   * Opens dialog box\n   * @param ctx\n   */\n  @Action(OpenDialog)\n  open(ctx: StateContext): void {\n    this.dialog.open(CallToActionBehaviorComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '30.75rem',\n      height: '36.688rem'\n    });\n\n    this.ga.event('open', 'call_to_action');\n    this.storage.setItem(POPUP_SHOWN_STORAGE_KEY, 'true');\n    ctx.patchState({ popupShown: true });\n  }\n\n  /**\n   * closes all dialog boxes\n   * @param _ctxs;\n   */\n  @Action(CloseDialog)\n  close(_ctx: StateContext): void {\n    this.dialog.closeAll();\n    this.ga.event('close', 'call_to_action');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CallToActionModule.html":{"url":"modules/CallToActionModule.html","title":"module - CallToActionModule","body":"\n                   \n\n\n\n\n    Modules\n    CallToActionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CallToActionModule\n\n\n\ncluster_CallToActionModule_exports\n\n\n\ncluster_CallToActionModule_declarations\n\n\n\n\nCallToActionComponent\n\nCallToActionComponent\n\n\n\nCallToActionModule\n\nCallToActionModule\n\nCallToActionModule -->\n\nCallToActionComponent->CallToActionModule\n\n\n\n\n\nCallToActionComponent \n\nCallToActionComponent \n\nCallToActionComponent  -->\n\nCallToActionModule->CallToActionComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/call-to-action/call-to-action.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CallToActionComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CallToActionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { CallToActionComponent } from './call-to-action.component';\n\n@NgModule({\n  declarations: [CallToActionComponent],\n  imports: [CommonModule, MatIconModule, MatDialogModule, MatCardModule],\n  exports: [CallToActionComponent]\n})\nexport class CallToActionModule { }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CallToActionSelectors.html":{"url":"classes/CallToActionSelectors.html","title":"class - CallToActionSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CallToActionSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Static\n                                callToAction\n                            \n                            \n                                    \n                                    Static\n                                expirationDate\n                            \n                            \n                                    \n                                    Static\n                                imageUrl\n                            \n                            \n                                    \n                                    Static\n                                message\n                            \n                            \n                                    \n                                    Static\n                                popupShown\n                            \n                            \n                                    \n                                    Static\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Static\n                        callToAction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callToAction(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Static\n                        expirationDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    expirationDate(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Static\n                        imageUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    imageUrl(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Static\n                        message\n                        \n                    \n                \n            \n            \n                \n                    \n                    message(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Static\n                        popupShown\n                        \n                    \n                \n            \n            \n                \n                    \n                    popupShown(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Static\n                        title\n                        \n                    \n                \n            \n            \n                \n                    \n                    title(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\n\nimport { CallToActionModel, CallToActionState } from './call-to-action.state';\n\nexport class CallToActionSelectors {\n  @Selector([CallToActionState])\n  static title(state: CallToActionModel): string {\n    return state.title;\n  }\n\n  @Selector([CallToActionState])\n  static message(state: CallToActionModel): string {\n    return state.message;\n  }\n\n  @Selector([CallToActionState])\n  static callToAction(state: CallToActionModel): string {\n    return state.callToAction;\n  }\n\n  @Selector([CallToActionState])\n  static imageUrl(state: CallToActionModel): string {\n    return state.imageUrl;\n  }\n\n  @Selector([CallToActionState])\n  static expirationDate(state: CallToActionModel): string {\n    return state.expirationDate;\n  }\n\n  @Selector([CallToActionState])\n  static popupShown(state: CallToActionModel): boolean {\n    return state.popupShown;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CallToActionState.html":{"url":"injectables/CallToActionState.html","title":"injectable - CallToActionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CallToActionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the necessary defaults for the dialog box\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                close\n                            \n                            \n                                    Static\n                                ctaDatePassed\n                            \n                            \n                                    Private\n                                getDialogData\n                            \n                            \n                                launchLearnMore\n                            \n                            \n                                    \n                                learnMore\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                    \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ga: GoogleAnalyticsService, storage: LocalStorageService, infoService: InfoButtonService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        infoService\n                                                  \n                                                        \n                                                                        InfoButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(_ctx: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(CloseDialog)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:153\n                \n            \n\n\n            \n                \n                    closes all dialog boxes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ctaDatePassed\n                        \n                    \n                \n            \n            \n                \n                    \n                    ctaDatePassed(expirationDate: string, now)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:65\n                \n            \n\n\n            \n                \n                    Function that determines if expiration date has passed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    expirationDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    now\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Date.now\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean defining whether or not info popup has expiered\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDialogData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDialogData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:94\n                \n            \n\n\n            \n                \n                    Returns observable containting info from the markup\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        launchLearnMore\n                        \n                    \n                \n            \n            \n                \nlaunchLearnMore(content: DocumentationContent[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:103\n                \n            \n\n\n            \n                \n                    Opens Learn more dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                DocumentationContent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        learnMore\n                        \n                    \n                \n            \n            \n                \n                    \n                    learnMore(_ctx: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LearnMore)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:121\n                \n            \n\n\n            \n                \n                    Handles click event box\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: StateContext)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        open\n                        \n                    \n                \n            \n            \n                \n                    \n                    open(ctx: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(OpenDialog)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:135\n                \n            \n\n\n            \n                \n                    Opens dialog box\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Action, NgxsOnInit, State, StateContext } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { CallToActionBehaviorComponent } from '../../components/call-to-action-behavior/call-to-action-behavior.component';\nimport { DocumentationContent, InfoButtonService } from '../../components/info/info-button/info-button.service';\nimport { InfoDialogComponent } from '../../components/info/info-dialog/info-dialog.component';\nimport { LocalStorageService } from '../../services/local-storage/local-storage.service';\nimport { CloseDialog, LearnMore, OpenDialog } from './call-to-action.actions';\n\n/**\n * Interface to hold the necessary parts of the CTA dialog\n */\nexport interface CallToActionModel {\n  title: string;\n  message: string;\n  callToAction: string;\n  imageUrl: string;\n  expirationDate: string;\n  popupShown: boolean;\n\n}\n\n/**\n * Key for boolean determining if poup has been shown\n */\nconst POPUP_SHOWN_STORAGE_KEY = 'callToActionPopupShown';\n\n/**\n * Path to readme markup doc\n */\nconst SPATIAL_SEARCH_README = 'assets/docs/SPATIAL_SEARCH_README.md';\n\n/**\n * Sets the necessary defaults for the dialog box\n */\n@State({\n  name: 'callToAction',\n  defaults: {\n    title: 'New to the Exploration User Interface',\n    message: 'Spatial Search has arrived!',\n    callToAction: 'Learn More',\n    imageUrl: 'assets/images/spatial_search.gif',\n    expirationDate: 'Dec 1, 2022',\n    popupShown: false\n  }\n})\n\n\n/**\n * State that controls the data and behavior for the CallToAction Component\n */\n@Injectable()\nexport class CallToActionState implements NgxsOnInit {\n  /**\n   * Function that determines if expiration date has passed\n   * @param expirationDate\n   * @param now\n   * @returns boolean defining whether or not info popup has expiered\n   */\n  static ctaDatePassed(expirationDate: string, now = Date.now): boolean {\n    const today = now();\n    const expire = new Date(expirationDate);\n\n    return +today > +expire;\n  }\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly ga: GoogleAnalyticsService,\n    private readonly storage: LocalStorageService,\n    private readonly infoService: InfoButtonService,\n    private readonly http: HttpClient\n  ) { }\n\n\n  ngxsOnInit(ctx: StateContext): void {\n    const { expirationDate, popupShown } = ctx.getState();\n    const popupShownStr = this.storage.getItem(POPUP_SHOWN_STORAGE_KEY, `${popupShown}`);\n    const pastExpiration = CallToActionState.ctaDatePassed(expirationDate);\n    const showPopup = popupShownStr !== 'true' && !pastExpiration;\n    if (showPopup) {\n      ctx.dispatch(new OpenDialog());\n    }\n  }\n\n  /**\n   * Returns observable containting info from the markup\n   */\n  private getDialogData(): Observable{\n    return this.http.get(SPATIAL_SEARCH_README, { responseType: 'text' }).pipe(map(data =>\n      this.infoService.parseMarkdown(data)\n    ));\n  }\n\n  /**\n   * Opens Learn more dialog\n   */\n  launchLearnMore(content: DocumentationContent[]): void{\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '72rem',\n      data: {\n        title: 'Spatial Search',\n        content: content,\n        videoID: 'UfxMpzatowE'\n      }\n    });\n  }\n\n  /**\n   * Handles click event box\n   * @param _ctx\n   */\n  @Action(LearnMore)\n  learnMore(_ctx: StateContext): Observable {\n    this.dialog.closeAll();\n    this.ga.event('open_learn_more', 'call_to_action');\n\n    return this.getDialogData().pipe(\n      tap(data => this.launchLearnMore(data))\n    );\n  }\n\n  /**\n   * Opens dialog box\n   * @param ctx\n   */\n  @Action(OpenDialog)\n  open(ctx: StateContext): void {\n    this.dialog.open(CallToActionBehaviorComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '30.75rem',\n      height: '36.688rem'\n    });\n\n    this.ga.event('open', 'call_to_action');\n    this.storage.setItem(POPUP_SHOWN_STORAGE_KEY, 'true');\n    ctx.patchState({ popupShown: true });\n  }\n\n  /**\n   * closes all dialog boxes\n   * @param _ctxs;\n   */\n  @Action(CloseDialog)\n  close(_ctx: StateContext): void {\n    this.dialog.closeAll();\n    this.ga.event('close', 'call_to_action');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseDialog.html":{"url":"classes/CloseDialog.html","title":"class - CloseDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CallToAction] Close Dialog'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LearnMore {\n  static readonly type='[CallToAction] Learn More';\n}\n\nexport class OpenDialog {\n  static readonly type='[CallToAction] Open Dialog';\n}\n\nexport class CloseDialog {\n  static readonly type='[CallToAction] Close Dialog';\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentService.html":{"url":"injectables/ConsentService.html","title":"injectable - ConsentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/consent.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consent\n                            \n                            \n                                    Readonly\n                                consentChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                setConsent\n                            \n                            \n                                unsetConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsent\n                        \n                    \n                \n            \n            \n                \nsetConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetConsent\n                        \n                    \n                \n            \n            \n                \nunsetConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consent\n\n                    \n                \n                \n                    \n                        Default value : 'not-set'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        consentChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n\nexport type Consent = 'not-set' | 'given' | 'rescinded';\n\n\n@Injectable()\nexport class ConsentService implements OnDestroy {\n  consent: Consent = 'not-set';\n\n  readonly consentChange = new ReplaySubject(1);\n\n  constructor() {\n    this.consentChange.next(this.consent);\n  }\n\n  ngOnDestroy(): void {\n    this.consentChange.complete();\n  }\n\n  setConsent(value: Consent): void {\n    if (this.consent !== value) {\n      this.consent = value;\n      this.consentChange.next(value);\n    }\n  }\n\n  unsetConsent(): void {\n    this.setConsent('not-set');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAggregateResults\n                                    \n                                \n                                \n                                    \n                                        getBiomarkerTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getBiomarkerTreeModel\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTreeModel\n                                    \n                                \n                                \n                                    \n                                        getDatabaseStatus\n                                    \n                                \n                                \n                                    \n                                        getDatasetTechnologyNames\n                                    \n                                \n                                \n                                    \n                                        getOntologyTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getOntologyTreeModel\n                                    \n                                \n                                \n                                    \n                                        getProviderNames\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrgans\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrganScene\n                                    \n                                \n                                \n                                    \n                                        getScene\n                                    \n                                \n                                \n                                    \n                                        getTissueBlockResults\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTreeModel\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getBiomarkerTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getBiomarkerTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getBiomarkerTreeModel(): Observable {\n    return this.forwardCall('getBiomarkerTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getBiomarkerTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getBiomarkerTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getAggregateResults\n                            \n                            \n                                    Abstract\n                                getBiomarkerTermOccurences\n                            \n                            \n                                    Abstract\n                                getBiomarkerTreeModel\n                            \n                            \n                                    Abstract\n                                getCellTypeTermOccurences\n                            \n                            \n                                    Abstract\n                                getCellTypeTreeModel\n                            \n                            \n                                    Abstract\n                                getDatabaseStatus\n                            \n                            \n                                    Abstract\n                                getDatasetTechnologyNames\n                            \n                            \n                                    Abstract\n                                getOntologyTermOccurences\n                            \n                            \n                                    Abstract\n                                getOntologyTreeModel\n                            \n                            \n                                    Abstract\n                                getProviderNames\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                            \n                                    Abstract\n                                getReferenceOrganScene\n                            \n                            \n                                    Abstract\n                                getScene\n                            \n                            \n                                    Abstract\n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getBiomarkerTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBiomarkerTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getBiomarkerTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBiomarkerTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { Observable } from 'rxjs';\n\nimport { DataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class DataSourceService implements DataSource {\n  abstract getDatabaseStatus(): Observable;\n  abstract getProviderNames(): Observable;\n  abstract getDatasetTechnologyNames(): Observable;\n  abstract getOntologyTreeModel(): Observable;\n  abstract getCellTypeTreeModel(): Observable;\n  abstract getBiomarkerTreeModel(): Observable;\n  abstract getReferenceOrgans(): Observable;\n\n  abstract getTissueBlockResults(filter?: Filter): Observable;\n  abstract getAggregateResults(filter?: Filter): Observable;\n  abstract getOntologyTermOccurences(filter?: Filter): Observable>;\n  abstract getCellTypeTermOccurences(filter?: Filter): Observable>;\n  abstract getBiomarkerTermOccurences(filter?: Filter): Observable>;\n  abstract getScene(filter?: Filter): Observable;\n  abstract getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecoratedRange.html":{"url":"interfaces/DecoratedRange.html","title":"interface - DecoratedRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecoratedRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n        \n\n\n            \n                Description\n            \n            \n                A range which should have the specified classes and styles applied\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End index of range (exclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start index of range (inclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DecoratedRange {\n  /** Start index of range (inclusive). Negative indicies are allowed. */\n  start: number;\n  /** End index of range (exclusive). Negative indicies are allowed. */\n  end: number;\n  /** Classes to add */\n  classes: string[];\n  /** Styles to set */\n  styles: Record;\n}\n\n/**\n * Resolves and normalizes an index for indexing into an array of length `length`.\n *\n * @param index The index value to resolve. May be negative indicating an index from end.\n * @param length The length of the object on which this index will be used.\n * @returns A positive index in range [0, length]\n */\nfunction resolveIndex(index: number, length: number): number {\n  if (index >= 0 && index = length) {\n    return length;\n  } else if (index + length , length: number): DecoratedRange {\n  const start = resolveIndex(range.start ?? 0, length);\n  const end = resolveIndex(range.end ?? length, length);\n  const classes = range.classes ?? [];\n  const styles = range.styles ?? {};\n  return { start, end, classes, styles };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DecoratedTextComponent.html":{"url":"components/DecoratedTextComponent.html","title":"component - DecoratedTextComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DecoratedTextComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class to display text with additional styling on ranges of the text.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-decorated-text\n            \n\n\n\n            \n                styleUrls\n                ./decorated-text.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./decorated-text.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSegments\n                            \n                            \n                                    Private\n                                createStackOps\n                            \n                            \n                                    Private\n                                getNormalizedDecorations\n                            \n                            \n                                    Private\n                                makeDecoratedSegment\n                            \n                            \n                                    Private\n                                makeUndecoratedSegment\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                decorations\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        decorations\n                    \n                \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:52\n                            \n                        \n                \n                    \n                        Classes and styles to apply to ranges of the text.\nFor overlapping ranges later values takes precedence.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:46\n                            \n                        \n                \n                    \n                        Text to display\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-decorated-text\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSegments\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSegments()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:76\n                \n            \n\n\n            \n                \n                    Creates an array of decorated text segments based on\nthe latest text and decorations.\n\n\n                    \n                    \n                    \n                        Returns :         Segment[]\n\n                    \n                    \n                        The new segments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createStackOps\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStackOps(ranges: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:124\n                \n            \n\n\n            \n                \n                    Creates an ordered array of stack operations to apply when building segments.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ranges\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The decorated ranges to apply\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         StackOp[]\n\n                    \n                    \n                        The array of operations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNormalizedDecorations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNormalizedDecorations()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:158\n                \n            \n\n\n            \n                \n                    Normalizes and filters valid decorated ranges.\n\n\n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The normalized ranges with properties filled\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeDecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDecoratedSegment(text: string, decorations: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:184\n                \n            \n\n\n            \n                \n                    Creates a segment with decoration\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                                \n                                    decorations\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Decorations for this segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A decorated segment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeUndecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeUndecoratedSegment(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:173\n                \n            \n\n\n            \n                \n                    Creates a segment without any decoration\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A segment without any decoration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:64\n                \n            \n\n\n            \n                \n                    Apply changes and recalculate cached values.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                            SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Instance properties that have changed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateStack\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStack(stack: DecoratedRange[], op: StackOp)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:145\n                \n            \n\n\n            \n                \n                    Applies the stack changes specified by the stack operation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stack\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current stack\n\n                                    \n                                \n                                \n                                    op\n                                    \n                                                StackOp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The operation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The new stack\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Segment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:57\n                        \n                    \n\n            \n                \n                    Computed segments of text with decorations resolved.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n    \n        \n  {{ segment.text }}\n\n\n    \n\n    \n                \n                    ./decorated-text.component.scss\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ segment.text }}'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'DecoratedTextComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DecoratedTextModule.html":{"url":"modules/DecoratedTextModule.html","title":"module - DecoratedTextModule","body":"\n                   \n\n\n\n\n    Modules\n    DecoratedTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DecoratedTextComponent } from './decorated-text.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DecoratedTextComponent],\n  exports: [DecoratedTextComponent]\n})\nexport class DecoratedTextModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultParams.html":{"url":"interfaces/DefaultParams.html","title":"interface - DefaultParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, OntologyTreeNode, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, of, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  /**\n   * Get the biomarker type tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getBiomarkerTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.biomarkerTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getBiomarkerTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.biomarkerTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelegateDataSource.html":{"url":"classes/DelegateDataSource.html","title":"class - DelegateDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelegateDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ForwardingDataSource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getBiomarkerTermOccurences\n                            \n                            \n                                getBiomarkerTreeModel\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:101\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:103\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTreeModel\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getBiomarkerTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getBiomarkerTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getBiomarkerTreeModel(): Observable {\n    return this.forwardCall('getBiomarkerTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getBiomarkerTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getBiomarkerTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject = new BehaviorSubject({ content: [], infoTitle: '', videoID: '' });\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = { content: this.parseMarkdown(data), infoTitle: infoTitle, videoID: videoID };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine)\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterParams.html":{"url":"interfaces/FilterParams.html","title":"interface - FilterParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ageRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmi\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmiRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellTypeTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ontologyTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            providers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spatial\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            technologies\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ageRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmi:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmiRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTypeTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTypeTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        providers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"both\" | \"female\" | \"male\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"both\" | \"female\" | \"male\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spatial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spatial:     SpatialSearch[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialSearch[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, OntologyTreeNode, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, of, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  /**\n   * Get the biomarker type tree model.\n   *\n   * @returns An observable emitting the results.\n   */\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getBiomarkerTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.biomarkerTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getBiomarkerTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.biomarkerTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForwardingDataSource.html":{"url":"classes/ForwardingDataSource.html","title":"class - ForwardingDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForwardingDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getBiomarkerTermOccurences\n                            \n                            \n                                getBiomarkerTreeModel\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:94\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTreeModel\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getBiomarkerTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getBiomarkerTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getBiomarkerTreeModel(): Observable {\n    return this.forwardCall('getBiomarkerTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getBiomarkerTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getBiomarkerTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalConfigState.html":{"url":"injectables/GlobalConfigState.html","title":"injectable - GlobalConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/config/global-config.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                optionCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                    Private\n                                getPathKey\n                            \n                            \n                                getProperty\n                            \n                            \n                                patchConfig\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2, k3: K3)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                        K3\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n                                    \n                                            K3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:45\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getPathKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPathKey(path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProperty\n                        \n                    \n                \n            \n            \n                \ngetProperty(path: PropertyKey[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyKey[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchConfig\n                        \n                    \n                \n            \n            \n                \npatchConfig(config: ImmutablePatchValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutablePatchValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(config: ImmutableStateValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutableStateValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        optionCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config$\n                    \n                \n\n                \n                    \n                        getconfig$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Computed, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { ImmutablePatchValue, ImmutableStateValue } from '@angular-ru/ngxs/typings';\nimport { State } from '@ngxs/store';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n@StateRepository()\n@State({\n  name: 'globalConfig',\n  defaults: null\n})\n@Injectable()\nexport class GlobalConfigState extends NgxsImmutableDataRepository {\n  private readonly optionCache = new Map>();\n\n  @Computed()\n  get config$(): Observable> {\n    return this.state$.pipe(filterNulls(), shareReplay(1));\n  }\n\n  setConfig(config: ImmutableStateValue): void {\n    this.setState(config);\n  }\n\n  patchConfig(config: ImmutablePatchValue): void {\n    this.patchState(config);\n  }\n\n  getProperty(path: PropertyKey[]): Observable {\n    return this.config$.pipe(\n      pluck(...path as [string]),\n      distinctUntilChanged(),\n      shareReplay(1)\n    ) as Observable;\n  }\n\n  getOption(k1: K1): Observable;\n  getOption(k1: K1, k2: K2): Observable;\n  getOption(k1: K1, k2: K2, k3: K3): Observable;\n  getOption(...path: (string | number)[]): Observable;\n  getOption(...path: (string | number)[]): Observable {\n    const key = this.getPathKey(path);\n    if (this.optionCache.has(key)) {\n      return this.optionCache.get(key)!;\n    }\n\n    const obs = this.config$.pipe(\n      pluck(...(path as string[])),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n\n    this.optionCache.set(key, obs);\n    return obs;\n  }\n\n  private getPathKey(path: (string | number)[]): string {\n    return `${path.length}:${path.join('.')}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalsService.html":{"url":"injectables/GlobalsService.html","title":"injectable - GlobalsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/globals/globals.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide functionality for interacting with the global object.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                findGlobalObject\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    obj\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        findGlobalObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    findGlobalObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:109\n                \n            \n\n\n            \n                \n                    Attempt to locate the global object.\nCan be overridden in a subclass to check other locations\nor completely change the object. This is especially useful\nduring testing.\n\n\n                    \n                    \n                    \n                        Returns :         GlobalThis | undefined\n\n                    \n                    \n                        The global object if found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Gets a value from the global object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:59\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NonNullable | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | null | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def?)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:45\n                \n            \n\n\n            \n                \n                    Tests whether the global object has the specific key.\nThis method returns true even when the associated value\nis undefined or null as long as the key exists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the key exists in the global object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:93\n                \n            \n\n\n            \n                \n                    Removes a key from the global object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: K, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Sets a value on the global object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to set the value on\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:77\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        obj\n                    \n                \n\n                \n                    \n                        getobj()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:22\n                                \n                            \n                    \n                        \n                                The found global object\n\n\n                                \n                                    Returns :         GlobalThis | undefined\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/** Type of keys allowed in the global object */\nexport type GlobalKey = string | symbol;\n\n/** Type of the global object */\nexport type GlobalThis = typeof globalThis;\n\ndeclare let global: GlobalThis;\n\n/**\n * Provide functionality for interacting with the global object.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalsService {\n  /**\n   * The found global object\n   */\n  get obj(): GlobalThis | undefined {\n    const obj = this.findGlobalObject();\n    // Cache value on the instance\n    Object.defineProperties(this, {\n      obj: {\n        configurable: false,\n        writable: false,\n        value: obj\n      }\n    });\n\n    return obj;\n  }\n\n  /**\n   * Tests whether the global object has the specific key.\n   * This method returns true even when the associated value\n   * is undefined or null as long as the key exists.\n   *\n   * @param key The key\n   *\n   * @returns true if the key exists in the global object\n   */\n  has(key: GlobalKey): boolean {\n    const { obj } = this;\n    return obj != null && key in obj;\n  }\n\n  /**\n   * Gets a value from the global object.\n   *\n   * @param key The key for the value\n   * @param def An optional default value\n   *\n   * @returns The value if it exists otherwise the default value\n   */\n  get(key: K): GlobalThis[K];\n  get(key: K, def: D): NonNullable | D;\n  get(key: GlobalKey): T | null | undefined;\n  get(key: GlobalKey, def: D): T | D;\n\n  get(key: GlobalKey, def?: unknown): unknown {\n    const { obj } = this;\n    return (obj && obj[key] as unknown) ?? def;\n  }\n\n  /**\n   * Sets a value on the global object.\n   *\n   * @param key The key to set the value on\n   * @param value The new value\n   *\n   * @throws TypeError if the value is readonly\n   */\n  set(key: K, value: GlobalThis[K]): void;\n  set(key: GlobalKey, value: T): void;\n\n  set(key: GlobalKey, value: unknown): void {\n    const { obj } = this;\n    if (obj) {\n      obj[key] = value;\n    }\n  }\n\n  /**\n   * Removes a key from the global object.\n   *\n   * @param key The key to remove\n   *\n   * @throws TypeError if the key is not removable\n   */\n  remove(key: GlobalKey): void {\n    const { obj } = this;\n    if (obj) {\n      delete obj[key];\n    }\n  }\n\n  /**\n   * Attempt to locate the global object.\n   * Can be overridden in a subclass to check other locations\n   * or completely change the object. This is especially useful\n   * during testing.\n   *\n   * @returns The global object if found\n   */\n  /* istanbul ignore next This is really hard to test as it depends on the global environment */\n  protected findGlobalObject(): GlobalThis | undefined {\n    // This should pretty much always be available unless\n    // we are running in some outdated environment\n    if (typeof globalThis !== 'undefined') {\n      return globalThis;\n    }\n\n    // Check the common places for a global object\n    if (typeof global !== 'undefined') { // Node.js environment\n      return global;\n    } else if (typeof window !== 'undefined') { // Browser environment\n      return window;\n    } else if (typeof self !== 'undefined') { // Web worker environment\n      return self;\n    }\n\n    try {\n      // One last try - may fail depending on content security policy (CSP) settings\n      // eslint-disable-next-line no-new-func, @typescript-eslint/no-implied-eval\n      return (new Function('return this;'))() as GlobalThis | undefined;\n    } catch (_ignored) { /* Ignore errors */ }\n\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsSyncService.html":{"url":"injectables/GoogleAnalyticsSyncService.html","title":"injectable - GoogleAnalyticsSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                toggleGoogleAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, window: Record | null, undefined: IGoogleAnalyticsSettings)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Record | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                    IGoogleAnalyticsSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toggleGoogleAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleGoogleAnalytics(disabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { IGoogleAnalyticsSettings, NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN, NGX_WINDOW } from 'ngx-google-analytics';\nimport { Subscription } from 'rxjs';\n\nimport { ConsentService } from './consent.service';\n\n\n@Injectable()\nexport class GoogleAnalyticsSyncService implements OnDestroy {\n  private readonly token: string;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(NGX_WINDOW) private readonly window: Record | null,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN) { trackingCode }: IGoogleAnalyticsSettings\n  ) {\n    this.token = trackingCode;\n\n    this.subscriptions.add(consentService.consentChange.subscribe(\n      consent => this.toggleGoogleAnalytics(consent === 'rescinded')\n    ));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private toggleGoogleAnalytics(disabled: boolean): void {\n    if (this.window) {\n      this.window[`ga-disable-${this.token}`] = disabled;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n\n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                documentationUrl\n                            \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, infoButtonService: InfoButtonService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        infoButtonService\n                                                  \n                                                        \n                                                                        InfoButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the info button service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        documentationUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        infoTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:23\n                            \n                        \n                \n                    \n                        Title of the info dialog\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        videoID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:28\n                            \n                        \n                \n                    \n                        Whether the information is for the RUI or EUI\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchInfoDialog\n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog(data: PanelData)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:59\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                PanelData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:52\n                \n            \n\n\n            \n                \n                    Unsubscribe to the observable when the component\nis destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDialogButtonClick\n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:77\n                \n            \n\n\n            \n                \n                    Detects button click and updates panel data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nimport { PanelData } from '../info-button/info-button.service';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\nimport { InfoButtonService } from './info-button.service';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InfoButtonComponent implements OnDestroy {\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle = '';\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() videoID: string;\n\n  @Input() documentationUrl: string;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param infoButtonService Reference to the info button service\n   */\n  constructor(private readonly dialog: MatDialog, private readonly infoButtonService: InfoButtonService) {\n    this.subscriptions.add(infoButtonService.panelContent.subscribe(data => {\n      if (data.content.length) {\n        this.launchInfoDialog(data);\n      }\n    }));\n  }\n\n  /**\n    * Unsubscribe to the observable when the component\n    * is destroyed\n    */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(data: PanelData): void {\n    if (this.dialog.openDialogs.length == 0) { //Prevent multiple dialogs from opening\n      this.dialog.open(InfoDialogComponent, {\n        autoFocus: false,\n        panelClass: 'modal-animated',\n        width: '72rem',\n        data: {\n          title: data.infoTitle,\n          content: data.content,\n          videoID: data.videoID\n        }\n      });\n    }\n  }\n\n  /**\n   * Detects button click and updates panel data\n   */\n  onDialogButtonClick(): void {\n    this.infoButtonService.updateData(this.documentationUrl, this.videoID, this.infoTitle);\n  }\n}\n\n    \n\n    \n        \n  \n    info\n  \n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info-button-wrapper {\n  border-radius: 0.25rem;\n  padding: 0.65rem;\n  transition: 0.6s;\n\n  .ccf-info-button {\n    cursor: pointer;\n    transition: color .6s;\n    font-size: 1.5rem;\n    vertical-align: sub;\n  }\n  \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      info  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule, HttpClientModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoButtonService.html":{"url":"injectables/InfoButtonService.html","title":"injectable - InfoButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InfoButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                panelContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseMarkdown\n                            \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        parseMarkdown\n                        \n                    \n                \n            \n            \n                \nparseMarkdown(data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:52\n                \n            \n\n\n            \n                \n                    Function to parse the markdown file and convert to\ndocumentation content used by the info-dialog panels\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Markdown file sent as a string after reading it\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentationContent[]\n\n                    \n                    \n                        array of DocumentationContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(url: string, videoID: string, infoTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:38\n                \n            \n\n\n            \n                \n                    Read the markdown file to split it by h1 tags and update the panel title and videoID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    videoID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        panelContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({ content: [], infoTitle: '', videoID: '' })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:31\n                        \n                    \n\n            \n                \n                    Subject to send the documentation data to the component when its done processing\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject = new BehaviorSubject({ content: [], infoTitle: '', videoID: '' });\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = { content: this.parseMarkdown(data), infoTitle: infoTitle, videoID: videoID };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine)\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n\n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                documentationContents\n                            \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: InfoDialogData)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:35\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        InfoDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:63\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:54\n                \n            \n\n\n            \n                \n                    load the youtube player api in on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InfoDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:44\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:43\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        documentationContents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DocumentationContent[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:27\n                        \n                    \n\n            \n                \n                    Documentation contents\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:31\n                        \n                    \n\n            \n                \n                    Title of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:35\n                        \n                    \n\n            \n                \n                    URL for video\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n  /**\n   * URL for video\n   */\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{infoTitle}}\n        \n          clear\n        \n      \n\n      \n        \n          \n            \n              {{content.title}}\n            \n              \n                \n                \n                  \n                \n              \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.about.wrapper {\n  .container {\n    .content {\n      padding: 1.5rem;\n      text-align: left;\n\n      .header {\n        display: flex;\n        justify-content: space-between;\n        height: 3rem;\n        margin-bottom: 2.25rem;\n        position: relative;\n      }\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .close {\n      .close-icon {\n        cursor: pointer;\n        height: 3rem;\n        width: 3rem;\n        line-height: 3rem;\n        text-align: center;\n        transition: .6s;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin: 0 auto;\n      line-height: 3rem;\n      height: 3rem;\n      justify-self: center;\n      display: flex;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .panel {\n      margin-bottom: 1.5rem;\n\n      .no-header-margin {\n        font-weight: 300;\n        margin-bottom: 0;\n      }\n\n      .top-padding {\n        display: flex;\n\n        markdown ::ng-deep ul {\n          margin-top: 0;\n          padding-left: 1.5rem;\n        }\n      }\n    }\n\n    .dialog-content {\n      height: 50rem;\n      min-height: 10rem;\n      padding: 0 1.5rem;\n\n      .variable-binding {\n        font-weight: 300;\n        display: flex;\n\n        &.first {\n          padding-right: 1rem;\n          width: 73%;\n        }\n\n        ::ng-deep ul {\n          margin: 0;\n        }\n\n        ::ng-deep img {\n          margin-left: 1rem;\n          float: right;\n        }\n      }\n\n      .video-player {\n        position: relative;\n        width: 50%;\n\n        ::ng-deep iframe {\n          width: 100%;\n          height: 100%;\n        }\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{infoTitle}}                  clear                                                                {{content.title}}                                                                                                                                        '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoDialogData.html":{"url":"interfaces/InfoDialogData.html","title":"interface - InfoDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Data model for the dialog input\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            videoID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         DocumentationContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentationContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n  /**\n   * URL for video\n   */\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\n\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatExpansionModule, YouTubePlayerModule, MarkdownModule.forRoot({})],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectorDelegateDataSourceService.html":{"url":"injectables/InjectorDelegateDataSourceService.html","title":"injectable - InjectorDelegateDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InjectorDelegateDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                selectToken\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getBiomarkerTermOccurences\n                            \n                            \n                                getBiomarkerTreeModel\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        selectToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectToken(config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProviderToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:103\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTreeModel\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector, ProviderToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class InjectorDelegateDataSourceService extends DelegateDataSource {\n  readonly impl$: Observable;\n\n  constructor(\n    globalConfig: GlobalConfigState,\n    injector: Injector\n  ) {\n    super();\n\n    this.impl$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      map(config => this.selectToken(config)),\n      distinctUntilChanged(),\n      map(token => injector.get(token)),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract selectToken(config: C): ProviderToken;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LearnMore.html":{"url":"classes/LearnMore.html","title":"class - LearnMore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LearnMore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CallToAction] Learn More'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LearnMore {\n  static readonly type='[CallToAction] Learn More';\n}\n\nexport class OpenDialog {\n  static readonly type='[CallToAction] Open Dialog';\n}\n\nexport class CloseDialog {\n  static readonly type='[CallToAction] Close Dialog';\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:90\n                \n            \n\n\n            \n                \n                    Clears all storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string, defaultValue?: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        D\n                    \n                \n            \n\n            \n                \n                    Gets value based on key, also returns default if it fails\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultValue\n                                    \n                                            D\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | D\n\n                    \n                    \n                        the value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:50\n                \n            \n\n\n            \n                \n                    Gets value based on key index\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:83\n                \n            \n\n\n            \n                \n                    removes value based on key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:70\n                \n            \n\n\n            \n                \n                    sets a key-value pairin local storage\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true or false based on success/failure\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n    // Slightly modified from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    let storage: Storage | undefined;\n    try {\n      storage = window.localStorage;\n      const x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n\n      return storage;\n    } catch (error) {\n      const full = error instanceof DOMException && (\n        // everything except Firefox\n        error.code === 22 ||\n        // Firefox\n        error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        error.name === 'QuotaExceededError' ||\n        // Firefox\n        error.name === 'NS_ERROR_DOM_QUOTA_REACHED'\n      ) && (storage && storage.length !== 0);\n\n      return full ? storage : undefined;\n    }\n  })()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:41\n                                \n                            \n                    \n                        \n                                gets length of storage list\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/**\n * Service to handle local storage\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  static storage = (() => {\n    // Slightly modified from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    let storage: Storage | undefined;\n    try {\n      storage = window.localStorage;\n      const x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n\n      return storage;\n    } catch (error) {\n      const full = error instanceof DOMException && (\n        // everything except Firefox\n        error.code === 22 ||\n        // Firefox\n        error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        error.name === 'QuotaExceededError' ||\n        // Firefox\n        error.name === 'NS_ERROR_DOM_QUOTA_REACHED'\n      ) && (storage && storage.length !== 0);\n\n      return full ? storage : undefined;\n    }\n  })();\n\n  /**\n   * gets length of storage list\n   */\n  get length(): number {\n    return LocalStorageService.storage?.length ?? 0;\n  }\n\n  /**\n   * Gets value based on key index\n   * @param index\n   * @returns\n   */\n  key(index: number): string | null {\n    return LocalStorageService.storage?.key(index) ?? null;\n  }\n\n  /**\n   * Gets value based on key, also returns default if it fails\n   * @param key\n   * @param defaultValue\n   * @returns the value\n   */\n  getItem(key: string, defaultValue?: D): string | D {\n    return LocalStorageService.storage?.getItem(key) ?? defaultValue ?? null as D;\n  }\n\n  /**\n   * sets a key-value pairin local storage\n   * @param key\n   * @param value\n   * @returns true or false based on success/failure\n   */\n  setItem(key: string, value: string): boolean {\n    try {\n      LocalStorageService.storage?.setItem(key, value);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * removes value based on key\n   * @param key\n   */\n  removeItem(key: string): void {\n    LocalStorageService.storage?.removeItem(key);\n  }\n\n  /**\n   * Clears all storage\n   */\n  clear(): void {\n    LocalStorageService.storage?.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageSyncService.html":{"url":"injectables/LocalStorageSyncService.html","title":"injectable - LocalStorageSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                storage\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadConsent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                saveConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, key: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Consent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        storage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Consent, ConsentService } from './consent.service';\n\n\nexport const LOCAL_STORAGE_CONSENT_KEY = new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n});\n\n\n@Injectable()\nexport class LocalStorageSyncService implements OnDestroy {\n  private readonly storage?: typeof localStorage;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(LOCAL_STORAGE_CONSENT_KEY) private readonly key: string\n  ) {\n    try {\n      this.storage = localStorage;\n    } catch (_error) { /* Ignored */ }\n\n    consentService.setConsent(this.loadConsent());\n    this.subscriptions.add(\n      consentService.consentChange.subscribe(consent => this.saveConsent(consent))\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private loadConsent(): Consent {\n    const rawValue = this.storage?.getItem?.(this.key);\n    if (rawValue == null) {\n      return 'not-set';\n    }\n\n    const value = rawValue.trim().toLowerCase();\n    switch (value) {\n      case 'given': /* fallthrough */\n      case 'rescinded':\n        return value;\n      default:\n        return 'not-set';\n    }\n  }\n\n  private saveConsent(value: Consent): void {\n    this.storage?.setItem?.(this.key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MousePositionTrackerModule.html":{"url":"modules/MousePositionTrackerModule.html","title":"module - MousePositionTrackerModule","body":"\n                   \n\n\n\n\n    Modules\n    MousePositionTrackerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\n\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent(el, 'mousemove').pipe(\n    throttleTime(1000),\n    map(formatData)\n  );\n\n  return events.subscribe(data => ga.event('webpage', 'mousemove', data));\n}\n\n\n@NgModule()\nexport class MousePositionTrackerModule {\n  constructor(\n  // NOTE: Angular compiler fails when document is typed properly?!\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  @Inject(DOCUMENT) document: any,\n                    ga: GoogleAnalyticsService\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberDirective.html":{"url":"directives/NumberDirective.html","title":"directive - NumberDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NumberDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for restricting an input element to integer only values.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        input[ccfNumbersOnly]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onInputChange\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an instance of number directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to input element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \n                    \n                    onInputChange(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('input', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener } from '@angular/core';\n\n/**\n * Directive for restricting an input element to integer only values.\n */\n@Directive({\n  selector: 'input[ccfNumbersOnly]'\n})\nexport class NumberDirective {\n  /**\n   * Creates an instance of number directive.\n   *\n   * @param el Reference to input element\n   */\n  constructor(private el: ElementRef) { }\n\n  /**\n   * Listens to input changes and updates the text to only include numbers.\n   *\n   * @param event The input event\n   */\n  @HostListener('input', ['$event'])\n  onInputChange(event: Event): void {\n    const initalValue = this.el.nativeElement.value;\n    this.el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n    if (initalValue !== this.el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NumbersOnlyModule.html":{"url":"modules/NumbersOnlyModule.html","title":"module - NumbersOnlyModule","body":"\n                   \n\n\n\n\n    Modules\n    NumbersOnlyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { NumberDirective } from './numbers-only.directive';\n\n\n@NgModule({\n  declarations: [NumberDirective],\n  exports: [NumberDirective]\n})\nexport class NumbersOnlyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpacitySliderComponent.html":{"url":"components/OpacitySliderComponent.html","title":"component - OpacitySliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpacitySliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Slider for setting opacity on an anatomical structure\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-opacity-slider\n            \n\n\n\n            \n                styleUrls\n                ./opacity-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./opacity-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                prevOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeOpacity\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                resetOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacity\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacityChange\n                            \n                            \n                                opacityReset\n                            \n                            \n                                visibilityToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:22\n                            \n                        \n                \n                    \n                        The value displayed in the slider\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the item is set to visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        opacityChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:32\n                            \n                        \n                \n                    \n                        Emits the updated opacity when the opacity changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacityReset\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:42\n                            \n                        \n                \n                    \n                        Emitter for resetting all opacity values to default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visibilityToggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:37\n                            \n                        \n                \n                    \n                        Output  of opacity slider component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-opacity-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeOpacity\n                        \n                    \n                \n            \n            \n                \nchangeOpacity(newOpacity: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:63\n                \n            \n\n\n            \n                \n                    Emits opacityChange with the new opacity value\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newOpacity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated opacity value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetOpacity\n                        \n                    \n                \n            \n            \n                \nresetOpacity()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:82\n                \n            \n\n\n            \n                \n                    Emits signal to reset the opacity of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:71\n                \n            \n\n\n            \n                \n                    Emits signal to toggle the visibility of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevOpacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Slider for setting opacity on an anatomical structure\n */\n@Component({\n  selector: 'ccf-opacity-slider',\n  templateUrl: './opacity-slider.component.html',\n  styleUrls: ['./opacity-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OpacitySliderComponent implements OnInit {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-opacity-slider';\n\n  /**\n   * The value displayed in the slider\n   */\n  @Input() opacity = 20;\n\n  /**\n   * Whether the item is set to visible\n   */\n  @Input() visible = true;\n\n  /**\n   * Emits the updated opacity when the opacity changes\n   */\n  @Output() readonly opacityChange = new EventEmitter();\n\n  /**\n   * Output  of opacity slider component\n   */\n  @Output() readonly visibilityToggle = new EventEmitter();\n\n  /**\n   * Emitter for resetting all opacity values to default\n   */\n  @Output() readonly opacityReset = new EventEmitter();\n\n  prevOpacity: number;\n\n  ngOnInit(): void {\n    if (this.visible) {\n      this.prevOpacity = 0;\n    } else {\n      this.prevOpacity = 20;\n    }\n  }\n\n  reset(): void {\n    this.prevOpacity = 20;\n  }\n\n  /**\n   * Emits opacityChange with the new opacity value\n   *\n   * @param newOpacity The updated opacity value\n   */\n  changeOpacity(newOpacity: string): void {\n    this.opacity = parseInt(newOpacity, 10);\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to toggle the visibility of the item\n   */\n  toggleVisibility(): void {\n    const temp = this.opacity;\n    this.opacity = this.prevOpacity;\n    this.prevOpacity = temp;\n    this.visibilityToggle.emit();\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to reset the opacity of the item\n   */\n  resetOpacity(): void {\n    this.prevOpacity = 0;\n    this.opacityReset.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{opacity}}%\n  \n  \n    \n    \n    refresh\n  \n\n    \n\n    \n                \n                    ./opacity-slider.component.scss\n                \n                :host {\n  height: 2.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 0.1875rem;\n  \n\n  .slider-box {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    height: 100%;\n\n    .slider-and-label {\n      width: 60%;\n      display: flex;\n      align-items: center;\n      height: 100%;\n\n      .slider {\n        width: 100%;\n        height: 100%;\n\n        ::ng-deep .mat-slider-wrapper {\n          top: 1.125rem;\n        }\n        \n        &.disabled {\n          pointer-events: none;\n          cursor: not-allowed;\n        }\n      }\n\n      .opacity-value {\n        width: 1.5rem;\n        margin-left: 0.5rem;\n      }\n    }\n\n    .icons {\n      display: flex;\n      cursor: pointer !important;\n\n      .reset {\n        margin-right: 1rem;\n        padding: 0.25rem;\n        cursor: pointer;\n        transition: .6s;\n        border-radius: 0.25rem;\n      }\n    \n      .visibility {\n        transition: .6s;\n        cursor: pointer;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n    \n        &.hidden {\n          display: none;\n        }\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{opacity}}%                refresh  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpacitySliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpacitySliderModule.html":{"url":"modules/OpacitySliderModule.html","title":"module - OpacitySliderModule","body":"\n                   \n\n\n\n\n    Modules\n    OpacitySliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OpacitySliderComponent } from './opacity-slider.component';\nimport { MatLegacySliderModule as MatSliderModule } from '@angular/material/legacy-slider';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [OpacitySliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule\n  ],\n  exports: [OpacitySliderComponent]\n})\nexport class OpacitySliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenDialog.html":{"url":"classes/OpenDialog.html","title":"class - OpenDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CallToAction] Open Dialog'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LearnMore {\n  static readonly type='[CallToAction] Learn More';\n}\n\nexport class OpenDialog {\n  static readonly type='[CallToAction] Open Dialog';\n}\n\nexport class CloseDialog {\n  static readonly type='[CallToAction] Close Dialog';\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganInfo.html":{"url":"interfaces/OrganInfo.html","title":"interface - OrganInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the organ name and url of the icon svg\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasSex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if the icon is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasSex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if applies to both sexes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    UBERON id for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label to display for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the organ (to help match organs with left / right)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for single sex only organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for paired organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Used to fetch the url of the organ icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, Input,\n  OnChanges, OnDestroy, Output, SimpleChanges, ViewChild\n} from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\n/**\n * All organs that will eventually be displayed in the app\n */\nexport const ALL_POSSIBLE_ORGANS = [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004549'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001911'\n  },\n  {\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma57991'\n  },\n  {\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma57987'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7213'\n  },\n  {\n    src: 'app:larynx',\n    organ: 'Larynx',\n    name: 'Larynx',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001737'\n  },\n  {\n    src: 'app:main-bronchus',\n    organ: 'Main Bronchus',\n    name: 'Main Bronchus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002182'\n  },\n  {\n    disabled: true,\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002373'\n  },\n  {\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma54974'\n  },\n  {\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma54973'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:placenta',\n    organ: 'Placenta',\n    name: 'Placenta',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001987'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spinal-cord',\n    organ: 'Spinal Cord',\n    name: 'Spinal Cord',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002240'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    src: 'app:trachea',\n    organ: 'Trachea',\n    name: 'Trachea',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003126'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[];\n\n/**\n * All organs which have not been disabled\n */\nexport const ALL_ORGANS = ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true);\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n\n  /**\n   * Used to fetch the url of the organ icon\n   */\n  src: string;\n\n  /**\n   * Label to display for the organ\n   */\n  name: string;\n\n  /**\n   * Name of the organ (to help match organs with left / right)\n   */\n  organ: string;\n\n  /**\n   * True if the icon is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Used for paired organs\n   */\n  side?: 'left' | 'right';\n\n  /**\n   * True if applies to both sexes\n   */\n  hasSex?: boolean;\n\n  /**\n   * Used for single sex only organs\n   */\n  sex?: 'male' | 'female';\n\n  /**\n   * UBERON id for the organ\n   */\n  id?: string;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OrganSelectorComponent implements AfterViewInit, OnChanges, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-organ-selector';\n\n  @ViewChild('carouselContainer', { static: true }) carouselContainer: ElementRef;\n  @ViewChild('itemlist', { static: true }) itemList: ElementRef;\n  @ViewChild('itemcontainer', { static: true }) itemContainer: ElementRef;\n\n  /**\n   * If multiple selections should be allowed\n   */\n  @Input() multiselect = false;\n\n  @Input() displayErrors = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  @Input() organList: OrganInfo[] = ALL_ORGANS;\n\n  /**\n   * Currently selected organ\n   */\n  @Input() selectedOrgans: OrganInfo[] = [];\n\n  /**\n   * If the organ selector is expanded\n   */\n  @Input() expanded = false;\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() readonly organsChanged = new EventEmitter();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * Handles scrolling behavior\n   */\n  timeoutHandler?: unknown;\n\n  /**\n   * Distance the carousel moves in each shift (px)\n   */\n  step = 72;\n\n  /**\n   * Detects resizing of carousel\n   */\n  private sensor: ResizeSensor;\n\n  // eslint-disable-next-line\n  @Input()\n  set occurenceData(value: Record) {\n    // eslint-disable-next-line\n    this._occurenceData = value;\n  }\n\n  get occurenceData(): Record {\n    // eslint-disable-next-line\n    return this._occurenceData;\n  }\n\n  private _occurenceData: Record;\n\n  /**\n   * Set resize sensor on carousel\n   */\n  ngAfterViewInit(): void {\n    const { carouselContainer } = this;\n    this.sensor = new ResizeSensor(carouselContainer.nativeElement, () => {\n      this.set();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('organList' in changes) {\n      this.set();\n    }\n  }\n\n  /**\n   * Detaches resize sensor\n   */\n  ngOnDestroy(): void {\n    this.sensor.detach();\n  }\n\n  /**\n   * Decides whether or not an error has occured,\n   * used to display or hide error message.\n   */\n  get error(): boolean {\n    if (!this.displayErrors || this.selectedOrgans.length === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   *\n   * @param dir Direction to be scrolled\n   */\n  shift(dir: string): void {\n    const { itemList } = this;\n    let val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (this.onLeft && dir === 'left' || this.onRight && dir === 'right') {\n      return;\n    }\n    val = dir === 'right' ? val - this.step : val + this.step;\n    itemList.nativeElement.style.left = val + 'px';\n    this.setLeftRight(val);\n  }\n\n  /**\n   * Scrolls carousel continuously\n   *\n   * @param dir Direction to be scrolled\n   */\n  scroll(dir: string): void {\n    this.timeoutHandler = setInterval(() => {\n      this.shift(dir);\n    }, 200);\n  }\n\n  /**\n   * Stops carousel scrolling\n   */\n  stopScroll(): void {\n    if (this.timeoutHandler) {\n      // Minor hack to make typescript happy when there are mixed NodeJS and regular typings\n      clearInterval(this.timeoutHandler as never);\n      this.timeoutHandler = undefined;\n    }\n  }\n\n  /**\n   * Sets and emits currently selected organ(s)\n   *\n   * @param organ The organ selected\n   */\n  selectOrgan(organ: OrganInfo): void {\n    if (!this.multiselect) {\n      this.selectedOrgans = [organ];\n    } else {\n      if (this.selectedOrgans.includes(organ)) {\n        this.selectedOrgans = this.selectedOrgans.filter((selectedOrgan) => organ !== selectedOrgan);\n      } else {\n        this.selectedOrgans = this.selectedOrgans.concat([organ]);\n      }\n    }\n    this.organsChanged.emit(this.selectedOrgans);\n  }\n\n  /**\n   * Determines whether an icon represents a currently selected organ\n   *\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(organ: OrganInfo): boolean {\n    return this.selectedOrgans.includes(organ) ? true : false;\n  }\n\n  /**\n   * Disables scrolling if the list of organs is smaller than the container, otherwise sets onLeft and onRight as normal\n   */\n  set(): void {\n    const { itemList, itemContainer, carouselContainer } = this;\n    const val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (itemList.nativeElement.offsetWidth >= this.organList.length * this.step) {\n      itemList.nativeElement.style.left = '0px';\n      this.onLeft = true;\n      this.onRight = true;\n    } else {\n      this.setLeftRight(val);\n      const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n      itemContainer.nativeElement.style.width = `${listLength}px`;\n    }\n  }\n\n  /**\n   * Responsively sets width of the item container\n   */\n  setWidth(): void {\n    const { itemContainer, carouselContainer } = this;\n    const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n    itemContainer.nativeElement.style.width = `${listLength}px`;\n  }\n\n  /**\n   * Sets onLeft and onRight according to where the item list is scrolled\n   */\n  setLeftRight(val: number): void {\n    const { itemContainer } = this;\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganSelectorModule.html":{"url":"modules/OrganSelectorModule.html","title":"module - OrganSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrganSelectorComponent } from './organ-selector.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [OrganSelectorComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTooltipModule\n  ],\n  exports: [OrganSelectorComponent]\n})\nexport class OrganSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PanelData.html":{"url":"interfaces/PanelData.html","title":"interface - PanelData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PanelData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            infoTitle\n                                        \n                                \n                                \n                                        \n                                            videoID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         DocumentationContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentationContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        infoTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        infoTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject = new BehaviorSubject({ content: [], infoTitle: '', videoID: '' });\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = { content: this.parseMarkdown(data), infoTitle: infoTitle, videoID: videoID };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine)\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluckUniqueOptions.html":{"url":"interfaces/PluckUniqueOptions.html","title":"interface - PluckUniqueOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluckUniqueOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for pluckUnique operator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compare\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compare\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compare:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom comparison for determining distinct values\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n/**\n * Options for `pluckUnique` operator\n */\nexport interface PluckUniqueOptions {\n  /**\n   * Custom comparison for determining distinct values\n   */\n  compare?: (lhs: T, rhs: T) => boolean;\n}\n\n\n/**\n * Default options\n */\nconst DEFAULT_OPTIONS: PluckUniqueOptions = {};\n\n\n/**\n * Combines the functionaliy of `pluck` and `distinctUntilChanged`\n * as well as adding a `shareReplay`.\n *\n * @param {...string} props Properties to pluck\n * @param [opts] Additional options\n * @returns An `Observable` operator\n */\nexport function pluckUnique(k1: K1, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[]]): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[], PluckUniqueOptions]): OperatorFunction;\nexport function pluckUnique(...props: unknown[]): OperatorFunction {\n  const last = props[props.length - 1];\n  let keys = props as string[];\n  let opts = DEFAULT_OPTIONS;\n\n  if (typeof last === 'object') {\n    opts = last as PluckUniqueOptions;\n    keys = keys.slice(0, -1);\n  }\n\n  return source => source.pipe(\n    pluck(...keys),\n    distinctUntilChanged(opts.compare),\n    shareReplay(1)\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Segment.html":{"url":"interfaces/Segment.html","title":"interface - Segment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Segment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A segment of text with additional classes and styles\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add to the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set on the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The piece of text to display\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchListComponent.html":{"url":"components/SpatialSearchListComponent.html","title":"component - SpatialSearchListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a list of spatial searches\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-list\n            \n\n\n\n            \n                styleUrls\n                ./spatial-search-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spatial-search-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemId\n                            \n                            \n                                removeItem\n                            \n                            \n                                updateItemSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemRemoved\n                            \n                            \n                                selectionChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:33\n                            \n                        \n                \n                    \n                        Items to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:30\n                            \n                        \n                \n                    \n                        Label for the list\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        itemRemoved\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:39\n                            \n                        \n                \n                    \n                        Emits the item that has been removed from the list\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectionChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:36\n                            \n                        \n                \n                    \n                        Emits the new items when a selection changes\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spatial-search-list\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-list'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n            \n                \nitemId(_index: number, item: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:48\n                \n            \n\n\n            \n                \n                    Computes a unique id for an item\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A unique id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:71\n                \n            \n\n\n            \n                \n                    Removes an item from the list\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of the item to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemSelection\n                        \n                    \n                \n            \n            \n                \nupdateItemSelection(index: number, selected: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:58\n                \n            \n\n\n            \n                \n                    Updates the selected state for an item\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of item to update\n\n                                    \n                                \n                                \n                                    selected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        What to set the selected state to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-list'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n/**\n * Base interface of items in the spatial search list\n */\nexport interface SpatialSearchListItem {\n  /** Whether the item is selected */\n  selected: boolean;\n\n  /** Description displayed for the item */\n  description: string;\n}\n\n\n/**\n * Displays a list of spatial searches\n */\n@Component({\n  selector: 'ccf-spatial-search-list',\n  templateUrl: './spatial-search-list.component.html',\n  styleUrls: ['./spatial-search-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchListComponent {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-spatial-search-list';\n\n  /** Label for the list */\n  @Input() label = '';\n\n  /** Items to display */\n  @Input() items: T[] = [];\n\n  /** Emits the new items when a selection changes */\n  @Output() readonly selectionChanged = new EventEmitter();\n\n  /** Emits the item that has been removed from the list */\n  @Output() readonly itemRemoved = new EventEmitter();\n\n  /**\n   * Computes a unique id for an item\n   *\n   * @param _index Unused\n   * @param item An item\n   * @returns A unique id\n   */\n  itemId(_index: number, item: T): string {\n    return item.description;\n  }\n\n  /**\n   * Updates the selected state for an item\n   *\n   * @param index Index of item to update\n   * @param selected What to set the selected state to\n   */\n  updateItemSelection(index: number, selected: boolean): void {\n    const newItems = this.items = [...this.items];\n    newItems[index] = { ...newItems[index], selected };\n\n    const selectedItems = newItems.filter(item => item.selected);\n    this.selectionChanged.emit(selectedItems);\n  }\n\n  /**\n   * Removes an item from the list\n   *\n   * @param index Index of the item to remove\n   */\n  removeItem(index: number): void {\n    const newItems = this.items = [...this.items];\n    const [item] = newItems.splice(index, 1);\n    this.itemRemoved.emit(item);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n\n\n  \n    \n      \n        {{ item.description }}\n      \n\n      \n\n      \n        delete_outlined\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./spatial-search-list.component.scss\n                \n                :host {\n  display: block;\n\n  .label {\n    margin-bottom: 0.5rem;\n    font-weight: bold;\n  }\n\n  .item {\n    height: 2rem;\n    padding: 0;\n    overflow: visible;\n\n    ::ng-deep {\n      .mdc-list-item__content {\n        overflow: visible;\n      }\n    }\n\n    .item-content {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 2rem;\n\n      .delete {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 0;\n        width: 2rem;\n        height: 2rem;\n      }\n\n      .filler {\n        flex-grow: 1;\n      }\n    }\n\n    // Remove default padding from material list item\n    & > ::ng-deep * {\n      padding: 0 !important;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ item.description }}                          delete_outlined            '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSearchListItem.html":{"url":"interfaces/SpatialSearchListItem.html","title":"interface - SpatialSearchListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSearchListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Base interface of items in the spatial search list\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description displayed for the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the item is selected\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n/**\n * Base interface of items in the spatial search list\n */\nexport interface SpatialSearchListItem {\n  /** Whether the item is selected */\n  selected: boolean;\n\n  /** Description displayed for the item */\n  description: string;\n}\n\n\n/**\n * Displays a list of spatial searches\n */\n@Component({\n  selector: 'ccf-spatial-search-list',\n  templateUrl: './spatial-search-list.component.html',\n  styleUrls: ['./spatial-search-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchListComponent {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-spatial-search-list';\n\n  /** Label for the list */\n  @Input() label = '';\n\n  /** Items to display */\n  @Input() items: T[] = [];\n\n  /** Emits the new items when a selection changes */\n  @Output() readonly selectionChanged = new EventEmitter();\n\n  /** Emits the item that has been removed from the list */\n  @Output() readonly itemRemoved = new EventEmitter();\n\n  /**\n   * Computes a unique id for an item\n   *\n   * @param _index Unused\n   * @param item An item\n   * @returns A unique id\n   */\n  itemId(_index: number, item: T): string {\n    return item.description;\n  }\n\n  /**\n   * Updates the selected state for an item\n   *\n   * @param index Index of item to update\n   * @param selected What to set the selected state to\n   */\n  updateItemSelection(index: number, selected: boolean): void {\n    const newItems = this.items = [...this.items];\n    newItems[index] = { ...newItems[index], selected };\n\n    const selectedItems = newItems.filter(item => item.selected);\n    this.selectionChanged.emit(selectedItems);\n  }\n\n  /**\n   * Removes an item from the list\n   *\n   * @param index Index of the item to remove\n   */\n  removeItem(index: number): void {\n    const newItems = this.items = [...this.items];\n    const [item] = newItems.splice(index, 1);\n    this.itemRemoved.emit(item);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchListModule.html":{"url":"modules/SpatialSearchListModule.html","title":"module - SpatialSearchListModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpatialSearchListModule\n\n\n\ncluster_SpatialSearchListModule_exports\n\n\n\ncluster_SpatialSearchListModule_declarations\n\n\n\n\nSpatialSearchListComponent\n\nSpatialSearchListComponent\n\n\n\nSpatialSearchListModule\n\nSpatialSearchListModule\n\nSpatialSearchListModule -->\n\nSpatialSearchListComponent->SpatialSearchListModule\n\n\n\n\n\nSpatialSearchListComponent \n\nSpatialSearchListComponent \n\nSpatialSearchListComponent  -->\n\nSpatialSearchListModule->SpatialSearchListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchListComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { SpatialSearchListComponent } from './spatial-search-list.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatListModule\n  ],\n  declarations: [SpatialSearchListComponent],\n  exports: [SpatialSearchListComponent]\n})\nexport class SpatialSearchListModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StackOp.html":{"url":"interfaces/StackOp.html","title":"interface - StackOp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StackOp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an operation to apply to the stack when building segments\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            removed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text index at which the changes takes effect\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removed:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to remove\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoreDebugComponent.html":{"url":"components/StoreDebugComponent.html","title":"component - StoreDebugComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StoreDebugComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n\n\n\n    \n        Description\n    \n    \n        Simple component for displaying the current values in the data store.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-store-debug\n            \n\n\n\n            \n                styleUrls\n                ./store-debug.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./store-debug.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Private\n                                root\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of store debug component.\nSets up the store data listeners.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data store.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detection for this component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-store-debug\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:34\n                        \n                    \n\n            \n                \n                    Latest store data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:26\n                                \n                            \n                    \n                        \n                                Gets the store data as a list of state name to key-value pairs\n\n\n                                \n                                    Returns :         KVList\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnDestroy, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\n\n/** Key-Value pair */\nexport type KVPair = [string, T];\n/** Array of Key-Value pairs */\nexport type KVList = KVPair[];\n\n/**\n * Simple component for displaying the current values in the data store.\n */\n@Component({\n  selector: 'ccf-store-debug',\n  templateUrl: './store-debug.component.html',\n  styleUrls: ['./store-debug.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StoreDebugComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-store-debug';\n\n  /**\n   * Gets the store data as a list of state name to key-value pairs\n   */\n  get data(): KVList {\n    const states: KVList> = Object.entries(this.root);\n    const stateValues: KVList = states.map(([key, values]) => [key, Object.entries(values)]);\n    const statesWithData = stateValues.filter(([_key, values]) => values.length > 0);\n    return statesWithData;\n  }\n\n  /** Latest store data */\n  private root: Record> = {};\n\n  /** Subscriptions managed by this component */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of store debug component.\n   * Sets up the store data listeners.\n   *\n   * @param store The data store.\n   * @param cdr Change detection for this component.\n   */\n  constructor(store: Store, cdr: ChangeDetectorRef) {\n    const sub = store.subscribe(root => {\n      this.root = root as Record>;\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  /**\n   * Cleans up subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{ state[0] }}\n  \n    \n      {{ kv[0] }}: {{ kv[1] | json }}\n    \n  \n\n\n    \n\n    \n                \n                    ./store-debug.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ state[0] }}            {{ kv[0] }}: {{ kv[1] | json }}      '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoreDebugComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreDebugModule.html":{"url":"modules/StoreDebugModule.html","title":"module - StoreDebugModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreDebugModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/store-debug/store-debug.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreDebugComponent } from './store-debug.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [StoreDebugComponent],\n  exports: [StoreDebugComponent]\n})\nexport class StoreDebugModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSearchComponent.html":{"url":"components/TextSearchComponent.html","title":"component - TextSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        A text search bar with optional autocompletion functionality.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-text-search\n            \n\n\n\n            \n                styleUrls\n                ./text-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                controller\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                    Async\n                                getOptions\n                            \n                            \n                                optionDisplay\n                            \n                            \n                                optionId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleter\n                            \n                            \n                                maxOptions\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                optionSelected\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultMaxOptions: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:100\n                            \n                        \n\n                \n                    \n                            Creates an instance of text search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultMaxOptions\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The default value for maxOptions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoCompleter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:76\n                            \n                        \n                \n                    \n                        Function providing the autocomplete suggestions.\nReceives the latest search bar text and the maximum of suggestions to provide.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxOptions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:70\n                            \n                        \n                \n                    \n                        Maximum number of autocomplete suggestions to show simultaneously\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search...'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:53\n                            \n                        \n                \n                    \n                        Placeholder text for the search bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                            \n                        \n                \n                    \n                        The text to show on the search bar\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        optionSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:86\n                            \n                        \n                \n                    \n                        Emits when an autocomplete option has been selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:81\n                            \n                        \n                \n                    \n                        Emits when the search bar text changes\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-text-search\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Private\n                        Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(search: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:120\n                \n            \n\n\n            \n                \n                    Fetches the latest autocomplete suggestions for the provided search text.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search text to find suggestions for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The found suggestions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionDisplay\n                        \n                    \n                \n            \n            \n                \noptionDisplay(option: AutoCompleteOption | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:139\n                \n            \n\n\n            \n                \n                    Text to show in search bar when an autocomplete option is selected.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                AutoCompleteOption | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The autocomplete option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The displayed text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionId\n                        \n                    \n                \n            \n            \n                \noptionId(_index: number, option: AutoCompleteOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:150\n                \n            \n\n\n            \n                \n                    Gets an unique identifier for an autocomplete option object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                AutoCompleteOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The option object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormControl()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:91\n                        \n                    \n\n            \n                \n                    Form controller for search bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:96\n                        \n                    \n\n            \n                \n                    Emits the latest autocomplete suggestions\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                                \n                            \n                    \n                        \n                                The text to show on the search bar\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { lastValueFrom, from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new UntypedFormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n    \n        \n  \n    \n      \n    \n\n    \n\n    \n      \n        \n        \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./text-search.component.scss\n                \n                :host {\n  display: block;\n\n  .form .form-field {\n    width: 100%;\n\n    .input {\n      margin-left: 0.5rem;\n    }\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        align-items: center;\n\n        .mat-form-field-infix {\n          height: 3rem;\n          border: none;\n        }\n\n        .mat-form-field-suffix {\n          top: 0;\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextSearchModule.html":{"url":"modules/TextSearchModule.html","title":"module - TextSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TextSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_imports\n\n\n\ncluster_TextSearchModule_exports\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextSearchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DecoratedTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MatPrefix\n                        \n                        \n                            MatSuffix\n                        \n                        \n                            TextSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { DecoratedTextModule } from '../decorated-text/decorated-text.module';\nimport { TextSearchComponent } from './text-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n    DecoratedTextModule\n  ],\n  declarations: [TextSearchComponent],\n  exports: [\n    TextSearchComponent,\n\n    // Reexport prefix/suffix markers\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport class TextSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackingPopupComponent.html":{"url":"components/TrackingPopupComponent.html","title":"component - TrackingPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TrackingPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tracking-popup\n            \n\n\n\n            \n                styleUrls\n                ./tracking-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracking-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                container\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                showButton\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allowTelemetry\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, consentService: ConsentService, data: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tracking-popup\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showButton\n                        \n                    \n                \n            \n            \n                \nshowButton(button: \"opt-in\" | \"opt-out\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            \"opt-in\" | \"opt-out\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(entry: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_SNACK_BAR_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allowTelemetry\n                    \n                \n\n                \n                    \n                        getallowTelemetry()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { ConsentService, Consent } from 'ccf-shared/analytics';\n\n\n@Component({\n  selector: 'ccf-tracking-popup',\n  templateUrl: './tracking-popup.component.html',\n  styleUrls: ['./tracking-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrackingPopupComponent {\n  @HostBinding('class') readonly clsName = 'ccf-tracking-popup';\n\n  get allowTelemetry(): Consent {\n    return this.consentService.consent;\n  }\n\n  container: HTMLElement;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  constructor(elementRef: ElementRef, readonly consentService: ConsentService, @Inject(MAT_SNACK_BAR_DATA) public data: any) {\n    this.container = elementRef.nativeElement;\n  }\n\n  dismiss(): void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    this.data.preClose();\n  }\n\n  submit(entry: boolean): void {\n    this.consentService.setConsent(entry ? 'given' : 'rescinded');\n    this.dismiss();\n  }\n\n  showButton(button: 'opt-in' | 'opt-out'): boolean {\n    const { allowTelemetry } = this;\n    if (allowTelemetry === 'not-set') {\n      return true;\n    } else {\n      return button === 'opt-in' ? allowTelemetry === 'rescinded' : allowTelemetry === 'given';\n    }\n  }\n}\n\n    \n\n    \n        We log usage to improve this service.\n\n  {{allowTelemetry === 'not-set' ? 'I understand' : 'Opt in'}}\n\nOpt out\n    \n\n    \n                \n                    ./tracking-popup.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-width: 400px;\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  z-index: 9999;\n\n  p {\n    margin: 24px;\n  }\n\n  button {\n    margin: 1rem;\n    min-width: 6rem;\n    background-color: #007cbe;\n    display: flex;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'We log usage to improve this service.  {{allowTelemetry === \\'not-set\\' ? \\'I understand\\' : \\'Opt in\\'}}Opt out'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrackingPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingPopupModule.html":{"url":"modules/TrackingPopupModule.html","title":"module - TrackingPopupModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingPopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TrackingPopupComponent } from './tracking-popup.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  declarations: [TrackingPopupComponent],\n  exports: [TrackingPopupComponent]\n})\nexport class TrackingPopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrackingState.html":{"url":"injectables/TrackingState.html","title":"injectable - TrackingState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TrackingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                setAllowTelemetry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        setAllowTelemetry\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAllowTelemetry(allowTelemetry: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/analytics/tracking.state.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    allowTelemetry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackingStateModel.html":{"url":"interfaces/TrackingStateModel.html","title":"interface - TrackingStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackingStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allowTelemetry\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowTelemetry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowTelemetry:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@angular-ru/ngxs/decorators';\nimport { NgxsImmutableDataRepository } from '@angular-ru/ngxs/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerCCFDatabaseDataSourceService.html":{"url":"injectables/WorkerCCFDatabaseDataSourceService.html","title":"injectable - WorkerCCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkerCCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createWorker\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getBiomarkerTermOccurences\n                            \n                            \n                                getBiomarkerTreeModel\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Worker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:103\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBiomarkerTreeModel\n                        \n                    \n                \n            \n            \n                \ngetBiomarkerTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XYZPositionComponent.html":{"url":"components/XYZPositionComponent.html","title":"component - XYZPositionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  XYZPositionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component displaying a x, y, and z position\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-xyz-position\n            \n\n\n\n            \n                styleUrls\n                ./xyz-position.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xyz-position.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                format\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                x\n                            \n                            \n                                y\n                            \n                            \n                                z\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        x\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:18\n                            \n                        \n                \n                    \n                        X position\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        y\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:21\n                            \n                        \n                \n                    \n                        Y position\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        z\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:24\n                            \n                        \n                \n                    \n                        Z position\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-xyz-position\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-xyz-position'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:15\n                        \n                    \n\n            \n                \n                    Html class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-xyz-position'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:15\n                        \n                    \n\n            \n                \n                    Html class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0-2'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:27\n                        \n                    \n\n            \n                \n                    Number format for position values\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Component displaying a x, y, and z position\n */\n@Component({\n  selector: 'ccf-xyz-position',\n  templateUrl: './xyz-position.component.html',\n  styleUrls: ['./xyz-position.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class XYZPositionComponent {\n  /** Html class name */\n  @HostBinding('class') readonly clsName = 'ccf-xyz-position';\n\n  /** X position */\n  @Input() x = 0;\n\n  /** Y position */\n  @Input() y = 0;\n\n  /** Z position */\n  @Input() z = 0;\n\n  /** Number format for position values */\n  readonly format = '1.0-2';\n}\n\n    \n\n    \n        X: {{ x | number:format }}\nY: {{ y | number:format }}\nZ: {{ z | number:format }}\n\n    \n\n    \n                \n                    ./xyz-position.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n\n  .line {\n    font-size: 1rem;\n    font-weight: 400;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'X: {{ x | number:format }}Y: {{ y | number:format }}Z: {{ z | number:format }}'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'XYZPositionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/XYZPositionModule.html":{"url":"modules/XYZPositionModule.html","title":"module - XYZPositionModule","body":"\n                   \n\n\n\n\n    Modules\n    XYZPositionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_XYZPositionModule\n\n\n\ncluster_XYZPositionModule_declarations\n\n\n\ncluster_XYZPositionModule_exports\n\n\n\n\nXYZPositionComponent\n\nXYZPositionComponent\n\n\n\nXYZPositionModule\n\nXYZPositionModule\n\nXYZPositionModule -->\n\nXYZPositionComponent->XYZPositionModule\n\n\n\n\n\nXYZPositionComponent \n\nXYZPositionComponent \n\nXYZPositionComponent  -->\n\nXYZPositionModule->XYZPositionComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/xyz-position/xyz-position.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            XYZPositionComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            XYZPositionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { XYZPositionComponent } from './xyz-position.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [XYZPositionComponent],\n  exports: [XYZPositionComponent]\n})\nexport class XYZPositionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { BodyUI, NodeClickEvent, NodeDragEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { Subscription } from 'rxjs';\n\n\ninterface XYZTriplet {\n  x: T;\n  y: T;\n  z: T;\n}\n\n/**\n * Component that handles displaying the 3D models in the stage\n */\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BodyUiComponent implements AfterViewInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-body-ui';\n\n  @Input()\n  get scene(): SpatialSceneNode[] {\n    return this._scene;\n  }\n\n  set scene(nodes: SpatialSceneNode[]) {\n    this._scene = nodes;\n    this.bodyUI?.setScene(nodes);\n  }\n\n  @Input()\n  get rotation(): number {\n    return this._rotation;\n  }\n\n  set rotation(value: number) {\n    this._rotation = value;\n    this.bodyUI?.setRotation(value);\n  }\n\n  @Input()\n  get rotationX(): number {\n    return this._rotationX;\n  }\n\n  set rotationX(value: number) {\n    this._rotationX = value;\n    this.bodyUI?.setRotationX(value);\n  }\n\n  @Input()\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  set zoom(value: number) {\n    this._zoom = value;\n    this.bodyUI?.setZoom(value);\n  }\n\n  @Input()\n  get target(): [number, number, number] {\n    return this._target;\n  }\n\n  set target(value: [number, number, number]) {\n    this._target = value;\n    this.bodyUI?.setTarget(value);\n  }\n\n  @Input()\n  get bounds(): XYZTriplet {\n    return this._bounds;\n  }\n\n  set bounds(value: XYZTriplet) {\n    this._bounds = value;\n    this.zoomToBounds(value);\n  }\n\n  @Input()\n  get camera(): string {\n    return this._camera;\n  }\n\n  set camera(value: string) {\n    this._camera = value;\n  }\n\n  @Output()\n  readonly rotationChange = new EventEmitter();\n\n  @Output()\n  readonly nodeDrag = new EventEmitter();\n\n  @Output()\n  readonly nodeClick = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStart = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStop = new EventEmitter();\n\n  @Output()\n  readonly initialized = new EventEmitter();\n\n  @Input()\n  get interactive(): boolean {\n    return this._interactive;\n  }\n\n  set interactive(value: boolean) {\n    this._interactive = value;\n    if (this.bodyUI) {\n      this.recreateBodyUI();\n    }\n  }\n\n  private _interactive = true;\n  private _rotation = 0;\n  private _rotationX = 0;\n  private _zoom = 9.5;\n  private _target: [number, number, number] = [0, 0, 0];\n  private _bounds: XYZTriplet;\n  private _scene: SpatialSceneNode[] = [];\n  private subscriptions: Subscription[] = [];\n  private _camera: string;\n\n  /**\n   * Instance of the body UI class for rendering the deckGL scene\n   */\n  bodyUI: BodyUI;\n\n  /**\n   * Reference to the div we are using to mount the body UI to.\n   */\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  /**\n   * Performs setup required after initialization\n   */\n  ngAfterViewInit(): void {\n    this.setupBodyUI();\n  }\n\n  zoomToBounds(bounds: XYZTriplet, margin = { x: 48, y: 48 }): void {\n    if (this.bodyCanvas) {\n      const { width, height } = this.bodyCanvas.nativeElement;\n      const pxRatio = window.devicePixelRatio;\n      const zoom = Math.min(\n        Math.log2((width - margin.x) / pxRatio / bounds.x),\n        Math.log2((height - margin.y) / pxRatio / bounds.y)\n      );\n      this.zoom = zoom;\n    }\n  }\n\n  /**\n   * Set up required to render the body UI with the scene nodes.\n   */\n  private async setupBodyUI(): Promise {\n    const canvas = this.bodyCanvas.nativeElement;\n    const bodyUI = new BodyUI({\n      id: 'body-ui',\n      canvas,\n      zoom: this.zoom,\n      target: [0, 0, 0],\n      rotation: 0,\n      minRotationX: -75,\n      maxRotationX: 75,\n      interactive: this.interactive,\n      camera: this.camera\n    });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n    await bodyUI.initialize();\n    this.bodyUI = bodyUI;\n    (window as unknown as { bodyUI: unknown }).bodyUI = bodyUI;\n    if (this.scene?.length > 0) {\n      this.bodyUI.setScene(this.scene);\n    }\n    if (this.bounds) {\n      this.zoomToBounds(this.bounds);\n    }\n    if (this.target) {\n      this.bodyUI.setTarget(this.target);\n    }\n    this.subscriptions = [\n      this.bodyUI.sceneRotation$.subscribe((rotation) => this.rotationChange.next(rotation)),\n      this.bodyUI.nodeDrag$.subscribe((event) => this.nodeDrag.emit(event)),\n      this.bodyUI.nodeClick$.subscribe((event) => this.nodeClick.emit(event)),\n      this.bodyUI.nodeHoverStart$.subscribe((event) => this.nodeHoverStart.emit(event)),\n      this.bodyUI.nodeHoverStop$.subscribe((event) => this.nodeHoverStop.emit(event))\n    ];\n    this.initialized.emit();\n  }\n\n  private recreateBodyUI(): void {\n    this.clearSubscriptions();\n    this.bodyUI.finalize();\n    this.setupBodyUI();\n  }\n\n  private clearSubscriptions(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  ngOnDestroy(): void {\n    this.clearSubscriptions();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.7.2 - 2023-07-12\nAdded in 3.7.2\n\nClient side cache has been updated to be more sensitive to configuration changes. Fixes hra-registrations#1\n\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            interface\n            AnalyticsOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            initCommands\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            toAttributes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            variable\n            EAGERLY_LOADED_SERVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/consent.service.ts\n            \n            injectable\n            ConsentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n            \n            injectable\n            GoogleAnalyticsSyncService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            injectable\n            LocalStorageSyncService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            variable\n            LOCAL_STORAGE_CONSENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n            \n            function\n            filterNulls\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n            \n            function\n            flatten\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n            \n            function\n            innerMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            interface\n            PluckUniqueOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            variable\n            DEFAULT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/src/public-api.ts\n            \n            variable\n            placeholder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n            \n            function\n            trackMousePosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            injectable\n            TrackingState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            interface\n            TrackingStateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            function\n            getTelemetryStorageSetting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            INITIAL_TELEMETRY_SETTING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            component\n            BodyUiComponent\n            \n                20 %\n                (7/34)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            interface\n            XYZTriplet\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts\n            \n            component\n            CallToActionBehaviorComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts\n            \n            component\n            CallToActionComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            interface\n            DecoratedRange\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            resolveIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            component\n            DecoratedTextComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            Segment\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            StackOp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n            \n            component\n            InfoButtonComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            injectable\n            InfoButtonService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            interface\n            DocumentationContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            interface\n            PanelData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            component\n            InfoDialogComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            interface\n            InfoDialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n            \n            component\n            OpacitySliderComponent\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            component\n            OrganSelectorComponent\n            \n                76 %\n                (23/30)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            interface\n            OrganInfo\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_POSSIBLE_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n            \n            component\n            SpatialSearchListComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n            \n            interface\n            SpatialSearchListItem\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n            \n            component\n            StoreDebugComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            component\n            TextSearchComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            interface\n            AutoCompleteOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            variable\n            DEFAULT_MAX_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n            \n            component\n            TrackingPopupComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts\n            \n            component\n            XYZPositionComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/config/global-config.state.ts\n            \n            injectable\n            GlobalConfigState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n            \n            directive\n            NumberDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            injectable\n            ApiEndpointDataSourceService\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            ApiEndpointDataSourceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            DefaultParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            FilterParams\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            cast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            filterToParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            rangeToMinMax\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            spatialSceneNodeReviver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            buster$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_NO_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceBaseService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceService\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            WorkerCCFDatabaseDataSourceService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            interface\n            CCFDatabaseManager\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n            \n            injectable\n            DataSourceService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            DelegateDataSource\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            ForwardingDataSource\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            interface\n            DataSource\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n            \n            injectable\n            InjectorDelegateDataSourceService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            injectable\n            GlobalsService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            variable\n            global\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n            \n            class\n            CloseDialog\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n            \n            class\n            LearnMore\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n            \n            class\n            OpenDialog\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts\n            \n            class\n            CallToActionSelectors\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n            \n            injectable\n            CallToActionState\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n            \n            interface\n            CallToActionModel\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n            \n            variable\n            POPUP_SHOWN_STORAGE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n            \n            variable\n            SPATIAL_SEARCH_README\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/cdk : ^14.10.1\n        \n            @angular-ru/common : ^15.313.0\n        \n            @angular-ru/ngxs : ^14.1.4\n        \n            @angular-slider/ngx-slider : ^2.0.4\n        \n            @angular/animations : ^16.1.5\n        \n            @angular/cdk : ^16.1.5\n        \n            @angular/common : ^16.1.5\n        \n            @angular/compiler : ^16.1.5\n        \n            @angular/core : ^16.1.6\n        \n            @angular/elements : ^16.1.6\n        \n            @angular/forms : ^16.1.5\n        \n            @angular/material : ^16.1.5\n        \n            @angular/platform-browser : ^16.1.5\n        \n            @angular/platform-browser-dynamic : ^16.1.5\n        \n            @angular/router : ^16.1.5\n        \n            @angular/youtube-player : ^16.1.5\n        \n            @comunica/query-sparql-rdfjs : ^2.8.1\n        \n            @deck.gl/core : ^8.9.22\n        \n            @deck.gl/geo-layers : ^8.9.22\n        \n            @deck.gl/layers : ^8.9.22\n        \n            @deck.gl/mesh-layers : ^8.9.22\n        \n            @loaders.gl/core : ^3.4.8\n        \n            @loaders.gl/draco : ^3.4.8\n        \n            @loaders.gl/gltf : ^3.4.8\n        \n            @luma.gl/core : ^8.5.21\n        \n            @math.gl/core : ^3.6.3\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/dispatch-decorator : ^5.0.0\n        \n            @ngxs/logger-plugin : ^3.8.1\n        \n            @ngxs/storage-plugin : ^3.8.1\n        \n            @ngxs/store : ^3.8.1\n        \n            @rdfjs/data-model : ^2.0.1\n        \n            @webcomponents/webcomponentsjs : ^2.8.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.20.2\n        \n            cannon-es : ^0.20.0\n        \n            comlink : ^4.4.1\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.14.10\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^11.1.1\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^7.0.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.2.1\n        \n            jsonld : ^8.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^10.0.0\n        \n            n3 : ^1.17.0\n        \n            ngx-google-analytics : ^14.0.1\n        \n            ngx-markdown : ^16.0.0\n        \n            ngx-slider-v2 : ^16.0.2\n        \n            node-fetch : ^3.3.2\n        \n            object-hash : ^3.0.0\n        \n            qs : ^6.11.2\n        \n            rdf-literal : ^1.3.1\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^4.4.2\n        \n            rxjs : ^7.8.1\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^8.0.6\n        \n            ts-cacheable : ^1.0.9\n        \n            tslib : ^2.6.1\n        \n            uuid : ^9.0.0\n        \n            zone.js : ~0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cast   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            filterNulls   (projects/.../filter-nulls.ts)\n                        \n                        \n                            filterToParams   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            flatten   (projects/.../flatten.ts)\n                        \n                        \n                            getTelemetryStorageSetting   (projects/.../tracking.state.ts)\n                        \n                        \n                            initCommands   (projects/.../analytics.module.ts)\n                        \n                        \n                            innerMap   (projects/.../inner-map.ts)\n                        \n                        \n                            normalize   (projects/.../decorated-range.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            rangeToMinMax   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            resolveIndex   (projects/.../decorated-range.ts)\n                        \n                        \n                            spatialSceneNodeReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            toAttributes   (projects/.../analytics.module.ts)\n                        \n                        \n                            trackMousePosition   (projects/.../mouse-position-tracker.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cast\n                        \n                    \n                \n            \n            \n                \ncast()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterToParams\n                        \n                    \n                \n            \n            \n                \nfilterToParams(filter?: Filter)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rangeToMinMax\n                        \n                    \n                \n            \n            \n                \nrangeToMinMax(range, low: number, high: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    range\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    low\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    high\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinMax | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spatialSceneNodeReviver\n                        \n                    \n                \n            \n            \n                \nspatialSceneNodeReviver(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filterNulls\n                        \n                    \n                \n            \n            \n                \nfilterNulls()\n                \n            \n\n\n\n\n            \n                \n                    Removes all null and undefined values from a stream.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        flatten\n                        \n                    \n                \n            \n            \n                \nflatten()\n                \n            \n\n\n\n\n            \n                \n                    Flattens a single level of nested arrays.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getTelemetryStorageSetting\n                        \n                    \n                \n            \n            \n                \ngetTelemetryStorageSetting()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     boolean | undefined\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initCommands\n                        \n                    \n                \n            \n            \n                \ninitCommands(options: AnalyticsOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AnalyticsOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IGoogleAnalyticsCommand[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAttributes\n                        \n                    \n                \n            \n            \n                \ntoAttributes(obj: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        innerMap\n                        \n                    \n                \n            \n            \n                \ninnerMap(project)\n                \n            \n\n\n\n\n            \n                \n                    Maps the values of each emitted array.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mapping callback invoked for each element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(range: Partial, length: number)\n                \n            \n\n\n\n\n            \n                \n                    Produces a new range object based on the input where all properties have been normalized.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    range\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to normalize.\n\n                                    \n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Max length for indices.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange\n\n                    \n                    \n                        A new object where all undefined values have been replaced with defaults and\nwhere all indices have been constrained to the range [0, length].\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveIndex\n                        \n                    \n                \n            \n            \n                \nresolveIndex(index: number, length: number)\n                \n            \n\n\n\n\n            \n                \n                    Resolves and normalizes an index for indexing into an array of length length.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index value to resolve. May be negative indicating an index from end.\n\n                                    \n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The length of the object on which this index will be used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        A positive index in range [0, length]\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1: K1, opts?: PluckUniqueOptions)\n                \n            \n\n\n\n\n            \n                \n                    Combines the functionaliy of pluck and distinctUntilChanged\nas well as adding a shareReplay.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    opts\n                                    \n                                                PluckUniqueOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1: K1, k2: K2, opts?: PluckUniqueOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                PluckUniqueOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1: K1, k2: K2, k3: K3, opts?: PluckUniqueOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n                                    \n                                            K3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                PluckUniqueOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, opts?: PluckUniqueOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n                                    \n                                            K3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n                                    \n                                            K4\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                PluckUniqueOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, opts?: PluckUniqueOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n                                    \n                                            K3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n                                    \n                                            K4\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n                                    \n                                            K5\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                PluckUniqueOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, opts?: PluckUniqueOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n                                    \n                                            K3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n                                    \n                                            K4\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n                                    \n                                            K5\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k6\n                                    \n                                            K6\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                                PluckUniqueOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        trackMousePosition\n                        \n                    \n                \n            \n            \n                \ntrackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ga\n                                    \n                                            GoogleAnalyticsService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) and Common Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://r5i95k35v5.us-east-2.awsapprunner.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\nCCF API Sample Notebooks/Vignettes:\nPython 3.6+:\nBasic Usage: ccf-api-usage.ipynb\nUse case walkthrough: ccf-api-usecase.ipynb\n\n\nJavaScript:\nBasic Usage: https://observablehq.com/@cns-iu/ccf-api-documentation-javascript\nUse case walkthrough: https://observablehq.com/@cns-iu/ccf-api-usecase-javascript\n\n\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CallToActionBehaviorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CallToActionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DecoratedTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MousePositionTrackerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NumbersOnlyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpacitySliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreDebugModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TextSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingPopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        XYZPositionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_CallToActionBehaviorModule\n\n\n\ncluster_CallToActionBehaviorModule_declarations\n\n\n\ncluster_CallToActionBehaviorModule_imports\n\n\n\ncluster_CallToActionBehaviorModule_exports\n\n\n\ncluster_CallToActionModule\n\n\n\ncluster_CallToActionModule_declarations\n\n\n\ncluster_CallToActionModule_exports\n\n\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\ncluster_SpatialSearchListModule\n\n\n\ncluster_SpatialSearchListModule_declarations\n\n\n\ncluster_SpatialSearchListModule_exports\n\n\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\ncluster_TextSearchModule_exports\n\n\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\ncluster_XYZPositionModule\n\n\n\ncluster_XYZPositionModule_declarations\n\n\n\ncluster_XYZPositionModule_exports\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nCallToActionBehaviorComponent\n\nCallToActionBehaviorComponent\n\n\n\nCallToActionBehaviorModule\n\nCallToActionBehaviorModule\n\nCallToActionBehaviorModule -->\n\nCallToActionBehaviorComponent->CallToActionBehaviorModule\n\n\n\n\n\nCallToActionBehaviorComponent \n\nCallToActionBehaviorComponent \n\nCallToActionBehaviorComponent  -->\n\nCallToActionBehaviorModule->CallToActionBehaviorComponent \n\n\n\n\n\nCallToActionModule\n\nCallToActionModule\n\nCallToActionBehaviorModule -->\n\nCallToActionModule->CallToActionBehaviorModule\n\n\n\n\n\nCallToActionComponent \n\nCallToActionComponent \n\nCallToActionComponent  -->\n\nCallToActionModule->CallToActionComponent \n\n\n\n\n\nCallToActionComponent\n\nCallToActionComponent\n\nCallToActionModule -->\n\nCallToActionComponent->CallToActionModule\n\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\nSpatialSearchListComponent\n\nSpatialSearchListComponent\n\n\n\nSpatialSearchListModule\n\nSpatialSearchListModule\n\nSpatialSearchListModule -->\n\nSpatialSearchListComponent->SpatialSearchListModule\n\n\n\n\n\nSpatialSearchListComponent \n\nSpatialSearchListComponent \n\nSpatialSearchListComponent  -->\n\nSpatialSearchListModule->SpatialSearchListComponent \n\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\nXYZPositionComponent\n\nXYZPositionComponent\n\n\n\nXYZPositionModule\n\nXYZPositionModule\n\nXYZPositionModule -->\n\nXYZPositionComponent->XYZPositionModule\n\n\n\n\n\nXYZPositionComponent \n\nXYZPositionComponent \n\nXYZPositionComponent  -->\n\nXYZPositionModule->XYZPositionComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.7.2\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consent   (projects/.../consent.service.ts)\n                        \n                        \n                            DataReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DataSourceDataType   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLike   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLikeMethod   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceMethod   (projects/.../data-source.ts)\n                        \n                        \n                            GlobalKey   (projects/.../globals.service.ts)\n                        \n                        \n                            GlobalThis   (projects/.../globals.service.ts)\n                        \n                        \n                            IObservableCacheConfig   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            KVList   (projects/.../store-debug.component.ts)\n                        \n                        \n                            KVPair   (projects/.../store-debug.component.ts)\n                        \n                        \n                            RequestMethod   (projects/.../api-endpoint.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/analytics/src/lib/consent.service.ts\n    \n    \n        \n            \n                \n                    \n                    Consent\n                \n            \n            \n                \n                        \"not-set\" | \"given\" | \"rescinded\"\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataReviver\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IObservableCacheConfig\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RequestMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/data-source.ts\n    \n    \n        \n            \n                \n                    \n                    DataSourceDataType\n                \n            \n            \n                \n                            ObservedValueOf>>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLike\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLikeMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceMethod\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n    \n        \n            \n                \n                    \n                    GlobalKey\n                \n            \n            \n                \n                    Type of keys allowed in the global object\n\n                \n            \n            \n                \n                        string | symbol\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GlobalThis\n                \n            \n            \n                \n                    Type of the global object\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n    \n    \n        \n            \n                \n                    \n                    KVList\n                \n            \n            \n                \n                    Array of Key-Value pairs\n\n                \n            \n            \n                \n                            KVPair[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    KVPair\n                \n            \n            \n                \n                    Key-Value pair\n\n                \n            \n            \n                \n                        [string, T]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            ALL_POSSIBLE_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            buster$   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_NO_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DEFAULT_MAX_OPTIONS   (projects/.../text-search.component.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (projects/.../pluck-unique.ts)\n                        \n                        \n                            EAGERLY_LOADED_SERVICES   (projects/.../analytics.module.ts)\n                        \n                        \n                            global   (projects/.../globals.service.ts)\n                        \n                        \n                            INITIAL_TELEMETRY_SETTING   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_CONSENT_KEY   (projects/.../local-storage-sync.service.ts)\n                        \n                        \n                            placeholder   (projects/.../public-api.ts)\n                        \n                        \n                            POPUP_SHOWN_STORAGE_KEY   (projects/.../call-to-action.state.ts)\n                        \n                        \n                            SPATIAL_SEARCH_README   (projects/.../call-to-action.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true)\n                    \n                \n\n            \n                \n                    All organs which have not been disabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALL_POSSIBLE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004549'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001911'\n  },\n  {\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma57991'\n  },\n  {\n    src: 'app:mammary-gland',\n    organ: 'Mammary Gland',\n    name: 'Mammary Gland, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma57987'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7213'\n  },\n  {\n    src: 'app:larynx',\n    organ: 'Larynx',\n    name: 'Larynx',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001737'\n  },\n  {\n    src: 'app:main-bronchus',\n    organ: 'Main Bronchus',\n    name: 'Main Bronchus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002182'\n  },\n  {\n    disabled: true,\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002373'\n  },\n  {\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma54974'\n  },\n  {\n    src: 'app:palatine-tonsil',\n    organ: 'Palatine Tonsil',\n    name: 'Palatine Tonsil, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma54973'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:placenta',\n    organ: 'Placenta',\n    name: 'Placenta',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001987'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spinal-cord',\n    organ: 'Spinal Cord',\n    name: 'Spinal Cord',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002240'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    src: 'app:trachea',\n    organ: 'Trachea',\n    name: 'Trachea',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003126'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[]\n                    \n                \n\n            \n                \n                    All organs that will eventually be displayed in the app\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buster$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_NO_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n}\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MAX_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n)\n                    \n                \n\n            \n                \n                    Token to provide a default for the maximum number of\nautocomplete suggestions to show at the same time.\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluckUniqueOptions<>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Default options\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EAGERLY_LOADED_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n]\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        global\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalThis\n\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INITIAL_TELEMETRY_SETTING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getTelemetryStorageSetting()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ALLOW_TELEMETRY'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_CONSENT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n})\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : undefined\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        POPUP_SHOWN_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'callToActionPopupShown'\n                    \n                \n\n            \n                \n                    Key for boolean determining if poup has been shown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPATIAL_SEARCH_README\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/docs/SPATIAL_SEARCH_README.md'\n                    \n                \n\n            \n                \n                    Path to readme markup doc\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
