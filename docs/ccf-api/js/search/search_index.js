var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AppOptions.html",[0,0.205,1,1.861]],["body/interfaces/AppOptions.html",[0,0.246,1,3.092,2,0.952,3,0.708,4,0.952,5,0.601,6,0.601,7,2.66,8,2.819,9,2.29,10,0.601,11,0.895,12,1.204,13,3.877,14,4.596,15,0.503,16,0.054,17,1.503,18,3.313,19,1.908,20,3.364,21,3.364,22,1.886,23,3.364,24,3.364,25,4.19,26,2.66,27,3.313,28,3.313,29,2.819,30,4.19,31,3.313,32,4.19,33,3.313,34,1.204,35,1.042,36,3.313,37,0.824,38,4.19,39,3.313,40,1.094,41,2.229,42,3.313,43,3.313,44,1.438,45,1.042,46,3.313,47,3.313,48,3.092,49,3.313,50,3.313,51,3.313,52,3.313,53,3.313,54,3.313,55,3.313,56,3.313,57,4.19,58,3.313,59,1.651,60,3.313,61,3.313,62,3.313,63,2.66,64,3.313,65,3.313,66,3.313,67,3.313,68,3.313,69,3.313,70,3.313,71,0.041,72,0.041]],["title/classes/AutoPruneLRUCache.html",[73,0.914,74,0.914]],["body/classes/AutoPruneLRUCache.html",[0,0.185,3,0.532,4,0.716,5,0.452,6,0.851,8,2.332,10,0.452,11,0.741,12,1.348,15,0.654,16,0.055,17,0.716,34,0.996,37,0.862,40,1.59,45,0.992,59,2.148,71,0.034,72,0.034,73,0.823,74,1.145,75,1.434,76,2.702,77,1.55,78,1.197,79,1.081,80,2.683,81,2.683,82,3.201,83,2.783,84,3.466,85,2.783,86,3.466,87,1.676,88,2.783,89,2.482,90,2.609,91,3.466,92,2.901,93,2.901,94,3.466,95,2.783,96,2.783,97,2.491,98,1.996,99,2.485,100,3.461,101,2.258,102,2.783,103,2.258,104,2.783,105,2.901,106,2.901,107,3.461,108,1.632,109,1.776,110,3.201,111,1.999,112,2.296,113,2.783,114,2.491,115,0.62,116,1.87,117,1.87,118,1.424,119,1.87,120,1.497,121,1.434,122,1.241,123,1.241,124,1.504,125,1.081,126,1.728,127,2.482,128,2.296,129,1.999,130,1.676,131,1.999,132,2.783,133,2.332,134,2.338,135,1.999,136,1.999,137,1.999,138,2.783,139,1.999,140,2.783,141,1.241,142,1.676,143,1.676,144,1.999,145,1.999,146,3.461,147,3.201,148,1.999,149,2.783,150,1.999,151,1.676,152,1.999,153,1.999,154,1.999]],["title/interfaces/AutoPruneLRUCacheOptions.html",[0,0.205,89,1.593]],["body/interfaces/AutoPruneLRUCacheOptions.html",[0,0.208,2,0.807,3,0.6,4,0.807,5,0.509,6,0.509,8,1.888,10,0.509,11,0.803,12,1.398,15,0.688,16,0.055,17,0.807,34,1.081,35,0.936,37,0.936,40,1.497,45,1.055,59,2.258,71,0.037,72,0.037,73,0.927,74,0.927,76,1.616,77,0.927,78,0.936,79,1.218,80,2.531,81,1.888,82,2.253,88,2.253,89,2.443,95,2.253,96,2.253,99,2.355,100,3.019,101,2.114,103,2.114,104,2.253,105,2.531,106,2.531,107,3.019,108,1.424,109,1.912,110,2.253,112,2.166,113,2.253,115,0.698,116,1.966,117,1.966,118,1.497,119,1.966,120,1.561,121,1.616,122,1.399,123,1.399,124,2.05,125,1.966,126,2.355,127,2.609,128,2.443,129,2.253,130,1.888,131,2.253,132,3.019,133,2.531,134,2.424,135,2.253,136,2.253,137,2.253,138,3.019,139,2.253,140,3.019,141,1.399,142,1.888,143,1.888,144,2.253,145,2.253,146,3.638,147,3.405,148,2.253,149,3.019,150,2.253,151,1.888,152,2.253,153,2.253,154,2.253]],["title/classes/CCFDatabaseInstance.html",[73,0.914,155,1.379]],["body/classes/CCFDatabaseInstance.html",[3,0.656,4,0.882,5,0.557,6,0.905,10,0.557,11,0.853,12,0.882,15,0.738,16,0.054,17,1.349,34,1.274,35,1.103,37,0.993,40,1.014,44,1.731,45,0.764,71,0.039,72,0.039,73,1.014,75,1.768,87,2.066,90,2.802,92,2.066,93,2.066,98,1.768,99,1.53,103,1.53,126,2.425,155,2.21,156,3.356,157,2.002,158,2.066,159,4.133,160,4.866,161,3.559,162,3.559,163,3.07,164,4.987,165,3.906,166,3.99,167,4.433,168,1.777,169,3.99,170,2.298,171,3.07,172,1.332,173,3.07,174,3.07,175,2.465,176,3.07,177,3.07,178,3.07,179,2.685,180,3.07,181,2.066,182,3.07,183,2.21,184,3.07,185,1.989,186,3.07,187,3.07,188,3.07,189,3.07,190,3.07,191,3.07,192,3.07,193,2.066,194,3.07,195,3.07,196,1.53,197,3.07]],["title/interfaces/CacheOptions.html",[0,0.205,198,1.861]],["body/interfaces/CacheOptions.html",[0,0.23,2,0.889,3,0.661,4,0.889,5,0.562,6,0.562,10,0.562,11,0.857,12,1.353,15,0.675,16,0.055,17,1.153,19,2.563,22,1.172,34,1.153,35,0.998,37,1.243,45,1.171,48,2.699,59,1.542,71,0.039,72,0.039,74,1.325,77,1.022,78,0.77,79,1.343,99,1.542,101,1.542,108,1.519,109,1.892,112,1.782,115,0.998,116,1.74,117,1.74,118,1.611,119,1.74,120,1.325,121,1.782,122,1.542,123,1.542,124,2.117,125,2.117,127,1.782,128,1.782,130,2.083,133,2.083,168,1.172,181,2.083,193,2.083,198,2.995,199,2.485,200,1.999,201,1.782,202,3.095,203,4.011,204,2.485,205,3.095,206,3.095,207,3.095,208,2.31,209,1.782,210,2.31,211,2.083,212,4.011,213,2.31,214,4.011,215,3.095,216,3.095,217,4.011,218,2.485,219,3.095,220,3.095,221,4.011,222,2.485,223,3.095]],["title/interfaces/DatabaseCacheOptions.html",[0,0.205,224,1.593]],["body/interfaces/DatabaseCacheOptions.html",[0,0.259,2,0.72,3,0.536,4,0.72,5,0.455,6,0.455,9,1.735,10,0.455,11,0.744,12,1.242,15,0.607,16,0.055,17,1.305,22,0.949,34,1.242,35,1.075,37,1.242,40,1.15,41,1.687,44,2.193,45,1.199,71,0.034,72,0.034,74,1.15,77,0.828,78,0.624,101,1.249,108,1.318,109,1.78,115,1.075,116,1.088,117,1.088,118,1.322,119,1.088,120,0.828,124,1.971,125,1.971,126,1.249,134,1.249,141,1.735,155,1.249,157,1.515,168,1.318,170,2.304,172,1.088,179,1.687,183,1.994,185,1.249,196,1.735,200,1.735,201,1.444,208,2.005,209,1.444,210,2.304,213,2.831,224,2.304,225,1.444,226,1.444,227,2.692,228,2.343,229,2.013,230,1.511,231,1.687,232,2.343,233,3.244,234,2.013,235,2.795,236,2.013,237,2.795,238,2.795,239,2.013,240,2.013,241,2.013,242,2.013,243,3.47,244,1.687,245,2.795,246,2.013,247,2.013,248,2.013,249,2.013,250,2.013,251,2.013,252,2.013,253,2.795,254,2.013,255,2.795,256,2.795,257,2.013,258,2.795,259,2.013,260,2.795,261,2.013,262,2.795,263,2.013,264,2.795,265,2.013,266,2.013,267,2.013,268,2.013,269,0.949,270,2.013,271,1.687,272,1.249,273,1.444,274,1.687,275,2.013,276,2.013,277,2.013,278,2.013,279,1.444,280,2.013,281,2.013,282,2.013,283,2.013,284,2.013,285,1.687,286,2.013,287,2.013]],["title/interfaces/DatabaseLoaderOptions.html",[0,0.205,9,1.379]],["body/interfaces/DatabaseLoaderOptions.html",[0,0.259,2,0.722,3,0.537,4,0.722,5,0.456,6,0.456,9,1.997,10,0.456,11,0.745,12,1.003,15,0.608,16,0.055,17,1.307,22,0.952,34,1.244,35,1.077,37,1.243,40,1.152,41,1.691,44,2.195,45,1.2,71,0.034,72,0.034,74,1.152,77,0.83,78,0.625,101,1.253,108,1.321,109,1.321,115,1.2,116,1.091,117,1.091,118,1.323,119,1.091,120,0.83,124,1.514,125,1.514,126,1.253,134,1.253,141,1.739,155,1.253,157,1.782,168,1.321,170,2.618,172,1.091,179,1.691,183,1.997,185,1.253,196,1.739,200,1.739,201,1.447,208,2.009,209,1.447,210,2.307,213,2.833,224,2.492,225,1.447,226,1.447,227,2.696,228,2.347,229,2.018,230,1.514,231,1.691,232,2.347,233,3.247,234,2.018,235,2.8,236,2.018,237,2.8,238,2.8,239,2.018,240,2.018,241,2.018,242,2.018,243,3.474,244,1.691,245,2.8,246,2.018,247,2.018,248,2.018,249,2.018,250,2.018,251,2.018,252,2.018,253,2.8,254,2.018,255,2.8,256,2.8,257,2.018,258,2.8,259,2.018,260,2.8,261,2.018,262,2.8,263,2.018,264,2.8,265,2.018,266,2.018,267,2.018,268,2.018,269,0.952,270,2.018,271,1.691,272,1.253,273,1.447,274,1.691,275,2.018,276,2.018,277,2.018,278,2.018,279,1.447,280,2.018,281,2.018,282,2.018,283,2.018,284,2.018,285,1.691,286,2.018,287,2.018]],["title/interfaces/GtexTissue.html",[0,0.205,288,1.861]],["body/interfaces/GtexTissue.html",[0,0.181,2,0.7,3,0.521,4,1.133,5,0.619,6,0.442,10,0.619,11,0.729,15,0.682,16,0.055,17,1.375,22,0.923,34,1.133,35,0.98,37,1.308,40,1.302,44,1.853,45,0.98,71,0.039,72,0.033,74,1.128,77,0.805,78,0.606,103,1.215,108,0.923,109,1.879,115,0.98,124,1.057,125,1.057,141,1.215,157,0.923,168,1.293,170,1.966,172,1.057,183,1.215,185,1.702,196,1.964,200,1.702,201,1.403,204,3.164,208,1.966,209,1.403,210,1.403,211,1.64,213,1.403,230,1.481,231,1.64,233,1.64,244,1.64,269,0.923,273,2.589,279,1.403,288,3.025,289,1.64,290,1.64,291,4.27,292,4.27,293,4.27,294,2.297,295,2.437,296,1.956,297,4.27,298,2.437,299,1.956,300,2.437,301,1.956,302,1.403,303,3.414,304,1.956,305,1.64,306,2.437,307,2.437,308,2.437,309,2.437,310,1.956,311,2.437,312,3.941,313,3.414,314,3.414,315,3.414,316,3.414,317,4.27,318,2.297,319,1.956,320,1.956,321,1.956,322,1.956,323,1.956,324,1.64,325,1.956,326,2.741,327,1.64,328,2.437,329,2.437,330,2.437,331,2.437,332,2.437,333,1.956,334,2.437,335,2.437,336,2.437,337,2.437,338,1.956,339,2.741,340,2.437,341,2.437,342,2.437,343,2.437,344,3.414,345,2.437,346,2.437,347,3.164,348,3.414,349,1.956,350,1.956,351,2.437,352,2.437,353,2.652,354,3.414,355,2.437,356,2.437,357,2.437,358,2.437,359,2.437,360,2.437,361,2.437,362,2.437,363,2.437,364,2.437,365,2.437,366,2.437,367,1.956,368,2.437,369,2.437,370,2.437,371,2.437,372,2.437,373,1.64,374,1.956,375,2.437,376,3.941,377,2.741,378,2.437,379,2.437,380,2.437]],["title/classes/RequestCache.html",[73,0.914,230,1.2]],["body/classes/RequestCache.html",[3,0.587,4,0.789,5,0.498,6,0.851,10,0.498,12,1.291,15,0.712,16,0.055,17,0.789,34,0.789,35,0.683,37,0.922,45,0.922,59,2.409,71,0.036,72,0.036,73,0.907,75,1.582,78,0.683,79,1.192,80,3.022,81,3.252,83,2.975,87,2.494,90,2.587,92,3.022,93,3.022,102,3.368,103,1.369,105,3.462,106,1.848,111,2.205,112,2.701,115,1.167,116,1.949,117,1.949,118,1.484,119,1.949,120,1.632,121,1.582,122,1.369,123,1.369,127,2.783,128,2.416,142,2.823,143,2.823,161,2.975,183,2.564,185,2.409,193,2.823,196,1.369,218,2.205,222,2.205,227,3.156,230,1.608,327,1.848,349,2.205,350,2.205,377,3.88,381,3.156,382,3.706,383,3.706,384,2.746,385,4.195,386,2.746,387,2.746,388,3.706,389,5.091,390,2.746,391,3.706,392,3.706,393,2.746,394,2.746,395,2.746,396,2.746,397,2.746,398,2.746]],["title/changelog.html",[399,1.572,400,1.345,401,1.572]],["body/changelog.html",[0,0.247,2,0.244,3,0.67,5,0.154,11,0.181,12,0.244,13,0.682,15,0.224,16,0.037,19,2.008,40,0.488,63,0.682,71,0.035,72,0.014,85,1.885,90,0.489,98,0.489,109,0.322,115,0.211,118,1.037,120,0.488,122,0.423,151,0.995,157,1.007,159,0.682,168,1.42,172,2.126,181,0.571,269,0.743,271,0.571,272,1.808,273,2.651,274,0.571,279,1.807,299,2.52,301,1.576,302,2.377,304,1.187,305,1.965,310,0.682,327,0.995,333,1.885,338,1.187,347,3.249,353,0.995,367,1.187,400,1.13,401,0.995,402,1.576,403,3.425,404,1.576,405,2.344,406,2.799,407,1.187,408,2.66,409,2.799,410,1.963,411,5.359,412,4.639,413,2.344,414,2.347,415,0.849,416,0.849,417,0.849,418,0.849,419,3.751,420,3.863,421,0.849,422,2.66,423,2.92,424,2.92,425,3.627,426,2.52,427,2.347,428,1.187,429,4.049,430,1.478,431,1.187,432,2.66,433,2.347,434,2.66,435,1.478,436,0.849,437,1.478,438,2.347,439,0.849,440,3.325,441,3.1,442,3.861,443,4.048,444,1.478,445,0.849,446,1.79,447,2.344,448,2.347,449,1.965,450,1.478,451,2.92,452,0.682,453,1.478,454,0.849,455,2.66,456,2.347,457,0.849,458,1.478,459,2.347,460,0.849,461,1.478,462,0.849,463,3.959,464,0.849,465,1.478,466,0.682,467,0.849,468,1.187,469,1.187,470,1.478,471,3.325,472,0.849,473,0.849,474,0.849,475,1.478,476,1.963,477,3.751,478,0.849,479,0.851,480,0.682,481,0.849,482,0.849,483,1.478,484,2.66,485,1.963,486,0.849,487,1.187,488,1.478,489,1.478,490,0.849,491,0.849,492,4.2,493,0.849,494,1.478,495,2.691,496,1.963,497,1.478,498,1.963,499,1.963,500,1.58,501,1.963,502,0.849,503,1.478,504,1.478,505,0.849,506,3.138,507,2.92,508,1.478,509,0.849,510,0.849,511,4.2,512,2.799,513,1.885,514,0.849,515,1.478,516,0.849,517,0.849,518,1.478,519,0.849,520,1.478,521,0.849,522,0.849,523,0.849,524,1.478,525,3.313,526,0.849,527,2.92,528,0.849,529,0.849,530,0.849,531,1.963,532,0.849,533,0.849,534,1.187,535,0.849,536,2.92,537,1.478,538,2.66,539,0.849,540,1.478,541,1.478,542,0.849,543,0.849,544,0.849,545,1.478,546,2.92,547,1.885,548,0.849,549,3.138,550,0.849,551,0.849,552,1.478,553,0.849,554,1.478,555,1.963,556,0.849,557,0.849,558,1.963,559,0.849,560,1.478,561,0.849,562,1.478,563,0.849,564,0.849,565,0.849,566,4.048,567,0.849,568,0.682,569,0.849,570,1.478,571,0.571,572,0.849,573,1.478,574,2.347,575,0.849,576,1.478,577,1.963,578,0.849,579,0.849,580,1.478,581,0.849,582,0.849,583,2.92,584,1.681,585,2.136,586,1.576,587,0.849,588,2.136,589,0.849,590,1.963,591,2.669,592,3.959,593,0.849,594,0.849,595,1.478,596,1.576,597,0.849,598,0.849,599,0.849,600,2.66,601,0.849,602,0.849,603,0.849,604,0.849,605,1.963,606,0.849,607,1.478,608,1.187,609,0.849,610,2.237,611,0.849,612,0.849,613,0.849,614,0.849,615,0.849,616,2.136,617,0.849,618,1.478,619,0.849,620,0.849,621,1.963,622,1.478,623,0.849,624,0.849,625,1.478,626,1.478,627,0.849,628,1.963,629,0.849,630,0.849,631,0.682,632,0.849,633,1.576,634,0.682,635,1.478,636,1.478,637,0.849,638,0.849,639,1.478,640,1.478,641,1.478,642,1.478,643,0.849,644,0.849,645,0.849,646,0.849,647,1.963,648,0.849,649,1.478,650,0.849,651,0.849,652,1.187,653,2.92,654,1.478,655,0.849,656,0.682,657,0.849,658,0.849,659,2.66,660,2.347,661,0.849,662,1.963,663,1.478,664,2.92,665,1.478,666,1.478,667,2.347,668,0.849,669,0.849,670,0.849,671,0.849,672,0.849,673,0.849,674,0.849,675,1.478,676,1.478,677,0.849,678,1.478,679,0.849,680,0.682,681,1.478,682,0.849,683,1.478,684,0.849,685,0.849,686,0.849,687,0.849,688,0.849,689,0.849,690,1.478,691,0.849,692,0.849,693,0.682,694,0.849,695,0.849,696,0.849,697,0.849,698,1.478,699,0.849,700,0.849,701,0.849,702,0.849,703,0.849,704,1.478,705,0.849,706,2.92,707,0.849,708,0.849,709,1.963,710,1.963,711,0.682,712,1.478,713,0.849,714,0.682,715,0.682,716,0.849,717,1.478,718,0.849,719,0.849,720,0.849,721,0.849,722,1.478,723,1.478,724,0.849,725,0.849,726,1.478,727,1.478,728,0.849,729,1.478,730,2.347,731,1.963,732,0.849,733,0.849,734,0.849,735,0.849,736,0.682,737,0.682,738,0.849,739,1.478,740,0.849,741,0.849,742,0.849,743,0.849,744,1.478,745,2.347,746,0.849,747,0.849,748,0.849,749,0.849,750,2.92,751,1.963,752,0.849,753,0.849,754,1.963,755,1.478,756,1.478,757,1.478,758,2.347,759,0.849,760,2.347,761,0.849,762,0.849,763,1.478,764,0.849,765,0.849,766,0.849,767,0.849,768,0.849,769,2.347,770,0.849,771,1.963,772,2.347,773,0.849,774,1.963,775,2.66,776,1.478,777,1.478,778,1.478,779,1.478,780,1.963,781,2.347,782,2.66,783,1.478,784,1.963,785,0.849,786,0.849,787,3.138,788,1.963,789,0.849,790,2.347,791,2.347,792,3.487,793,0.849,794,0.849,795,0.849,796,0.849,797,0.849,798,0.849,799,1.478,800,0.849,801,1.478,802,0.849,803,0.849,804,0.849,805,0.849,806,1.478,807,0.849,808,1.963,809,0.849,810,0.849,811,1.478,812,1.576,813,1.478,814,0.849,815,0.849,816,0.849,817,1.478,818,0.849,819,0.849,820,0.849,821,0.849,822,0.849,823,0.849,824,0.849,825,1.478,826,0.849,827,0.849,828,2.347,829,2.92,830,1.478,831,1.963,832,1.478,833,2.347,834,0.849,835,0.849,836,0.849,837,0.849,838,1.963,839,0.849,840,0.849,841,0.849,842,1.478,843,1.478,844,1.478,845,1.478,846,1.963,847,0.849,848,0.849,849,0.849,850,0.849,851,0.849,852,0.849,853,0.682,854,0.849,855,0.849,856,0.849,857,1.478,858,0.849,859,0.849,860,1.187,861,0.849,862,0.849,863,0.849,864,0.849,865,0.849,866,0.849,867,0.849,868,0.849,869,0.849,870,3.325,871,0.849,872,1.963,873,3.325,874,1.963,875,2.347,876,1.478,877,1.963,878,0.849,879,1.478,880,0.849,881,0.849,882,1.478,883,1.478,884,0.849,885,0.849,886,0.849,887,0.849,888,1.478,889,0.849,890,1.963,891,0.849,892,0.849,893,0.849,894,2.347,895,0.849,896,0.682,897,0.849,898,0.849,899,0.849,900,0.849,901,0.849,902,0.849,903,0.849,904,0.849,905,0.849,906,0.849,907,0.849,908,2.66,909,0.849,910,0.849,911,0.849,912,0.849,913,0.849,914,0.849,915,0.849,916,0.849,917,0.849,918,0.849,919,0.849,920,0.849,921,0.849,922,0.849,923,1.478,924,0.849,925,1.478,926,0.849,927,1.478,928,1.478,929,2.347,930,2.347,931,1.478,932,1.478,933,0.849,934,0.849,935,0.849,936,1.963,937,0.849,938,0.682,939,0.849,940,0.849,941,0.849,942,0.849,943,0.849,944,0.849,945,1.478,946,3.627,947,1.963,948,0.849,949,1.478,950,0.849,951,0.849,952,0.849,953,0.849,954,0.849,955,0.849,956,0.849,957,0.849,958,1.478,959,2.52,960,1.478,961,0.849,962,0.849,963,1.187,964,0.849,965,2.347,966,0.849,967,1.478,968,0.849,969,0.849,970,0.849,971,1.58,972,0.849,973,1.478,974,0.849,975,0.849,976,0.849,977,1.478,978,1.478,979,0.849,980,0.849,981,0.849,982,0.849,983,1.478,984,1.963,985,1.478,986,0.849,987,0.682,988,1.187,989,0.849,990,0.849,991,0.849,992,0.849,993,0.849,994,0.849,995,0.849,996,0.849,997,0.682,998,0.849,999,0.849,1000,1.478,1001,0.849,1002,0.849,1003,0.849,1004,0.849,1005,0.849,1006,0.849,1007,1.478,1008,0.849,1009,0.682,1010,0.849,1011,0.682,1012,0.682,1013,0.849,1014,0.849,1015,0.849,1016,1.478,1017,0.849,1018,0.849,1019,0.849,1020,0.849,1021,0.849,1022,0.849,1023,0.849,1024,0.849,1025,0.849,1026,0.849,1027,0.849,1028,1.478,1029,0.682,1030,0.849,1031,0.849,1032,1.478,1033,0.682,1034,0.682,1035,0.849,1036,0.849,1037,0.849,1038,0.849,1039,0.849,1040,0.849,1041,0.849]],["title/coverage.html",[971,2.506]],["body/coverage.html",[0,0.316,1,1.26,5,0.34,6,1.007,7,2.263,9,0.934,15,0.284,16,0.054,26,1.504,29,2.538,35,1.364,71,0.028,72,0.028,73,1.12,74,0.619,76,1.624,77,0.931,78,0.701,79,1.845,89,1.079,134,2.765,155,0.934,156,1.897,157,1.284,158,1.897,168,0.709,198,1.26,199,2.722,224,1.079,225,2.448,226,2.448,228,1.26,230,0.813,288,1.26,289,2.861,290,3.055,318,1.26,324,1.26,326,2.263,373,1.897,381,1.26,479,1.079,495,1.624,500,1.897,584,1.079,971,1.26,1042,1.873,1043,1.873,1044,1.873,1045,1.873,1046,5.528,1047,3.346,1048,1.873,1049,3.391,1050,1.873,1051,2.82,1052,1.873,1053,4.973,1054,1.504,1055,1.504,1056,3.391,1057,1.873,1058,1.873,1059,1.873,1060,1.873,1061,1.504,1062,1.873,1063,2.722,1064,1.504,1065,1.504,1066,2.263,1067,2.263,1068,1.504,1069,3.772,1070,2.82,1071,2.82,1072,1.504,1073,2.263,1074,2.263,1075,2.82,1076,1.873,1077,1.504,1078,2.82,1079,2.82,1080,1.504,1081,2.82,1082,1.504,1083,1.504,1084,1.873,1085,3.799,1086,3.799,1087,1.873,1088,1.873,1089,1.873,1090,1.873,1091,1.873,1092,1.873,1093,1.873,1094,1.873,1095,1.873,1096,1.504,1097,2.263,1098,2.263,1099,2.263,1100,1.873,1101,1.504,1102,2.263,1103,2.82,1104,3.542,1105,1.873,1106,1.873,1107,1.873,1108,1.873,1109,1.873,1110,1.873,1111,1.873,1112,2.82,1113,1.873,1114,1.873,1115,1.873]],["title/dependencies.html",[446,2.229,571,1.572]],["body/dependencies.html",[5,0.498,16,0.055,19,1.582,20,2.975,21,2.205,22,1.04,23,2.205,24,2.205,71,0.036,72,0.036,78,0.683,115,0.683,175,2.205,294,1.848,296,2.205,339,2.205,431,3.368,446,1.848,449,3.022,479,1.582,480,2.205,588,2.975,714,2.205,715,2.205,737,2.975,812,2.205,963,2.975,1116,2.746,1117,2.746,1118,2.746,1119,2.746,1120,2.746,1121,2.746,1122,2.746,1123,3.706,1124,2.746,1125,2.746,1126,5.145,1127,2.746,1128,2.746,1129,2.746,1130,2.746,1131,3.706,1132,2.746,1133,2.746,1134,2.746,1135,3.706,1136,2.746,1137,2.746,1138,2.746,1139,2.746,1140,2.746,1141,2.746,1142,2.746,1143,2.746,1144,4.492,1145,2.746,1146,3.706,1147,2.746,1148,2.746,1149,2.746,1150,4.195,1151,2.746,1152,2.746,1153,2.746,1154,2.746,1155,2.746,1156,2.746,1157,2.746,1158,2.746,1159,2.746,1160,2.746,1161,3.706,1162,3.706,1163,2.746,1164,3.706,1165,2.746,1166,2.746,1167,2.746,1168,2.205,1169,2.746,1170,2.746,1171,2.746,1172,2.746,1173,2.746,1174,2.746,1175,2.746,1176,2.746,1177,3.706,1178,2.746,1179,2.746,1180,2.746,1181,2.746,1182,2.746,1183,2.746,1184,2.746,1185,2.746,1186,2.746,1187,2.746,1188,2.746,1189,2.746,1190,2.746,1191,2.746,1192,2.746,1193,2.746,1194,3.706,1195,2.746,1196,2.746,1197,2.746,1198,2.746,1199,2.746,1200,2.746,1201,2.746,1202,2.746,1203,2.746,1204,2.746,1205,2.746,1206,2.746,1207,2.746,1208,2.746,1209,2.746,1210,4.195,1211,2.746,1212,2.746,1213,2.746,1214,2.746,1215,2.746,1216,2.746,1217,2.746,1218,2.746,1219,2.746,1220,2.746,1221,2.746,1222,2.746,1223,2.746,1224,2.746,1225,2.746,1226,2.746,1227,3.706,1228,2.746,1229,2.746,1230,2.746,1231,2.746,1232,2.746,1233,2.746,1234,2.746,1235,2.746,1236,2.746,1237,2.746,1238,2.746,1239,2.746,1240,2.746,1241,2.746,1242,2.746]],["title/index.html",[10,0.424,399,1.572,400,1.345]],["body/index.html",[0,0.294,2,0.871,3,1.035,16,0.039,71,0.039,72,0.039,120,1.001,172,2.326,269,1.499,272,2.328,302,3.016,305,2.663,401,2.04,402,3.177,403,3.177,404,3.177,405,4.167,406,3.537,409,2.434,413,2.434,420,3.537,426,3.177,429,3.177,441,2.434,449,2.04,452,3.75,466,3.177,468,3.177,469,3.75,495,2.538,534,3.177,547,2.434,568,2.434,584,1.746,585,3.89,586,3.89,591,3.177,596,2.434,608,3.177,610,2.04,616,2.434,633,2.434,634,2.434,711,3.177,736,2.434,896,2.434,988,2.434,997,2.434,1009,2.434,1033,2.434,1243,3.958,1244,3.032,1245,3.032,1246,3.032,1247,3.032,1248,3.177,1249,3.032,1250,3.032,1251,3.032,1252,3.958,1253,3.958,1254,3.958,1255,4.406,1256,3.032,1257,3.032,1258,4.406,1259,4.406,1260,3.032,1261,3.032,1262,3.958,1263,3.032,1264,3.032,1265,3.032,1266,3.958,1267,3.032,1268,2.434,1269,3.032,1270,3.032,1271,3.032,1272,3.958,1273,3.032,1274,3.032,1275,3.958,1276,3.958,1277,3.032,1278,3.958,1279,3.958,1280,3.032,1281,3.032,1282,3.032,1283,3.032,1284,3.032,1285,3.032,1286,3.032,1287,3.032,1288,3.032,1289,3.032,1290,3.032,1291,3.032,1292,3.032,1293,3.032,1294,3.032,1295,3.032,1296,3.032]],["title/license.html",[399,1.572,400,1.345,1297,1.875]],["body/license.html",[16,0.043,22,1.355,71,0.043,72,0.043,269,1.664,272,1.783,447,3.529,584,2.06,631,3.82,656,2.872,853,3.529,938,2.872,959,2.872,1012,2.872,1034,2.872,1248,4.292,1297,2.872,1298,3.578,1299,4.758,1300,3.578,1301,3.578,1302,4.396,1303,3.578,1304,3.578,1305,3.578,1306,3.578,1307,3.578,1308,3.578,1309,4.396,1310,3.578,1311,3.578,1312,3.578,1313,3.578,1314,3.578,1315,3.578,1316,3.578,1317,3.578,1318,3.578,1319,3.578,1320,3.578,1321,3.578,1322,4.396,1323,3.578,1324,3.578,1325,3.578,1326,3.578,1327,3.578,1328,3.578,1329,4.396,1330,3.578,1331,3.578,1332,3.578,1333,3.578,1334,3.578,1335,3.578,1336,3.578,1337,3.578,1338,3.578,1339,3.578,1340,3.578,1341,3.578,1342,3.578,1343,3.578,1344,3.578,1345,3.578,1346,3.578,1347,3.578,1348,3.578,1349,3.578,1350,3.578,1351,3.578,1352,3.578,1353,3.578,1354,3.578,1355,3.578,1356,3.578,1357,3.578]],["title/modules.html",[1358,2.99]],["body/modules.html",[16,0.048,71,0.048,72,0.048,1358,3.464]],["title/overview.html",[1359,2.99]],["body/overview.html",[2,1.229,16,0.048,71,0.048,72,0.048,75,2.463,428,3.433,860,3.433,1359,3.433]],["title/properties.html",[11,0.708,571,1.572]],["body/properties.html",[11,0.916,16,0.05,71,0.048,72,0.048,407,3.441,610,2.884]],["title/miscellaneous/typealiases.html",[1360,1.345,1361,3.313]],["body/miscellaneous/typealiases.html",[6,0.973,10,0.66,15,0.727,16,0.043,35,1.193,71,0.043,72,0.043,76,2.095,77,1.467,78,1.105,79,2.166,123,2.488,156,2.448,157,1.938,158,2.988,165,3.565,225,2.095,226,2.558,232,3.359,294,2.988,381,2.448,1047,2.448,1061,2.921,1066,2.921,1067,3.565,1082,2.921,1083,3.848,1104,2.921,1360,2.095,1362,3.638,1363,3.638,1364,3.638,1365,4.441,1366,4.441,1367,4.441,1368,4.441,1369,4.441,1370,4.441,1371,4.441,1372,3.638,1373,4.441,1374,3.638,1375,4.441,1376,2.921]],["title/miscellaneous/variables.html",[1360,1.345,1377,2.66]],["body/miscellaneous/variables.html",[6,0.907,10,0.457,15,0.768,16,0.054,29,3.312,37,0.998,44,1.516,45,0.627,48,2.352,71,0.039,72,0.034,98,3.01,99,2.605,108,1.323,115,0.627,118,1.431,162,2.023,200,2.159,211,2.352,269,0.954,285,2.352,289,1.696,290,2.7,302,2.012,318,2.352,319,2.023,320,2.023,321,2.023,322,2.023,323,2.023,324,2.352,325,2.023,353,1.696,373,1.696,374,2.805,479,1.451,487,2.023,495,1.451,500,1.696,512,2.023,513,2.023,525,2.023,652,2.023,680,2.023,693,2.805,987,3.653,1011,2.023,1029,2.023,1047,1.696,1054,2.805,1055,2.805,1063,2.023,1064,3.478,1065,3.221,1068,2.023,1072,2.023,1073,2.023,1074,3.478,1077,2.023,1080,2.023,1085,2.023,1086,2.805,1096,2.805,1097,2.023,1098,2.805,1099,2.805,1101,2.805,1102,2.023,1168,3.221,1268,2.805,1360,1.451,1376,2.805,1377,2.023,1378,4.012,1379,2.52,1380,4.551,1381,3.495,1382,2.52,1383,4.332,1384,2.52,1385,2.52,1386,2.52,1387,2.52,1388,4.332,1389,2.52,1390,2.52,1391,2.52,1392,2.52,1393,4.332,1394,2.52,1395,3.495,1396,3.495,1397,2.52,1398,2.52,1399,2.52,1400,2.52,1401,2.52,1402,2.52,1403,2.52,1404,2.52,1405,2.52,1406,2.52,1407,2.52,1408,2.52,1409,2.52,1410,2.52,1411,2.52,1412,2.52,1413,2.52,1414,2.52,1415,2.52,1416,2.52,1417,2.52,1418,2.52,1419,2.52,1420,2.52,1421,2.52,1422,2.52,1423,2.52,1424,2.52,1425,2.52,1426,2.52,1427,2.52,1428,2.52,1429,2.52,1430,2.52,1431,3.495,1432,4.012,1433,4.012,1434,2.52,1435,3.495,1436,2.52,1437,3.495,1438,2.52,1439,2.52,1440,2.52,1441,3.495,1442,2.52,1443,2.52,1444,2.52,1445,3.495,1446,2.52,1447,2.52,1448,2.52,1449,2.52,1450,2.52]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":134,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["0.1.0",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["0.13.1",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":988,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0/1",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":151,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"changelog.html":{}}}],["1.0",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["1.14.10",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["1.2.3",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["1.20.2",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":812,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["10",{"_index":279,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["10.0.0",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":207,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["1000",{"_index":209,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["100000",{"_index":131,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["10x",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["11.1.1",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":409,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["13",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["14.0.1",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["14.1.4",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["14.10.1",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["15.313.0",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["16.0.2",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["16.1.5",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["16.1.6",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["16.3.1",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["2.0",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["2.0.0",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["2.6.1",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":959,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["2022/rui_locations.jsonld",{"_index":323,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["2023",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":860,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["3.0.0",{"_index":588,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.1.0",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["3.2.10",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["3.3.2",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["3.5.7",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1272,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["3.6.3",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["3.7.2",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["3.8.0",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["3.8.1",{"_index":431,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.9.0",{"_index":407,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["30",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":1253,"title":{},"body":{"index.html":{}}}],["4.17.21",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["4th",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["5.0.0",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["5th",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":428,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["6.11.2",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":208,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["7.0.0",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":338,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["8.0.6",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["8.5.16",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["8.8.20",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["9.0.0",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["__",{"_index":216,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["_error",{"_index":350,"title":{},"body":{"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["_key",{"_index":281,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["_next",{"_index":374,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["_req",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_res",{"_index":285,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1012,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["access",{"_index":143,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/RequestCache.html":{}}}],["accurate",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1350,"title":{},"body":{"license.html":{}}}],["actions",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["actually",{"_index":309,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["adapter",{"_index":178,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["added",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":367,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["agemax",{"_index":313,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["agemean",{"_index":315,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["agemin",{"_index":314,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["agerange",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ala",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1362,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowdots",{"_index":47,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["allows",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["alpha",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1257,"title":{},"body":{"index.html":{}}}],["analagous",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["analytics",{"_index":715,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1320,"title":{},"body":{"license.html":{}}}],["angular",{"_index":449,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["anyobject",{"_index":123,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{},"miscellaneous/typealiases.html":{}}}],["api",{"_index":302,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api/ccf",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/src/lib/app.ts",{"_index":7,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["api/src/lib/environment.ts",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/middleware/database",{"_index":225,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/middleware/response",{"_index":199,"title":{},"body":{"interfaces/CacheOptions.html":{},"coverage.html":{}}}],["api/src/lib/polyfills.ts",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/routes/browser.ts",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/database",{"_index":1066,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/routes/v1/get",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/gtex/index.ts",{"_index":1073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/gtex/rui",{"_index":289,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/index.ts",{"_index":1077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/reference",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/sparql.ts",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/utils/forward",{"_index":1082,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/routes/v1/utils/parse",{"_index":1085,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/utils/use",{"_index":1097,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/xconsortia/index.ts",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/xconsortia/rui",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/server.ts",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/utils/auto",{"_index":76,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/utils/ccf",{"_index":156,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/utils/request",{"_index":381,"title":{},"body":{"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apifile",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":38,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.set('database",{"_index":39,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.set('query",{"_index":42,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use",{"_index":69,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use('/v1",{"_index":70,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(bodyparser.json",{"_index":67,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(bodyparser.urlencoded",{"_index":65,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(cors",{"_index":64,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(databaseloader(options",{"_index":68,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(helmet",{"_index":52,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["appear",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["applytoken",{"_index":253,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["appoptions",{"_index":1,"title":{"interfaces/AppOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["appropriate",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["args",{"_index":389,"title":{},"body":{"classes/RequestCache.html":{}}}],["arising",{"_index":1354,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":656,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":185,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["atlas",{"_index":404,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attempt",{"_index":332,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["attempts",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1343,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["autoprunelrucache",{"_index":74,"title":{"classes/AutoPruneLRUCache.html":{}},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"coverage.html":{}}}],["autoprunelrucacheoptions",{"_index":89,"title":{"interfaces/AutoPruneLRUCacheOptions.html":{}},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"coverage.html":{}}}],["available",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":196,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["award",{"_index":1295,"title":{},"body":{"index.html":{}}}],["backend",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1009,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["backgroundfetch",{"_index":107,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["base",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":711,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["before",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":591,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["biomarker",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["block",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":513,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["bmirange",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":19,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodyparser",{"_index":18,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["boolean",{"_index":204,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/GtexTissue.html":{}}}],["both",{"_index":652,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":963,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["browserify",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["browserroute",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browserroutes",{"_index":30,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["browsing",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1249,"title":{},"body":{"index.html":{}}}],["builds",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1300,"title":{},"body":{"license.html":{}}}],["cache",{"_index":115,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cache.cache.purgestale",{"_index":286,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["cache.delete(key",{"_index":398,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.get(key",{"_index":218,"title":{},"body":{"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["cache.get(selecttoken(token",{"_index":287,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["cache.get(token",{"_index":378,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["cache.set(key",{"_index":222,"title":{},"body":{"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["cache.ts",{"_index":79,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["cache.ts:12",{"_index":390,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.ts:13",{"_index":91,"title":{},"body":{"classes/AutoPruneLRUCache.html":{}}}],["cache.ts:27",{"_index":393,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.ts:31",{"_index":111,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"classes/RequestCache.html":{}}}],["cache.ts:39",{"_index":114,"title":{},"body":{"classes/AutoPruneLRUCache.html":{}}}],["cache.ts:51",{"_index":97,"title":{},"body":{"classes/AutoPruneLRUCache.html":{}}}],["cache.ts:6",{"_index":387,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache_dir",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":1098,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cachedresponse",{"_index":217,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["cacheoptions",{"_index":198,"title":{"interfaces/CacheOptions.html":{}},"body":{"interfaces/CacheOptions.html":{},"coverage.html":{}}}],["cacheresponses",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["cacheresponses(options",{"_index":206,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["call",{"_index":128,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["callback",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["cancelregistration",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":1275,"title":{},"body":{"index.html":{}}}],["cases",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":349,"title":{},"body":{"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["ccf",{"_index":172,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":164,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["ccfdatabaseinstance",{"_index":155,"title":{"classes/CCFDatabaseInstance.html":{}},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["ccfdatabaseoptions",{"_index":170,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["ccfdatabasestatustracker",{"_index":171,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["ccfdatabasestatustracker(this.database",{"_index":169,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["cdn.jsdelivr.net",{"_index":61,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["cell",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["celltypeterms",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":1290,"title":{},"body":{"index.html":{}}}],["change",{"_index":736,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":401,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1306,"title":{},"body":{"license.html":{}}}],["checkroutesenabled",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["choose",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1346,"title":{},"body":{"license.html":{}}}],["clamp",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["class",{"_index":73,"title":{"classes/AutoPruneLRUCache.html":{},"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["classes",{"_index":75,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{},"overview.html":{}}}],["clean",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["clearautoprune",{"_index":84,"title":{},"body":{"classes/AutoPruneLRUCache.html":{}}}],["clearautoprune(force",{"_index":96,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["clearinterval(this.pruner",{"_index":154,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["click",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":452,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["coalescing",{"_index":248,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["code",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["colorizing",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":175,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"dependencies.html":{}}}],["comlink/dist/umd/node",{"_index":177,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["common",{"_index":634,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":547,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["comunica/query",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1328,"title":{},"body":{"license.html":{}}}],["config",{"_index":680,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":63,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["connection",{"_index":1356,"title":{},"body":{"license.html":{}}}],["console.log(err",{"_index":241,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["consortium",{"_index":1301,"title":{},"body":{"license.html":{}}}],["consortiums",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":37,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["constructor(cache",{"_index":384,"title":{},"body":{"classes/RequestCache.html":{}}}],["constructor(database",{"_index":163,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["constructor(options",{"_index":88,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["constructor(public",{"_index":184,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["container",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1247,"title":{},"body":{"index.html":{}}}],["contentsecuritypolicy",{"_index":53,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["contract",{"_index":1351,"title":{},"body":{"license.html":{}}}],["control",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["controls",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["coordinate",{"_index":1281,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1322,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1309,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1299,"title":{},"body":{"license.html":{}}}],["cord",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["cors",{"_index":21,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["count",{"_index":316,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["coverage",{"_index":971,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createapp",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["createapp(options",{"_index":36,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["createccfdatabaseworker",{"_index":228,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["createccfdatabaseworker(options",{"_index":186,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["created",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["createdatabase",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["createdatabase(token",{"_index":245,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["credits",{"_index":1285,"title":{},"body":{"index.html":{}}}],["css",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["cuboid",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["cyberinfrastructure",{"_index":1287,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1347,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":273,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["database",{"_index":157,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["database.worker.js",{"_index":188,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["databasecacheoptions",{"_index":224,"title":{"interfaces/DatabaseCacheOptions.html":{}},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["databasegetter",{"_index":232,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"miscellaneous/typealiases.html":{}}}],["databaseloader",{"_index":26,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["databaseloader(options",{"_index":277,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["databaseloaderoptions",{"_index":9,"title":{"interfaces/DatabaseLoaderOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["databasequerymethods",{"_index":1366,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasesource",{"_index":1368,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasesources",{"_index":1370,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["datasets",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["datasources",{"_index":275,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["dbinstance",{"_index":238,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["dbinstance.database.connect().catch((err",{"_index":240,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["dbworker",{"_index":190,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["dbworker.database",{"_index":192,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["dbworker.sparqlquery",{"_index":194,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["dbworker[releaseproxy",{"_index":195,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["deal",{"_index":1311,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1357,"title":{},"body":{"license.html":{}}}],["december",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["deck.gl/core",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["decorator",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["deeply",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":98,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"classes/CCFDatabaseInstance.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_gtex_rui_locations",{"_index":318,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":203,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["defined",{"_index":90,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{},"changelog.html":{}}}],["demo",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":446,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":270,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["descrepancies",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["details",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1286,"title":{},"body":{"index.html":{}}}],["developments",{"_index":997,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["directives",{"_index":55,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["directly",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":117,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{}}}],["display",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["dispose",{"_index":126,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["distribute",{"_index":1318,"title":{},"body":{"license.html":{}}}],["doc",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["doconnect",{"_index":235,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["docs",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":584,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["dorequest",{"_index":385,"title":{},"body":{"classes/RequestCache.html":{}}}],["dotenv",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["duration",{"_index":149,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["during",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":737,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["enabled",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encoding",{"_index":336,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["entry.label",{"_index":357,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["entry.mappedinhubmap",{"_index":346,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["entry['@id']?.includes(tissueinfo.tissuesitedetailid",{"_index":356,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["env",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.gtex_routes",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.xconsortia_routes",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":300,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["eraslan",{"_index":322,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["es",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":116,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{}}}],["eslint/ban",{"_index":121,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["eslint/no",{"_index":127,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["eslint/prefer",{"_index":246,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["etc",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":420,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["eval",{"_index":60,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["event",{"_index":1342,"title":{},"body":{"license.html":{}}}],["expanded",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["exploration",{"_index":1251,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["express",{"_index":22,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"dependencies.html":{},"license.html":{}}}],["extended",{"_index":66,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["extends",{"_index":8,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["external",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":101,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["favor",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":312,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["fetch",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["fetch(gtex_api_url).then(r",{"_index":342,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["fetch(source).then(r",{"_index":330,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["field",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":306,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1310,"title":{},"body":{"license.html":{}}}],["filter",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["filter.ts",{"_index":1086,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter_defaults",{"_index":1096,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filters",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["final",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["finalized",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["finishing",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1338,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["flexible",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["fly",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1327,"title":{},"body":{"license.html":{}}}],["force",{"_index":100,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["form",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["forwarddatabasequery",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["forwarddatabasequery('getaggregateresults",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getbiomarkertermoccurences",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getbiomarkertreemodel",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getcelltypetermoccurences",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getcelltypetreemodel",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getdatasettechnologynames",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getontologytermoccurences",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getontologytreemodel",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getprovidernames",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getreferenceorgans",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getscene",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('gettissueblockresults",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1282,"title":{},"body":{"index.html":{}}}],["free",{"_index":1305,"title":{},"body":{"license.html":{}}}],["fs",{"_index":296,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["full",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":35,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["funded",{"_index":1293,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1325,"title":{},"body":{"license.html":{}}}],["further",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["get('/aggregate",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/biomarker",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/ccf",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/cell",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/hubmap/rui_locations.jsonld",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/index.html",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/ontology",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/provider",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/reference",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/rui_locations.jsonld",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/scene",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/sennet/rui_locations.jsonld",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/technology",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/tissue",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('ccf_api_cache",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('gtex_rui_locations",{"_index":328,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["get(key",{"_index":388,"title":{},"body":{"classes/RequestCache.html":{}}}],["getboolean",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["getcacheoptions",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["getdatabaseinstance",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["getdatabaseinstance(req",{"_index":234,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["getdatabaseoptions",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["getdatabasestatus",{"_index":1068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdbinstance",{"_index":236,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["getdbinstance(token",{"_index":239,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["getlocations",{"_index":326,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{}}}],["getnumber",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["getport",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["getreferenceorganscenehandler",{"_index":1080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getspatialplacement",{"_index":1072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":399,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["globalthis",{"_index":1371,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["good",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":714,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["granted",{"_index":1304,"title":{},"body":{"license.html":{}}}],["graphical",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["gtex_api_url",{"_index":324,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gtexroutes",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gtextissue",{"_index":288,"title":{"interfaces/GtexTissue.html":{}},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{}}}],["guide",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["hand",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["handleerrors",{"_index":382,"title":{},"body":{"classes/RequestCache.html":{}}}],["handleerrors(key",{"_index":391,"title":{},"body":{"classes/RequestCache.html":{}}}],["happen",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["hash",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["helmet",{"_index":23,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["help",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":310,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["hereby",{"_index":1303,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1344,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":405,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["http://expressjs.com/en/advanced/best",{"_index":49,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["https://apps.humanatlas.io/hra",{"_index":1266,"title":{},"body":{"index.html":{}}}],["https://beta",{"_index":1254,"title":{},"body":{"index.html":{}}}],["https://gtexportal.org/api/v2/dataset/tissuesitedetail",{"_index":325,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["https://hubmap",{"_index":1259,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":1258,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/hra",{"_index":319,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["https://humanatlas.io",{"_index":1283,"title":{},"body":{"index.html":{}}}],["https://observablehq.com/@cns",{"_index":1278,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1261,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1256,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":272,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmapdataurl",{"_index":268,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["hubmaptoken",{"_index":255,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["human",{"_index":402,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["idb",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1335,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["improve",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1330,"title":{},"body":{"license.html":{}}}],["includes",{"_index":304,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["including",{"_index":447,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":1291,"title":{},"body":{"index.html":{}}}],["individual",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["infinity",{"_index":148,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"index.html":{}}}],["information",{"_index":534,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["instance",{"_index":282,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["instance.then((r",{"_index":283,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["instead",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AppOptions.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":271,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{}}}],["isdebug",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["ishubmap",{"_index":262,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["issennet",{"_index":264,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["issue",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["iu",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["iu/ccf",{"_index":1279,"title":{},"body":{"index.html":{}}}],["javascript",{"_index":469,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["json.parse(data",{"_index":340,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["jsonld",{"_index":339,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["jsonld/jsonld",{"_index":298,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["jsonld['@graph",{"_index":341,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["jsonldobj",{"_index":297,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["july",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["k",{"_index":105,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/RequestCache.html":{}}}],["k,args",{"_index":386,"title":{},"body":{"classes/RequestCache.html":{}}}],["key",{"_index":112,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["keyboard",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["keyval",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1334,"title":{},"body":{"license.html":{}}}],["known",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["labs/dispatch",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["latest",{"_index":413,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layers",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["left/right",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["level",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1348,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1345,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":568,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1297,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1313,"title":{},"body":{"license.html":{}}}],["limited",{"_index":938,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":119,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{}}}],["link",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":596,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":294,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["little",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":333,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["loaddatabasesource",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["loaded",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["loader",{"_index":28,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["loader.ts",{"_index":226,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["loaders.gl/core",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":274,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{}}}],["local",{"_index":334,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["location",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["locations",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["locations.ts",{"_index":290,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lodash",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1284,"title":{},"body":{"index.html":{}}}],["logging",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["lru",{"_index":78,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["lrucache",{"_index":80,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/RequestCache.html":{}}}],["lrucache.setoptions",{"_index":110,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["luma.gl/core",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["made",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":317,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["managers",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":307,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["mappedentries",{"_index":344,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["mappedinhubmap",{"_index":291,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["march",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":72,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchingentry",{"_index":354,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["math.gl/core",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["math.gl/culling",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["math.max(this.ttl",{"_index":150,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["max",{"_index":124,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["maxage",{"_index":125,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["mc",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["mean",{"_index":366,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["member",{"_index":142,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/RequestCache.html":{}}}],["memory",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1337,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1316,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":83,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"classes/RequestCache.html":{}}}],["middleware/database",{"_index":27,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["milestone",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["mimetype",{"_index":182,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["minor",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1360,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1298,"title":{},"body":{"license.html":{}}}],["mock",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1168,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["model.json",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":1315,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1358,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1244,"title":{},"body":{"index.html":{}}}],["more",{"_index":305,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{}}}],["moved",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1245,"title":{},"body":{"index.html":{}}}],["n3",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["n=${sexstats.count",{"_index":365,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["name",{"_index":93,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["names",{"_index":693,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["navigation",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1288,"title":{},"body":{"index.html":{}}}],["never",{"_index":14,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["new",{"_index":168,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":118,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["next('router",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngx",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1294,"title":{},"body":{"index.html":{}}}],["node",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["nodeendpoint",{"_index":176,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["nodisposeonset",{"_index":136,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["noninfringement",{"_index":1341,"title":{},"body":{"license.html":{}}}],["note",{"_index":301,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["notebooks",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["notebooks/vignettes",{"_index":1273,"title":{},"body":{"index.html":{}}}],["notice",{"_index":853,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["nullish",{"_index":247,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["number",{"_index":109,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["numeric",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["object",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["obtaining",{"_index":1308,"title":{},"body":{"license.html":{}}}],["occurences",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["off/on",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1260,"title":{},"body":{"index.html":{}}}],["one",{"_index":896,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ones",{"_index":308,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["online",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["ontologyterms",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opacities",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":608,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1269,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1271,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1270,"title":{},"body":{"index.html":{}}}],["openapiroute",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optimization",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{},"changelog.html":{}}}],["options",{"_index":40,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["options.cache?.max",{"_index":278,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options.cache?.maxage",{"_index":280,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options.database",{"_index":41,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options.datasources.map(applytoken",{"_index":276,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options.hubmaptoken",{"_index":250,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options?.dispose?.(key",{"_index":137,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["options?.max",{"_index":130,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{}}}],["options?.maxage",{"_index":133,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{}}}],["organ",{"_index":495,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":525,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs.json",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["originalsend",{"_index":220,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["originalsend.call(res",{"_index":223,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["originalurl",{"_index":212,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["orthographic",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":1296,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1353,"title":{},"body":{"license.html":{}}}],["out",{"_index":1355,"title":{},"body":{"license.html":{}}}],["over",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1359,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":571,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["pan",{"_index":321,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":92,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["parent",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["parsearray",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["parseboolean",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["parseboolean(query.cache",{"_index":215,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["parseboolean(value",{"_index":202,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["parsedatabasesources",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["parsedqs",{"_index":25,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["parseminmaxrange",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["parsenumber",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["parser",{"_index":20,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["parserange",{"_index":1090,"title":{},"body":{"coverage.html":{}}}],["parsesex",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["parsespatial",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["parsestring",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["part",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["partial",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":1339,"title":{},"body":{"license.html":{}}}],["partly",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["patchglobal",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["performance",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1302,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1323,"title":{},"body":{"license.html":{}}}],["person",{"_index":1307,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1324,"title":{},"body":{"license.html":{}}}],["pick",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["pickbytype",{"_index":1373,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["placeholder",{"_index":13,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["placement",{"_index":487,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["placement.ts",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["placenta",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["popup",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":616,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1332,"title":{},"body":{"license.html":{}}}],["position",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["post('/get",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["practice",{"_index":50,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["preferences",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":81,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/RequestCache.html":{}}}],["process",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["process.env",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["processparameter",{"_index":1093,"title":{},"body":{"coverage.html":{}}}],["production",{"_index":585,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1246,"title":{},"body":{"index.html":{}}}],["projects/.../auto",{"_index":1363,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../browser.ts",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ccf",{"_index":1374,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../database",{"_index":1365,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../environment.ts",{"_index":1376,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../forward",{"_index":1367,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../index.ts",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../parse",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../polyfills.ts",{"_index":1372,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../request",{"_index":1364,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../rui",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../server.ts",{"_index":1369,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../use",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":183,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["promisifieddorequest",{"_index":383,"title":{},"body":{"classes/RequestCache.html":{}}}],["promisifieddorequest(key",{"_index":392,"title":{},"body":{"classes/RequestCache.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"properties.html":{}}}],["provided",{"_index":1034,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["prune",{"_index":77,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["pruner",{"_index":82,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["public",{"_index":159,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"changelog.html":{}}}],["publish",{"_index":1317,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1340,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":468,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":24,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["qs.parse(str",{"_index":46,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["qtoken",{"_index":243,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["qualitative",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":480,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":181,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"changelog.html":{}}}],["query.ts",{"_index":1083,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["querying",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["queryparameterstofilter",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["quickly",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["r.dispose",{"_index":284,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["r.json",{"_index":343,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["r.text",{"_index":331,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["range",{"_index":369,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["rawtoken",{"_index":376,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["rc.1",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["readfilesync",{"_index":295,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["readfilesync(source",{"_index":335,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["readonly",{"_index":161,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["real",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["rectify",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":403,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["refernced",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":633,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["registrations#1",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["registrations/gtex",{"_index":320,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["releaseproxy",{"_index":173,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["reliability",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["replace(/^hbm",{"_index":259,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["replace(/^snt",{"_index":261,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["repository",{"_index":1243,"title":{},"body":{"index.html":{}}}],["req",{"_index":210,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["req.app.get('database",{"_index":375,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["req.query.token",{"_index":244,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["req['getdatabase",{"_index":237,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["request",{"_index":227,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{}}}],["requestcache",{"_index":230,"title":{"classes/RequestCache.html":{}},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["requesthandler",{"_index":200,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["res",{"_index":211,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["res.json",{"_index":221,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["res.json(cachedresponse",{"_index":219,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["res.json(result",{"_index":379,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["res.send",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.sendfile(apifile",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.status(500).json",{"_index":380,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["resets",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["resolve('ccf",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolved",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":303,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["response?.data?.filter(entry",{"_index":345,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["restriction",{"_index":1312,"title":{},"body":{"license.html":{}}}],["result",{"_index":377,"title":{},"body":{"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["result.ts",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":71,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultslist.find(entry",{"_index":355,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["resultslist.indexof(matchingentry",{"_index":359,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["resultslist[index].label",{"_index":363,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["resultslist[index].sex",{"_index":372,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["return",{"_index":45,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":102,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"classes/RequestCache.html":{}}}],["returntype",{"_index":95,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["rgb",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1314,"title":{},"body":{"license.html":{}}}],["rnaseqsamplesummary",{"_index":292,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["root",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["router",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":29,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes/browser",{"_index":31,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["routes/v1",{"_index":33,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ru/cdk",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["ru/common",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["ru/ngxs",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":429,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["ruilocations",{"_index":373,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ruilocations('https://search.api.hubmapconsortium.org/v3/entities/search",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ruilocations('https://search.api.sennetconsortium.org/entities/search",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":252,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["sample",{"_index":1033,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["samples",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":512,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["scene.ts",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["scheduled",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1289,"title":{},"body":{"index.html":{}}}],["script",{"_index":56,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["search",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["searches",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["security.html",{"_index":51,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["see",{"_index":426,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["selecttoken",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["selecttoken(token",{"_index":242,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["self",{"_index":58,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["sell",{"_index":1321,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["sennettoken",{"_index":260,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["sensitive",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":85,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"changelog.html":{}}}],["set(key",{"_index":104,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["setifdefined",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["setinterval",{"_index":152,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["setoptions",{"_index":140,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["setup",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":353,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sexes",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["sexstats",{"_index":360,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sexstats.agemax",{"_index":371,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sexstats.agemean",{"_index":368,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sexstats.agemin",{"_index":370,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sex}s",{"_index":364,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["shall",{"_index":1329,"title":{},"body":{"license.html":{}}}],["shared",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["shortest",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["sides",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["simplifies",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["sites",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["slider",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["slider/ngx",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1248,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["source.startswith('http",{"_index":329,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sources",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["sparc",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":479,"title":{},"body":{"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sparqlquery",{"_index":160,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["sparqlqueryfunction",{"_index":165,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"miscellaneous/typealiases.html":{}}}],["spatial",{"_index":500,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spatialsearches",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec",{"_index":299,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1268,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["specific",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1267,"title":{},"body":{"index.html":{}}}],["speed",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["split('|').filter(s",{"_index":251,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["sprint",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":57,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["stage",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":586,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1252,"title":{},"body":{"index.html":{}}}],["startautoprune",{"_index":86,"title":{},"body":{"classes/AutoPruneLRUCache.html":{}}}],["startautoprune(force",{"_index":113,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["started",{"_index":400,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["startserver",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["startup",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["statements",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":162,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"miscellaneous/variables.html":{}}}],["status.ts",{"_index":1067,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["stay",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["str",{"_index":43,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["stream",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":44,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["string).includes(sex",{"_index":358,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["structure",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1326,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1319,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1331,"title":{},"body":{"license.html":{}}}],["such",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":129,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["super.set(key",{"_index":144,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["support",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["symbol('indicator",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sync",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["t.startswith('hbm",{"_index":257,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["t.startswith('snt",{"_index":258,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["table",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["technologies",{"_index":1011,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["technology",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["term",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terms",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["this.clearautoprune",{"_index":139,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["this.dorequest(key",{"_index":396,"title":{},"body":{"classes/RequestCache.html":{}}}],["this.get(key",{"_index":397,"title":{},"body":{"classes/RequestCache.html":{}}}],["this.handleerrors(key",{"_index":395,"title":{},"body":{"classes/RequestCache.html":{}}}],["this.promisifieddorequest(key",{"_index":394,"title":{},"body":{"classes/RequestCache.html":{}}}],["this.pruner",{"_index":146,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["this.purgestale",{"_index":153,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["this.size",{"_index":138,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["this.startautoprune",{"_index":145,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["this.ttl",{"_index":147,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["through",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["throw_if_not_found",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["throwindicator",{"_index":1375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["thrown",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thumbnails",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":347,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["tissueinfo",{"_index":352,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tissueinfo.rnaseqsamplesummary.female",{"_index":362,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tissueinfo.rnaseqsamplesummary.male",{"_index":361,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tissues",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["tissuesitedetailid",{"_index":293,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tmc",{"_index":1029,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["token",{"_index":233,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["tool",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1352,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":311,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tracking/telemetry",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["transparency",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":987,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":48,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":327,"title":{},"body":{"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{}}}],["tryjsonparse",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["ts",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["ttl",{"_index":132,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["ttlautopurge",{"_index":135,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{}}}],["tuned",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1361,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":141,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["types",{"_index":122,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{},"changelog.html":{}}}],["typescript",{"_index":120,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":441,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1255,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1265,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1262,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":1264,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1263,"title":{},"body":{"index.html":{}}}],["uis",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":108,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["university",{"_index":1292,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":193,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["unnecessary",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["unpkg.com",{"_index":62,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["unsafe",{"_index":59,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["unselect",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["updateentry",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["updateentry(results",{"_index":348,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["updateentry(resultslist",{"_index":351,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["updates",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":213,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["url.endswith('hubmap/rui_locations.jsonld",{"_index":263,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["url.endswith('sennet/rui_locations.jsonld",{"_index":265,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["url}?token=${hubmaptoken",{"_index":266,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["url}?token=${sennettoken",{"_index":267,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["usage",{"_index":466,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["usage.ipynb",{"_index":1274,"title":{},"body":{"index.html":{}}}],["use",{"_index":269,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["use('/ccf.owl.n3store.json",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use('/db",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use('/gtex",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use('/sparql",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use(cacheresponses",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use(checkroutesenabled",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecache",{"_index":214,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["usecachedresult",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["usecachedresult('ccf.owl.n3store.json",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecachedresult('cell",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecachedresult('ontology",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecachedresult('reference",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecase",{"_index":1280,"title":{},"body":{"index.html":{}}}],["usecase.ipynb",{"_index":1277,"title":{},"body":{"index.html":{}}}],["used",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["usedefaults",{"_index":54,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["user",{"_index":406,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["utf",{"_index":337,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["utilities",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["utils/auto",{"_index":201,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["utils/ccf",{"_index":229,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["utils/request",{"_index":231,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["uuid",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["v",{"_index":106,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/RequestCache.html":{}}}],["v1.1",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["v1.4",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["v1routes",{"_index":32,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["v2",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["v2.0",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["v2.1.0",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":99,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"miscellaneous/variables.html":{}}}],["value}`.tolowercase",{"_index":205,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["variable",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1377,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":610,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["very",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["visual",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":103,"title":{},"body":{"classes/AutoPruneLRUCache.html":{},"interfaces/AutoPruneLRUCacheOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["vs",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["walkthrough",{"_index":1276,"title":{},"body":{"index.html":{}}}],["warming",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1336,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1333,"title":{},"body":{"license.html":{}}}],["web",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1250,"title":{},"body":{"index.html":{}}}],["week",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1349,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["within",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":631,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["worker",{"_index":179,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["worker('./dist/server/ccf",{"_index":187,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker.terminate",{"_index":197,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker.ts",{"_index":158,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["worker.ts:10",{"_index":166,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker.ts:12",{"_index":167,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker_threads",{"_index":180,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["workerdata",{"_index":189,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["workflows",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":174,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["wrap(nodeendpoint(worker",{"_index":191,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["xconsortiaroutes",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xconsortiatokens",{"_index":249,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["xconsortiatokens.find((t",{"_index":256,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["xconsortiatokens.length",{"_index":254,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["yes",{"_index":94,"title":{},"body":{"classes/AutoPruneLRUCache.html":{}}}],["youtube",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["zone.js",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/app.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DatabaseLoaderOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     never\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     never\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import bodyParser from 'body-parser';\nimport cors from 'cors';\nimport express, { Express } from 'express';\nimport helmet from 'helmet';\nimport qs, { ParsedQs } from 'qs';\n\nimport { databaseLoader, DatabaseLoaderOptions } from './middleware/database-loader';\nimport { routes as browserRoutes } from './routes/browser';\nimport { routes as v1Routes } from './routes/v1';\n\nexport interface AppOptions extends DatabaseLoaderOptions {\n  placeholder?: never;\n}\n\n\nexport function createApp(options: AppOptions): Express {\n  const app = express();\n\n  app.set('database-options', options.database);\n\n  app.set('query parser', function (str: string): ParsedQs {\n    return qs.parse(str, { allowDots: true });\n  });\n\n  // http://expressjs.com/en/advanced/best-practice-security.html\n  app.use(helmet({\n    contentSecurityPolicy: {\n      useDefaults: true,\n      directives: {\n        'script-src': ['\\'self\\'', '\\'unsafe-eval\\'', 'cdn.jsdelivr.net', 'unpkg.com'],\n        'connect-src': ['*'],\n      }\n    }\n  }));\n  app.use(cors());\n\n  app.use(bodyParser.urlencoded({ extended: true }));\n  app.use(bodyParser.json());\n\n  app.use(databaseLoader(options));\n\n  app.use('/', browserRoutes);\n  app.use('/v1', v1Routes);\n\n  return app;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AutoPruneLRUCache.html":{"url":"classes/AutoPruneLRUCache.html","title":"class - AutoPruneLRUCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AutoPruneLRUCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        LRUCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                pruner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearAutoPrune\n                            \n                            \n                                set\n                            \n                            \n                                startAutoPrune\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: AutoPruneLRUCacheOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        AutoPruneLRUCacheOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        pruner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReturnType<>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearAutoPrune\n                        \n                    \n                \n            \n            \n                \nclearAutoPrune(force)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                force\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: K, value: V | BackgroundFetch | undefined, options?: number | LRUCache.SetOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        V | BackgroundFetch | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        number | LRUCache.SetOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startAutoPrune\n                        \n                    \n                \n            \n            \n                \nstartAutoPrune(force)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                force\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BackgroundFetch, LRUCache } from 'lru-cache';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype AnyObject = {};\n\nexport interface AutoPruneLRUCacheOptions {\n  max?: number;\n  maxAge?: number;\n  dispose?: (key: K, value: V) => void;\n}\n\nexport class AutoPruneLRUCache extends LRUCache {\n  private pruner?: ReturnType;\n\n  constructor(options?: AutoPruneLRUCacheOptions) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    super({\n      max: options?.max ?? 100000,\n      ttl: options?.maxAge ?? 0,\n      ttlAutopurge: (options?.maxAge ?? 0) > 0,\n      noDisposeOnSet: false,\n      dispose: (value, key) => {\n        options?.dispose?.(key, value);\n        if (this.size === 0) {\n          this.clearAutoPrune();\n        }\n      }\n    });\n  }\n\n  set(key: K, value: V | BackgroundFetch | undefined, options?: number | LRUCache.SetOptions): this {\n    const setOptions = typeof options === 'number' ? { ttl: options } : options;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    super.set(key, value, setOptions);\n    this.startAutoPrune();\n    return this;\n  }\n\n  startAutoPrune(force = false): void {\n    if (this.pruner ?? !this.ttl ?? this.ttl === Infinity) {\n      return;\n    }\n\n    if (this.size !== 0 || force) {\n      const duration = Math.max(this.ttl, 1);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.pruner = setInterval(() => this.purgeStale(), duration);\n    }\n  }\n\n  clearAutoPrune(force = false): void {\n    if (!this.pruner) {\n      return;\n    }\n\n    if (this.ttl === 0 || force) {\n      clearInterval(this.pruner);\n      this.pruner = undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoPruneLRUCacheOptions.html":{"url":"interfaces/AutoPruneLRUCacheOptions.html","title":"interface - AutoPruneLRUCacheOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoPruneLRUCacheOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dispose\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAge\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dispose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dispose:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BackgroundFetch, LRUCache } from 'lru-cache';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype AnyObject = {};\n\nexport interface AutoPruneLRUCacheOptions {\n  max?: number;\n  maxAge?: number;\n  dispose?: (key: K, value: V) => void;\n}\n\nexport class AutoPruneLRUCache extends LRUCache {\n  private pruner?: ReturnType;\n\n  constructor(options?: AutoPruneLRUCacheOptions) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    super({\n      max: options?.max ?? 100000,\n      ttl: options?.maxAge ?? 0,\n      ttlAutopurge: (options?.maxAge ?? 0) > 0,\n      noDisposeOnSet: false,\n      dispose: (value, key) => {\n        options?.dispose?.(key, value);\n        if (this.size === 0) {\n          this.clearAutoPrune();\n        }\n      }\n    });\n  }\n\n  set(key: K, value: V | BackgroundFetch | undefined, options?: number | LRUCache.SetOptions): this {\n    const setOptions = typeof options === 'number' ? { ttl: options } : options;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call, @typescript-eslint/no-unsafe-member-access\n    super.set(key, value, setOptions);\n    this.startAutoPrune();\n    return this;\n  }\n\n  startAutoPrune(force = false): void {\n    if (this.pruner ?? !this.ttl ?? this.ttl === Infinity) {\n      return;\n    }\n\n    if (this.size !== 0 || force) {\n      const duration = Math.max(this.ttl, 1);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.pruner = setInterval(() => this.purgeStale(), duration);\n    }\n  }\n\n  clearAutoPrune(force = false): void {\n    if (!this.pruner) {\n      return;\n    }\n\n    if (this.ttl === 0 || force) {\n      clearInterval(this.pruner);\n      this.pruner = undefined;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFDatabaseInstance.html":{"url":"classes/CCFDatabaseInstance.html","title":"class - CCFDatabaseInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFDatabaseInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                database\n                            \n                            \n                                    Public\n                                dispose\n                            \n                            \n                                    Public\n                                sparqlQuery\n                            \n                            \n                                    Readonly\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(database: CCFDatabase, sparqlQuery: SparqlQueryFunction, dispose: () => void)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sparqlQuery\n                                                  \n                                                        \n                                                                        SparqlQueryFunction\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dispose\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CCFDatabase\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dispose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sparqlQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SparqlQueryFunction\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CCFDatabaseStatusTracker(this.database)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CCFDatabase, CCFDatabaseOptions, CCFDatabaseStatusTracker } from 'ccf-database';\nimport { releaseProxy, wrap } from 'comlink';\nimport nodeEndpoint from 'comlink/dist/umd/node-adapter';\nimport { Worker } from 'worker_threads';\n\n\nexport type SparqlQueryFunction = (query: string, mimetype: string) => Promise;\n\nexport class CCFDatabaseInstance {\n  readonly status = new CCFDatabaseStatusTracker(this.database);\n\n  constructor(public database: CCFDatabase, public sparqlQuery: SparqlQueryFunction, public dispose: () => Promise) { }\n}\n\nexport async function createCCFDatabaseWorker(options: CCFDatabaseOptions): Promise {\n  const worker = new Worker('./dist/server/ccf-database.worker.js', { workerData: { options } });\n  const dbWorker = wrap(nodeEndpoint(worker));\n  return new CCFDatabaseInstance(\n    dbWorker.database as unknown as CCFDatabase,\n    dbWorker.sparqlQuery,\n    async () => {\n      dbWorker[releaseProxy]();\n      await worker.terminate();\n    });\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheOptions.html":{"url":"interfaces/CacheOptions.html","title":"interface - CacheOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CacheOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/middleware/response-cache.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAge\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler } from 'express';\nimport { AutoPruneLRUCache } from '../utils/auto-prune-lru-cache';\n\n\nexport interface CacheOptions {\n  max?: number;\n  maxAge?: number;\n}\n\n\nfunction parseBoolean(value: unknown, defaultValue = false): boolean {\n  if (value === undefined) {\n    return defaultValue;\n  }\n\n  return `${value}`.toLowerCase() === 'true';\n}\n\n\nexport function cacheResponses(options?: CacheOptions): RequestHandler {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  type AnyObject = {};\n  const cache = new AutoPruneLRUCache({\n    max: options?.max ?? 100,\n    maxAge: options?.maxAge ?? 60 * 60 * 1000\n  });\n\n  return (req, res, next) => {\n    const { query, originalUrl, url } = req;\n    const useCache = parseBoolean(query.cache, true);\n    const key = `__${ originalUrl || url }`;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n    const cachedResponse = cache.get(key);\n\n    if (!useCache) {\n      next();\n    } else if (cachedResponse !== undefined) {\n      res.json(cachedResponse);\n    } else {\n      const originalSend = res.json;\n      res.json = body => {\n        cache.set(key, body);\n        return originalSend.call(res, body);\n      };\n\n      next();\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseCacheOptions.html":{"url":"interfaces/DatabaseCacheOptions.html","title":"interface - DatabaseCacheOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseCacheOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/middleware/database-loader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAge\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CCFDatabaseOptions } from 'ccf-database';\nimport { Request, RequestHandler } from 'express';\n\nimport { AutoPruneLRUCache } from '../utils/auto-prune-lru-cache';\nimport { CCFDatabaseInstance, createCCFDatabaseWorker } from '../utils/ccf-database-worker';\nimport { RequestCache } from '../utils/request-cache';\n\n\nexport interface DatabaseCacheOptions {\n  max?: number;\n  maxAge?: number;\n}\n\nexport interface DatabaseLoaderOptions {\n  database: CCFDatabaseOptions;\n  cache?: DatabaseCacheOptions;\n}\n\ntype DatabaseGetter = (token?: string) => Promise;\n\nexport async function getDatabaseInstance(req: Request, token: string | undefined, doConnect = false): Promise {\n  const getDBInstance = req['getDatabase'] as DatabaseGetter;\n  const dbInstance = await getDBInstance(token);\n  if (doConnect) {\n    await dbInstance.database.connect().catch((err) => console.log(err));\n  }\n  return dbInstance;\n}\n\nfunction selectToken(token: string | undefined, req: Request): string {\n  const qtoken = req.query.token;\n\n  if (token) {\n    return token;\n  } else if (typeof qtoken === 'string' && qtoken) {\n    return qtoken;\n  }\n\n  return '';\n}\n\nfunction createDatabase(token: string, options: CCFDatabaseOptions): Promise {\n  // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n  const xConsortiaTokens = (token || options.hubmapToken || '').split('|').filter(s => !!s);\n\n  let applyToken = (url: string) => url;\n\n  if (xConsortiaTokens.length > 0) {\n    const hubmapToken = xConsortiaTokens.find((t) => t.startsWith('HBM-') || !t.startsWith('SNT-'))?.replace(/^HBM-/, '');\n    const sennetToken = xConsortiaTokens.find((t) => t.startsWith('SNT-'))?.replace(/^SNT-/, '');\n\n    applyToken = (url: string) => {\n      if (typeof url === 'string' && url) {\n        const isHuBMAP = url.endsWith('hubmap/rui_locations.jsonld');\n        const isSenNet = url.endsWith('sennet/rui_locations.jsonld');\n\n        if (isHuBMAP && hubmapToken) {\n          url = `${url}?token=${hubmapToken}`;\n        } else if (isSenNet && sennetToken) {\n          url = `${url}?token=${sennetToken}`;\n        }\n      }\n      return url;\n    };\n  }\n\n  return createCCFDatabaseWorker({\n    ...options,\n    hubmapDataUrl: '', // Do not use deprecated internal hubmap data loading\n    dataSources: options.dataSources.map(applyToken)\n  });\n}\n\nexport function databaseLoader(options: DatabaseLoaderOptions): RequestHandler {\n  const cache = new RequestCache(\n    new AutoPruneLRUCache({\n      max: options.cache?.max ?? 10,\n      maxAge: options.cache?.maxAge ?? 60 * 60 * 1000,\n      dispose: (_key, instance) => instance.then((r) => r.dispose())\n    }),\n    token => createDatabase(token, options.database)\n  );\n\n  return (req, _res, next) => {\n    cache.cache.purgeStale();\n    req['getDatabase'] = (token?: string) => cache.get(selectToken(token, req));\n    next();\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseLoaderOptions.html":{"url":"interfaces/DatabaseLoaderOptions.html","title":"interface - DatabaseLoaderOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseLoaderOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/middleware/database-loader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cache\n                                        \n                                \n                                \n                                        \n                                            database\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cache:         DatabaseCacheOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseCacheOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     CCFDatabaseOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CCFDatabaseOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CCFDatabaseOptions } from 'ccf-database';\nimport { Request, RequestHandler } from 'express';\n\nimport { AutoPruneLRUCache } from '../utils/auto-prune-lru-cache';\nimport { CCFDatabaseInstance, createCCFDatabaseWorker } from '../utils/ccf-database-worker';\nimport { RequestCache } from '../utils/request-cache';\n\n\nexport interface DatabaseCacheOptions {\n  max?: number;\n  maxAge?: number;\n}\n\nexport interface DatabaseLoaderOptions {\n  database: CCFDatabaseOptions;\n  cache?: DatabaseCacheOptions;\n}\n\ntype DatabaseGetter = (token?: string) => Promise;\n\nexport async function getDatabaseInstance(req: Request, token: string | undefined, doConnect = false): Promise {\n  const getDBInstance = req['getDatabase'] as DatabaseGetter;\n  const dbInstance = await getDBInstance(token);\n  if (doConnect) {\n    await dbInstance.database.connect().catch((err) => console.log(err));\n  }\n  return dbInstance;\n}\n\nfunction selectToken(token: string | undefined, req: Request): string {\n  const qtoken = req.query.token;\n\n  if (token) {\n    return token;\n  } else if (typeof qtoken === 'string' && qtoken) {\n    return qtoken;\n  }\n\n  return '';\n}\n\nfunction createDatabase(token: string, options: CCFDatabaseOptions): Promise {\n  // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n  const xConsortiaTokens = (token || options.hubmapToken || '').split('|').filter(s => !!s);\n\n  let applyToken = (url: string) => url;\n\n  if (xConsortiaTokens.length > 0) {\n    const hubmapToken = xConsortiaTokens.find((t) => t.startsWith('HBM-') || !t.startsWith('SNT-'))?.replace(/^HBM-/, '');\n    const sennetToken = xConsortiaTokens.find((t) => t.startsWith('SNT-'))?.replace(/^SNT-/, '');\n\n    applyToken = (url: string) => {\n      if (typeof url === 'string' && url) {\n        const isHuBMAP = url.endsWith('hubmap/rui_locations.jsonld');\n        const isSenNet = url.endsWith('sennet/rui_locations.jsonld');\n\n        if (isHuBMAP && hubmapToken) {\n          url = `${url}?token=${hubmapToken}`;\n        } else if (isSenNet && sennetToken) {\n          url = `${url}?token=${sennetToken}`;\n        }\n      }\n      return url;\n    };\n  }\n\n  return createCCFDatabaseWorker({\n    ...options,\n    hubmapDataUrl: '', // Do not use deprecated internal hubmap data loading\n    dataSources: options.dataSources.map(applyToken)\n  });\n}\n\nexport function databaseLoader(options: DatabaseLoaderOptions): RequestHandler {\n  const cache = new RequestCache(\n    new AutoPruneLRUCache({\n      max: options.cache?.max ?? 10,\n      maxAge: options.cache?.maxAge ?? 60 * 60 * 1000,\n      dispose: (_key, instance) => instance.then((r) => r.dispose())\n    }),\n    token => createDatabase(token, options.database)\n  );\n\n  return (req, _res, next) => {\n    cache.cache.purgeStale();\n    req['getDatabase'] = (token?: string) => cache.get(selectToken(token, req));\n    next();\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GtexTissue.html":{"url":"interfaces/GtexTissue.html","title":"interface - GtexTissue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GtexTissue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mappedInHubmap\n                                        \n                                \n                                \n                                        \n                                            rnaSeqSampleSummary\n                                        \n                                \n                                \n                                        \n                                            tissueSiteDetailId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mappedInHubmap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mappedInHubmap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rnaSeqSampleSummary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rnaSeqSampleSummary:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueSiteDetailId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tissueSiteDetailId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CCFDatabaseOptions } from 'ccf-database';\nimport { RequestHandler } from 'express';\nimport { readFileSync } from 'fs';\n\nimport { AutoPruneLRUCache } from '../../../utils/auto-prune-lru-cache';\nimport { RequestCache } from '../../../utils/request-cache';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\nimport { get } from '../../../environment';\n\nexport interface GtexTissue {\n  // NOTE: The API response includes more fields, but we only map the ones we actually use here\n  tissueSiteDetailId: string;\n  mappedInHubmap: boolean;\n  rnaSeqSampleSummary: {\n    totalCount: number;\n    female: {\n      ageMax: number;\n      ageMin: number;\n      ageMean: number;\n      count: number;\n    };\n    male: {\n      ageMax: number;\n      ageMin: number;\n      ageMean: number;\n      count: number;\n    };\n  };\n}\n\nconst DEFAULT_GTEX_RUI_LOCATIONS = 'https://hubmapconsortium.github.io/hra-registrations/gtex-pan-eraslan-2022/rui_locations.jsonld';\nconst GTEX_API_URL = 'https://gtexportal.org/api/v2/dataset/tissueSiteDetail';\n\nasync function getLocations(): Promise {\n  try {\n    const source = get('GTEX_RUI_LOCATIONS', DEFAULT_GTEX_RUI_LOCATIONS);\n    let data;\n    if (source.startsWith('http')) {\n      data = await fetch(source).then(r => r.text());\n    } else {\n      // Attempt to load the source url as a local file\n      data = readFileSync(source, { encoding: 'utf-8' });\n    }\n    const jsonld: JsonLdObj = JSON.parse(data);\n    const results = jsonld['@graph'] as JsonLdObj[];\n\n    const response: { data: GtexTissue[] } = await fetch(GTEX_API_URL).then(r => r.json()) as { data: GtexTissue[] };\n    const mappedEntries = response?.data?.filter(entry => entry.mappedInHubmap) ?? [];\n    for (const tissue of mappedEntries) {\n      updateEntry(results, tissue, 'Female');\n      updateEntry(results, tissue, 'Male');\n    }\n\n    return jsonld;\n  } catch (_error) {\n    return undefined;\n  }\n}\n\nexport function updateEntry(resultsList: JsonLdObj[], tissueInfo: GtexTissue, sex: 'Male' | 'Female'): void {\n  const matchingEntry = resultsList.find(entry => entry['@id']?.includes(tissueInfo.tissueSiteDetailId) && (entry.label as string).includes(sex));\n  if (matchingEntry) {\n    const index = resultsList.indexOf(matchingEntry);\n    const sexStats = sex === 'Male' ? tissueInfo.rnaSeqSampleSummary.male : tissueInfo.rnaSeqSampleSummary.female;\n    resultsList[index].label = `${sex}s (n=${sexStats.count}) Mean Age ${sexStats.ageMean} (range ${sexStats.ageMin} - ${sexStats.ageMax})`;\n    resultsList[index].sex = sex;\n  }\n}\n\nexport function ruiLocations(): RequestHandler {\n  const cache = new RequestCache(\n    new AutoPruneLRUCache({\n      max: 10,\n      maxAge: 60 * 60 * 1000\n    }),\n    getLocations\n  );\n\n  return async (req, res, _next) => {\n    const options: CCFDatabaseOptions = req.app.get('database-options');\n    const rawToken = req.query.token;\n    const token = typeof rawToken === 'string' ? rawToken : '';\n    const result = await cache.get(token, options);\n\n    if (result) {\n      res.json(result);\n    } else {\n      res.status(500).json([]);\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCache.html":{"url":"classes/RequestCache.html","title":"class - RequestCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/utils/request-cache.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                    Private\n                                    Async\n                                handleErrors\n                            \n                            \n                                    Private\n                                    Async\n                                promisifiedDoRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: LRUCache>, doRequest: (key: K,args: []) => void)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-api/src/lib/utils/request-cache.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    LRUCache>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doRequest\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K, ...args: [])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-api/src/lib/utils/request-cache.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        handleErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleErrors(key: K, request: Promise)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-api/src/lib/utils/request-cache.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Promise\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        promisifiedDoRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    promisifiedDoRequest(key: K, ...args: [])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/ccf-api/src/lib/utils/request-cache.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        K\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LRUCache } from 'lru-cache';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype AnyObject = {};\n\nexport class RequestCache {\n  constructor(\n    readonly cache: LRUCache>,\n    readonly doRequest: (key: K, ...args: unknown[]) => V | Promise\n  ) { }\n\n  get(key: K, ...args: unknown[]): Promise {\n    const { cache } = this;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    let result = cache.get(key);\n\n    if (!result) {\n      result = this.promisifiedDoRequest(key, ...args);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      cache.set(key, result);\n      this.handleErrors(key, result);\n    }\n\n    return result;\n  }\n\n  private async promisifiedDoRequest(key: K, ...args: unknown[]): Promise {\n    return this.doRequest(key, ...args);\n  }\n\n  private async handleErrors(key: K, request: Promise): Promise {\n    const { cache } = this;\n\n    try {\n      await request;\n    } catch (_error) {\n      if (this.get(key) === request) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        cache.delete(key);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.9.0 - 2023-12-15\nAdded in 3.9.0\n\nUpdated to the latest CCF.OWL as part of HRA v2.0!\nFinalized Biomarker support in the EUI and API analagous to Cell Type support\nEUI Quality of Life Improvements. See milestone 6\nRUI Quality of Life Improvements. See milestone 5\n\n3.8.1 - 2023-11-17\nAdded in 3.8.1\n\nImproved keyboard controls in the RUI\n\n3.8.0 - 2023-11-16\nAdded in 3.8.0\n\nEUI Quality of Life Improvements. See milestone 6\nRUI Quality of Life Improvements. See milestone 5\nA lot of minor UI and bug fixes in preparation for HRA 2.0\nUpdated dependencies including, update to Angular 16\n\n3.7.2 - 2023-07-12\nAdded in 3.7.2\n\nClient side cache has been updated to be more sensitive to configuration changes. Fixes hra-registrations#1\n\n3.7.0 - 2023-06-15\nAdded in 3.7.0\n\nUpdated to CCF.OWL v2.2.0 which indexes the Human Reference Atlas (HRA) 5th Release (v1.4) for use in the CCF UIs and CCF-API.\nAdded CCF-API usage notebooks for python and javascript\n\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-api/src/lib/app.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/app.ts\n            \n            function\n            createApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            has\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            isDebug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            parseBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            parseNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            variable\n            THROW_IF_NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            interface\n            DatabaseCacheOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            interface\n            DatabaseLoaderOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            createDatabase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            databaseLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            getDatabaseInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            selectToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/response-cache.ts\n            \n            interface\n            CacheOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/response-cache.ts\n            \n            function\n            cacheResponses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/response-cache.ts\n            \n            function\n            parseBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/polyfills.ts\n            \n            function\n            patchGlobal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/browser.ts\n            \n            variable\n            browserRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/browser.ts\n            \n            variable\n            openApiRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/browser.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/database-status.ts\n            \n            function\n            getDatabaseStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/database-status.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/get-spatial-placement.ts\n            \n            function\n            getSpatialPlacement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/get-spatial-placement.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/index.ts\n            \n            variable\n            checkRoutesEnabled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/index.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            interface\n            GtexTissue\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            function\n            getLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            function\n            ruiLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            function\n            updateEntry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            variable\n            DEFAULT_GTEX_RUI_LOCATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            variable\n            GTEX_API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/index.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/reference-organ-scene.ts\n            \n            function\n            getReferenceOrganSceneHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/reference-organ-scene.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/sparql.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/sparql.ts\n            \n            function\n            sparql\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/forward-database-query.ts\n            \n            function\n            forwardDatabaseQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            clamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseMinMaxRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseSex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseSpatial\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            processParameter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            queryParametersToFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            setIfDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            variable\n            FILTER_DEFAULTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/use-cached-result.ts\n            \n            function\n            useCachedResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/use-cached-result.ts\n            \n            variable\n            CACHE_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/xconsortia/index.ts\n            \n            variable\n            checkRoutesEnabled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/xconsortia/index.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/xconsortia/rui-locations.ts\n            \n            function\n            getLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/xconsortia/rui-locations.ts\n            \n            function\n            ruiLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            getCacheOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            getDatabaseOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            getPort\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            loadDatabaseSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            parseDatabaseSources\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            startServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            tryJsonParse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n            \n            class\n            AutoPruneLRUCache\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n            \n            interface\n            AutoPruneLRUCacheOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n            \n            class\n            CCFDatabaseInstance\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n            \n            function\n            createCCFDatabaseWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/request-cache.ts\n            \n            class\n            RequestCache\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/cdk : 14.10.1\n        \n            @angular-ru/common : 15.313.0\n        \n            @angular-ru/ngxs : 14.1.4\n        \n            @angular-slider/ngx-slider : ^2.0.4\n        \n            @angular/animations : ^16.1.5\n        \n            @angular/cdk : ^16.1.5\n        \n            @angular/common : ^16.1.5\n        \n            @angular/compiler : ^16.1.5\n        \n            @angular/core : ^16.1.6\n        \n            @angular/elements : ^16.1.6\n        \n            @angular/forms : ^16.1.5\n        \n            @angular/material : ^16.1.5\n        \n            @angular/platform-browser : ^16.1.5\n        \n            @angular/platform-browser-dynamic : ^16.1.5\n        \n            @angular/router : ^16.1.5\n        \n            @angular/youtube-player : ^16.1.5\n        \n            @comunica/query-sparql-rdfjs : ^2.8.1\n        \n            @deck.gl/core : ~8.8.20\n        \n            @deck.gl/geo-layers : ~8.8.20\n        \n            @deck.gl/layers : ~8.8.20\n        \n            @deck.gl/mesh-layers : ~8.8.20\n        \n            @loaders.gl/core : ~3.2.10\n        \n            @loaders.gl/draco : ~3.2.10\n        \n            @loaders.gl/gltf : ~3.2.10\n        \n            @luma.gl/core : ~8.5.16\n        \n            @math.gl/core : ~3.6.3\n        \n            @math.gl/culling : ~3.5.7\n        \n            @ngxs-labs/dispatch-decorator : ^5.0.0\n        \n            @ngxs/logger-plugin : ^3.8.1\n        \n            @ngxs/storage-plugin : ^3.8.1\n        \n            @ngxs/store : ^3.8.1\n        \n            @rdfjs/data-model : ^2.0.1\n        \n            @webcomponents/webcomponentsjs : ^2.8.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.20.2\n        \n            cannon-es : ^0.20.0\n        \n            comlink : ^4.4.1\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.14.10\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^11.1.1\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^7.0.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.2.1\n        \n            jsonld : ^8.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^10.0.0\n        \n            n3 : ^1.17.0\n        \n            ngx-google-analytics : ^14.0.1\n        \n            ngx-markdown : ^16.0.0\n        \n            ngx-slider-v2 : ^16.0.2\n        \n            node-fetch : ^3.3.2\n        \n            object-hash : ^3.0.0\n        \n            qs : ^6.11.2\n        \n            rdf-literal : ^1.3.1\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^4.4.2\n        \n            rxjs : ^7.8.1\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^8.0.6\n        \n            ts-cacheable : ^1.0.9\n        \n            tslib : ^2.6.1\n        \n            uuid : ^9.0.0\n        \n            zone.js : ~0.13.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the EUI, RUI, and Organ-Info.\nWebsite Links\n\nHRA Exploration User Interface (EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nHRA Registration User Interface (RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nHRA Organ Info Component (Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nHRA API\nProduction: https://apps.humanatlas.io/hra-api/\nStaging: https://apps.humanatlas.io/hra-api--staging/\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nHRA API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\nHRA API Sample Notebooks/Vignettes:\nPython 3.6+:\nBasic Usage: ccf-api-usage.ipynb\nUse case walkthrough: ccf-api-usecase.ipynb\n\n\nJavaScript:\nBasic Usage: https://observablehq.com/@cns-iu/ccf-api-documentation-javascript\nUse case walkthrough: https://observablehq.com/@cns-iu/ccf-api-usecase-javascript\n\n\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 3.9.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyObject   (projects/.../auto-prune-lru-cache.ts)\n                        \n                        \n                            AnyObject   (projects/.../request-cache.ts)\n                        \n                        \n                            DatabaseGetter   (projects/.../database-loader.ts)\n                        \n                        \n                            DatabaseGetter   (projects/.../database-status.ts)\n                        \n                        \n                            DatabaseQueryMethods   (projects/.../forward-database-query.ts)\n                        \n                        \n                            DatabaseSource   (projects/.../server.ts)\n                        \n                        \n                            DatabaseSources   (projects/.../server.ts)\n                        \n                        \n                            GlobalThis   (projects/.../polyfills.ts)\n                        \n                        \n                            PickByType   (projects/.../forward-database-query.ts)\n                        \n                        \n                            SparqlQueryFunction   (projects/.../ccf-database-worker.ts)\n                        \n                        \n                            ThrowIndicator   (projects/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n    \n    \n        \n            \n                \n                    \n                    AnyObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/utils/request-cache.ts\n    \n    \n        \n            \n                \n                    \n                    AnyObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/middleware/database-loader.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseGetter\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/routes/v1/database-status.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseGetter\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/routes/v1/utils/forward-database-query.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseQueryMethods\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PickByType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/server.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseSource\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DatabaseSources\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/polyfills.ts\n    \n    \n        \n            \n                \n                    \n                    GlobalThis\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n    \n    \n        \n            \n                \n                    \n                    SparqlQueryFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/environment.ts\n    \n    \n        \n            \n                \n                    \n                    ThrowIndicator\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            browserRoute   (projects/.../browser.ts)\n                        \n                        \n                            CACHE_DIR   (projects/.../use-cached-result.ts)\n                        \n                        \n                            checkRoutesEnabled   (projects/.../index.ts)\n                        \n                        \n                            checkRoutesEnabled   (projects/.../index.ts)\n                        \n                        \n                            DEFAULT_GTEX_RUI_LOCATIONS   (projects/.../rui-locations.ts)\n                        \n                        \n                            env   (projects/.../environment.ts)\n                        \n                        \n                            FILTER_DEFAULTS   (projects/.../parse-filter.ts)\n                        \n                        \n                            GTEX_API_URL   (projects/.../rui-locations.ts)\n                        \n                        \n                            openApiRoute   (projects/.../browser.ts)\n                        \n                        \n                            routes   (projects/.../browser.ts)\n                        \n                        \n                            routes   (projects/.../index.ts)\n                        \n                        \n                            routes   (projects/.../index.ts)\n                        \n                        \n                            routes   (projects/.../index.ts)\n                        \n                        \n                            THROW_IF_NOT_FOUND   (projects/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-api/src/lib/routes/browser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        browserRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, res, _next) => {\n\n  res.send(`\n  \n    \n      \n      \n    \n    \n      \n    \n  `);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openApiRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, res, _next) => {\n  const apiFile = resolve('ccf-api-spec.yaml');\n  res.sendFile(apiFile);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .get('/', browserRoute)\n  .get('/index.html', browserRoute)\n  .get('/ccf-api-spec.yaml', openApiRoute)\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/utils/use-cached-result.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CACHE_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : get('CCF_API_CACHE', 'projects/ccf-api/ccf-cache')\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/gtex/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkRoutesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, _res, next) => {\n  const enabled = env.GTEX_ROUTES === 'true';\n  enabled ? next() : next('router');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .use(checkRoutesEnabled)\n  .get('/rui_locations.jsonld', ruiLocations())\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/xconsortia/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkRoutesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, _res, next) => {\n  const enabled = env.XCONSORTIA_ROUTES === 'true';\n  enabled ? next() : next('router');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .use(checkRoutesEnabled)\n  .get('/sennet/rui_locations.jsonld', ruiLocations('https://search.api.sennetconsortium.org/entities/search'))\n  .get('/hubmap/rui_locations.jsonld', ruiLocations('https://search.api.hubmapconsortium.org/v3/entities/search'))\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_GTEX_RUI_LOCATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://hubmapconsortium.github.io/hra-registrations/gtex-pan-eraslan-2022/rui_locations.jsonld'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GTEX_API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://gtexportal.org/api/v2/dataset/tissueSiteDetail'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n  config();\n  return process.env;\n})()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        THROW_IF_NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('Indicator that an error should be thrown')\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FILTER_DEFAULTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  sex: 'Both',\n  ageRange: undefined,\n  bmiRange: undefined,\n  consortiums: [],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: [],\n  cellTypeTerms: [],\n  spatialSearches: []\n}\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .use('/db-status', getDatabaseStatus())\n  .post('/get-spatial-placement', getSpatialPlacement())\n  .use('/sparql', sparql())\n  .use('/ccf.owl.n3store.json', useCachedResult('ccf.owl.n3store.json'))\n  .use(cacheResponses())\n  .use('/', xConsortiaRoutes)\n  .use('/gtex', gtexRoutes)\n  .get('/tissue-blocks', forwardDatabaseQuery('getTissueBlockResults'))\n  .get('/technology-names', forwardDatabaseQuery('getDatasetTechnologyNames'))\n  .get('/provider-names', forwardDatabaseQuery('getProviderNames'))\n  .get('/aggregate-results', forwardDatabaseQuery('getAggregateResults'))\n  .get('/ontology-term-occurences', forwardDatabaseQuery('getOntologyTermOccurences'))\n  .get('/cell-type-term-occurences', forwardDatabaseQuery('getCellTypeTermOccurences'))\n  .get('/biomarker-tree-model', forwardDatabaseQuery('getBiomarkerTreeModel'))\n  .get('/biomarker-term-occurences', forwardDatabaseQuery('getBiomarkerTermOccurences'))\n  .get('/ontology-tree-model', useCachedResult('ontology-tree-model.json'), forwardDatabaseQuery('getOntologyTreeModel'))\n  .get('/cell-type-tree-model', useCachedResult('cell-type-tree-model.json'), forwardDatabaseQuery('getCellTypeTreeModel'))\n  .get('/reference-organs', useCachedResult('reference-organs.json'), forwardDatabaseQuery('getReferenceOrgans'))\n  .get('/scene', forwardDatabaseQuery('getScene'))\n  .get('/reference-organ-scene', getReferenceOrganSceneHandler())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
