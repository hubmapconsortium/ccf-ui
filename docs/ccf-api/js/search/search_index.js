var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AppOptions.html",[0,0.246,1,1.69]],["body/interfaces/AppOptions.html",[0,0.295,1,2.806,2,0.888,3,0.745,4,1.048,5,0.617,6,0.617,7,2.455,8,3.931,9,2.003,10,0.617,11,1.325,12,1.325,13,3.576,14,4.31,15,0.501,16,0.064,17,1.652,18,2.455,19,3.109,20,1.702,21,3.104,22,3.104,23,1.574,24,3.104,25,3.104,26,3.931,27,2.455,28,3.109,29,3.109,30,2.559,31,3.931,32,3.109,33,3.931,34,3.109,35,1.325,36,0.942,37,3.109,38,0.888,39,3.931,40,3.109,41,1.048,42,2.024,43,3.109,44,3.109,45,1.231,46,1.122,47,3.109,48,3.109,49,2.559,50,3.109,51,3.109,52,3.109,53,3.109,54,3.109,55,3.109,56,3.109,57,3.109,58,3.931,59,3.109,60,3.109,61,3.109,62,3.109,63,2.455,64,3.109,65,3.109,66,3.109,67,3.109,68,3.109,69,3.109,70,0.038,71,0.048,72,0.038]],["title/classes/CCFDatabaseInstance.html",[73,1.206,74,1.206]],["body/classes/CCFDatabaseInstance.html",[3,0.688,4,0.968,5,0.57,6,0.927,10,0.57,11,1.259,12,0.968,15,0.734,16,0.064,17,1.482,35,1.399,36,0.995,38,1.066,41,0.968,45,1.479,46,0.82,70,0.035,71,0.046,72,0.035,73,1.335,74,1.93,75,1.869,76,3.041,77,1.67,78,1.869,79,3.808,80,2.967,81,4.557,82,3.278,83,3.278,84,2.267,85,2.872,86,4.672,87,3.598,88,1.869,89,2.967,90,3.735,91,2.267,92,2.267,93,4.151,94,1.869,95,1.869,96,1.482,97,3.735,98,2.045,99,2.872,100,0.968,101,2.872,102,2.872,103,2.267,104,2.872,105,2.872,106,2.872,107,2.432,108,2.872,109,1.869,110,2.872,111,1.93,112,2.872,113,1.736,114,2.872,115,2.872,116,2.267,117,2.872,118,2.872,119,2.872,120,2.872,121,2.872,122,1.869,123,2.872,124,2.872,125,1.335,126,2.872]],["title/interfaces/CacheOptions.html",[0,0.246,127,1.69]],["body/interfaces/CacheOptions.html",[0,0.286,2,0.861,3,0.723,4,1.017,5,0.599,6,0.599,10,0.599,11,1.299,12,1.509,15,0.621,16,0.065,17,1.299,20,2.326,23,1.017,35,1.299,36,0.924,38,1.351,41,1.017,46,1.278,49,2.51,70,0.037,71,0.047,72,0.037,95,1.963,96,1.017,109,1.963,122,1.963,127,2.766,128,2.381,129,1.402,130,2.151,131,2.151,132,2.2,133,1.792,134,1.527,135,1.651,136,1.017,137,0.723,138,1.299,139,3.016,140,3.855,141,1.963,142,2.381,143,1.792,144,3.016,145,3.016,146,3.016,147,2.11,148,1.651,149,2.11,150,1.963,151,1.975,152,3.855,153,3.044,154,3.855,155,3.016,156,2.381,157,3.016,158,3.855,159,2.381,160,3.016,161,3.016,162,3.855,163,2.381,164,3.016]],["title/interfaces/DatabaseCacheOptions.html",[0,0.246,165,1.421]],["body/interfaces/DatabaseCacheOptions.html",[0,0.329,2,0.732,3,0.615,4,0.865,5,0.509,6,0.509,9,1.611,10,0.509,11,1.168,12,1.417,15,0.632,16,0.065,17,1.48,23,0.865,35,1.417,36,1.008,38,1.254,41,1.168,42,1.67,45,1.863,46,1.292,70,0.032,71,0.043,72,0.032,74,1.192,77,1.323,80,1.67,96,1.168,98,2.149,100,0.865,107,1.67,111,1.825,113,1.192,125,1.611,130,2.041,131,2.041,132,2.103,133,1.611,134,1.373,135,1.404,136,0.865,137,0.615,138,1.417,141,1.67,143,1.825,147,1.897,148,1.404,149,2.149,151,1.825,165,2.149,166,1.404,167,1.404,168,2.555,169,2.256,170,2.026,171,1.373,172,1.67,173,2.256,174,3.011,175,2.026,176,2.737,177,2.026,178,2.737,179,2.737,180,2.026,181,2.026,182,2.026,183,2.026,184,3.319,185,1.67,186,2.256,187,2.737,188,2.026,189,2.026,190,2.026,191,1.404,192,2.026,193,2.026,194,2.026,195,2.737,196,2.026,197,2.026,198,1.192,199,2.026,200,1.67,201,1.192,202,1.404,203,1.67,204,2.026,205,2.026,206,2.737,207,2.026,208,2.026,209,2.026,210,1.404,211,2.026,212,2.026,213,2.026,214,2.026,215,2.026,216,1.67,217,2.026]],["title/interfaces/DatabaseLoaderOptions.html",[0,0.246,9,1.206]],["body/interfaces/DatabaseLoaderOptions.html",[0,0.33,2,0.735,3,0.617,4,0.867,5,0.511,6,0.511,9,1.827,10,0.511,11,1.17,12,1.17,15,0.633,16,0.065,17,1.481,23,0.867,35,1.419,36,1.009,38,1.255,41,1.17,42,1.675,45,1.864,46,1.293,70,0.032,71,0.043,72,0.032,74,1.196,77,1.526,80,1.675,96,1.17,98,2.406,100,0.867,107,1.675,111,1.827,113,1.196,125,1.614,130,1.614,131,1.614,132,1.614,133,1.614,134,1.375,135,1.408,136,0.867,137,0.617,138,1.56,141,1.675,143,1.827,147,1.901,148,1.408,149,2.152,151,1.827,165,2.304,166,1.408,167,1.408,168,2.559,169,2.261,170,2.031,171,1.375,172,1.675,173,2.261,174,3.014,175,2.031,176,2.742,177,2.031,178,2.742,179,2.742,180,2.031,181,2.031,182,2.031,183,2.031,184,3.323,185,1.675,186,2.261,187,2.742,188,2.031,189,2.031,190,2.031,191,1.408,192,2.031,193,2.031,194,2.031,195,2.742,196,2.031,197,2.031,198,1.196,199,2.031,200,1.675,201,1.196,202,1.408,203,1.675,204,2.031,205,2.031,206,2.742,207,2.031,208,2.031,209,2.031,210,1.408,211,2.031,212,2.031,213,2.031,214,2.031,215,2.031,216,1.675,217,2.031]],["title/interfaces/GtexTissue.html",[0,0.246,218,1.69]],["body/interfaces/GtexTissue.html",[0,0.221,2,0.663,3,0.557,4,1.257,5,0.643,6,0.643,10,0.643,11,1.092,15,0.683,16,0.065,17,1.549,23,0.783,35,1.257,36,0.894,38,1.417,41,1.257,45,1.597,46,1.064,70,0.046,71,0.04,72,0.04,77,0.783,88,1.513,96,1.092,98,1.773,100,0.783,111,1.08,113,1.505,125,1.505,130,1.08,131,1.08,132,2.17,133,1.505,134,1.283,135,1.272,136,0.783,137,0.557,138,1.257,142,2.943,143,1.08,147,1.773,148,1.272,149,1.272,150,1.513,153,1.835,171,1.283,172,1.513,174,1.513,185,1.513,186,1.513,198,1.08,202,1.773,210,1.272,218,2.625,219,1.513,220,1.513,221,4.032,222,4.032,223,4.032,224,2.557,225,2.324,226,1.835,227,2.557,228,1.835,229,4.032,230,2.324,231,1.835,232,2.324,233,1.513,234,1.272,235,3.239,236,1.835,237,1.513,238,2.324,239,2.324,240,2.324,241,2.324,242,1.835,243,2.324,244,3.728,245,3.239,246,3.239,247,3.239,248,3.239,249,4.032,250,2.108,251,1.835,252,1.513,253,1.835,254,2.557,255,1.513,256,2.324,257,2.324,258,1.513,259,2.324,260,2.324,261,2.324,262,2.324,263,1.835,264,2.557,265,2.324,266,2.324,267,2.324,268,2.324,269,3.239,270,2.324,271,2.324,272,2.943,273,3.239,274,1.835,275,1.835,276,2.324,277,2.324,278,2.427,279,3.239,280,2.324,281,2.324,282,2.324,283,2.324,284,2.324,285,2.324,286,2.324,287,2.324,288,2.324,289,2.324,290,2.324,291,2.324,292,1.835,293,2.324,294,2.324,295,2.324,296,2.324,297,2.324,298,1.513,299,1.835,300,2.324,301,3.728,302,2.324,303,2.324,304,2.324]],["title/classes/RequestCache.html",[73,1.206,171,1.028]],["body/classes/RequestCache.html",[3,0.67,4,0.942,5,0.555,6,0.897,10,0.555,12,1.467,15,0.7,16,0.064,17,0.942,35,0.942,36,0.67,38,1.048,46,1.048,70,0.058,71,0.045,72,0.034,73,1.3,75,1.82,82,2.898,84,2.898,88,1.82,89,2.832,91,3.435,92,3.435,111,2.275,113,2.156,122,2.668,125,1.3,129,1.3,137,0.67,138,1.523,156,3.568,159,2.898,163,2.208,168,2.941,171,1.454,255,1.82,274,2.208,275,2.208,305,3.568,306,2.389,307,4.638,308,3.671,309,3.671,310,2.796,311,4.351,312,4.098,313,2.796,314,2.796,315,3.671,316,4.895,317,4.85,318,2.796,319,4.098,320,3.671,321,2.796,322,3.671,323,2.796,324,2.796,325,2.796,326,2.796,327,2.796,328,2.796]],["title/changelog.html",[329,1.427,330,1.2,331,1.427]],["body/changelog.html",[0,0.304,2,0.24,3,0.726,5,0.167,11,0.284,12,0.284,13,0.664,15,0.135,16,0.044,18,0.664,20,1.834,41,0.49,63,0.664,70,0.01,71,0.018,72,0.041,77,0.87,79,0.664,89,0.548,94,0.548,96,1.211,100,1.542,109,0.548,132,0.391,151,1.407,191,0.796,198,0.676,200,0.548,201,1.618,202,2.391,203,0.548,210,1.658,231,2.391,233,1.25,234,2.023,236,1.148,237,1.68,242,0.664,255,0.946,258,1.488,263,1.148,272,3.052,278,0.946,292,1.148,330,1.051,331,0.946,332,1.148,333,3.161,334,1.148,335,1.148,336,2.645,337,1.148,338,3.201,339,0.841,340,5.021,341,4.257,342,1.454,343,0.841,344,0.841,345,0.841,346,3.695,347,0.841,348,0.841,349,1.454,350,1.919,351,3.594,352,0.841,353,0.796,354,0.664,355,0.841,356,0.841,357,3.35,358,1.454,359,2.581,360,1.919,361,1.919,362,0.841,363,1.148,364,1.454,365,3.731,366,1.454,367,0.841,368,0.841,369,4.003,370,0.841,371,1.454,372,2.425,373,1.919,374,2.581,375,1.454,376,1.919,377,1.919,378,1.488,379,1.919,380,0.841,381,1.454,382,1.454,383,0.841,384,3.028,385,2.824,386,3.028,387,1.454,388,0.841,389,0.841,390,4.003,391,2.645,392,1.805,393,0.841,394,1.454,395,0.841,396,0.841,397,1.454,398,1.919,399,1.919,400,2.038,401,0.841,402,1.454,403,0.841,404,0.841,405,0.841,406,1.454,407,3.109,408,0.841,409,2.824,410,0.841,411,0.841,412,0.841,413,1.919,414,1.516,415,0.841,416,0.841,417,1.148,418,0.841,419,2.824,420,3.594,421,3.695,422,1.454,423,2.581,424,0.841,425,1.454,426,2.824,427,1.454,428,0.841,429,0.841,430,0.841,431,1.454,432,2.391,433,2.824,434,1.805,435,0.841,436,3.028,437,3.541,438,0.841,439,0.841,440,1.454,441,0.841,442,2.285,443,0.841,444,1.454,445,1.919,446,0.841,447,0.841,448,1.919,449,0.841,450,1.919,451,1.454,452,0.841,453,1.454,454,0.841,455,0.841,456,0.841,457,3.865,458,0.841,459,0.664,460,0.664,461,1.68,462,0.664,463,0.841,464,1.454,465,0.664,466,0.841,467,1.454,468,2.285,469,2.285,470,0.841,471,1.454,472,1.919,473,0.841,474,0.841,475,1.454,476,0.841,477,0.841,478,2.824,479,1.838,480,2.038,481,1.516,482,0.841,483,2.038,484,0.841,485,1.919,486,2.528,487,3.784,488,0.841,489,0.841,490,1.454,491,1.516,492,0.841,493,0.841,494,0.841,495,2.581,496,0.841,497,0.841,498,0.841,499,0.841,500,1.919,501,0.841,502,1.148,503,1.148,504,0.841,505,2.528,506,0.841,507,0.841,508,2.838,509,0.841,510,0.841,511,0.841,512,2.038,513,2.038,514,0.841,515,1.454,516,0.841,517,0.841,518,1.919,519,1.454,520,0.841,521,0.841,522,1.454,523,1.454,524,1.454,525,1.454,526,0.841,527,1.919,528,0.841,529,0.841,530,0.664,531,0.841,532,1.516,533,0.664,534,1.454,535,1.454,536,0.841,537,0.841,538,1.454,539,1.454,540,1.454,541,1.454,542,0.841,543,0.841,544,0.841,545,0.841,546,1.919,547,0.841,548,1.454,549,0.841,550,0.841,551,1.148,552,2.824,553,1.148,554,0.841,555,0.664,556,0.841,557,0.841,558,2.581,559,2.285,560,0.841,561,1.919,562,1.454,563,2.824,564,1.148,565,1.454,566,2.285,567,0.841,568,0.841,569,2.285,570,0.841,571,0.841,572,0.841,573,0.841,574,0.841,575,1.454,576,1.454,577,0.841,578,1.454,579,0.841,580,0.664,581,1.454,582,0.841,583,1.454,584,0.841,585,0.841,586,1.805,587,0.841,588,0.841,589,0.841,590,0.841,591,1.454,592,0.841,593,0.841,594,0.664,595,0.841,596,0.841,597,0.841,598,0.841,599,1.454,600,0.841,601,0.841,602,0.841,603,0.841,604,0.841,605,1.454,606,0.841,607,2.824,608,0.841,609,0.841,610,1.919,611,1.919,612,1.454,613,0.841,614,1.454,615,0.841,616,0.664,617,0.664,618,0.841,619,1.454,620,0.841,621,0.841,622,1.488,623,0.841,624,0.841,625,1.454,626,1.454,627,0.841,628,0.841,629,1.454,630,1.454,631,0.841,632,1.454,633,2.285,634,1.919,635,0.841,636,0.841,637,0.841,638,0.841,639,0.664,640,0.664,641,0.841,642,1.454,643,0.841,644,0.841,645,0.841,646,0.841,647,1.454,648,2.285,649,0.841,650,0.841,651,0.841,652,0.841,653,2.824,654,1.919,655,0.841,656,0.841,657,1.919,658,1.454,659,1.454,660,1.454,661,2.285,662,0.841,663,2.285,664,0.841,665,0.841,666,1.454,667,0.841,668,0.841,669,0.841,670,0.841,671,0.841,672,2.285,673,0.841,674,1.919,675,2.285,676,0.841,677,1.919,678,2.581,679,1.454,680,1.454,681,1.454,682,1.454,683,1.919,684,2.285,685,2.581,686,1.454,687,1.919,688,0.841,689,0.841,690,3.028,691,1.919,692,0.841,693,2.285,694,2.285,695,3.35,696,0.841,697,0.841,698,0.841,699,0.841,700,0.841,701,0.841,702,1.454,703,0.841,704,1.454,705,0.841,706,0.841,707,0.841,708,0.841,709,1.454,710,0.841,711,1.919,712,0.841,713,0.841,714,1.454,715,1.516,716,1.454,717,1.919,718,0.841,719,0.841,720,0.841,721,1.454,722,0.841,723,0.841,724,0.841,725,0.841,726,0.841,727,0.841,728,0.841,729,1.454,730,0.841,731,0.841,732,2.285,733,2.824,734,1.454,735,1.919,736,1.454,737,2.285,738,0.841,739,0.841,740,0.841,741,0.841,742,1.919,743,0.841,744,0.841,745,0.841,746,1.454,747,1.454,748,1.454,749,1.454,750,1.919,751,0.841,752,0.841,753,0.841,754,0.841,755,0.841,756,0.841,757,0.664,758,0.841,759,0.841,760,0.841,761,1.454,762,0.841,763,0.841,764,1.454,765,0.841,766,0.841,767,0.841,768,0.841,769,0.841,770,0.841,771,0.841,772,0.841,773,0.841,774,3.201,775,0.841,776,1.516,777,3.201,778,1.919,779,2.285,780,1.454,781,1.919,782,0.841,783,1.454,784,0.841,785,0.841,786,1.454,787,1.454,788,0.841,789,0.841,790,0.841,791,0.841,792,1.454,793,0.841,794,1.919,795,0.841,796,0.841,797,0.841,798,1.805,799,0.841,800,0.664,801,0.841,802,0.841,803,0.841,804,0.841,805,0.841,806,0.841,807,0.841,808,0.841,809,0.841,810,0.841,811,2.581,812,0.841,813,0.841,814,0.841,815,0.841,816,0.841,817,0.841,818,0.841,819,0.841,820,0.841,821,0.841,822,0.841,823,0.841,824,0.841,825,0.841,826,0.841,827,1.454,828,0.841,829,1.454,830,0.841,831,1.454,832,1.454,833,2.285,834,2.285,835,1.454,836,1.454,837,0.841,838,0.841,839,0.841,840,1.919,841,0.841,842,0.664,843,0.841,844,0.841,845,0.841,846,0.841,847,0.841,848,0.841,849,1.454,850,3.48,851,1.919,852,0.841,853,1.454,854,0.841,855,0.841,856,0.841,857,0.841,858,1.454,859,0.841,860,0.841,861,0.841,862,0.841,863,1.454,864,2.391,865,1.454,866,0.841,867,0.841,868,0.946,869,0.841,870,2.285,871,0.841,872,1.454,873,0.841,874,0.841,875,0.841,876,1.488,877,0.841,878,1.454,879,0.841,880,0.841,881,0.841,882,1.454,883,1.454,884,0.841,885,0.841,886,0.841,887,0.841,888,1.454,889,1.919,890,1.454,891,0.841,892,0.664,893,1.148,894,0.841,895,0.841,896,0.841,897,0.841,898,0.841,899,0.841,900,0.841,901,0.841,902,0.841,903,0.664,904,0.841,905,0.841,906,1.454,907,0.841,908,0.841,909,0.841,910,0.841,911,0.841,912,0.841,913,0.841,914,1.454,915,0.841,916,0.664,917,0.841,918,0.664,919,0.664,920,0.841,921,0.841,922,0.841,923,1.454,924,0.841,925,0.841,926,0.841,927,0.841,928,0.841,929,0.841,930,0.841,931,0.841,932,0.841,933,0.841,934,0.841,935,1.454,936,0.664,937,0.841,938,0.841,939,1.454,940,0.841,941,0.664,942,0.841,943,0.841,944,0.841,945,0.841,946,0.841,947,0.841,948,0.841]],["title/coverage.html",[876,2.274]],["body/coverage.html",[0,0.358,1,1.131,5,0.345,6,1.032,7,2.07,9,0.808,15,0.28,16,0.064,27,1.372,30,2.29,36,1.231,70,0.021,71,0.032,72,0.021,73,1.219,74,0.808,76,1.707,77,1.064,78,1.707,96,0.586,127,1.131,128,2.493,129,1.915,136,1.064,137,0.757,165,0.951,166,2.173,167,2.173,169,1.131,171,0.688,218,1.131,219,2.584,220,2.761,250,1.131,252,1.131,254,2.07,298,1.707,305,1.372,306,1.131,353,0.951,372,1.435,378,1.707,479,1.131,876,1.131,949,1.737,950,1.737,951,5.199,952,1.737,953,1.737,954,5.185,955,3.028,956,1.737,957,3.158,958,1.737,959,2.622,960,1.737,961,4.76,962,1.372,963,1.372,964,3.158,965,1.737,966,1.737,967,1.737,968,1.737,969,1.372,970,1.737,971,2.493,972,1.372,973,1.372,974,2.07,975,2.07,976,1.372,977,3.517,978,2.622,979,2.622,980,1.372,981,2.07,982,2.07,983,1.737,984,1.737,985,2.07,986,2.622,987,1.372,988,2.622,989,2.622,990,1.372,991,2.622,992,1.372,993,1.372,994,1.737,995,3.493,996,3.493,997,1.737,998,1.737,999,1.737,1000,1.737,1001,1.737,1002,1.737,1003,1.737,1004,1.737,1005,1.737,1006,1.372,1007,2.07,1008,2.07,1009,2.07,1010,1.737,1011,1.372,1012,3.253,1013,1.737,1014,1.737,1015,1.737,1016,1.737,1017,1.737,1018,1.737,1019,1.737,1020,2.056,1021,1.372,1022,1.372,1023,1.737,1024,1.737,1025,1.737,1026,1.737]],["title/dependencies.html",[465,1.731,622,2.023]],["body/dependencies.html",[5,0.519,16,0.065,20,1.433,21,2.774,22,2.067,23,0.882,24,2.067,25,2.067,70,0.032,71,0.043,72,0.032,103,2.067,137,0.627,138,1.184,224,2.067,226,2.067,227,2.067,228,2.067,264,2.067,337,2.067,353,1.433,354,2.067,461,1.704,483,2.067,502,2.067,553,2.067,564,2.067,616,2.067,617,2.067,622,1.704,640,2.774,715,2.067,776,2.774,868,2.287,1027,2.617,1028,2.617,1029,2.617,1030,4.879,1031,2.617,1032,2.617,1033,2.617,1034,2.617,1035,2.617,1036,2.617,1037,2.617,1038,2.617,1039,3.513,1040,2.617,1041,2.617,1042,2.617,1043,2.617,1044,2.617,1045,2.617,1046,2.617,1047,3.966,1048,2.617,1049,3.513,1050,2.617,1051,2.617,1052,2.617,1053,2.617,1054,3.966,1055,2.617,1056,2.617,1057,2.617,1058,2.617,1059,2.617,1060,2.617,1061,2.617,1062,2.617,1063,3.513,1064,2.617,1065,2.617,1066,2.617,1067,3.513,1068,2.617,1069,2.617,1070,3.513,1071,3.513,1072,2.617,1073,2.617,1074,2.617,1075,2.617,1076,2.067,1077,2.617,1078,2.617,1079,2.617,1080,2.617,1081,2.617,1082,2.617,1083,2.617,1084,2.617,1085,2.617,1086,2.617,1087,2.617,1088,2.617,1089,2.617,1090,2.617,1091,2.617,1092,2.617,1093,2.617,1094,2.617,1095,2.617,1096,2.617,1097,2.617,1098,2.617,1099,2.617,1100,2.617,1101,3.513,1102,2.617,1103,2.617,1104,2.617,1105,2.617,1106,2.617,1107,2.617,1108,2.617,1109,2.617,1110,2.617,1111,2.617,1112,2.617,1113,2.617,1114,2.617,1115,2.617,1116,2.617,1117,2.617,1118,2.617,1119,2.617,1120,2.617,1121,3.513,1122,2.617,1123,2.617,1124,2.617,1125,2.617,1126,2.617,1127,2.617,1128,2.617,1129,2.617,1130,2.617,1131,3.513,1132,2.617,1133,2.617,1134,2.617,1135,2.617,1136,2.617,1137,2.617,1138,2.617,1139,2.617,1140,2.617,1141,2.617,1142,2.617,1143,2.617,1144,2.617]],["title/index.html",[10,0.435,329,1.427,330,1.2]],["body/index.html",[0,0.361,2,0.841,3,1.101,16,0.047,70,0.036,71,0.047,72,0.036,100,1.741,191,1.613,201,2.063,234,2.301,237,2.473,331,1.918,332,2.999,333,2.999,334,2.999,335,3.318,336,3.318,365,2.999,372,2.301,400,2.327,414,2.999,417,2.999,432,2.327,434,2.327,437,3.318,459,2.327,460,2.327,461,1.918,462,2.327,480,3.628,481,3.505,486,2.999,491,2.327,503,2.999,505,2.327,508,2.327,513,2.327,532,2.327,533,2.999,639,2.327,800,2.327,893,2.327,903,2.327,916,2.327,1145,3.798,1146,3.798,1147,3.798,1148,2.947,1149,2.947,1150,2.947,1151,2.947,1152,2.999,1153,2.947,1154,2.947,1155,2.947,1156,3.798,1157,3.798,1158,3.798,1159,4.203,1160,2.947,1161,2.947,1162,4.203,1163,4.203,1164,2.947,1165,2.947,1166,3.798,1167,2.947,1168,2.947,1169,2.947,1170,2.947,1171,2.947,1172,2.947,1173,2.947,1174,2.947,1175,2.947,1176,2.327,1177,4.439,1178,2.947,1179,2.947,1180,2.947,1181,2.947,1182,2.947,1183,2.947,1184,2.947,1185,2.947,1186,2.947,1187,2.947,1188,2.947,1189,2.947,1190,2.947,1191,2.947,1192,2.947,1193,2.947,1194,2.947,1195,2.947]],["title/license.html",[329,1.427,330,1.2,1196,1.731]],["body/license.html",[16,0.051,23,1.13,70,0.041,71,0.051,72,0.041,198,1.915,201,1.558,479,2.182,512,3.252,530,3.521,555,2.647,757,3.252,842,2.647,864,2.647,919,2.647,941,2.647,1152,3.956,1196,2.647,1197,3.352,1198,4.459,1199,3.352,1200,3.352,1201,4.119,1202,3.352,1203,3.352,1204,3.352,1205,3.352,1206,3.352,1207,3.352,1208,4.119,1209,3.352,1210,3.352,1211,3.352,1212,3.352,1213,3.352,1214,3.352,1215,3.352,1216,3.352,1217,3.352,1218,3.352,1219,3.352,1220,3.352,1221,4.119,1222,3.352,1223,3.352,1224,3.352,1225,3.352,1226,3.352,1227,3.352,1228,4.119,1229,3.352,1230,3.352,1231,3.352,1232,3.352,1233,3.352,1234,3.352,1235,3.352,1236,3.352,1237,3.352,1238,3.352,1239,3.352,1240,3.352,1241,3.352,1242,3.352,1243,3.352,1244,3.352,1245,3.352,1246,3.352,1247,3.352,1248,3.352,1249,3.352,1250,3.352,1251,3.352,1252,3.352,1253,3.352,1254,3.352,1255,3.352,1256,3.352]],["title/modules.html",[1257,2.758]],["body/modules.html",[16,0.057,70,0.05,71,0.057,72,0.05,1257,3.193]],["title/overview.html",[1258,2.758]],["body/overview.html",[2,1.144,16,0.056,70,0.049,71,0.056,72,0.049,75,2.609,798,3.165,1258,3.165,1259,4.008]],["title/miscellaneous/typealiases.html",[1260,1.2,1261,3.108]],["body/miscellaneous/typealiases.html",[6,0.993,10,0.69,15,0.559,16,0.052,36,1.086,70,0.043,71,0.052,72,0.043,76,2.262,77,1.626,78,2.741,87,3.325,129,1.957,134,1.376,136,1.419,137,1.009,166,1.902,167,2.305,173,3.065,955,2.262,969,2.744,974,2.744,975,3.325,992,2.744,993,3.577,1012,2.744,1020,2.262,1260,1.902,1262,3.475,1263,4.211,1264,2.744,1265,4.211,1266,4.211,1267,4.211,1268,4.211,1269,4.211,1270,4.211,1271,4.211,1272,3.475,1273,4.211,1274,3.475,1275,4.211,1276,2.744]],["title/miscellaneous/variables.html",[1260,1.2,1277,2.454]],["body/miscellaneous/variables.html",[6,0.938,10,0.437,15,0.775,16,0.064,30,2.951,38,1.034,45,1.235,46,0.629,49,2.03,70,0.027,71,0.038,72,0.038,83,1.739,94,3.208,95,3.208,100,0.742,116,1.739,129,1.83,130,1.023,131,1.023,133,1.83,134,0.872,136,1.401,137,0.944,138,0.742,143,1.449,150,2.03,151,1.83,216,2.03,219,1.433,220,2.357,233,1.433,234,1.982,250,2.03,251,1.739,252,2.03,253,1.739,258,1.433,278,1.433,298,2.03,299,2.462,306,2.03,353,1.205,363,1.739,372,1.205,378,1.433,391,1.739,392,1.739,407,1.739,551,1.739,580,1.739,586,1.739,594,2.462,868,1.433,892,3.109,918,1.739,936,1.739,955,1.433,962,2.462,963,2.462,971,1.739,972,2.859,973,2.859,976,1.739,980,1.739,981,1.739,982,3.109,985,1.739,987,1.739,990,1.739,995,1.739,996,2.462,1006,2.462,1007,1.739,1008,2.462,1009,2.462,1011,2.462,1020,1.433,1021,2.462,1022,2.462,1076,2.462,1176,2.462,1260,1.205,1264,2.859,1276,2.462,1277,1.739,1278,3.62,1279,2.202,1280,4.156,1281,3.118,1282,2.202,1283,3.938,1284,2.202,1285,2.202,1286,2.202,1287,2.202,1288,3.938,1289,2.202,1290,2.202,1291,3.938,1292,2.202,1293,3.118,1294,3.118,1295,3.118,1296,2.202,1297,2.202,1298,2.202,1299,2.202,1300,2.202,1301,2.202,1302,2.202,1303,2.202,1304,2.202,1305,2.202,1306,2.202,1307,2.202,1308,2.202,1309,2.202,1310,2.202,1311,2.202,1312,2.202,1313,2.202,1314,2.202,1315,2.202,1316,2.202,1317,2.202,1318,2.202,1319,2.202,1320,2.202,1321,2.202,1322,2.202,1323,2.202,1324,2.202,1325,2.202,1326,2.202,1327,2.202,1328,2.202,1329,2.202,1330,2.202,1331,2.202,1332,2.202,1333,2.202,1334,2.202,1335,2.202,1336,2.202,1337,2.202,1338,2.202,1339,3.118,1340,3.118,1341,3.118,1342,2.202,1343,3.118,1344,2.202,1345,2.202,1346,3.118,1347,2.202,1348,2.202,1349,2.202,1350,3.118,1351,2.202,1352,2.202,1353,2.202,1354,2.202,1355,2.202]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["0.1.0",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":893,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0/1",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["1.0",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["1.16.0",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":776,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":715,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":210,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["10.0.0",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":146,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["1000",{"_index":148,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["10x",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":432,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.0.1",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["15.126.1",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":798,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":564,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":553,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":502,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["2.awsapprunner.com",{"_index":1174,"title":{},"body":{"index.html":{}}}],["2019",{"_index":864,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":483,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["3.3.0",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["3.4.0",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["3.5.0",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1181,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":337,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.7.1",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":1157,"title":{},"body":{"index.html":{}}}],["4.0.2",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["4th",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1259,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":147,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["8",{"_index":263,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["8.3.2",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["__",{"_index":157,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["_error",{"_index":275,"title":{},"body":{"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["_key",{"_index":211,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["_next",{"_index":299,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["_req",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_res",{"_index":216,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":919,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["accurate",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1249,"title":{},"body":{"license.html":{}}}],["actions",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["actually",{"_index":241,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["adapter",{"_index":106,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["added",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":292,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["agemax",{"_index":245,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["agemean",{"_index":247,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["agemin",{"_index":246,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["agerange",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ala",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowdots",{"_index":48,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["allows",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["allowstale",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alpha",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1161,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":617,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1219,"title":{},"body":{"license.html":{}}}],["angular",{"_index":461,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["anyautoprunelrucache",{"_index":1263,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["api",{"_index":234,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.hubmapconsortium.org",{"_index":1171,"title":{},"body":{"index.html":{}}}],["api/ccf",{"_index":116,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/app.ts",{"_index":7,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["api/src/lib/environment.ts",{"_index":955,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/middleware/database",{"_index":166,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/middleware/response",{"_index":128,"title":{},"body":{"interfaces/CacheOptions.html":{},"coverage.html":{}}}],["api/src/lib/polyfills.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/routes/browser.ts",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/database",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/routes/v1/get",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/gtex/index.ts",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/gtex/rui",{"_index":219,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/hubmap/index.ts",{"_index":985,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/hubmap/rui",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/index.ts",{"_index":987,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/reference",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/sparql.ts",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/utils/forward",{"_index":992,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/routes/v1/utils/parse",{"_index":995,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/utils/use",{"_index":1007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/server.ts",{"_index":1012,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/utils/auto",{"_index":1020,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/utils/ccf",{"_index":76,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/utils/request",{"_index":305,"title":{},"body":{"classes/RequestCache.html":{},"coverage.html":{}}}],["apifile",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":39,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.set('database",{"_index":40,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.set('query",{"_index":43,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use",{"_index":68,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use('/v1",{"_index":69,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(cors",{"_index":64,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(databaseloader(options",{"_index":67,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(helmet",{"_index":53,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(json",{"_index":66,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(urlencoded",{"_index":65,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["appear",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["appoptions",{"_index":1,"title":{"interfaces/AppOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["appropriate",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["args",{"_index":317,"title":{},"body":{"classes/RequestCache.html":{}}}],["arising",{"_index":1253,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":555,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":113,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["atlas",{"_index":334,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["attempt",{"_index":257,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["attempts",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1242,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["autoprunelrucache",{"_index":134,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":125,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["award",{"_index":1194,"title":{},"body":{"index.html":{}}}],["backend",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":916,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":486,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":392,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["bmirange",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":20,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"changelog.html":{},"dependencies.html":{}}}],["boolean",{"_index":142,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/GtexTissue.html":{}}}],["both",{"_index":551,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":868,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["browserify",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["browserroute",{"_index":972,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browserroutes",{"_index":31,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["browsing",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1153,"title":{},"body":{"index.html":{}}}],["builds",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1199,"title":{},"body":{"license.html":{}}}],["cache",{"_index":138,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cache.del(key",{"_index":328,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.get(key",{"_index":159,"title":{},"body":{"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["cache.get(selecttoken(token",{"_index":217,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["cache.get(token",{"_index":302,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["cache.set(key",{"_index":163,"title":{},"body":{"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["cache.ts",{"_index":129,"title":{},"body":{"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cache.ts:10",{"_index":318,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.ts:23",{"_index":323,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.ts:27",{"_index":321,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.ts:4",{"_index":314,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache_dir",{"_index":1011,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":1008,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cachedresponse",{"_index":158,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["cacheoptions",{"_index":127,"title":{"interfaces/CacheOptions.html":{}},"body":{"interfaces/CacheOptions.html":{},"coverage.html":{}}}],["cacheresponses",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["cacheresponses(options",{"_index":145,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["callback",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["calls",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["cancelregistration",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["cases",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":274,"title":{},"body":{"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["ccf",{"_index":100,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ccf's",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["ccf.owl",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":86,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["ccfdatabaseinstance",{"_index":74,"title":{"classes/CCFDatabaseInstance.html":{}},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["ccfdatabaseoptions",{"_index":98,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["ccfdatabasestatustracker",{"_index":99,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["ccfdatabasestatustracker(this.database",{"_index":97,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["cdn.jsdelivr.net",{"_index":62,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["cell",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["celltypeterms",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":1189,"title":{},"body":{"index.html":{}}}],["change",{"_index":639,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":331,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1205,"title":{},"body":{"license.html":{}}}],["checkroutesenabled",{"_index":982,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["choose",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1245,"title":{},"body":{"license.html":{}}}],["clamp",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["class",{"_index":73,"title":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["classes",{"_index":75,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{},"overview.html":{}}}],["clean",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":1177,"title":{},"body":{"index.html":{}}}],["coalescing",{"_index":194,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["code",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["colorizing",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":103,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"dependencies.html":{}}}],["comlink/dist/umd/node",{"_index":105,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["common",{"_index":533,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":434,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["comunica/query",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1227,"title":{},"body":{"license.html":{}}}],["config",{"_index":580,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":63,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["connection",{"_index":1255,"title":{},"body":{"license.html":{}}}],["console.log(err",{"_index":182,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["consortium",{"_index":1200,"title":{},"body":{"license.html":{}}}],["const",{"_index":38,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":84,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["constructor(cache",{"_index":310,"title":{},"body":{"classes/RequestCache.html":{}}}],["constructor(database",{"_index":85,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["constructor(public",{"_index":112,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["container",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1151,"title":{},"body":{"index.html":{}}}],["contentsecuritypolicy",{"_index":54,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["contract",{"_index":1250,"title":{},"body":{"license.html":{}}}],["control",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["coordinate",{"_index":1145,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1221,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1208,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1198,"title":{},"body":{"license.html":{}}}],["cord",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["cors",{"_index":22,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["count",{"_index":248,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["coverage",{"_index":876,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createapp",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["createapp(options",{"_index":37,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["createccfdatabaseworker",{"_index":169,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["createccfdatabaseworker(options",{"_index":114,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["created",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["createdatabase",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["createdatabase(token",{"_index":187,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["credits",{"_index":1184,"title":{},"body":{"index.html":{}}}],["css",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["cuboid",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["cyberinfrastructure",{"_index":1186,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1246,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":202,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["database",{"_index":77,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["database.worker.js",{"_index":117,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["databasecacheoptions",{"_index":165,"title":{"interfaces/DatabaseCacheOptions.html":{}},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["databasegetter",{"_index":173,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"miscellaneous/typealiases.html":{}}}],["databaseloader",{"_index":27,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["databaseloader(options",{"_index":209,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["databaseloaderoptions",{"_index":9,"title":{"interfaces/DatabaseLoaderOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["databasequerymethods",{"_index":1266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasesource",{"_index":1268,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasesources",{"_index":1270,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["datasets",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["datasources",{"_index":204,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["dbinstance",{"_index":179,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["dbinstance.database.connect().catch((err",{"_index":181,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["dbworker",{"_index":119,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["dbworker.database",{"_index":121,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["dbworker.sparqlquery",{"_index":123,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["dbworker[releaseproxy",{"_index":124,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["deal",{"_index":1210,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1256,"title":{},"body":{"license.html":{}}}],["december",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["deck.gl/core",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["decorator",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["deeply",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":94,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_gtex_rui_locations",{"_index":250,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":140,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["defined",{"_index":89,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{},"changelog.html":{}}}],["del",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":622,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":199,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["descrepancies",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["details",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1185,"title":{},"body":{"index.html":{}}}],["developments",{"_index":903,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["directives",{"_index":56,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["directly",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":189,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["display",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["dispose",{"_index":80,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["distribute",{"_index":1217,"title":{},"body":{"license.html":{}}}],["doc",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["doconnect",{"_index":176,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["docs",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":479,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["done",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["dorequest",{"_index":312,"title":{},"body":{"classes/RequestCache.html":{}}}],["dotenv",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["dump",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":1173,"title":{},"body":{"index.html":{}}}],["effect",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":640,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["enabled",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encoding",{"_index":261,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["entry.label",{"_index":282,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["entry.mappedinhubmap",{"_index":271,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["entry['@id']?.includes(tissueinfo.tissuesitedetailid",{"_index":281,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["env",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.gtex_routes",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.hubmap_routes",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":232,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["error",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["es",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":188,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["eslint/prefer",{"_index":192,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["etc",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":437,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["eui/src/assets/gtex/data/rui_locations.jsonld",{"_index":251,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["eval",{"_index":61,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["event",{"_index":1241,"title":{},"body":{"license.html":{}}}],["expanded",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["exploration",{"_index":1155,"title":{},"body":{"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["express",{"_index":23,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":8,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["external",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":141,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["favor",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":244,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["fetch",{"_index":227,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["fetch(gtex_api_url).then(r",{"_index":267,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["field",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":238,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1209,"title":{},"body":{"license.html":{}}}],["filter",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["filter.ts",{"_index":996,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter_defaults",{"_index":1006,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filters",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["final",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["finishing",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1237,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["flexible",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["fly",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1226,"title":{},"body":{"license.html":{}}}],["foreach",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["forwarddatabasequery",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["forwarddatabasequery('getaggregateresults",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getcelltypetermoccurences",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getcelltypetreemodel",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getdatasettechnologynames",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getontologytermoccurences",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getontologytreemodel",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getprovidernames",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getreferenceorgans",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getscene",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('gettissueblockresults",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1146,"title":{},"body":{"index.html":{}}}],["free",{"_index":1204,"title":{},"body":{"license.html":{}}}],["fs",{"_index":226,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["full",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":36,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["funded",{"_index":1192,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1224,"title":{},"body":{"license.html":{}}}],["further",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["get('/aggregate",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/ccf",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/cell",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/ontology",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/provider",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/reference",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/rui_locations.jsonld",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/scene",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/technology",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/tissue",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('ccf_api_cache",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('gtex_rui_locations",{"_index":256,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["get(key",{"_index":315,"title":{},"body":{"classes/RequestCache.html":{}}}],["getboolean",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["getcacheoptions",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["getdatabaseinstance",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["getdatabaseinstance(req",{"_index":175,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["getdatabaseoptions",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["getdatabasestatus",{"_index":976,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdbinstance",{"_index":177,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["getdbinstance(token",{"_index":180,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["getlocations",{"_index":254,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{}}}],["getnumber",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["getport",{"_index":1015,"title":{},"body":{"coverage.html":{}}}],["getreferenceorganscenehandler",{"_index":990,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getspatialplacement",{"_index":980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":329,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["globalthis",{"_index":1271,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["good",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":616,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["granted",{"_index":1203,"title":{},"body":{"license.html":{}}}],["graphical",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["gtex_api_url",{"_index":252,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gtexroutes",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gtextissue",{"_index":218,"title":{"interfaces/GtexTissue.html":{}},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{}}}],["guide",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["hand",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["handleerrors",{"_index":308,"title":{},"body":{"classes/RequestCache.html":{}}}],["handleerrors(key",{"_index":320,"title":{},"body":{"classes/RequestCache.html":{}}}],["happen",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["helmet",{"_index":24,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["help",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":242,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["hereby",{"_index":1202,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1243,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["hra",{"_index":335,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["http://expressjs.com/en/advanced/best",{"_index":50,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["https://beta",{"_index":1158,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":1170,"title":{},"body":{"index.html":{}}}],["https://gtexportal.org/api/v2/dataset/tissuesitedetail",{"_index":253,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["https://hubmap",{"_index":1163,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":1162,"title":{},"body":{"index.html":{}}}],["https://humanatlas.io",{"_index":1182,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1165,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1160,"title":{},"body":{"index.html":{}}}],["https://r5i95k35v5.us",{"_index":1172,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":201,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmapdataurl",{"_index":197,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["hubmaproutes",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubmaptoken",{"_index":195,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["human",{"_index":332,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["icon",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["idb",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1234,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["improve",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1229,"title":{},"body":{"license.html":{}}}],["includes",{"_index":236,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["including",{"_index":512,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["indiana",{"_index":1190,"title":{},"body":{"index.html":{}}}],["individual",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"index.html":{}}}],["information",{"_index":417,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["instance",{"_index":212,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["instance.then((r",{"_index":213,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["instead",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":200,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{}}}],["isdebug",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["issue",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["itemcount",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iu",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":462,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":18,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["json.parse(data",{"_index":265,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["jsonld",{"_index":264,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["jsonld/jsonld",{"_index":230,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["jsonld['@graph",{"_index":266,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["jsonldobj",{"_index":229,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["july",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["k",{"_index":316,"title":{},"body":{"classes/RequestCache.html":{}}}],["k,args",{"_index":313,"title":{},"body":{"classes/RequestCache.html":{}}}],["key",{"_index":156,"title":{},"body":{"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["keyboard",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["keys",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyval",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1233,"title":{},"body":{"license.html":{}}}],["known",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["labs/data",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["labs/dispatch",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["latest",{"_index":400,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layers",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["left/right",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["length",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lengthcalculator",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1247,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1244,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":459,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1196,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1212,"title":{},"body":{"license.html":{}}}],["limited",{"_index":842,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":190,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["link",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":491,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":224,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["little",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":258,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["loaddatabasesource",{"_index":1016,"title":{},"body":{"coverage.html":{}}}],["loaded",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["loader",{"_index":29,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["loader.ts",{"_index":167,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["loaders.gl/core",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":203,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{}}}],["local",{"_index":259,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["location",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["locations",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["locations.ts",{"_index":220,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lodash",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1183,"title":{},"body":{"index.html":{}}}],["logging",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["lru",{"_index":137,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lrucache",{"_index":311,"title":{},"body":{"classes/RequestCache.html":{}}}],["luma.gl/core",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["made",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":249,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["managers",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":239,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["mappedentries",{"_index":269,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["mappedinhubmap",{"_index":221,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["march",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":71,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchingentry",{"_index":279,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["math.gl/core",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["math.gl/culling",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["max",{"_index":130,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":131,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["mc",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["mean",{"_index":291,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["memory",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1236,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1215,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["method",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":306,"title":{},"body":{"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["middleware/database",{"_index":28,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["mimetype",{"_index":110,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["minor",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1260,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1197,"title":{},"body":{"license.html":{}}}],["mock",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1076,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["model.json",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":1214,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1257,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1148,"title":{},"body":{"index.html":{}}}],["more",{"_index":237,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{}}}],["moved",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1149,"title":{},"body":{"index.html":{}}}],["mutableproperties",{"_index":1021,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["n3",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["n=${sexstats.count",{"_index":290,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["name",{"_index":92,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["names",{"_index":594,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["navigation",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1187,"title":{},"body":{"index.html":{}}}],["never",{"_index":14,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["new",{"_index":96,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":151,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["next('router",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng5",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1193,"title":{},"body":{"index.html":{}}}],["node",{"_index":228,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["nodeendpoint",{"_index":104,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["noninfringement",{"_index":1240,"title":{},"body":{"license.html":{}}}],["note",{"_index":233,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["notice",{"_index":757,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["nullish",{"_index":193,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["number",{"_index":132,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["numeric",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1207,"title":{},"body":{"license.html":{}}}],["occurences",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["off/on",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1164,"title":{},"body":{"index.html":{}}}],["one",{"_index":800,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ones",{"_index":240,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["online",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["ontologyterms",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opacities",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":503,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1178,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1180,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1179,"title":{},"body":{"index.html":{}}}],["openapiroute",{"_index":973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optimization",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{},"changelog.html":{}}}],["options",{"_index":41,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["options.cache",{"_index":215,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options.database",{"_index":42,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options.datasources.map(s",{"_index":205,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options.hubmaptoken",{"_index":196,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["organ",{"_index":372,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":407,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs.json",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["originalsend",{"_index":161,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["originalsend.call(res",{"_index":164,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["originalurl",{"_index":152,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["orthographic",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":1195,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1252,"title":{},"body":{"license.html":{}}}],["out",{"_index":1254,"title":{},"body":{"license.html":{}}}],["over",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1258,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwritten",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":465,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":91,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["parent",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["parsearray",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["parseboolean",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["parseboolean(query.cache",{"_index":155,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["parseboolean(value",{"_index":139,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["parsedatabasesources",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["parsedqs",{"_index":26,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["parseminmaxrange",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["parsenumber",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["parser",{"_index":21,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["parserange",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["parsesex",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["parsespatial",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["parsestring",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["partial",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":1238,"title":{},"body":{"license.html":{}}}],["partly",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["patchglobal",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["peek",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1201,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1222,"title":{},"body":{"license.html":{}}}],["person",{"_index":1206,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1223,"title":{},"body":{"license.html":{}}}],["pick",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["pickbytype",{"_index":1273,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["placeholder",{"_index":13,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["placement",{"_index":363,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["placement.ts",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["placenta",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["popup",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":513,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1231,"title":{},"body":{"license.html":{}}}],["position",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["post('/get",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["practice",{"_index":51,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["preferences",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":307,"title":{},"body":{"classes/RequestCache.html":{}}}],["process",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["process.env",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["processparameter",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["production",{"_index":480,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1150,"title":{},"body":{"index.html":{}}}],["projects/.../auto",{"_index":1264,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../browser.ts",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ccf",{"_index":1274,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../database",{"_index":1265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../environment.ts",{"_index":1276,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../forward",{"_index":1267,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../index.ts",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../parse",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../polyfills.ts",{"_index":1272,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../rui",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../server.ts",{"_index":1269,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../use",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":111,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["promisifieddorequest",{"_index":309,"title":{},"body":{"classes/RequestCache.html":{}}}],["promisifieddorequest(key",{"_index":322,"title":{},"body":{"classes/RequestCache.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["provided",{"_index":941,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["prune",{"_index":136,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":79,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"changelog.html":{}}}],["publish",{"_index":1216,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1239,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":460,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":25,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["qs.parse(str",{"_index":47,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["qtoken",{"_index":184,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["qualitative",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":354,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["query",{"_index":109,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"changelog.html":{}}}],["query.ts",{"_index":993,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["querying",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["queryparameterstofilter",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["quickly",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["r.dispose",{"_index":214,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["r.json",{"_index":268,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["range",{"_index":294,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["rawtoken",{"_index":301,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["rc.1",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["readfilesync",{"_index":225,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["readfilesync(source",{"_index":260,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["readonly",{"_index":82,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["readonlyproperties",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["real",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["rectify",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":333,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["refernced",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":532,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["releaseproxy",{"_index":101,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["reliability",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":1147,"title":{},"body":{"index.html":{}}}],["req",{"_index":149,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["req.app.get('database",{"_index":300,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["req.query.token",{"_index":185,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["req['getdatabase",{"_index":178,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["request",{"_index":168,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{}}}],["requestcache",{"_index":171,"title":{"classes/RequestCache.html":{}},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["requesthandler",{"_index":133,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["res",{"_index":150,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["res.json",{"_index":162,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["res.json(cachedresponse",{"_index":160,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["res.json(result",{"_index":303,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["res.send",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.sendfile(apifile",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.status(500).json",{"_index":304,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["reset",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resets",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["resolve('ccf",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolved",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":235,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["response?.data?.filter(entry",{"_index":270,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["restriction",{"_index":1211,"title":{},"body":{"license.html":{}}}],["result",{"_index":70,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.ts",{"_index":1009,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":72,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultslist.find(entry",{"_index":280,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["resultslist.indexof(matchingentry",{"_index":284,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["resultslist[index].label",{"_index":288,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["resultslist[index].sex",{"_index":297,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["return",{"_index":46,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":319,"title":{},"body":{"classes/RequestCache.html":{}}}],["rforeach",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgb",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1213,"title":{},"body":{"license.html":{}}}],["rnaseqsamplesummary",{"_index":222,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["root",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["router",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":30,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes/browser",{"_index":32,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["routes/v1",{"_index":34,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ru/common",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":365,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["ruilocations",{"_index":298,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":206,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["s.endswith('hubmap/rui_locations.jsonld",{"_index":207,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["sample",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":391,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["scene.ts",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["scheduled",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1188,"title":{},"body":{"index.html":{}}}],["script",{"_index":57,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["search",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["searches",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["security.html",{"_index":52,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["see",{"_index":414,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["selecttoken",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["selecttoken(token",{"_index":183,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["self",{"_index":59,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["sell",{"_index":1220,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":586,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["setifdefined",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["setup",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":278,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sexes",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["sexstats",{"_index":285,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sexstats.agemax",{"_index":296,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sexstats.agemean",{"_index":293,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sexstats.agemin",{"_index":295,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sex}s",{"_index":289,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["shall",{"_index":1228,"title":{},"body":{"license.html":{}}}],["shared",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["shortest",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["sides",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["simplifies",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["sites",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["slider",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1152,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["sources",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["sparc",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":353,"title":{},"body":{"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sparqlquery",{"_index":81,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["sparqlqueryfunction",{"_index":87,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"miscellaneous/typealiases.html":{}}}],["spatial",{"_index":378,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spatialsearches",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec",{"_index":231,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1176,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["specific",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1175,"title":{},"body":{"index.html":{}}}],["speed",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":58,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["stage",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":481,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1156,"title":{},"body":{"index.html":{}}}],["started",{"_index":330,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["startserver",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["startup",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["statements",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":83,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"miscellaneous/variables.html":{}}}],["status.ts",{"_index":975,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["stay",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["str",{"_index":44,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["stream",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":45,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["string).includes(sex",{"_index":283,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["structure",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1225,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1218,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1230,"title":{},"body":{"license.html":{}}}],["such",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["support",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["symbol('indicator",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sync",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["s}?token=${hubmaptoken",{"_index":208,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["table",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["technologies",{"_index":918,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["technology",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["term",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terms",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["test",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["this.dorequest(key",{"_index":327,"title":{},"body":{"classes/RequestCache.html":{}}}],["this.handleerrors(key",{"_index":326,"title":{},"body":{"classes/RequestCache.html":{}}}],["this.promisifieddorequest(key",{"_index":325,"title":{},"body":{"classes/RequestCache.html":{}}}],["through",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["throw_if_not_found",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["throwindicator",{"_index":1275,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["thrown",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thumbnails",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":272,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["tissueinfo",{"_index":277,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tissueinfo.rnaseqsamplesummary.female",{"_index":287,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tissueinfo.rnaseqsamplesummary.male",{"_index":286,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tissues",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["tissuesitedetailid",{"_index":223,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tmc",{"_index":936,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["token",{"_index":174,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["tool",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1251,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":243,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tracking/telemetry",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["transparency",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":892,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":49,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":255,"title":{},"body":{"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{}}}],["tryjsonparse",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["ts",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1261,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":186,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["types",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["types/lru",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":191,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":508,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1159,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1169,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1166,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":1168,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1167,"title":{},"body":{"index.html":{}}}],["uis",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":143,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["university",{"_index":1191,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":122,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["unnecessary",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":60,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["unselect",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["updateentry",{"_index":984,"title":{},"body":{"coverage.html":{}}}],["updateentry(results",{"_index":273,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["updateentry(resultslist",{"_index":276,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["updates",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":153,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/GtexTissue.html":{}}}],["urlencoded",{"_index":19,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["use",{"_index":198,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"license.html":{}}}],["use('/ccf.owl.n3store.json",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use('/db",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use('/gtex",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use('/hubmap",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use('/sparql",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use(cacheresponses",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use(checkroutesenabled",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecache",{"_index":154,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["usecachedresult",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["usecachedresult('ccf.owl.n3store.json",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecachedresult('cell",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecachedresult('ontology",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecachedresult('reference",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["usedefaults",{"_index":55,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["user",{"_index":336,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["utf",{"_index":262,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["utilities",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["utils/auto",{"_index":135,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["utils/ccf",{"_index":170,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["utils/request",{"_index":172,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["uuid",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["v",{"_index":324,"title":{},"body":{"classes/RequestCache.html":{}}}],["v1.1",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["v1.3",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["v1.9.4",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["v1routes",{"_index":33,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["v2.1.0",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":95,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value}`.tolowercase",{"_index":144,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["variable",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1277,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":505,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["visual",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":88,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["vs",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1235,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1232,"title":{},"body":{"license.html":{}}}],["web",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1154,"title":{},"body":{"index.html":{}}}],["week",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1248,"title":{},"body":{"license.html":{}}}],["whole",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["within",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":530,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["worker",{"_index":107,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["worker('./projects/ccf",{"_index":115,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker.terminate",{"_index":126,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker.ts",{"_index":78,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["worker.ts:10",{"_index":90,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker.ts:12",{"_index":93,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker_threads",{"_index":108,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["workerdata",{"_index":118,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["workflows",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":102,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["wrap(nodeendpoint(worker",{"_index":120,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["youtube",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["zone.js",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/app.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseLoaderOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     never\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     never\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { json, urlencoded } from 'body-parser';\nimport cors from 'cors';\nimport express, { Express } from 'express';\nimport helmet from 'helmet';\nimport qs, { ParsedQs } from 'qs';\n\nimport { databaseLoader, DatabaseLoaderOptions } from './middleware/database-loader';\nimport { routes as browserRoutes } from './routes/browser';\nimport { routes as v1Routes } from './routes/v1';\n\n\nexport interface AppOptions extends DatabaseLoaderOptions {\n  placeholder?: never;\n}\n\n\nexport function createApp(options: AppOptions): Express {\n  const app = express();\n\n  app.set('database-options', options.database);\n\n  app.set('query parser', function (str: string): ParsedQs {\n    return qs.parse(str, { allowDots: true });\n  });\n\n  // http://expressjs.com/en/advanced/best-practice-security.html\n  app.use(helmet({\n    contentSecurityPolicy: {\n      useDefaults: true,\n      directives: {\n        'script-src': ['\\'self\\'', '\\'unsafe-eval\\'', 'cdn.jsdelivr.net'],\n        'connect-src': ['*'],\n      }\n    }\n  }));\n  app.use(cors());\n\n  app.use(urlencoded());\n  app.use(json());\n\n  app.use(databaseLoader(options));\n\n  app.use('/', browserRoutes);\n  app.use('/v1', v1Routes);\n\n  return app;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFDatabaseInstance.html":{"url":"classes/CCFDatabaseInstance.html","title":"class - CCFDatabaseInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFDatabaseInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                database\n                            \n                            \n                                    Public\n                                dispose\n                            \n                            \n                                    Public\n                                sparqlQuery\n                            \n                            \n                                    Readonly\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(database: CCFDatabase, sparqlQuery: SparqlQueryFunction, dispose: () => void)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sparqlQuery\n                                                  \n                                                        \n                                                                        SparqlQueryFunction\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dispose\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CCFDatabase\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dispose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sparqlQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SparqlQueryFunction\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CCFDatabaseStatusTracker(this.database)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CCFDatabase, CCFDatabaseOptions, CCFDatabaseStatusTracker } from 'ccf-database';\nimport { releaseProxy, wrap } from 'comlink';\nimport nodeEndpoint from 'comlink/dist/umd/node-adapter';\nimport { Worker } from 'worker_threads';\n\n\nexport type SparqlQueryFunction = (query: string, mimetype: string) => Promise;\n\nexport class CCFDatabaseInstance {\n  readonly status = new CCFDatabaseStatusTracker(this.database);\n\n  constructor(public database: CCFDatabase, public sparqlQuery: SparqlQueryFunction, public dispose: () => Promise) { }\n}\n\nexport async function createCCFDatabaseWorker(options: CCFDatabaseOptions): Promise {\n  const worker = new Worker('./projects/ccf-api/ccf-database.worker.js', { workerData: { options } });\n  const dbWorker = wrap(nodeEndpoint(worker));\n  return new CCFDatabaseInstance(\n    dbWorker.database as unknown as CCFDatabase,\n    dbWorker.sparqlQuery,\n    async () => {\n      dbWorker[releaseProxy]();\n      await worker.terminate();\n    });\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheOptions.html":{"url":"interfaces/CacheOptions.html","title":"interface - CacheOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CacheOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/middleware/response-cache.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAge\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler } from 'express';\nimport { AutoPruneLRUCache } from '../utils/auto-prune-lru-cache';\n\n\nexport interface CacheOptions {\n  max?: number;\n  maxAge?: number;\n}\n\n\nfunction parseBoolean(value: unknown, defaultValue = false): boolean {\n  if (value === undefined) {\n    return defaultValue;\n  }\n\n  return `${value}`.toLowerCase() === 'true';\n}\n\n\nexport function cacheResponses(options?: CacheOptions): RequestHandler {\n  const cache = new AutoPruneLRUCache({\n    max: 100,\n    maxAge: 60 * 60 * 1000,\n    ...options\n  });\n\n  return (req, res, next) => {\n    const { query, originalUrl, url } = req;\n    const useCache = parseBoolean(query.cache, true);\n    const key = `__${ originalUrl || url }`;\n    const cachedResponse = cache.get(key);\n\n    if (!useCache) {\n      next();\n    } else if (cachedResponse !== undefined) {\n      res.json(cachedResponse);\n    } else {\n      const originalSend = res.json;\n      res.json = body => {\n        cache.set(key, body);\n        return originalSend.call(res, body);\n      };\n\n      next();\n    }\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseCacheOptions.html":{"url":"interfaces/DatabaseCacheOptions.html","title":"interface - DatabaseCacheOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseCacheOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/middleware/database-loader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAge\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CCFDatabaseOptions } from 'ccf-database';\nimport { Request, RequestHandler } from 'express';\n\nimport { AutoPruneLRUCache } from '../utils/auto-prune-lru-cache';\nimport { CCFDatabaseInstance, createCCFDatabaseWorker } from '../utils/ccf-database-worker';\nimport { RequestCache } from '../utils/request-cache';\n\n\nexport interface DatabaseCacheOptions {\n  max?: number;\n  maxAge?: number;\n}\n\nexport interface DatabaseLoaderOptions {\n  database: CCFDatabaseOptions;\n  cache?: DatabaseCacheOptions;\n}\n\ntype DatabaseGetter = (token?: string) => Promise;\n\nexport async function getDatabaseInstance(req: Request, token: string | undefined, doConnect = false): Promise {\n  const getDBInstance = req['getDatabase'] as DatabaseGetter;\n  const dbInstance = await getDBInstance(token);\n  if (doConnect) {\n    await dbInstance.database.connect().catch((err) => console.log(err));\n  }\n  return dbInstance;\n}\n\nfunction selectToken(token: string | undefined, req: Request): string {\n  const qtoken = req.query.token;\n\n  if (token) {\n    return token;\n  } else if (typeof qtoken === 'string' && qtoken) {\n    return qtoken;\n  }\n\n  return '';\n}\n\nfunction createDatabase(token: string, options: CCFDatabaseOptions): Promise {\n  // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n  const hubmapToken = token || options.hubmapToken || undefined;\n\n  return createCCFDatabaseWorker({\n    ...options,\n    hubmapDataUrl: '', // Do not use deprecated internal hubmap data loading\n    dataSources: options.dataSources.map(s =>\n      hubmapToken && typeof s === 'string' && s.endsWith('hubmap/rui_locations.jsonld') ? `${s}?token=${hubmapToken}` : s\n    )\n  });\n}\n\nexport function databaseLoader(options: DatabaseLoaderOptions): RequestHandler {\n  const cache = new RequestCache(\n    new AutoPruneLRUCache({\n      max: 10,\n      maxAge: 60 * 60 * 1000,\n      dispose: (_key, instance) => instance.then((r) => r.dispose()),\n      ...options.cache\n    }),\n    token => createDatabase(token, options.database)\n  );\n\n  return (req, _res, next) => {\n    req['getDatabase'] = (token?: string) => cache.get(selectToken(token, req));\n    next();\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseLoaderOptions.html":{"url":"interfaces/DatabaseLoaderOptions.html","title":"interface - DatabaseLoaderOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseLoaderOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/middleware/database-loader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cache\n                                        \n                                \n                                \n                                        \n                                            database\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cache:         DatabaseCacheOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseCacheOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     CCFDatabaseOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CCFDatabaseOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CCFDatabaseOptions } from 'ccf-database';\nimport { Request, RequestHandler } from 'express';\n\nimport { AutoPruneLRUCache } from '../utils/auto-prune-lru-cache';\nimport { CCFDatabaseInstance, createCCFDatabaseWorker } from '../utils/ccf-database-worker';\nimport { RequestCache } from '../utils/request-cache';\n\n\nexport interface DatabaseCacheOptions {\n  max?: number;\n  maxAge?: number;\n}\n\nexport interface DatabaseLoaderOptions {\n  database: CCFDatabaseOptions;\n  cache?: DatabaseCacheOptions;\n}\n\ntype DatabaseGetter = (token?: string) => Promise;\n\nexport async function getDatabaseInstance(req: Request, token: string | undefined, doConnect = false): Promise {\n  const getDBInstance = req['getDatabase'] as DatabaseGetter;\n  const dbInstance = await getDBInstance(token);\n  if (doConnect) {\n    await dbInstance.database.connect().catch((err) => console.log(err));\n  }\n  return dbInstance;\n}\n\nfunction selectToken(token: string | undefined, req: Request): string {\n  const qtoken = req.query.token;\n\n  if (token) {\n    return token;\n  } else if (typeof qtoken === 'string' && qtoken) {\n    return qtoken;\n  }\n\n  return '';\n}\n\nfunction createDatabase(token: string, options: CCFDatabaseOptions): Promise {\n  // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n  const hubmapToken = token || options.hubmapToken || undefined;\n\n  return createCCFDatabaseWorker({\n    ...options,\n    hubmapDataUrl: '', // Do not use deprecated internal hubmap data loading\n    dataSources: options.dataSources.map(s =>\n      hubmapToken && typeof s === 'string' && s.endsWith('hubmap/rui_locations.jsonld') ? `${s}?token=${hubmapToken}` : s\n    )\n  });\n}\n\nexport function databaseLoader(options: DatabaseLoaderOptions): RequestHandler {\n  const cache = new RequestCache(\n    new AutoPruneLRUCache({\n      max: 10,\n      maxAge: 60 * 60 * 1000,\n      dispose: (_key, instance) => instance.then((r) => r.dispose()),\n      ...options.cache\n    }),\n    token => createDatabase(token, options.database)\n  );\n\n  return (req, _res, next) => {\n    req['getDatabase'] = (token?: string) => cache.get(selectToken(token, req));\n    next();\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GtexTissue.html":{"url":"interfaces/GtexTissue.html","title":"interface - GtexTissue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GtexTissue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mappedInHubmap\n                                        \n                                \n                                \n                                        \n                                            rnaSeqSampleSummary\n                                        \n                                \n                                \n                                        \n                                            tissueSiteDetailId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mappedInHubmap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mappedInHubmap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rnaSeqSampleSummary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rnaSeqSampleSummary:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueSiteDetailId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tissueSiteDetailId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CCFDatabaseOptions } from 'ccf-database';\nimport { RequestHandler } from 'express';\nimport { readFileSync } from 'fs';\nimport fetch from 'node-fetch';\n\nimport { AutoPruneLRUCache } from '../../../utils/auto-prune-lru-cache';\nimport { RequestCache } from '../../../utils/request-cache';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\nimport { get } from '../../../environment';\n\nexport interface GtexTissue {\n  // NOTE: The API response includes more fields, but we only map the ones we actually use here\n  tissueSiteDetailId: string;\n  mappedInHubmap: boolean;\n  rnaSeqSampleSummary: {\n    totalCount: number;\n    female: {\n      ageMax: number;\n      ageMin: number;\n      ageMean: number;\n      count: number;\n    };\n    male: {\n      ageMax: number;\n      ageMin: number;\n      ageMean: number;\n      count: number;\n    };\n  };\n}\n\nconst DEFAULT_GTEX_RUI_LOCATIONS = 'projects/ccf-eui/src/assets/gtex/data/rui_locations.jsonld';\nconst GTEX_API_URL = 'https://gtexportal.org/api/v2/dataset/tissueSiteDetail';\n\nasync function getLocations(): Promise {\n  try {\n    const source = get('GTEX_RUI_LOCATIONS', DEFAULT_GTEX_RUI_LOCATIONS);\n    // Attempt to load the source url as a local file\n    const data = readFileSync(source, { encoding: 'utf-8' });\n    const jsonld: JsonLdObj = JSON.parse(data);\n    const results = jsonld['@graph'] as JsonLdObj[];\n\n    const response: { data: GtexTissue[] } = await fetch(GTEX_API_URL).then(r => r.json());\n    const mappedEntries = response?.data?.filter(entry => entry.mappedInHubmap) ?? [];\n    for (const tissue of mappedEntries) {\n      updateEntry(results, tissue, 'Female');\n      updateEntry(results, tissue, 'Male');\n    }\n\n    return jsonld;\n  } catch (_error) {\n    return undefined;\n  }\n}\n\nexport function updateEntry(resultsList: JsonLdObj[], tissueInfo: GtexTissue, sex: 'Male' | 'Female'): void {\n  const matchingEntry = resultsList.find(entry => entry['@id']?.includes(tissueInfo.tissueSiteDetailId) && (entry.label as string).includes(sex));\n  if (matchingEntry) {\n    const index = resultsList.indexOf(matchingEntry);\n    const sexStats = sex === 'Male' ? tissueInfo.rnaSeqSampleSummary.male : tissueInfo.rnaSeqSampleSummary.female;\n    resultsList[index].label = `${sex}s (n=${sexStats.count}) Mean Age ${sexStats.ageMean} (range ${sexStats.ageMin} - ${sexStats.ageMax})`;\n    resultsList[index].sex = sex;\n  }\n}\n\nexport function ruiLocations(): RequestHandler {\n  const cache = new RequestCache(\n    new AutoPruneLRUCache({\n      max: 10,\n      maxAge: 60 * 60 * 1000\n    }),\n    getLocations\n  );\n\n  return async (req, res, _next) => {\n    const options: CCFDatabaseOptions = req.app.get('database-options');\n    const rawToken = req.query.token;\n    const token = typeof rawToken === 'string' ? rawToken : '';\n    const result = await cache.get(token, options);\n\n    if (result) {\n      res.json(result);\n    } else {\n      res.status(500).json([]);\n    }\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCache.html":{"url":"classes/RequestCache.html","title":"class - RequestCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/utils/request-cache.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                    Private\n                                    Async\n                                handleErrors\n                            \n                            \n                                    Private\n                                    Async\n                                promisifiedDoRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: LRUCache>, doRequest: (key: K,args: []) => void)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-api/src/lib/utils/request-cache.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    LRUCache>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doRequest\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K, ...args: [])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-api/src/lib/utils/request-cache.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        handleErrors\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleErrors(key: K, request: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-api/src/lib/utils/request-cache.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        promisifiedDoRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    promisifiedDoRequest(key: K, ...args: [])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-api/src/lib/utils/request-cache.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import LRUCache from 'lru-cache';\n\n\nexport class RequestCache {\n  constructor(\n    readonly cache: LRUCache>,\n    readonly doRequest: (key: K, ...args: unknown[]) => V | Promise\n  ) { }\n\n  get(key: K, ...args: unknown[]): Promise {\n    const { cache } = this;\n    let result = cache.get(key);\n\n    if (!result) {\n      result = this.promisifiedDoRequest(key, ...args);\n      cache.set(key, result);\n      this.handleErrors(key, result);\n    }\n\n    return result;\n  }\n\n  private async promisifiedDoRequest(key: K, ...args: unknown[]): Promise {\n    return this.doRequest(key, ...args);\n  }\n\n  private async handleErrors(key: K, request: Promise): Promise {\n    const { cache } = this;\n\n    try {\n      await request;\n    } catch (_error) {\n      if (cache.get(key) === request) {\n        cache.del(key);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Human Reference Atlas (HRA) User Interfaces\n3.6.0 - 2022-10-15\nAdded in 3.6.0.\n\nUpdated to CCF.OWL v2.1.0 which indexes the Human Reference Atlas (HRA) 4th Release (v1.3) for use in the CCF UIs and CCF-API. Note that some terms have changed in the ontology. As such, some SPARQL queries may need to be updated. All CCF-API calls have been updated to support the new terms.\n\n3.5.0 - 2022-09-27\nAdded in 3.5.0\n\nUpdate to CCF.OWL v1.9.4\nUpdate placement for KPMP rui locations\nSwitch to HuBMAP v3 search-api\nPick right organ when loading rui locations from a file in the RUI\n\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-api/src/lib/app.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/app.ts\n            \n            function\n            createApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            has\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            isDebug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            parseBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            parseNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            variable\n            THROW_IF_NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            interface\n            DatabaseCacheOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            interface\n            DatabaseLoaderOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            createDatabase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            databaseLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            getDatabaseInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            selectToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/response-cache.ts\n            \n            interface\n            CacheOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/response-cache.ts\n            \n            function\n            cacheResponses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/response-cache.ts\n            \n            function\n            parseBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/polyfills.ts\n            \n            function\n            patchGlobal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/browser.ts\n            \n            variable\n            browserRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/browser.ts\n            \n            variable\n            openApiRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/browser.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/database-status.ts\n            \n            function\n            getDatabaseStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/database-status.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/get-spatial-placement.ts\n            \n            function\n            getSpatialPlacement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/get-spatial-placement.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/index.ts\n            \n            variable\n            checkRoutesEnabled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/index.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            interface\n            GtexTissue\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            function\n            getLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            function\n            ruiLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            function\n            updateEntry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            variable\n            DEFAULT_GTEX_RUI_LOCATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            variable\n            GTEX_API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/hubmap/index.ts\n            \n            variable\n            checkRoutesEnabled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/hubmap/index.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/hubmap/rui-locations.ts\n            \n            function\n            getLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/hubmap/rui-locations.ts\n            \n            function\n            ruiLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/index.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/reference-organ-scene.ts\n            \n            function\n            getReferenceOrganSceneHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/reference-organ-scene.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/sparql.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/sparql.ts\n            \n            function\n            sparql\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/forward-database-query.ts\n            \n            function\n            forwardDatabaseQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            clamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseMinMaxRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseSex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseSpatial\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            processParameter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            queryParametersToFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            setIfDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            variable\n            FILTER_DEFAULTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/use-cached-result.ts\n            \n            function\n            useCachedResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/use-cached-result.ts\n            \n            variable\n            CACHE_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            getCacheOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            getDatabaseOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            getPort\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            loadDatabaseSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            parseDatabaseSources\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            startServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            tryJsonParse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n            \n            variable\n            methods\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n            \n            variable\n            mutableProperties\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n            \n            variable\n            readonlyProperties\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n            \n            class\n            CCFDatabaseInstance\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n            \n            function\n            createCCFDatabaseWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/request-cache.ts\n            \n            class\n            RequestCache\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs-labs/dispatch-decorator : ^4.0.2\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHuman Reference Atlas (HRA) and Common Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://r5i95k35v5.us-east-2.awsapprunner.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Human Reference Atlas (HRA) and the Common Coordinate Framework (CCF), see the HuBMAP HRA Portal at https://humanatlas.io.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyAutoPruneLRUCache   (projects/.../auto-prune-lru-cache.ts)\n                        \n                        \n                            DatabaseGetter   (projects/.../database-loader.ts)\n                        \n                        \n                            DatabaseGetter   (projects/.../database-status.ts)\n                        \n                        \n                            DatabaseQueryMethods   (projects/.../forward-database-query.ts)\n                        \n                        \n                            DatabaseSource   (projects/.../server.ts)\n                        \n                        \n                            DatabaseSources   (projects/.../server.ts)\n                        \n                        \n                            GlobalThis   (projects/.../polyfills.ts)\n                        \n                        \n                            PickByType   (projects/.../forward-database-query.ts)\n                        \n                        \n                            SparqlQueryFunction   (projects/.../ccf-database-worker.ts)\n                        \n                        \n                            ThrowIndicator   (projects/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n    \n    \n        \n            \n                \n                    \n                    AnyAutoPruneLRUCache\n                \n            \n            \n                \n                        AutoPruneLRUCache\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/middleware/database-loader.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseGetter\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/routes/v1/database-status.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseGetter\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/routes/v1/utils/forward-database-query.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseQueryMethods\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PickByType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/server.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseSource\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DatabaseSources\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/polyfills.ts\n    \n    \n        \n            \n                \n                    \n                    GlobalThis\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n    \n    \n        \n            \n                \n                    \n                    SparqlQueryFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/environment.ts\n    \n    \n        \n            \n                \n                    \n                    ThrowIndicator\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            browserRoute   (projects/.../browser.ts)\n                        \n                        \n                            CACHE_DIR   (projects/.../use-cached-result.ts)\n                        \n                        \n                            checkRoutesEnabled   (projects/.../index.ts)\n                        \n                        \n                            checkRoutesEnabled   (projects/.../index.ts)\n                        \n                        \n                            DEFAULT_GTEX_RUI_LOCATIONS   (projects/.../rui-locations.ts)\n                        \n                        \n                            env   (projects/.../environment.ts)\n                        \n                        \n                            FILTER_DEFAULTS   (projects/.../parse-filter.ts)\n                        \n                        \n                            GTEX_API_URL   (projects/.../rui-locations.ts)\n                        \n                        \n                            methods   (projects/.../auto-prune-lru-cache.ts)\n                        \n                        \n                            mutableProperties   (projects/.../auto-prune-lru-cache.ts)\n                        \n                        \n                            openApiRoute   (projects/.../browser.ts)\n                        \n                        \n                            readonlyProperties   (projects/.../auto-prune-lru-cache.ts)\n                        \n                        \n                            routes   (projects/.../browser.ts)\n                        \n                        \n                            routes   (projects/.../index.ts)\n                        \n                        \n                            routes   (projects/.../index.ts)\n                        \n                        \n                            routes   (projects/.../index.ts)\n                        \n                        \n                            THROW_IF_NOT_FOUND   (projects/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-api/src/lib/routes/browser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        browserRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, res, _next) => {\n\n  res.send(`\n\n  \n    \n    \n    CCF-API Browser\n\n    \n    \n  \n  \n    \n  \n`);\n\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openApiRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, res, _next) => {\n  const apiFile = resolve('ccf-api-spec.yaml');\n  res.sendFile(apiFile);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .get('/', browserRoute)\n  .get('/ccf-api-spec.yaml', openApiRoute)\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/utils/use-cached-result.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CACHE_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : get('CCF_API_CACHE', 'projects/ccf-api/ccf-cache')\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/gtex/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkRoutesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, _res, next) => {\n  const enabled = env.GTEX_ROUTES === 'true';\n  enabled ? next() : next('router');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .use(checkRoutesEnabled)\n  .get('/rui_locations.jsonld', ruiLocations())\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/hubmap/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkRoutesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, _res, next) => {\n  const enabled = env.HUBMAP_ROUTES === 'true';\n  enabled ? next() : next('router');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .use(checkRoutesEnabled)\n  .get('/rui_locations.jsonld', ruiLocations())\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_GTEX_RUI_LOCATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'projects/ccf-eui/src/assets/gtex/data/rui_locations.jsonld'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GTEX_API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://gtexportal.org/api/v2/dataset/tissueSiteDetail'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n  config();\n  return process.env;\n})()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        THROW_IF_NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('Indicator that an error should be thrown')\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FILTER_DEFAULTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  sex: 'Both',\n  ageRange: undefined,\n  bmiRange: undefined,\n  tmc: [],\n  technologies: [],\n  ontologyTerms: [],\n  cellTypeTerms: [],\n  spatialSearches: []\n}\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        methods\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  // NOTE: No set method as it is overwritten by AutoPruneLRUCache\n  'has', 'get', 'del', 'peek',\n  'keys', 'values',\n  'forEach', 'rforEach',\n  'prune', 'reset',\n  'dump', 'load'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutableProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'lengthCalculator', 'allowStale', 'max', 'maxAge'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readonlyProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'length', 'itemCount'\n]\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .use('/db-status', getDatabaseStatus())\n  .post('/get-spatial-placement', getSpatialPlacement())\n  .use('/sparql', sparql())\n  .use('/ccf.owl.n3store.json', useCachedResult('ccf.owl.n3store.json'))\n  .use(cacheResponses())\n  .use('/hubmap', hubmapRoutes)\n  .use('/gtex', gtexRoutes)\n  .get('/tissue-blocks', forwardDatabaseQuery('getTissueBlockResults'))\n  .get('/technology-names', forwardDatabaseQuery('getDatasetTechnologyNames'))\n  .get('/provider-names', forwardDatabaseQuery('getProviderNames'))\n  .get('/aggregate-results', forwardDatabaseQuery('getAggregateResults'))\n  .get('/ontology-term-occurences', forwardDatabaseQuery('getOntologyTermOccurences'))\n  .get('/cell-type-term-occurences', forwardDatabaseQuery('getCellTypeTermOccurences'))\n  .get('/ontology-tree-model', useCachedResult('ontology-tree-model.json'), forwardDatabaseQuery('getOntologyTreeModel'))\n  .get('/cell-type-tree-model', useCachedResult('cell-type-tree-model.json'), forwardDatabaseQuery('getCellTypeTreeModel'))\n  .get('/reference-organs', useCachedResult('reference-organs.json'), forwardDatabaseQuery('getReferenceOrgans'))\n  .get('/scene', forwardDatabaseQuery('getScene'))\n  .get('/reference-organ-scene', getReferenceOrganSceneHandler())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
