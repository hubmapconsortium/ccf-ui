@use '@angular/material' as mat;


@mixin slider-theme($color, $lightColor) {
  .slider-container {
    .label {
      color: $color;
    }

    .mdc-slider__track--active {
      border-top-color: $lightColor;
      background-color: $lightColor;
    }

    .mdc-slider__track--active_fill {
      border-color: $lightColor;
    }

    .mdc-slider__thumb-knob {
      background-color: $color !important;
      border-color: $color !important;
    }
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  $primary: map-get($color-config, primary);
  $background: map-get($color-config, background);
  $foreground: map-get($color-config, foreground);
  $accent: map-get($color-config, accent);

  .ccf-spatial-search-ui {
    background-color: mat.get-color-from-palette($background, modal);
    border-color: mat.get-color-from-palette($foreground, modal-borders);
    color: map-get($foreground, text);

    .info, .close {
      color: mat.get-color-from-palette($foreground, main);

      &:hover {
        background-color: mat.get-color-from-palette($background, icon-background-hover2) !important;
      }
    }

    .content {
      mat-divider {
        color: mat.get-color-from-palette($foreground, borders);
      }

      .button {
        color: mat.get-color-from-palette($foreground, contrast-button-text);
        background-color: mat.get-color-from-palette($background, button-bg);
        border-color: mat.get-color-from-palette($foreground, button-border);

        &:hover {
          color: mat.get-color-from-palette($foreground, color-hover);
          background-color: mat.get-color-from-palette($background, button-background-hover);
        }
      }
    }

  }

  @include slider-theme(mat.get-color-from-palette($foreground, slider-thumb), mat.get-color-from-palette($foreground, slider));
}
