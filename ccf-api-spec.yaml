openapi: "3.0.3"
info:
  title: CCF-API
  description: |
    This API provides programmatic access to data registered to the CCF.
    See the [HuBMAP CCF Portal](https://hubmapconsortium.github.io/ccf/) for details.
  version: 1.0.0
servers:
  - description: CCF-API
    url: /v1
  - description: Production Server (backup)
    url: https://ccf-api.herokuapp.com/v1
  - description: Staging Server
    url: https://ccf-api--staging.herokuapp.com/v1

x-preprocessor:
  description: |
    For some openapi-generator-cli generators our custom preprocessor
    has to be employed to "fix" this specification to circumvent
    inconsistencies/bugs in the generated code.
    The preprocessor uses `x-preprocessor-` properties to determine
    which operation to apply and where to apply it.
  operations:
    delete: |
      Delete one or more properties at the specified paths.
      Will also delete the property from the `required` list if applicable.

paths:
  /aggregate-results:
    get:
      summary: Get aggregate results / statistics
      operationId: aggregate-results
      parameters:
        - $ref: "#/components/parameters/Age"
        - $ref: "#/components/parameters/AgeRange"
        - $ref: "#/components/parameters/Bmi"
        - $ref: "#/components/parameters/BmiRange"
        - $ref: "#/components/parameters/Cache"
        - $ref: "#/components/parameters/OntologyTerms"
        - $ref: "#/components/parameters/Providers"
        - $ref: "#/components/parameters/Sex"
        - $ref: "#/components/parameters/Technologies"
        - $ref: "#/components/parameters/Token"
      responses:
        "200": { $ref: "#/components/responses/AggregateResults" }

  /hubmap/rui_locations.jsonld:
    get:
      summary: Get all hubmap rui locations (if enabled)
      description: This option is only enabled if HUBMAP_ROUTES=true in the environment
      operationId: hubmap-rui-locations
      parameters:
        - $ref: '#/components/parameters/Cache'
        - $ref: '#/components/parameters/Token'
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
        "404":
          description: Not found due to option being disabled


  /ontology-term-occurences:
    get:
      summary: Get number of ontology term occurrences for a search
      operationId: ontology-term-occurences
      parameters:
        - $ref: "#/components/parameters/Age"
        - $ref: "#/components/parameters/AgeRange"
        - $ref: "#/components/parameters/Bmi"
        - $ref: "#/components/parameters/BmiRange"
        - $ref: "#/components/parameters/Cache"
        - $ref: "#/components/parameters/OntologyTerms"
        - $ref: "#/components/parameters/Providers"
        - $ref: "#/components/parameters/Sex"
        - $ref: "#/components/parameters/Technologies"
        - $ref: "#/components/parameters/Token"
      responses:
        "200": { $ref: "#/components/responses/TermOccurences" }

  /ontology-tree-model:
    get:
      summary: Get ontology term tree nodes
      operationId: ontology-tree-model
      parameters:
        - $ref: "#/components/parameters/Cache"
        - $ref: "#/components/parameters/Token"
      responses:
        "200": { $ref: "#/components/responses/OntologyTree" }

  /provider-names:
    get:
      summary: Get tissue provider names (for filtering)
      operationId: provider-names
      parameters:
        - $ref: "#/components/parameters/Cache"
        - $ref: "#/components/parameters/Token"
      responses:
        "200": { $ref: "#/components/responses/Strings" }

  /reference-organs:
    get:
      summary: Get all reference organs
      operationId: reference-organs
      parameters:
        - $ref: '#/components/parameters/Cache'
        - $ref: '#/components/parameters/Token'
      responses:
        "200": { $ref: "#/components/responses/SpatialEntities" }

  /reference-organ-scene:
    get:
      summary: Get all nodes to form the 3D scene for an organ
      operationId: reference-organ-scene
      parameters:
        - $ref: "#/components/parameters/Age"
        - $ref: "#/components/parameters/AgeRange"
        - $ref: "#/components/parameters/Bmi"
        - $ref: "#/components/parameters/BmiRange"
        - $ref: "#/components/parameters/Cache"
        - $ref: "#/components/parameters/OntologyTerms"
        - $ref: "#/components/parameters/OrganIri"
        - $ref: "#/components/parameters/Providers"
        - $ref: "#/components/parameters/Sex"
        - $ref: "#/components/parameters/Technologies"
        - $ref: "#/components/parameters/Token"
      responses:
        "200": { $ref: "#/components/responses/SpatialSceneNodes" }

  /scene:
    get:
      summary: Get all nodes to form the 3D scene of reference body, organs, and tissues
      operationId: scene
      parameters:
        - $ref: "#/components/parameters/Age"
        - $ref: "#/components/parameters/AgeRange"
        - $ref: "#/components/parameters/Bmi"
        - $ref: "#/components/parameters/BmiRange"
        - $ref: "#/components/parameters/Cache"
        - $ref: "#/components/parameters/OntologyTerms"
        - $ref: "#/components/parameters/Providers"
        - $ref: "#/components/parameters/Sex"
        - $ref: "#/components/parameters/Technologies"
        - $ref: "#/components/parameters/Token"
      responses:
        "200": { $ref: "#/components/responses/SpatialSceneNodes" }

  /technology-names:
    get:
      summary: Get technology names (for filtering)
      operationId: technology-names
      parameters:
        - $ref: "#/components/parameters/Cache"
        - $ref: "#/components/parameters/Token"
      responses:
        "200": { $ref: "#/components/responses/Strings" }

  /tissue-blocks:
    get:
      summary: Get Tissue Block Results
      operationId: tissue-blocks
      parameters:
        - $ref: "#/components/parameters/Age"
        - $ref: "#/components/parameters/AgeRange"
        - $ref: "#/components/parameters/Bmi"
        - $ref: "#/components/parameters/BmiRange"
        - $ref: "#/components/parameters/Cache"
        - $ref: "#/components/parameters/OntologyTerms"
        - $ref: "#/components/parameters/Providers"
        - $ref: "#/components/parameters/Sex"
        - $ref: "#/components/parameters/Technologies"
        - $ref: "#/components/parameters/Token"
      responses:
        "200": { $ref: "#/components/responses/TissueBlocks" }

components:
  parameters:
    Age:
      name: age
      description: Filter result by age.
      in: query
      required: false
      schema: { $ref: "#/components/schemas/MinMax" }

    AgeRange:
      name: age-range
      description: Filter result by age.
      in: query
      deprecated: true
      required: false
      schema:
        type: string
        example: 10,100

    Bmi:
      name: bmi
      description: Filter result by bmi.
      in: query
      required: false
      schema: { $ref: "#/components/schemas/MinMax" }

    BmiRange:
      name: bmi-range
      description: Filter result by bmi.
      in: query
      deprecated: true
      required: false
      schema:
        type: string
        example: 0,40

    Cache:
      name: cache
      description: Hint to cache (or not) the response of this request
      in: query
      required: false
      schema:
        type: boolean
        default: true

    OntologyTerms:
      name: ontology-terms
      description: Filter result by ontology terms.
      in: query
      required: false
      schema:
        title: Terms
        type: array
        items:
          type: string

    OrganIri:
      name: organ-iri
      description: Filter result by organ.
      in: query
      required: true
      schema:
        type: string

    Providers:
      name: providers
      description: Filter result by providers.
      in: query
      required: false
      schema:
        title: Providers
        type: array
        items:
          type: string

    Sex:
      name: sex
      description: Filter result by sex.
      in: query
      required: false
      schema:
        type: string
        enum:
          - both
          - female
          - male

    Technologies:
      name: technologies
      description: Filter result by technologies.
      in: query
      required: false
      schema:
        title: Technologies
        type: array
        items:
          type: string

    Token:
      name: token
      description: Authentication token to use for authenticated searches
      in: query
      required: false
      schema:
        type: string

  responses:
    AggregateResults:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items: { $ref: "#/components/schemas/AggregateCount" }

    OntologyTree:
      description: Successful operation
      content:
        application/json:
          schema: { $ref: "#/components/schemas/OntologyTree" }

    SpatialEntities:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items: { $ref: "#/components/schemas/SpatialEntity" }

    SpatialSceneNodes:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items: { $ref: "#/components/schemas/SpatialSceneNode" }

    Strings:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              type: string

    TermOccurences:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: integer

    TissueBlocks:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items: { $ref: "#/components/schemas/TissueBlock" }

  schemas:
    # Generic types
    AggregateCount:
      title: Aggregated Count \w Label
      type: object
      required: [label, count]
      properties:
        label:
          title: Aggregate Name/Field
          type: string
        count:
          title: Aggregated Count
          nullable: false
          oneOf:
            - type: number
            - type: string
          x-preprocessor-delete: oneOf

    JsonLdObject:
      title: JSON-LD Object
      description: Base object for all json-ld objects.
      type: object
      required: ["@id", "@type"]
      additionalProperties: true
      properties:
        "@id":
          title: Unique Identifier
          type: string
          format: uri
          example: http://purl.obolibrary.org/obo/UBERON_0013702
        "@type":
          title: Object Type
          description: Contains the name of object class/interface
          type: string
          example: Sample
      x-preprocessor-delete: [properties/@id, properties/@type]

    MinMax:
      title: Number Range
      description: |
        Represents a range of numbers using a minimum and maximum.
        Either end may be omitted to indicate an unlimited/infinite range in that direction.
        `min` should be less than or equal to `max` but this is not strictly enforced.
      type: object
      properties:
        min:
          type: number
        max:
          type: number

    Rgba:
      title: RGBA Color Tuple
      type: array
      minItems: 4
      maxItems: 4
      items:
        title: 8-Bit Value
        type: number
        minimum: 0
        maximum: 255

    # Tissue data formats
    TissueCommon:
      title: Common Tissue Data Properties
      description: Properties available in all tissue data objects.
      type: object
      required: [label, description, link]
      properties:
        label:
          type: string
        description:
          type: string
        link:
          title: Associated URL
          type: string
          format: uri

    TissueSampleCommon:
      title: Common Tissue Sample Properties
      description: Properties available in all tissue sample objects.
      type: object
      required: ["@type", sampleType, datasets]
      properties:
        "@type":
          type: string
          enum: [Sample]
        sampleType:
          title: Object Type
          type: string
        datasets:
          title: Associated Datasets
          type: array
          items: { $ref: "#/components/schemas/TissueDataset" }
      x-preprocessor-delete: [properties/@type]

    TissueDataset:
      title: Tissue Dataset
      description: Describes a single tissue dataset.
      type: object
      allOf:
        - $ref: "#/components/schemas/JsonLdObject"
        - $ref: "#/components/schemas/TissueCommon"
        - type: object
          required: ["@type", technology, thumbnail]
          properties:
            "@type":
              type: string
              enum: [Dataset]
            technology:
              title: Technology Used
              type: string
            thumbnail:
              title: Representative Thumbnail URL
              type: string
              format: uri
          x-preprocessor-delete: [properties/@type]

    TissueDonor:
      title: Tissue Donor
      description: Contains generic information about a tissue donor.
      type: object
      allOf:
        - $ref: "#/components/schemas/JsonLdObject"
        - $ref: "#/components/schemas/TissueCommon"
        - type: object
          required: ["@type", providerName]
          properties:
            "@type":
              type: string
              enum: [Donor]
            providerName:
              title: Provider of Donor
              type: string
          x-preprocessor-delete: [properties/@type]

    TissueSection:
      title: Tissue Section
      description: A single section sample.
      type: object
      allOf:
        - $ref: "#/components/schemas/JsonLdObject"
        - $ref: "#/components/schemas/TissueCommon"
        - $ref: "#/components/schemas/TissueSampleCommon"
        - type: object
          required: [sampleType, sectionNumber]
          properties:
            sampleType:
              type: string
              enum: ["Tissue Section", "Non-Standard"]
            sectionNumber:
              title: Section Index
              description: Index of the section in the parent block.
              type: integer
              minimum: 0

    TissueBlock:
      title: Tissue Block
      description: Information about a collection of tissue sections.
      type: object
      allOf:
        - $ref: "#/components/schemas/JsonLdObject"
        - $ref: "#/components/schemas/TissueCommon"
        - $ref: "#/components/schemas/TissueSampleCommon"
        - type: object
          required: [sampleType, spatialEntityId, donor, sectionCount, sectionSize, sectionUnits, sections]
          properties:
            sampleType:
              type: string
              enum: ["Tissue Block", "Non-Standard"]
            spatialEntityId:
              title: Associated Spatial Entity
              description: The associated spatial entity (rui_location) for the block.
              type: string
              format: uri
            donor: { $ref: "#/components/schemas/TissueDonor" }
            sectionCount:
              title: Number of Sections
              description: Number of sections contained in the block.
              type: integer
              minimum: 0
            sectionSize:
              title: Section Size
              description: Size of each section in the block.
              type: number
              minimum: 0
            sectionUnits:
              title: Section Size Unit
              description: Length unit `sectionSize` is in (generally, millimeters)
              type: string
              default: millimeters
            sections:
              title: Contained Sections
              description: All sections in the block.
              type: array
              items: { $ref: "#/components/schemas/TissueSection" }

    # Ontology data format
    OntologyTreeNode:
      title: Ontology Node
      description: A node in the ontology tree.
      type: object
      allOf:
        - $ref: "#/components/schemas/JsonLdObject"
        - type: object
          required: ["@type", id, label, synonymLabels, parent, children]
          properties:
            "@type":
              type: string
              enum: [OntologyTreeNode]
            id:
              title: Identifier
              description: Unique identifier for the node.
              type: string
              format: uri
            label:
              title: Label
              description: Main descriptive label for the node.
              type: string
            synonymLabels:
              title: Synonym Labels
              description: Additional label for the node.
              type: array
              items:
                type: string
            parent:
              title: Parent Node Identifier
              description: Reference to the parent node.
              type: string
              format: uri
            children:
              title: Child Node Identifiers
              description: References to all child nodes.
              type: array
              items:
                type: string
                format: uri
          x-preprocessor-delete: [properties/@type]

    OntologyTree:
      title: Ontology Tree
      description: An ontology tree.
      type: object
      required: [root, nodes]
      properties:
        root:
          title: Root Node
          description: Reference to the root node.
          type: string
          format: url
        nodes:
          title: All Nodes
          description: A mapping of identifiers to each node object.
          additionalProperties: { $ref: "#/components/schemas/OntologyTreeNode" }

    # Spatial data format
    SpatialObjectReference:
      title: Spatial Object Reference
      description: A reference to the definition of a spatial object.
      type: object
      allOf:
        - $ref: "#/components/schemas/JsonLdObject"
        - type: object
          required: ["@type", file, file_format]
          properties:
            "@type":
              type: string
              enum: [SpatialObjectReference]
            file:
              title: File
              type: string
              format: uri
            file_format:
              title: File Format
              type: string
              example: model/gltf-binary
            file_subpath:
              title: File Subpath
              type: string
          x-preprocessor-delete: [properties/@type]

    SpatialEntityCommon:
      title: Spatial Entity Common
      description: Properties available in all spatial entity objects.
      type: object
      properties:
        entityId:
          title: Entity Identifier
          description: Identifier of the entity the spatial object represents.
          type: string
          format: uri
        ccf_annotations:
          title: Annotations
          description: Annotations attached to the entity.
          type: array
          items:
            type: string
            format: uri
        representation_of:
          title: Representation
          description: Identifier for the item the spatial object represents.
          type: string
          format: uri
        reference_organ:
          title: Organ
          description: Identifier for the organ the spatial object represents.
          type: string
          format: uri

    SpatialEntityCreator:
      title: Spatial Entity Creator
      description: Describes by whom and when an entity object was created.
      type: object
      properties:
        creator:
          title: Full Name
          type: string
        creator_first_name:
          title: First Name
          type: string
        creator_last_name:
          title: Last Name
          type: string
        creator_orcid:
          title: Creator's Identifier
          type: string
        creation_date:
          title: Creation Date
          type: string
          format: date

    SpatialEntityDimensions:
      title: Spatial Entity Dimensions
      description: The dimensions of a spatial entity.
      type: object
      required: [x_dimension, y_dimension, z_dimension, dimension_units]
      properties:
        x_dimension:
          title: X-Dimension
          type: number
        y_dimension:
          title: Y-Dimension
          type: number
        z_dimension:
          title: Z-Dimension
          type: number
        dimension_units:
          title: Dimension Units
          description: Length units of dimensional values.
          type: string
          default: millimeters

    SpatialEntity:
      title: Spatial Entity
      description: ""
      type: object
      allOf:
        - $ref: "#/components/schemas/JsonLdObject"
        - $ref: "#/components/schemas/SpatialEntityCommon"
        - $ref: "#/components/schemas/SpatialEntityCreator"
        - $ref: "#/components/schemas/SpatialEntityDimensions"
        - type: object
          required: ["@type"]
          properties:
            "@type":
              type: string
              enum: [SpatialEntity]
            label:
              title: Label
              type: string
            comment:
              title: Comment
              type: string
            rui_rank:
              title: RUI Rank
              description: Ranking used to order lists in the RUI.
              type: integer
            sex:
              title: Sex
              type: string
              enum: [Female, Male]
            side:
              title: Side
              description: Used for organs that come in pairs to distinguish between them, i.e. kidneys, etc.
              type: string
              enum: [Left, Right]
            slice_count:
              title: Slice Count
              type: integer
            slice_thickness:
              title: Slice Thickness
              type: number
            object: { $ref: "#/components/schemas/SpatialObjectReference" }
            color: { $ref: "#/components/schemas/Rgba" }
          x-preprocessor-delete: [properties/@type]

    SpatialSceneNode:
      title: Spatial Scene Node
      description: ""
      type: object
      allOf:
        - $ref: "#/components/schemas/JsonLdObject"
        - $ref: "#/components/schemas/SpatialEntityCommon"
        - type: object
          properties:
            name:
              title: Label
              type: string
            tooltip:
              title: Tooltip Label
              type: string
            unpickable:
              title: Unpickable
              description: Whether the node should selectable by the user in interfaces.
              type: boolean
            wireframe:
              title: Wireframe
              description: Whether to show a wireframe for the node.
              type: boolean
            _lighting:
              title: Lighting
              type: boolean
            zoomBasedOpacity:
              title: Zoom Based Opacity
              description: Whether the opacity of the node changes based on the zoom level.
              type: boolean
            zoomToOnLoad:
              title: Focus
              description: Focus this node when loaded in an interface.
              type: boolean
            scenegraph:
              title: Scenegraph
              type: string
              format: uri
            scenegraphNode:
              title: Scenegraph Node
              type: string
            color: { $ref: "#/components/schemas/Rgba" }
            opacity:
              title: Opacity
              type: number
            transformMatrix:
              title: Transformation
              description: Additional transformations to be applied.
              type: array
              minItems: 16
              maxItems: 16
              items:
                type: number
            priority:
              title: Priority
              type: number
