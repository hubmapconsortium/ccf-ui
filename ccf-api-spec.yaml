openapi: '3.0.3'
info:
  title: CCF-API
  description: |
    This API provides programmatic access to data registered to the CCF.
    See the [HuBMAP CCF Portal](https://hubmapconsortium.github.io/ccf/) for details.
  version: 1.0.0
servers:
  - description: CCF-API
    url: /v1
  - description: Production Server (backup)
    url: https://ccf-api.herokuapp.com/v1
  - description: Staging Server
    url: https://ccf-api--staging.herokuapp.com/v1

paths:
  /tissue-blocks:
    get:
      summary: Get Tissue Block Results
      operationId: tissue-blocks
      parameters:
        - $ref: '#/components/parameters/age-range'
        - $ref: '#/components/parameters/sex'
        - $ref: '#/components/parameters/bmi-range'
        - $ref: '#/components/parameters/providers'
        - $ref: '#/components/parameters/technologies'
        - $ref: '#/components/parameters/ontology-terms'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TissueBlockResult'
  /technology-names:
    get:
      summary: Get technology names (for filtering)
      operationId: technology-names
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /provider-names:
    get:
      summary: Get tissue provider names (for filtering)
      operationId: provider-names
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /aggregate-results:
    get:
      summary: Get aggregate results / statistics
      operationId: aggregate-results
      parameters:
        - $ref: '#/components/parameters/age-range'
        - $ref: '#/components/parameters/sex'
        - $ref: '#/components/parameters/bmi-range'
        - $ref: '#/components/parameters/providers'
        - $ref: '#/components/parameters/technologies'
        - $ref: '#/components/parameters/ontology-terms'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AggregateResult'
  /ontology-term-occurences:
    get:
      summary: Get number of ontology term occurrences for a search
      operationId: ontology-term-occurences
      parameters:
        - $ref: '#/components/parameters/age-range'
        - $ref: '#/components/parameters/sex'
        - $ref: '#/components/parameters/bmi-range'
        - $ref: '#/components/parameters/providers'
        - $ref: '#/components/parameters/technologies'
        - $ref: '#/components/parameters/ontology-terms'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermOccurences'
  /cell-type-term-occurences:
    get:
      summary: Get number of cell type term occurrences for a search
      operationId: cell-type-term-occurences
      parameters:
        - $ref: '#/components/parameters/age-range'
        - $ref: '#/components/parameters/sex'
        - $ref: '#/components/parameters/bmi-range'
        - $ref: '#/components/parameters/providers'
        - $ref: '#/components/parameters/technologies'
        - $ref: '#/components/parameters/ontology-terms'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermOccurences'
  /ontology-tree-model:
    get:
      summary: Get ontology term tree nodes
      operationId: ontology-tree-model
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OntologyTreeModel'
  /cell-type-tree-model:
    get:
      summary: Get cell type tree nodes
      operationId: cell-type-tree-model
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OntologyTreeModel'
  /reference-organs:
    get:
      summary: Get all reference organs
      operationId: reference-organs
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpatialEntity'
  /scene:
    get:
      summary: Get all nodes to form the 3D scene of reference body, organs, and tissues
      operationId: scene
      parameters:
        - $ref: '#/components/parameters/age-range'
        - $ref: '#/components/parameters/sex'
        - $ref: '#/components/parameters/bmi-range'
        - $ref: '#/components/parameters/providers'
        - $ref: '#/components/parameters/technologies'
        - $ref: '#/components/parameters/ontology-terms'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpatialSceneNode'
  /reference-organ-scene:
    get:
      summary: Get all nodes to form the 3D scene for an organ
      operationId: reference-organ-scene
      parameters:
        - $ref: '#/components/parameters/age-range'
        - $ref: '#/components/parameters/sex'
        - $ref: '#/components/parameters/bmi-range'
        - $ref: '#/components/parameters/providers'
        - $ref: '#/components/parameters/technologies'
        - $ref: '#/components/parameters/ontology-terms'
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
        - $ref: '#/components/parameters/organ-iri'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpatialSceneNode'
        '404':
          description: failed operation
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - Must provide an organ-iri query parameter
  /hubmap/rui_locations.jsonld:
    get:
      summary: Get all hubmap rui locations (if enabled)
      description: This option is only enabled if HUBMAP_ROUTES=true in the environment
      operationId: hubmap-rui-locations
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
  /gtex/rui_locations.jsonld:
    get:
      summary: Get all GTEx rui locations (if enabled)
      description: This option is only enabled if GTEX_ROUTES=true in the environment
      operationId: gtex-rui-locations
      parameters:
        - $ref: '#/components/parameters/cache'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object

components:
  parameters:
    age-range:
      name: age-range
      description: Age range to filter by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/NumberRange'
    sex:
      name: sex
      description: sex to filter by
      in: query
      required: false
      schema:
        enum:
          - both
          - female
          - male
    bmi-range:
      name: bmi-range
      description: BMI range to filter by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/NumberRange'
    providers:
      name: providers
      description: Tissue data provider names to filter by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/CommaSeparatedStrings'
    technologies:
      name: technologies
      description: Dataset technologies to filter by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/CommaSeparatedStrings'
    ontology-terms:
      name: ontology-terms
      description: Ontology terms to filter by
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/CommaSeparatedStrings'
    token:
      name: token
      description: Authentication token to use for authenticated searches
      in: query
      required: false
      schema:
        type: string
    cache:
      name: cache
      description: Hint to cache (or not) the response of this request
      in: query
      required: false
      schema:
        type: string
    organ-iri:
      name: organ-iri
      description: Organ iri used to filter node data
      in: query
      required: true
      schema:
        type: string

  schemas:
    NumberRange:
      type: string
      description: >-
        A range of numbers can be expressed as a single number
        or two comma separated numbers where either end can be omitted to use
        the default minimum/maximum.
      examples:
        - 10
        - 10,20
        - 10,
        - ',20'
        - ','
    CommaSeparatedStrings:
      type: string
      description: >-
        Any number of strings separated by commas.
      examples:
        - SingleItem
        - Item1,Item2,Item3
    TissueBlockResult:
      type: object
      properties:
        '@id':
          type: string
          format: uri
        '@type':
          type: string
          enum:
            - Sample
        label:
          type: string
        description:
          type: string
        link:
          type: string
          format: uri
        sampleType:
          type: string
          enum:
            - Tissue Block
            - Non-Standard
        sectionCount:
          type: integer
        sectionSize:
          type: number
        sectionUnits:
          type: string
          default: micrometers
        donor:
          $ref: '#/components/schemas/DonorResult'
        spatialEntityId:
          type: string
          format: uri
        sections:
          type: array
          items:
            $ref:  "#/components/schemas/TissueSectionResult"
        datasets:
          type: array
          items:
            $ref:  "#/components/schemas/DatasetResult"

    DonorResult:
      type: object
      properties:
        '@id':
          type: string
          format: uri
        '@type':
          type: string
          enum:
            - Donor
        label:
          type: string
        description:
          type: string
        link:
          type: string
          format: uri
        providerName:
          type: string

    DatasetResult:
      type: object
      properties:
        '@id':
          type: string
          format: uri
        '@type':
          type: string
          enum:
            - Dataset
        label:
          type: string
        description:
          type: string
        link:
          type: string
          format: uri
        technology:
          type: string
        thumbnail:
          type: string
          format: uri

    TissueSectionResult:
      type: object
      properties:
        '@id':
          type: string
          format: uri
        '@type':
          type: string
          enum:
            - Sample
        label:
          type: string
        description:
          type: string
        link:
          type: string
          format: uri
        sampleType:
          type: string
          enum:
            - Tissue Section
            - Non-Standard
        sectionNumber:
          type: integer
        datasets:
          type: array
          items:
            $ref:  "#/components/schemas/DatasetResult"

    AggregateResult:
      type: object
      properties:
        label:
          type: string
          example: Tissue Data Providers
        count:
          oneOf:
            - type: string
            - type: integer

    TermOccurences:
      type: object
      additionalProperties:
        type: integer

    OntologyTreeModel:
      type: object
      properties:
        root:
          type: string
          description: The root term of the tree
          example: 'http://purl.obolibrary.org/obo/UBERON_0013702'
        nodes:
          type: object
          additionalProperties:
            $ref:  "#/components/schemas/OntologyTreeNode"

    OntologyTreeNode:
      type: object
      properties:
        '@id':
          type: string
          format: uri
        '@type':
          type: string
          enum:
            - OntologyTreeNode
        id:
          type: string
          format: uri
        label:
          type: string
        parent:
          type: string
          format: uri
        children:
          type: array
          items:
            type: string
            format: uri
        synonymLabels:
          type: array
          items:
            type: string

    SpatialEntity:
      type: object
      properties:
        '@id':
          type: string
          format: uri
        '@type':
          type: string
          enum:
            - SpatialEntity
        entityId:
          type: string
          format: uri
        label:
          type: string
        comment:
          type: string
        creator:
          type: string
        creator_first_name:
          type: string
        creator_last_name:
          type: string
        creator_orcid:
          type: string
        creation_date:
          type: string
          format: date
        ccf_annotations:
          type: array
          items:
            type: string
            format: uri
        representation_of:
          type: string
          format: uri
        reference_organ:
          type: string
          format: uri
        sex:
          type: string
          enum:
            - Female
            - Male
        side:
          type: string
          enum:
            - Left
            - Right
        rui_rank:
          type: integer
        slice_thickness:
          type: number
        slice_count:
          type: integer

        x_dimension:
          type: number
        y_dimension:
          type: number
        z_dimension:
          type: number
        dimension_units:
          type: string
          default: millimeters
        object:
          $ref: '#/components/schemas/SpatialObjectReference'
        color:
          type: array
          minItems: 4
          maxItems: 4
          items:
            type: number

    SpatialObjectReference:
      type: object
      properties:
        '@id':
          type: string
          format: uri
        '@type':
          type: string
          enum:
            - SpatialObjectReference
        file:
          type: string
          format: uri
        file_format:
          type: string
          example: model/gltf-binary
        file_subpath:
          type: string

    SpatialSceneNode:
      type: object
      properties:
        '@id':
          type: string
          format: uri
        '@type':
          type: string
          enum:
            - SpatialSceneNode
        entityId:
          type: string
          format: uri
        ccf_annotations:
          type: array
          items:
            type: string
            format: uri
        representation_of:
          type: string
          format: uri
        reference_organ:
          type: string
          format: uri
        unpickable:
          type: boolean
        wireframe:
          type: boolean
        _lighting:
          type: boolean
        scenegraph:
          type: string
          format: uri
        scenegraphNode:
          type: string
        zoomBasedOpacity:
          type: boolean
        zoomToOnLoad:
          type: boolean
        color:
          type: array
          minItems: 4
          maxItems: 4
          items:
            type: number
        opacity:
          type: number
        transformMatrix:
          type: array
          minItems: 16
          maxItems: 16
          items:
            type: number
        name:
          type: string
        tooltip:
          type: string
        priority:
          type: number
