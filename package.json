{
  "name": "ccf-ui",
  "version": "3.9.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "start:api-server": "NODE_PATH=./node_modules:./api/node_modules node --experimental-specifier-resolution=node dist/server/start-server.js",
    "build": "ng build --configuration production",
    "build:demo": "ng build --configuration production --output-hashing=none --base-href=./",
    "build:docs": "npm-run-all build:docs:*",
    "build:docs:ccf-api": "npx compodoc -c projects/ccf-api/.compodocrc.json",
    "build:docs:ccf-body-ui": "npx compodoc -c projects/ccf-body-ui/.compodocrc.json",
    "build:docs:ccf-body-ui-wc": "npx compodoc -c projects/ccf-body-ui-wc/.compodocrc.json",
    "build:docs:ccf-database": "npx compodoc -c projects/ccf-database/.compodocrc.json",
    "build:docs:ccf-eui": "npx compodoc -c projects/ccf-eui/.compodocrc.json",
    "build:docs:ccf-organ-info": "npx compodoc -c projects/ccf-organ-info/.compodocrc.json",
    "build:docs:ccf-rui": "npx compodoc -c projects/ccf-rui/.compodocrc.json",
    "build:docs:ccf-shared": "npx compodoc -c projects/ccf-shared/.compodocrc.json",
    "build:docs:triple-store-utils": "npx compodoc -c projects/triple-store-utils/.compodocrc.json",
    "build:libs": "npm-run-all build:ccf-openapi build:triple-store-utils build:ccf-database build:ccf-body-ui build:ccf-shared build:ccf-api",
    "build:api-server": "./scripts/build-server.sh",
    "build:ccf-api": "npm run build ccf-api",
    "build:ccf-body-ui": "npm run build ccf-body-ui",
    "build:ccf-database": "npm run build ccf-database",
    "build:ccf-shared": "npm run build ccf-shared",
    "build:ccf-eui": "ng build ccf-eui --configuration production --output-hashing none",
    "build:ccf-eui:wc": "node projects/ccf-eui/build-webcomponent.js",
    "build:ccf-rui": "ng build ccf-rui --configuration production --output-hashing none",
    "build:ccf-rui:wc": "node projects/ccf-rui/build-webcomponent.js",
    "build:ccf-organ-info": "ng build ccf-organ-info --configuration production --output-hashing none",
    "build:ccf-organ-info:wc": "node projects/ccf-organ-info/build-webcomponent.js",
    "build:ccf-body-ui-wc": "ng build ccf-body-ui-wc --configuration production --output-hashing none",
    "build:ccf-body-ui-wc:wc": "node projects/ccf-body-ui-wc/build-webcomponent.js",
    "build:ccf-openapi": "npm-run-all clean:ccf-openapi preprocess:ccf-openapi generate:ccf-openapi build:ccf-openapi:lib:* build:ccf-openapi:lib:angular-client:copy-dist",
    "build:ccf-openapi:lib:angular-client": "cd projects/ccf-openapi/generated/angular-client && npm i && npm run build",
    "build:ccf-openapi:lib:angular-client:copy-dist": "mkdirp dist/ccf-openapi/angular-client && rimraf dist/ccf-openapi/angular-client && cp -r projects/ccf-openapi/generated/angular-client/dist dist/ccf-openapi/angular-client",
    "build:ccf-openapi:lib:typescript-client": "cd projects/ccf-openapi/generated/typescript-client && npm i && npm run build",
    "build:ccf-openapi:lib:javascript-client": "cd projects/ccf-openapi/generated/javascript-client && npm i && npm run build",
    "build:hubmap-jsonld": "ts-node --project projects/ccf-database/tsconfig.cli.json projects/ccf-database/src/process-hubmap-data.ts ./src/assets/dev-data/entities.json ./src/assets/dev-data/entities.jsonld",
    "build:triple-store-utils": "npm run build triple-store-utils",
    "generate-reference-data": "ts-node --project projects/ccf-body-ui/tsconfig.cli.json projects/ccf-body-ui/src/generate-reference-data.ts ../hubmap-ontology/source_data/reference-spatial-entities.jsonld ../hubmap-ontology/source_data/generated-reference-spatial-entities.jsonld",
    "rui-data": "ts-node --project projects/ccf-database/tsconfig.cli.json projects/ccf-database/src/precompute-reference-data.ts projects/ccf-rui/src/assets/reference-organ-data.json",
    "eui-data": "ts-node --project projects/ccf-database/tsconfig.cli.json projects/ccf-database/src/serialize-ccf-database.ts projects/ccf-eui/src/assets/ccf.owl.n3store.json",
    "ccf-api-data": "ts-node --project projects/ccf-database/tsconfig.cli.json projects/ccf-database/src/cache-ccf-api-data.ts projects/ccf-eui/src/assets/ccf.owl.n3store.json projects/ccf-api/ccf-cache",
    "reference-data-workflow": "npm run generate-reference-data && cd ../hubmap-ontology/ && ./build.sh && cd ../ccf-ui/ && npm run rui-data",
    "fix-triple-store-utils": "rimraf dist/triple-store-fixed && mkdirp dist/triple-store-fixed && browserify -s tripleStoreUtils dist/triple-store-utils/bundles/triple-store-utils.umd.js -o dist/triple-store-fixed/index.js && cp dist/triple-store-utils/lib/triple-store-utils.d.ts dist/triple-store-fixed/index.d.ts",
    "build:netlify": "npm-run-all fix-types build:libs build cp-netlify-redirects compodoc",
    "cp-netlify-redirects": "cp projects/ccf-eui/_redirects dist/ccf-eui/_redirects",
    "compodoc": "npm run build:docs",
    "test": "ng test",
    "test:wsl": "ng test --browsers=ChromeHeadlessWSL",
    "lint": "node --max_old_space_size=3000 ./node_modules/@angular/cli/bin/ng lint",
    "e2e": "ng e2e",
    "sonar": "sonar-scanner",
    "clean:ccf-openapi": "rimraf projects/ccf-openapi/generated dist/ccf-openapi",
    "preprocess:ccf-openapi": "node projects/ccf-openapi/scripts/preprocess.js -i ccf-api-spec.yaml -o projects/ccf-openapi/generated/spec.yaml",
    "pregenerate:ccf-openapi": "npx openapi-generator-cli version-manager set 6.6.0",
    "generate:ccf-openapi": "foreach -g \"projects/ccf-openapi/configs/*.yaml\" -x \"npx openapi-generator-cli generate -c #{path} -i projects/ccf-openapi/generated/spec.yaml -o projects/ccf-openapi/generated/#{name}\"",
    "postinstall": "rimraf ./node_modules/@types/math.gl ./node_modules/@types/math.gl__core",
    "serve:docs": "npx http-server ./docs -c-1 --cors"
  },
  "private": true,
  "browser": {
    "fs": false
  },
  "engines": {
    "node": "18.x"
  },
  "dependencies": {
    "@angular-ru/cdk": "14.10.1",
    "@angular-ru/common": "15.313.0",
    "@angular-ru/ngxs": "14.1.4",
    "@angular-slider/ngx-slider": "^2.0.4",
    "@angular/animations": "^16.1.5",
    "@angular/cdk": "^16.1.5",
    "@angular/common": "^16.1.5",
    "@angular/compiler": "^16.1.5",
    "@angular/core": "^16.1.6",
    "@angular/elements": "^16.1.6",
    "@angular/forms": "^16.1.5",
    "@angular/material": "^16.1.5",
    "@angular/platform-browser": "^16.1.5",
    "@angular/platform-browser-dynamic": "^16.1.5",
    "@angular/router": "^16.1.5",
    "@angular/youtube-player": "^16.1.5",
    "@comunica/query-sparql-rdfjs": "^2.8.1",
    "@deck.gl/core": "~8.8.20",
    "@deck.gl/geo-layers": "~8.8.20",
    "@deck.gl/layers": "~8.8.20",
    "@deck.gl/mesh-layers": "~8.8.20",
    "@loaders.gl/core": "~3.2.10",
    "@loaders.gl/draco": "~3.2.10",
    "@loaders.gl/gltf": "~3.2.10",
    "@luma.gl/core": "~8.5.16",
    "@math.gl/core": "~3.6.3",
    "@math.gl/culling": "~3.5.7",
    "@ngxs-labs/dispatch-decorator": "^5.0.0",
    "@ngxs/logger-plugin": "^3.8.1",
    "@ngxs/storage-plugin": "^3.8.1",
    "@ngxs/store": "^3.8.1",
    "@rdfjs/data-model": "^2.0.1",
    "@webcomponents/webcomponentsjs": "^2.8.0",
    "bind-decorator": "^1.0.11",
    "body-parser": "^1.20.2",
    "cannon-es": "^0.20.0",
    "comlink": "^4.4.1",
    "concat": "^1.0.3",
    "cors": "^2.8.5",
    "css-element-queries": "^1.2.3",
    "document-register-element": "^1.14.10",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "file-saver": "^2.0.5",
    "fs-extra": "^11.1.1",
    "graphology": "^0.20.0",
    "graphology-shortest-path": "^1.4.1",
    "helmet": "^7.0.0",
    "hex-rgb": "^5.0.0",
    "idb-keyval": "^6.2.1",
    "jsonld": "^8.2.0",
    "lodash": "^4.17.21",
    "lru-cache": "^10.0.0",
    "n3": "^1.17.0",
    "ngx-google-analytics": "^14.0.1",
    "ngx-markdown": "^16.0.0",
    "ngx-slider-v2": "^16.0.2",
    "node-fetch": "^3.3.2",
    "object-hash": "^3.0.0",
    "qs": "^6.11.2",
    "rdf-literal": "^1.3.1",
    "rdfxml-streaming-parser": "^1.4.0",
    "readable-stream": "^4.4.2",
    "rxjs": "^7.8.1",
    "stream-browserify": "^3.0.0",
    "swiper": "^8.0.6",
    "ts-cacheable": "^1.0.9",
    "tslib": "^2.6.1",
    "uuid": "^9.0.0",
    "zone.js": "~0.13.1"
  },
  "devDependencies": {
    "@angular-devkit/architect": "^0.1601.4",
    "@angular-devkit/build-angular": "^16.1.4",
    "@angular-devkit/core": "^16.1.4",
    "@angular-eslint/builder": "^16.1.0",
    "@angular-eslint/eslint-plugin": "^16.1.0",
    "@angular-eslint/eslint-plugin-template": "^16.1.0",
    "@angular-eslint/schematics": "^16.1.0",
    "@angular-eslint/template-parser": "^16.1.0",
    "@angular/cli": "^16.1.4",
    "@angular/compiler-cli": "^16.1.5",
    "@angular/language-service": "^16.1.5",
    "@compodoc/compodoc": "^1.1.21",
    "@danmarshall/deckgl-typings": "^4.9.28",
    "@openapitools/openapi-generator-cli": "^2.6.0",
    "@types/express": "^4.17.13",
    "@types/file-saver": "^2.0.1",
    "@types/jasmine": "^3.10.11",
    "@types/jasminewd2": "~2.0.3",
    "@types/js-yaml": "^4.0.0",
    "@types/jsonld": "^1.5.4",
    "@types/lodash": "^4.14.168",
    "@types/lru-cache": "^7.10.10",
    "@types/n3": "^1.10.4",
    "@types/node": "^16.3.1",
    "@types/node-fetch": "^2.6.10",
    "@types/object-hash": "^3.0.2",
    "@types/papaparse": "^5.3.7",
    "@types/rdf-js": "^4.0.1",
    "@types/readable-stream": "^2.3.9",
    "@types/sax": "^1.2.1",
    "@types/uuid": "^8.3.0",
    "@typescript-eslint/eslint-plugin": "^6.4.0",
    "@typescript-eslint/parser": "^6.4.0",
    "browserify": "^17.0.0",
    "commander": "^9.0.0",
    "dts-gen": "^0.6.0",
    "eslint": "^7.32.0",
    "eslint-plugin-import": "^2.23.4",
    "eslint-plugin-jsdoc": "^39.9.1",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-unicorn": "^40.1.0",
    "foreach-cli": "^1.8.1",
    "graphology-types": "^0.24.7",
    "jasmine-core": "^3.99.1",
    "jasmine-spec-reporter": "^7.0.0",
    "karma": "^6.4.2",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage": "^2.2.1",
    "karma-coverage-istanbul-reporter": "~3.0.2",
    "karma-jasmine": "~4.0.0",
    "karma-jasmine-html-reporter": "^1.7.0",
    "mkdirp": "^3.0.1",
    "ng-packagr": "^16.1.0",
    "npm-run-all": "^4.1.5",
    "papaparse": "^5.3.0",
    "protractor": "~7.0.0",
    "rimraf": "^5.0.1",
    "shallow-render": "^16.0.0",
    "sonar-scanner": "^3.1.0",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "~5.1.6",
    "yaml": "^2.3.1"
  }
}
